[
  {
    "id": 42111031,
    "title": "How I ship projects at big tech companies",
    "originLink": "https://www.seangoedecke.com/how-to-ship/",
    "originBody": "How I ship projects at big tech companies I have shipped a lot of different projects over the last ~10 years in tech. I often get tapped to lead new ones when it’s important to get it right, because I’m good at it. Shipping in a big tech company is a very different skill to writing code, and lots of people who are great at writing code are terrible at shipping. Here’s what I think about when I’m leading a project and what I’ve seen people get wrong. Shipping is hard The most common error I see is to assume that shipping is easy. The default state of a project is to not ship: to be delayed indefinitely, cancelled, or to go out half-baked and burst into flames. Projects do not ship automatically once all the code has been written or all the Jira tickets closed. They ship because someone takes up the difficult and delicate job of shipping them. That means that in almost all cases, shipping has to come first. You cannot have anything else as your top priority. If you spend all your time worrying about polishing the customer experience (for example), you will not ship! Obsessing over UX is praiseworthy behaviour when you are an engineer on the team, but a blunder if you are leading the project. You should cherish the other engineers on your team who are doing that work, and give them as much support as you can. But your primary concern has to be shipping the project. It is too hard a job to do in your spare time. In my experience, projects almost always ship because one single person makes them ship. To be clear, that person doesn’t write all the code or do all the work, and I’m not saying the project could ship without an entire team behind it. But it’s really important that one person on the project has an end-to-end understanding of the whole thing: how it hangs together technically, and what product or business purpose it serves. Good teams and companies understand this, and make sure every project has a single responsible engineer (typically this position is called a “technical lead” or “DRI” role). Bad teams and companies don’t do this, and projects live and die based on whether an engineer steps up into this role of their own accord. What is shipping? Why do so many engineers think shipping is easy? I know it sounds extreme, but I think many engineers do not understand what shipping even is inside a large tech company. What does it mean to ship? It does not mean deploying code or even making a feature available to users. Shipping is a social construct within a company. Concretely, that means that a project is shipped when the important people at your company believe it is shipped. If you deploy your system, but your manager or VP or CEO is very unhappy with it, you did not ship. (Maybe you shipped something, but you didn’t ship the actual project.) You only know you’ve shipped when your company’s leadership acknowledge you’ve shipped. A congratulations message in Slack from your VP is a good sign, as is an internal blog post that claims victory. For small ships, an atta-boy from your manager will do. This probably sounds circular, but I think it’s a really important point. Of course if you deploy something that users love and makes a ton of money, you’ve shipped. But that’s only true because satisfying users and making money is something that makes your leadership team happy. If you ship something users hate and makes no money, but your leadership team is happy, you still shipped. You can feel any way you like about that, but it’s true. If you don’t like it, you should probably go work for companies that really care how happy their users are. Engineers who think shipping means delivering a spec or deploying code will repeatedly engineer their way into failed ships. Communication So if your primary job when shipping something is to make your company’s leadership happy with the project, what does that mean in practice? First, you have to get clear on what the company is looking to get out of the project. Sometimes it’s extracting more money from a small set of users (e.g. enterprise features). Sometimes it’s spending money to grow the total set of users (e.g. splashy free-tier features). Sometimes it’s mollifying a particular very large customer by building a feature specifically for them. Sometimes it’s just an influential VP or CEO’s pet project, and you need to align with their vision. There are lots of potential reasons, and if you want to ship the project you need to know which ones apply in this case. Align your work and communication accordingly! For instance, enterprise features often don’t need splashy UI but are completely inflexible on requirements, end-user features need to be polished, pet projects mean you need to be in active communication with the specific mover and shaker whose pet it is, and so on. Second, no matter the project goal, your leadership team (the people in your reporting chain who care about the project) will always have basically zero technical context about the project compared to you. That means they will be trusting you for estimates, to answer technical questions, and to anticipate technical problems. Maintaining that trust should be your top priority. If they don’t have faith in your ability to do the job and to keep them informed, you will not ship. They’ll de-risk by cancelling the project, or letting it roll out with zero attention or celebration (remember that an un-celebrated launch is not a ship!) Alternatively, they’ll sideline you and go to another engineer, who will then formally or informally be the one who actually ships the project. Either way, you’ll feel it at review time and they’ll go to someone else for the next one. How do you maintain trust with your leadership team? This could be a whole article (or book) by itself, but here’s my summary: The best thing is a track record of having shipped in the past, if you can get it Project confidence (if you’re visibly worried, they will be too) Project competence. You want to aim for something like a NASA mission control vibe Communicate professionally and concisely, and don’t make them chase you for updates: post a daily or weekly thread somewhere It is much, much more important to do these things than for the project to ship with zero bugs on the exact deadline. If a project has to be delayed for technical reasons, in my experience you will not suffer consequences so long as you communicate it clearly, confidently (and ideally with some warning). In fact, it’s paradoxically often better for you if there is some kind of problem that forces a delay, for the same reason that the heroic on-call engineer who hotfixes an incident gets more credit than the careful engineer who prevents one. Getting into production Even so, you typically still have to get the project into production. The most common problem here is missing a key detail. Sometimes it’s a technical detail: maybe we rely on storing the user documents in Memcached, but many documents are multiple megabytes and will be larger than the Memcached block size. Sometimes it’s a detail of coordination: maybe the platform team that owns Memcached was expecting one-tenth of the traffic our project will send them, so they call a meeting with the VPs and delay the project. Sometimes it’s a legal detail: maybe the user data is unexpectedly sensitive, and our system doesn’t have the controls we’d need to handle it safely. These issues can come from anywhere, and are very hard to anticipate. Dealing with them requires a deep technical understanding of the system and the ability to pivot quickly. For instance, you may have read that first example and are now thinking “well, you could split the documents across multiple Memcached keys, or increase the block size, or move to Redis, etc…“. All of those are potential solutions! But knowing which of those solutions will work - and more importantly, which of those solutions will not blow out the project timeline - is impossible unless you’ve got a deep understanding. This is doubly important because the problem in question doesn’t even need to be real. In the lead up to a project launch, it’s very common for other teams or engineers to raise potential problems (e.g. “hey, are we sure the user data will fit in Memcached?“) If nobody steps forward and explains why this isn’t a problem (or if it is, how it’s being addressed before launch), the project will be delayed, and it will be your responsibility. Why? Because your manager (or their manager) will not know whether this is a serious problem. That’s what they pay you for! If you’re not stepping up to address it, they will naturally err on the side of caution and not ship. You need to stay light on your feet so that when these issues come up you’re not neck-deep in other work. That usually means not being fully heads-down on implementation (i.e. delegating tasks to other engineers on the project). Ideally you should have at least 20% of your time free from implementation in the early stages of the project, scaling up to 90-100% in the final days. If you do that, when issues do come up you’ll be able to grant them your full attention. Can we ship right now? Feature flags are the best way I’ve seen to do this, but staging environments also work, and so on. The key thing is to get whatever you’re building in front of as many eyes as possible: yours, but also other engineers, and ideally leadership, product, design and so on. Five minutes playing with the actual feature, even in a very rough state, will bring up issues that nobody anticipated. Being able to directly see it themselves also does wonders for reassuring leadership that you’ve got things under control. The best way to anticipate problems is to deploy early. In general, a helpful question to ask is can I ship this right now? Not this week, not today: right this second. If not, what would have to change for me to be able to ship something? If the ship needs a deploy, can that happen now behind a feature flag? If we’re waiting on some other team to make a change on their end, can I make it so the system doesn’t strictly require their change after all? For instance, if the platform team is setting up a cache layer, I could make it so my feature still works (albeit a little slower) if it can’t find the cache. Remember, your main priority is maintaining trust with your leadership team. Nothing builds trust like having fallback plans, because in case of emergency fallback plans indicate control over the situation. If the worst does happen and you can’t release on the day, your manager will be much happier going to their manager about it if they can say something like “our options are to delay four days, or ship tomorrow by sacrificing X” - even if sacrificing X is a non-starter. That means they’ll be more likely to interpret the delay as an unavoidable problem that you handled effectively, instead of as a mistake you made that means they can’t rely on you. I think a lot of engineers hold off on deploys essentially out of fear. If you want to ship, you need to do the exact opposite: you need to deploy as much as you can as early as possible, and you need to do the scariest changes as early as you can possibly do them. Remember that you have the most end-to-end context on the project, which means you should be the least scared of scary changes. Everyone else is dealing with more unknowns and is going to be even less keen to pull the big lever. (If there’s some other engineer who is across all of this who you’re waiting for, bad news: they’re probably the one actually shipping your project). Summary Shipping is really hard and you have to make it your main priority Shipping doesn’t mean deploying code, it means making your leadership team happy You need your leadership team to trust you in order to ship Most of the essential technical work is in anticipating problems and creating fallback plans Scale back your implementation work as you approach launch so you’re free to jump on last-minute problems You should constantly ask yourself “can I ship right this second?” Have courage! edit: this post was discussed on Hacker News with lots of comments. recruiterspostsresumegithublinkedin",
    "commentLink": "https://news.ycombinator.com/item?id=42111031",
    "commentBody": "How I ship projects at big tech companies (seangoedecke.com)1085 points by gfysfm 20 hours agohidepastfavorite294 comments ozim 9 hours ago*In my experience, projects almost always ship because one single person makes them ship. To be clear, that person doesn’t write all the code or do all the work, and I’m not saying the project could ship without an entire team behind it. But it’s really important that one person on the project has an end-to-end understanding of the whole thing: how it hangs together technically, and what product or business purpose it serves.* Yes that is pretty much what I see as well, I see how things go to nothing with wrong people who think they can make bunch of requirements and dump them on dev/qa - then be surprised nothing works - and also how much stuff I try to hand over ends up not happening despite people claiming that they are very motivated to pick up a project. If they are motivated and I see nothing happens in 3 weeks I just take it over again and don't even talk to the guy anymore. I am also quite often seen as an asshole because I don't ask \"everyone\" for permission and mostly care about my actual boss. reply antonvs 9 hours agoparent> But it’s really important that one person on the project has an end-to-end understanding of the whole thing: how it hangs together technically, and what product or business purpose it serves. In the before times, we called this an architect. We're too agile for that now, apparently. reply crazygringo 6 hours agorootparentNo, in the before times, we called this a project manager. The project manager worked closely with the architect, but the architect focused exclusively on the high-level code/engineering part, not the end-to-end understanding of the whole thing that involved management, partners, corporate processes, approvals, etc. (And note the distinction between project manager and product manager, two entirely different jobs. Project managers stereotypically use Gantt charts to focus on timelines and contingencies and processes; product managers focus more on user needs and product-market fit.) reply pavel_lishin 4 hours agorootparentNow, that responsibility has been dumped on Tech Leads, who have neither the power of the Project Manager, nor the responsibility of the Product Manager. And depending on how your company selects Tech Leads, they might not have the technical ability of an Architect, or hell, even a senior engineer. reply ebiester 4 hours agorootparentThat's because they're an engineering manager in tech lead clothing. It's so the company can say they have more engineers and less management, but still fill all of the roles that they need managers to do. (I've written elsewhere how you can run without engineering managers - see https://www.ebiester.com/agile/2024/03/31/a-world-without-en... - but the roles that need to be filled don't stop.) reply optymizer 1 hour agorootparentI'm the living example of this. I'm an engineer who thought he's signing up to be the TL to design the architecture and implement the hard parts, and at some point I realized I'm doing a terrible job because in reality I'm just EM-ing this project 90% of the time, while my manager is busy with something else. I've learned the lesson the hard way. reply jigneshdarji91 1 hour agorootparentprevAs a Staff Eng, I strongly related to this. At big tech in Silicon Valley, the Tech Lead archetype does tend to do all the Project Management and, depending on whether your team can afford a Product Manager (eg. Infra team), some or all of the Product Management. IMO, it's a little unfortunate from a productivity perspective that you have a high performing Engineer also running daily/weekly syncs, doing stakeholder management, and doing upwards management for resourcing. From a personal learning perspective, it's great though. You, as Tech Lead, learn and hone a broader set of skills and not only the Architect or Senior Engineer skillset. reply datadrivenangel 6 hours agorootparentprevAgree on the role distinctions, but the best people in any of those roles will be able to see/do some of the important factors in the other domains and ask questions like \"so what does success for this project look like?\" reply DeathArrow 3 hours agorootparentprev>And note the distinction between project manager and product manager And then there's the product owner. reply jollyllama 1 hour agorootparentprevOk, the before-before times then. reply mazswojejzony 4 hours agorootparentprev> Project managers stereotypically use Gantt charts to focus on timelines and contingencies and processes ...and dependencies between teams/stakeholders. :) reply chambers 4 hours agorootparentprevWhen a company does not want to pay (or empower) a principal engineer, they hire legions of junior engineers to cover up the gap. People who focus on the joy of shipping than on the pesky questions of \"shipping what?\" and \"who will maintain it?\" Many of us here owe our jobs to the deliberate weakening of technical authority and expertise. That debt probably blinds us to those management decisions, and the need for architects to balance them out. reply 8xeh 58 minutes agorootparentOh how I wish I had a legion of junior engineers. Or even a squad. My company has an aversion to hiring. It's so expensive to hire people, you know! There are no young engineers to teach the ropes to. There are very few senior people do everything. Needless to say nothing happens fast, good, or cheap. And we don't ship projects, they mostly just bob up and down in the harbor. reply Lucasoato 8 hours agorootparentprevThat's not just an architect. It's an architect, a construction worker, a bricklayer, a plumber. That person might not do everything but needs to be able to dive deep as low as required. reply froh 7 hours agorootparentwho says an architect doesn't build things? reply lazide 7 hours agorootparentMost architects. reply froh 5 hours agorootparentwho'd thunk im lucky at my workplace... reply Carp 4 hours agorootparentI've got the opposite problem... Too much implementing not enough architecting reply Aeolun 7 hours agorootparentprevArchitects these days have only a very narrow view of how the actual product works. But that’s also because we outsource so much shit. reply CharlieDigital 4 hours agorootparentRather systems have become bigger and more complex to the extent that most cannot be understood fully in both dimensions of breadth and depth. reply makeitdouble 7 hours agorootparentprevThe main requirement is for the person to be on the project and have skin in the game. An architect will often have more of a bird eye view and not be actively working on a specific release. They might also not care about the business side. IMO depending on the org, the matching role would be either a release manager or a project lead. reply aprdm 2 hours agorootparentprevThis is a great article. Reflects my experience both in big and small companies. Anyone can be the \"Project leader\", doesn't need to be a TPM, PM or ENG. It isn't an org chart role, it is a role you are fulfilling. I have seen many different org chart roles succeeding or failing at it. reply moffkalast 8 hours agorootparentprevArchitect? That sounds like a lot of money. We're just gonna stick some rando as the product owner and call it a day. reply ozim 8 hours agorootparentLet's one up by getting a rando on board as \"business analyst\" but expect him to do product owner stuff. reply HPsquared 5 hours agorootparentLearn on the job, sink or swim, YOLO! (you only learn on-the-job) reply moffkalast 8 hours agorootparentprevYou look like a straight shooter with upper management written all over you. reply shnock 7 hours agorootparentI like the cut of your jib. Let’s let the sails loose on this venture and see if we can’t move the needle. reply nshunter 3 hours agorootparentCan we circle back on this in 6 months to validate our strategy with leadership? reply olpquest22 6 hours agorootparentprevIn my team, this role is covered by the tech lead, who also takes on the responsibilities of project manager, scrum master, and business analyst (team members help with business analysis). reply bsaul 6 hours agorootparentprevdon’t remember architects had a truely intricate knowledge of the business metrics. It was more of a technical role. reply ebiester 4 hours agorootparentI think this is a change in business climate today - all senior+ engineers in many companies are now expected to have knowledge of business metrics, and that expectation goes up with staff engineers (the new architect name) reply red-iron-pine 4 hours agorootparentprev> In the before times, we called this an architect agile and ITIL both reply glenjamin 7 hours agoparentprevThis is called project management, and in my experience seems to be a practice/discipline that's often overlooked or ignored at startups and scaling tech companies. Generally in my book projects should only be assigned to teams, and managing that project to completion should be part of that team's way of working. Doing this in an agile manner generally means smaller projects, one at a time. reply devjab 1 hour agorootparentI don’t think I’ve ever worked with a project manager who wasn’t a total pseudo jobber. That is to say, I have worked with some wonderful project managers, but they got things done rather than “manage projects”. They’d be hands deep in Active Directory, weird json stuff to help find issues with OCR or working on change management and training when a new system needed to be adopted. But the whole “agile” side of project managers, scrum masters, IT business partners and so one have always just gotten on the way. Usually what happens is that they become middlemen that can’t actually relay information between developers and the businesses. As a result developers and digitally inclined business people tend to talk to each other directly while they let the pseudo jobbers waste everyone’s time because… because it’s “best practice”. Hah. Especially rich when you consider that the whole “agile manifesto” was thought up and sold by people who haven’t worked in software engineering since 20 years before Python even existed. Of course it doesn’t work. Not because any part of it is particularly bad, but because every part of it is extremely vague and completely unfit for reality. If you follow any sort of practice which isn’t YAGNI religiously you’re going to fuck up. Projects ship because one of the people who do actual work gets fed up with all the bullshit and simply does what needs to be done. All the “project managers” and other role players are only there because SWE management is full of people who can’t code anymore. You don’t see all these pseudo jobbers in IT operations, and you don’t because SysAdmins want to be SysAdmins. reply psunavy03 6 minutes agorootparentThis may shock you, but companies actually need people to do things other than code. There's some strong \"junior developer\" vibes in this last paragraph, not realizing that SWE management and project management are spending their whole day making sure that the code you're writing is actually what the company needs, and they're not just lighting money on fire by employing you. Just because someone \"can't code anymore\" (arguable premise though that is) doesn't mean their job is automatically bullshit. reply steveBK123 6 hours agorootparentprevThe last \"agile\" shop I worked at instead did 10+ small projects in parallel (1-2 devs per project) and then wondered why we never got to where we wanted to go. reply pc86 4 hours agorootparentIn contrast the last really fast-moving place I worked at has 1-3 devs per project but they were entirely 100% in charge of technical design, building it, shipping it, and maintaining it. If we wanted to wait to ship, we waited. If we wanted to ship early, we did it. I'm in an org 3-4 times the total size now and we move at half the speed. reply philote 2 hours agorootparentThat sounds great for moving fast, but not so great for sharing and keeping info about these projects. If/when someone quit, how would their projects get split up for other devs to maintain? reply pc86 2 hours agorootparentIt definitely had its downsides especially for the 1-dev projects. In reality it wasn't that bad. Code reviews usually pointed out where documentation was needed or would be helpful, and everyone was just senior enough where you could give them a feature ticket on one of these small projects and reasonably expect they'd be able to just figure it out if they had to. Outdated or missing critical documentation, or too junior (or too lazy) coworkers would definitely have made this approach fall apart and that's a big risk of it IMO. reply psunavy03 2 hours agorootparentprevWhich is precisely the opposite of the entire intent of Agile. Take one small thing, get it done. Done done. Then decide what the next thing is, then the next, based on what you learn from that one thing. Unfortunately, too many people can't be arsed to actually understand things like the OODA loop, Cynefin, and the other things that describe precisely WHY that is a good idea. But hey, they do standups. reply beretguy 6 hours agorootparentprevOne place I worked at did that + only 1 person per project and all projects got rotated between developers at the start of every week on Monday. And when we did stand up meeting every morning nobody cared what anybody else had to say cause we all worked in different projects. Go figure. reply linhns 4 hours agorootparentIf I were you I would have left immediately. reply steveBK123 5 hours agorootparentprevYes, exactly the same with the rotation. It was almost like they were optimizing for bus factor. It was completely brain scrambling and unsatisfactory work as it was constant musical chairs. reply cruffle_duffle 4 hours agorootparentprevMaybe not the rotate projects bit but I’ve worked on plenty of teams where everybody is doing something different. Sometimes it is because they are spread too thin other times it is because each project individually can’t really be swarmed on and is really a solo adventure. Rotating between each project on a weekly basis, however, that seems awful. reply jll29 6 hours agorootparentprevIt's usually easier for a technical \"tech lead\" to pick up project management than for a project manager to pick up \"tech lead\" (deep technical) skills, but exceptions exist. The tech lead should have better business understanding than \"currently needed\" and ideally be supported by a domain expert (business analyst, product owner). A project manager may support the tech lead to ensure the project's output ships. reply glenjamin 5 hours agorootparentThis matches my experience - I was intentional about not saying that a project manager was important - just that project management (the practice) is important. reply DeathArrow 3 hours agorootparentprev>Generally in my book projects should only be assigned to teams User stories are assigned to teams. reply giancarlostoro 2 hours agoparentprevWhenever an architect leaves a company I work at, it is definitely felt. If your projects aren't silos then you need someone to glue everything together. You wont ship the same, and you will likely make more mistakes and everyone on call stands around confused, because nobody is there to provide technical guidance because everyone's trying to figure out how their own islands talk to yours. reply DrBazza 7 hours agoparentprevThe \"one single person\", should be qualified with 'is senior enough or with enough authority' which allows them to set aside a lot of squabbling, bureaucracy and bikeshedding. reply pc86 4 hours agoparentprev> I am also quite often seen as an asshole because I don't ask \"everyone\" for permission and mostly care about my actual boss. This speaks to me, I have often been told that I'm supposed to get \"permission\" to launch something from product, from my boss's peers leading other teams, from customer support, from design, from pretty much everyone. When pressed, there's never a realistic justification as to why (for example) a designer who hasn't touched the work in months should be in a position to approve a launch. reply j45 23 minutes agoparentprevThis sentence is a good one for those who often are that person and wonder if there might be others like them out there. reply vasco 6 hours agoparentprev> If they are motivated and I see nothing happens in 3 weeks I just take it over again and don't even talk to the guy anymore. I like this sort of no bullshit attitude but at least tell the guy \"I'm taking this back\". Hard for your boss to have your back if you don't even say anything. reply 2-3-7-43-1807 6 hours agoparentprev> I am also quite often seen as an asshole because ... or ... you really are in fact (acting like) an asshole. speaking from own experience. reply pc86 2 hours agorootparentI physically cringe when I think of some of the things I said to my coworkers when I was fresh out school and definitely knew what I was doing and had a much better way of doing things and they just didn't understand. I do think it's sort of a rite of passage, especially for the dorky socially awkward kids like I was who all of a sudden have a real job and don't really know how to interact with people. reply simonw 19 hours agoprevThis is great. I particularly liked this observation: > Shipping is a social construct within a company. Concretely, that means that a project is shipped when the important people at your company believe it is shipped. A lot of the ideas in here resonated with me a lot. This is the kind of article I wish I'd read before I spent a few years leading an engineering team at a medium-sized tech company! reply benreesman 13 hours agoparentThis is a reasonably good if somewhat depressing blog post about how to do well in the performance cycle at a big company. Now part of that is shipping product, but that’s pretty clearly of secondary concern for the author. It sounds to me like this person is good at getting paid no matter how it goes for the shareholders or the rest of the team. reply tdb7893 12 hours agorootparentWhen I worked at a big company I did a lot of mentoring and the dissonance between what people I mentored thought was the \"right thing to do\" and what it seemed like the organization wanted them to do (enforced via performance reviews or other mechanisms) was a huge hurdle for new engineers. Especially early in your career you're just one engineer in a huge org and most people eventually decide it's easier to go with the flow than fight against it (or they leave) but it was a struggle for people to get there. This post seems the logical conclusion of that. Why spend your time and stress doing work that your boss doesn't appreciate? Just give them what they want, it's their job to align that with greater organizational goals. All this being said I did not love working at a big company, partially for these exact reasons. reply crabbone 3 hours agorootparentNot sure if / who am I quoting, but this thought isn't my for sure: the more layers of management the company has, the more times the incentives are inverted between the planning at the very top and the implementation at the very bottom. It does often feel like Chinese whispers to the people at the very bottom: the orders make no sense whatsoever due to the distortion coming from the middle management. And, I totally agree with your assessment that OP sounds kind of sarcastic about the whole thing. Also the way they phrase it suggests it: it's not even what your boss wants, it's what's going to make your boss happy (if the boss is an idiot, they might want things that will end up making them feel sad, but that only makes your job harder as now you should also anticipate what would actually make them feel happy rather than dully following their advice.) reply baxtr 13 hours agorootparentprevI think you’re describing any person’s life within a larger social construct. I don’t see how you can achieve any meaningful goal without collaborating with people in power. reply 0xpgm 9 hours agorootparent> I don’t see how you can achieve any meaningful goal without collaborating with people in power. Depends on how you define meaningful. Raising happy & healthy kids, helping someone in need etc, can be meaningful to many people, but don't require 'collaborating with people in power'. reply idra 9 hours agorootparentBut it does. At the very least, you need to keep paying off the people in power and do everything within the framework of their rules, otherwise you’re in trouble reply Aeolun 7 hours agorootparentI’m fairly certain you can go live somewhere off-grid and do everything however you want. It’s only a tradeoff if you also want all the convenience of modern society. reply red-iron-pine 4 hours agorootparentthere is no \"off grid\", and even then those homesteaders aren't building houses themselves with tools they crafted themselves -- they're 100% dependent on tools and skills they learned in society. even remote and rural they're often still trucking into town weekly for gas and groceries. source: in laws in rural AB tried homesteading off the grid. all it meant was that their kid was homeschooled and can't do multiplication and they learned how difficult farming is. reply lioeters 4 hours agorootparentprev> live somewhere off-grid That's the thing, the grid covers everyone everywhere now. There is no escape from the planet of the apes. reply xenocratus 7 hours agorootparentprevI'm fairly certain statistically you can't, because you need a place to go do that, the skills to pull it off, and have a family that's not only willing but actively supporting it, otherwise when the reality kicks in everything _will_ fall apart. Either that or some of you die. But hey, technically you'd be correct in that case. Or maybe I just have a gloomy view of what \"living off the grid\" looks like :] I'll just leave this [1] here, regarding that. [1] https://www.smithsonianmag.com/history/this-russian-family-l... reply mbesto 5 hours agorootparentprev> but don't require 'collaborating with people in power'. You missed this qualifier: \"person’s life within a larger social construct.\" reply d0gsg0w00f 7 hours agorootparentprevI did not get that from TFA. I interpreted it as \"know your customers and communicate with them\". This applies to everything in life. It's especially relevant in big companies because it's easy to forget that you are forgettable. reply jrochkind1 4 hours agorootparentI mean, if by \"customers\" you mean \"the important people at your company\". > Concretely, that means that a project is shipped when the important people at your company believe it is shipped. If you deploy your system, but your manager or VP or CEO is very unhappy with it, you did not ship. > If you ship something users hate and makes no money, but your leadership team is happy, you still shipped. You can feel any way you like about that, but it’s true. If you don’t like it, you should probably go work for companies that really care how happy their users are. reply ryandrake 21 minutes agorootparent> I mean, if by \"customers\" you mean \"the important people at your company\". I think that's exactly OP's (and TFA's) point: If you're working in most medium sized to large sized companies, just look at your org chart. Your manager, their manager, their manager's manager, and so on up to the CEO: Those are your customers. They are the ones that decide your comp, they are the ones that set your priorities and goals, they are the ones who are ultimately accountable when you fail or succeed. Your job is to deliver what they want. It's definitely a hard pill to swallow if you still have that idealistic view that you're working for end users. reply anon7000 11 hours agorootparentprevI mean, being misaligned with company leadership is a great way to loose your job. I worked at a medium sized company which is known for having a good culture. Everyone was kind & helpful, there was loads of autonomy, never any kind of layoffs. At some point, a team I worked closely with got unexpectedly fired. The entire team, including manager, just gone one day. Not for financial reasons, but because they were “not performing well.” (There were multiple people on the team who had consistently good performance reviews.) I spent a fair amount of time trying to figure out why that happened. Obviously if that could happen to them (fired despite good feedback), it could happen to anyone. As far as I could tell, it’s because the CEO or CTO didn’t think the type of work they were doing was worth doing, and also didn’t think they were making a difference. It’s good to be a self-starter, to advocate for best practices, and to keep users in mind. But at the end of the day, if that doesn’t fit into what your bosses expect from you, you’re done. That’s why it’s important to communicate with stakeholders. Your boss needs to understand why spending time on preventative maintenance pays dividends on the long run. You can’t spend 75% of your time on stuff that doesn't look productive (which is subjective) and also not be proactive in being on the same page as your stakeholders about what’s important. At some point, they’ll get confused about what you’re actually doing day to day, and your job’s on the line. reply rytis 10 hours agorootparent> As far as I could tell, it’s because the CEO or CTO didn’t think the type of work they were doing was worth doing, and also didn’t think they were making a difference. So the CEO/CTO weren't able to express their concerns and priorities and instead just fired the whole team? If, as you say, there were no financial reasons, then the team could've been re-purposed to do more meaningful (at least in CEO/CTO eyes) work. reply smugglerFlynn 8 hours agorootparentYou are coming from a rational position with the focus on optimization. Large organizations are not rational, and rarely optimal. Executive backlogs are so deep that purposefully re-fitting whole team to another job will never end up on the top list. You might see sometimes organization will rehire a whole new team with exact same skillset, and set them to do similar tasks. It happens because execs know how to setup things from scratch quickly, but running a re-fit is a custom project that requires problem solving and large amount of exec drive, and exec resources are extremely scarce and expensive. From the outside this will seem totally irrational and suboptimal, not to mention unfair. But that's how large orgs operate. reply d0gsg0w00f 7 hours agorootparentprevIME working as a team in large companies is dangerously entrepreneurial. What I mean is that there is loose guidance on what needs solving and then it's up to you to figure out how to solve using what you have. If you stray from the original problem too far, you'd better be good at explaining why. It's dangerous because there's a lot of autonomy with the illusion of security. Keep the original problem in mind always. Keep your head up looking out for competitor teams who might be solving your problem. Know them, align with them. If you show up on an exec budget spreadsheet and the exec can't defend your value, then you're toast (or transferred). reply InDubioProRubio 10 hours agorootparentprevNow imagine, the product being 50 % income generator at start, but a liability generator of support cost in the long run. Means, you launch the product and its success kills you over time as a bloated giant. All we ever had todo, to be more succesfull, was sell more of the product... famous last words reply bryanrasmussen 10 hours agorootparentdo you have an example of this scenario? I mean reading it, sounds true but then support is mostly determined by the company's willingness to support (outside of some legal requirements) and so I find it actually difficult to imagine where selling more of the product is a great income generator but the support actually kills you (destroys company) in the long run. In software at least support costs can be decreased by fixing bugs or identifying high support low value features. So - I would like to see a company that actually got killed by support costs but was doing good from product sales. reply ben_w 9 hours agorootparentI think most social media counts as such, with the specific example in my head of Twitter only making a profit two years before Musk bought it, cut it to the bone, and increased its legal troubles. Income starts off proportional to number of users and how much they use it. Support depends on how many people are anywhere between unpleasant and unlawful. \"Unpleasant\" is like weeds, if you're not keeping up they take over and keeping up becomes harder. \"Unlawful\" can suddenly get a lot more complex when other legal jurisdictions notice you and (sometimes with or without changing the law because of you) remind you that anyone operating in their jurisdiction must follow their laws and not whichever one you put in your T&C — constitutionally guaranteed freedom of speech in one country can be constitutionally unlawful speech in another. reply yosefk 8 hours agorootparentprevHe is probably good at getting paid and getting credit for what he does, but he would need to be good at it to do any good for any other stakeholder, even more than he would need it to be a happy parasite inside the company. We don't know from the text if he cares about benefitting other stakeholders; I would bet that he cares more than average or he would not openly admit various unsavory facts about how things actually work - there's nothing in it for him to be open about it and the typical bigco parasite is unlikely to be open about these things and instead will repeat the party line about the place being a perfect meritocracy. reply didibus 18 hours agoparentprevYa, I think this is a great insight. In today's world, code is not released as a versioned artifact sold on a disc or downloaded. The idea of \"shipping\" is fuzzy. You might be 100% in production with some change and it could still leave edge case, deficiencies, etc. You can decide to address them now or later. And it's all just perception. You can say it's good enough, we shipped, let's forget about this whole thing and move to another. Or you can keep ironing out the quirks. I've \"shipped\" things in the past that were turned on to less than 1% of the time, and we left it at that, and moved on to other things. It was considered \"shipped\". Everyone was worried to increase it to beyond 1%, so we all patted ourselves in the back for the great launch and went to work on other things. reply bigiain 12 hours agorootparentThere was always something intensely satisfying about walking into some retail store and seeing boxes on the shelf containing CDs with software I'd written. (On the flip side, there was that one time we had to destroy 5,000 CDs because they had a Quicktime Autostart virus on them...) reply OnlyMortal 10 hours agorootparentHeh. I can relate to seeing your product on a shelf. I recall seeing IBM ViaVoice X on shelves a Circuit City. It was rather an ego trip. reply Aeolun 7 hours agorootparentSometimes it’s odd to realize there’s people that can say this while simultaneously not being my grandfather. There’s a whole period of computer history I skipped. reply enugu 2 hours agoparentprevThere is a tendency here to pattern match the advice in this article with frustrating experiences about office politics. But I dont see this as a post about politics. Rather, what I got was that the spec is an incomplete description and there needs to be more inquiry into how the software is going to be used. This can require a little bit of 'going up the stack' to see how business need relates to the software requirement(single enterprise customer with a precise requirement, acquisition of new customer, software for some internal vision of CEO etc). Compare with a startup where one doesn't even have a spec and one is trying to find a product-market fit or when developers take sales calls and find new insights on how the software is actually being used. A completely broken spec is indeed a failure in management process. But, in general, it helps a library developer to think beyond a library spec and see how it is being used. reply NBJack 18 hours agoparentprevThis is the reality. And if you happen to be in an environment with less cooperative folks, get your requirements to ship in writing, agreed upon, and as up front as possible. Hold them to it. Otherwise, it just opens you up for nitpicking, and in some cases goalkeeping, by folks whom end up delaying your shipping. reply anshulbhide 15 hours agoparentprevIMO most engineers completely forget or don't appreciate the importance of optics, especially when working with non-technical founders or management. reply klabb3 15 hours agorootparentYes but otoh that might be more of a “I refuse to accept a culture of optics on principle” kinda situation, rather than not understanding it. I liked the post because it’s honest and doesn’t put a value judgment on things, just explains how it works. It’s up to each and everyone to act accordingly, and one of those actions is to not participate in the lunacy that often arises in the higher echelons. Many people are fine keeping their integrity, mostly left alone to code, avoiding social deception games at the expense of not being promoted out of what they fell in love with in the first place. People are just different. reply amonith 9 hours agorootparentprev\"Appreciate\" is a weird word. At least for me (not an English speaker) it has a positive connotation so with that in mind I sure hope nobody appreciates the importance of optics. The concept is dumb but it is important and we have to play the game to achieve anything. reply afandian 6 hours agorootparentAppreciate has at least three entirely different meanings that I can think of. 1. To be grateful for something. 2. To fully understand something. 3. To increase in value I’m sure there are more. I read this as option 2. reply amonith 5 hours agorootparentWhy did you read that as 2 though? Is there a context clue I'm missing or is there some grammar rule I don't know of? Honest question, I'm Polish. For me there's a huge gap between 1 and 2 so it might cause misunderstandings when used in a sentence. I despise a lot of things I fully understand and if I said I \"appreciate\" them - sounds weird. reply afandian 4 hours agorootparentIt's heuristics, not grammar. You usually appreciate a noun or noun phrase in a transitive sentence (X appreciates Y). Case 1: If it's something useful (e.g. 'your help', 'what you did') then it's more likely about being thankful. This use of 'appreciate' is also a social action. You say it to make someone feel good for helping. Case 2: If it's an abstract thing (e.g. 'the importance of', 'the difficulty of') then it's more likely you're talking about understanding. Usually when you talk about this usage it's because the _fact_ of understanding is important to the speech act. If someone explains the law of gravity you don't say \"I appreciate that\", you say \"I understand that\". But if you fell from a height and hurt yourself you can say \"I didn't appreciate the law of gravity\". Case 3: If it's intransitive and it's about money ('the car appreciated in value', 'the house appreciated in value'). reply anshulbhide 6 hours agorootparentprevCorrect. reply dclowd9901 9 hours agorootparentprevWeirdly, optics have never mattered at all in small or startup companies. And they manage to do pretty well, ship a lot of product and become large companies. Maybe the problem isn’t the engineers, but the need for optics… reply conjectures 9 hours agorootparentNah, I think optics can matter at startups too. reply tonyedgecombe 7 hours agorootparentFor a lot of the ones that fail, yes. reply tightbookkeeper 9 hours agorootparentprevNo organization with more than 1 person is immune from the effects of optics. If you think so, you may be blind to it. reply tonyedgecombe 7 hours agorootparentIt definitely gets worse as the organisation grows. There isn't much room to hide in a five person company whereas it's hard to be seen in a 5000 person organisation. reply amiljkovic 3 hours agorootparentprevWhat is optics?? reply h1fra 9 hours agoparentprevYes. Unfortunately, it comes with a side effect, you will see leadership use this to kill projects they don't like by not never mentioning them until people think it's a failure. reply neilv 12 hours agoparentprevNote that it can get trickier than it sounds. (Well, I don't know about big tech, but at least for medium and smaller.) You need to figure out who the \"important people\" are, and somehow make sure that they understand and buy into the product definition, delivery dates, etc. Even if they're 3 levels up from you, and you can't normally interface directly with them, try to find a way to double-check that all the \"important people\" are on the same page. Organizational dysfunction happens, and you have to succeed despite that possibility. reply iknownthing 4 hours agoparentprevIn my experience, most things in large companies are social constructs. Good things are good because they were decided to be good, bad things are bad because they were decided to be bad. Very rarely are they driven by actual metrics. reply scott_w 12 hours agoparentprevSame here. What you highlighted makes a lot of sense to me and it’s something that happens at every company size. reply Scubabear68 18 hours agoprevUgh. This article is not about “shipping”software. It’s about pleasing upper management. Those are not the same things. The article even says it explicitly - if your users hate it and the market laughs, but executives like it, you’ve shipped. If you’ve given users the best software ever but your executive management doesn’t know, or even actively hates it, you haven’t shipped. Blech. reply simonw 18 hours agoparentI think the article does a very good job of defining the term \"shipping\" in the context of large organizations, where it you genuinely do need to please upper management - if you want further career advancement, in any case. It's a bit cynical, but that doesn't mean it's not true. If you want to ship software without worrying about upper management opinions, go work somewhere smaller. You can still please end-users AND upper management at the same time. That's what I would aspire to do in that situation. reply SoftTalker 13 hours agorootparent> If you want to ship software without worrying about upper management opinions, go work somewhere smaller. Really your option is to work for yourself. There is no company of any size > 1 where you don't have to worry about owner/manager/executive opinions. reply 0xpgm 9 hours agorootparentIt's much easier when 'upper management' is 3 individuals you can have a normal conversation with, than a hierarchical hivemind above you that does inexplicable things for random reasons. reply nasretdinov 9 hours agorootparentPeople are also usually suddenly much more reasonable and cooperative when you're discussing something face to face with them and not through third parties :). reply edanm 12 hours agorootparentprevEven with a company of size=1, you have to worry about customers. reply yread 9 hours agorootparentbut those are hopefully much closer aligned to endusers than your upper management. Unless you make some ad spyware reply smdyc1 7 hours agorootparentprevIt's also like this in small companies, like the one I work for, and I think rightfully so. One of the mobile app projects I was involved in got bogged down for months due to the lead engineer's need to refine and polish the perfect UX and architecture which kept breaking features we'd already completed. This cost us a lot of money and the product didn't look or function to an end user that much different. Management had enough and pulled the guy off the project because it just wasn't getting shipped and what he was doing didn't align to their goals. After he left i was able to tie up the loose ends and ship it live within two weeks. The only way i was able to do that is I knew every component of that system, our deployment infrastructure, our support staff, the real goals of our management team, etc. reply yamumsaho9292 18 hours agorootparentprevYes this. Large orgs can just keep throwing mud on the wall until something sticks. If you're a smallco you don't have that tolerance on margin of error, small fuckups directly reflect on your pnl. reply antupis 13 hours agorootparentprevIf end-users do like it upper managment notices it but it will take time, generally you iterate faster against upper managnent. Same kinda applies when end users dont like that stuff so you cannot lean too heavily to opticks game. reply willcipriano 17 hours agorootparentprev> if you want further career advancement Job advancement rather. Career advancement is possible by making users happy and telling executives at other companies \"I did that\". It's a better story if you had to fight for it. reply jawns 18 hours agoparentprevI think this falls under the category of \"Don't hate the player, hate the game.\" I agree with you: It totally sucks that this is the way the business world works. But if you want to work within the confines of this flawed system, you need to know how to navigate it well, and I think this post does a good job of giving you the guided tour. There is a failsafe, however. The post points out that if the project launches and users love it and it makes the company a ton of money, then upper management is going to find out about it even if you don't tell them, and they will be pleased that you have made the company a ton of money. reply tonyedgecombe 7 hours agorootparent>The post points out that if the project launches and users love it and it makes the company a ton of money That's when all the people like the article's author crawl out of the woodwork and start claiming responsibility for your work. reply 0xpgm 9 hours agorootparentprevThere was a time, upto 10-15 years ago when tech company culture was largely anti-corporate. Now corporate-y things like playing office politics is order of the day in medium to large tech companies. My (maybe uninformed) hypothesis is that tech made so much money that it brought in the MBA and HR types who brought their corporate culture with them. Even the smaller tech companies are now mimicking big tech culture as the standard. reply itsoktocry 2 hours agorootparent>My (maybe uninformed) hypothesis is that tech made so much money that it brought in the MBA and HR types who brought their corporate culture with them. This is some strange engineer's fantasy, that every company was ruined by \"MBA types\". Meanwhile, as evidenced in places in this thread, \"software types\" don't even understand basic business principles. They like to believe that if they were just left alone they'd churn out brilliant product, as if a large business isn't far more complex than that. Someone needs to count the beans (MBAs) and someone needs to deal with the people (HR). reply InDubioProRubio 10 hours agorootparentprevNot necessarily. You can have upper management chieftains, who view the rise of a \"new\" one- as a threat and will actively try to prevent \"upstart\" new sources of income, to protect the dependency on \"whoever\" pays the bills for decision making. You will not get a product thats not search off the ground at google. You will not launch something else then windows / now cloud at microsoft. Even if it makes money. The old chieftains domain has to wither and be in retreat first, before something new can be started with all the resources available. Its really exotic, if cross domain success is achieved. Amazon logistics and then AWS is such a example. If you look under the hood, the companies that allowed for that- are often more conglomerates, basically smallerish independent companies within a brand-trenchcoat pretending to be one large company. Youtube is also such a thing. My pet theory is, that its company internal value chains, the chieftains depend upon that allow for such things to form. Like search is advertising and needs data. And data comes from the engagement guys down the hall in the other building. reply digitallis42 6 hours agorootparentSearch is not Google's golden goose. It's Ads. reply Scubabear68 18 hours agorootparentprevThere’s a hero element here that so think is what irks me. The reality is, most of the time when you “ship” your software, executive management neither notices nor cares. Even if you get the “attaboy” from a manager, they will forget it 10 minutes later. You ship your software because you care about work, and maybe because you care about your users. In a big software company, shipping is not going to get you noticed unless you are literally the guy delivering gmail or google maps. reply twelve40 17 hours agorootparent> The reality is, most of the time when you “ship” your software, executive management neither notices nor cares your reality might be different than mine, but things that got shipped definitely get noticed because they are used as a bargaining chip for promotions, funding and for visibility of the entire team, that's one of the main concerns of a manager (unless they've checked out and are searching for another job) reply shalmanese 18 hours agorootparentprevIf a ship happens in the forest and nobody at company notices, did the ship really happen? To be clear, the pathway to management noticing is not you going around the building loudly blaring that you did a thing, it's that churn went down, or ARPU went up or CAC went down or uptime went up or something management cares about. But the essential thing to also understand is that this doesn't just happen for free. Figure out what metric your ship is meant to affect, put monitoring in place and proactively notify those above you about how your ship impacted that metric. If you don't do this last step, you didn't ship. reply trentnix 18 hours agorootparentprevI do hate the game. I hate it so very much. reply faizshah 3 hours agorootparentprevI have seen the opposite happen a lot though, even if a project is successful you will get numerous people coming to you asking “who approved this? Why was I not involved in the decision?” And the ballooning aftereffects are why it takes months to push a simple button. Big companies are like government bureaucracies now. reply tech_ken 2 hours agorootparent> Big companies are like government bureaucracies now Large organizations are, by definition, bureaucracies regardless of being public or private. Big companies were bureaucracies 100 years, and they will be bureaucracies in 100 years. I never understand why people expect private enterprises to be free from the inefficiencies inherent to coordinating lots of people and things reply solidninja 7 hours agorootparentprevThe only winning move is not to play :) reply thfuran 17 hours agorootparentprev>I think this falls under the category of \"Don't hate the player, hate the game.\" The game wouldn't be happening without players. reply atty 17 hours agorootparentGenerally the game is created by external forces, not the players. If you’re an independently wealthy individual you can afford to work for pleasure. The rest of us? We like to eat and live in comfortable dwellings and take care of our families, so we play the game of pleasing our superiors in return for the money to live a comfortable existence. reply mupuff1234 11 hours agorootparentThen you would expect to see inversion of behavior at the higher levels, especially at big tech, when one does become independently wealthy, but that's pretty obviously not the case. reply thfuran 17 hours agorootparentprevSo the players are just following orders and totally blameless for any actions? reply _carbyau_ 15 hours agorootparentI see your reply as strawman levels of uncharitable. They never said any such thing for either of your claims and the only reason I see for your statement is that you are playing. reply hackable_sand 13 hours agorootparentThe lack of accountability and introspection is frustrating, which is what I read from GP comment. I think it's fair to let them vent that. reply charles_f 14 hours agoparentprevIt's funny because this is the absolutely tell of someone who spent their entire careers in large organizations. I alternated between large and small, and it's incredible how resigned and compliant people who have been in larger orgs can be. At some point the absence of actual survival pressure creates a dichotomy between internal and external success, and only the former is important, as this article relates. It's so hard to fight the flow, that either you go with it, or you get jaded and desperate, and just leave for better pastures. To go and call that \"shipping\" is a stretch in my opinion, it is only correct as far as your cynicism, semantic tolerance, or resignation to mediocrity can stretch. But with reduced perspective and a slight ego, it's hard to tell that things can be different. reply chii 13 hours agorootparenthow can it be any different? Someone else is paying you to do something; you either do it (aka, you please them), or you don't (aka, don't ship, and you stop getting paid). If you dont want this, you'd need to become your own boss - in which case, you ship when you feel you've shipped! You can argue that this makes you more aligned with your customers. And i'd agree - you've made the customers your boss directly. So now, they determine if you've shipped or not. So the only situation in which this is different (or still the same tbh), is if you're your own customer. reply lmm 10 hours agorootparent> how can it be any different? Someone else is paying you to do something; you either do it (aka, you please them), or you don't (aka, don't ship, and you stop getting paid). The good situation is when you get paid to do the thing, because you're getting paid by someone who cares about whether the thing is done. The bad situation is where you get paid to make a Potemkin version of the thing because the person paying with you cares more about the appearance than the reality, consciously or otherwise. You can redefine words and say well obviously when they told you to do X they were just doing an elaborate LARP and there's no deception in doing Y and telling them it's X, but that's just sophistry. Working for arms-length counterparties helps, as that naturally forces communication to be more explicit and honest. Working in small businesses where reality tends to intrude more quickly helps. Of course neither approach is perfect. reply Ensorceled 2 hours agoparentprevI once tried to ship a product and nobody else was ready. Marketing assumed the product would be late and wasn't geared up to market it. The CEO couldn't point to a marketing campaign so didn't want to mention it at the conference. Support hadn't bothered to ramp up on it since marketing had told them it wasn't actually going to ship until next quarter. It's not about \"pleasing upper management\" is about understanding that a product isn't \"shipping\" just because you can launch it the software. The entire company needs to be on board. reply shalmanese 18 hours agoparentprevYou can love it or hate it all you want, the important thing to internalize is that this is a feature, not a bug of doing things at scale. There's no way to engineer it such that you don't get to live in this reality. Be it tech companies, marketplaces, politics, revolutionary movements; once you reach a critical mass of people, all meaningful change looks like this. reply 0xpgm 9 hours agorootparentThat is before a smaller and nimbler movement, company or entity surpasses the now large, slow-moving and fossilized incumbent, which then starts the gradual process into irrelevance. reply hiatus 5 hours agorootparentAnd then the smaller, nimbler company itself scales to the point that it resembles the former incumbent, and the cycle begins anew. reply superfrank 1 hour agoparentprevI'm not sure I agree with you. I think a better definition of shipping is ensuring your project meets the definition of done. At big companies, for many projects, I think there's an implicit requirement in the definition of done that management is aware of and somewhat happy with what you shipped. The resources used to ship a project (the time, money, and people) are, after all, their resources. I feel like you're getting at the fact that you can build a crappy product that management loves and build something customers love that management hates. I don't disagree with that at all, but to me that's kind of tangential to whether you've shipped a project or not. To me at least, shipping isn't about it being good or bad, it's just about it being done. I think what the article is getting at is that if management doesn't agree that it's done, then it's not really done. reply h0l0cube 13 hours agoparentprevThe article actually presents strategies for shipping, not changing the hearts and minds of management, or making great products. Shipping implies neither of those things. > If you ship something users hate and makes no money, but your leadership team is happy, you still shipped. You can feel any way you like about that, but it’s true. If you don’t like it, you should probably go work for companies that really care how happy their users are. reply taveras 17 hours agoparentprevLove it or not (mostly not), shipping software in large organizations requires navigating what the business and its leaders demand. You can try while ignoring leaders, but you'd be unlikely to ship anything. You'd be in good company. In my experience, there are plenty of people at BigCos who are more interested in covering their ass to ship nothing or the wrong things. reply kobalsky 1 hour agoparentprev> If you’ve given users the best software ever but your executive management doesn’t know, or even actively hates it, you haven’t shipped. you think you've given users the best software... people overestimate their ability to know what's best, and everyone thinks they are the exception. reply mirekrusin 11 hours agoparentprevYet, that's how you sustain your job, get promoted and have more responsibility over time – large number of people don't seem to get this simple fact that your customer is whoever pays your salary and it's your job to make them happy. It could be as well called “doing your job”. “Shipping” your job/work doesn’t seem like a stretch - especially that definition is clearly stated in the article. It’s also nice play of words that emphasises the fact that many people seem to get the rules of this game wrong. reply kapitanjakc 15 hours agoparentprevExecutives are the ones who'll sign the cheques. As an engineer, you can try to explain your perspective once or twice, but then you just go with what will please executives. reply misstercool 13 hours agorootparentI think this article is much more than this. > First, you have to get clear on what the company is looking to get out of the project. You are not just pleasing the executives. Assuming the company described in the article is a good company. Executives are not idiot that making impulsive decisions. You need to be able to sense the company direction, communicate clearly, manage the risk, build the trust. This is not an easy task in a big company. Such an awesome article IMO that explains the art of shipping in a big firm. I believe if any engs can master the skills described in the article, you will get promoted to a leadership role very fast. Of course, this might not be the path everyone loves. reply com 9 hours agorootparentThere’s a really interesting article that I’d like to read about the “first” - ongoing stakeholder management through the lifecycle of the project, the product and your time there all allow you to ship effectively (as far as the org sees it at least). Focusing on the tech and even product UX minutiae doesn’t typically get the headspace you need from senior management for rolling down tech debt, the headcountb you need to really ship useful and market leading software. reply gwbas1c 4 hours agoparentprev> It’s about pleasing upper management. The article also made it abundantly clear that if you find yourself in that situation, and you don't like it, you should find another job. The article isn't about the ethics of the situation, career choices, ect. The rest of the article focuses on more important details about shipping software. Give the article another chance. I skimmed it twice yesterday and now that I'm not reading my phone on the throne, I gave it the attention it deserved. --- I should also point out that I've had a lot of career success in situations like this by disagreeing and committing. Turns out that a mild degree of patience in situations like this often means I get to focus on very clear customer pain points and build industry-leading software. (I just don't get to focus on them the exact moment I want to.) reply willtemperley 10 hours agoparentprevMaybe the author didn't feel the need to state the obvious - that once the executives like and understand what's being shipped, then they can confidently pull the trigger on expensive processes like marketing. Otherwise the feature or product could sit hidden and forgotten. If the customer isn't using the software, it hasn't been shipped to them. reply csomar 15 hours agoparentprevThe article does not claim to be about shipping software but about sipping software in Big Companies. reply madeofpalk 17 hours agoparentprevI'm unsure what your definition of 'shipping' is? If the users hate it then you didn't actually ship? How did users hate it if you never shipped? reply antonvs 9 hours agorootparentIt helps to have telepathic users who can hate software that you haven't released. reply _def 9 hours agoparentprevIt says so in the title: it's about shipping projects. This is about project management. reply renewiltord 18 hours agoparentprevPeople get hung up on this stuff. Getting things done in different environments is about understanding the constraints. The objective isn't to religiously follow some \"ship\" cult. The objective is to get things done. Or at least that's my cult. I have a friend in Amazon's logistics department. One day he told me how he was planning something that involved buying up the entire capacity of a local airfield. The thing with a long enough lever and a fulcrum is that these guys are moving the world. reply throwaway346434 9 hours agoparentprevEven worse, it misses the point. Shipping means you realize benefits for a target audience. Enable someone to hit a revenue target, compliance measure, etc. if leadership doesn't care about that or can't work to that kind of framework; they deserve to go the fuck out of business. Treating it as \"please management\" is incredibly self serving. You please management by often making them money; sometimes despite themselves. reply purple-leafy 15 hours agoparentprevKnown as brown-nosing and prevalent where I work reply jameson 11 hours agoparentprevExactly Title would've been better fit \"How I climb the ladder at big tech companies\" reply yamumsaho9292 18 hours agoparentprevIt's accurate though. Almost all of us here has worked on a ticket that made us say \"The fuck is this shit im working on, who will use this? Who the fuck came up with this?\" And we just work on it, take the paycheck, and move on to the next one lol. reply reaperducer 18 hours agoparentprevJust the use of the word \"shipped\" implies that software is an interchangeable commodity that rolls off a conveyor belt in a factory. That's not the reality with any software that actually matters, no matter how hard M.B.A.s try to abstract the human factor out of it. Good software isn't manufactured. It's created. It takes thinking, and planning, and crafting, and all those things that are the opposite of a plastic widget factory that \"ships\" products to its customers. Don't let then dehumanize the profession any more than it already is. reply SpicyLemonZest 16 hours agorootparentMost commercially written software is closer to manufacturing than art. That doesn't satisfy everyone, I know, and I'm not here to judge people who don't want to work on integration #5 for widget #3 in order to unblock a million dollar contract from Foobar Inc. But that's where a substantial majority of the market demand for software development lies. The MBAs are paid precisely for their ability to channel the creative process of software development into the manufacturing slots where it's needed. (Even art, of course, is in practice pretty close to this. MBAs are paying you to sublimate your creative energies into a snappy video on how to sign up for Robinhood or whatever, and there are substantial business constraints on both its content and delivery date.) reply strken 14 hours agorootparentIt's closer to engineering than either art or working on an assembly line. Software tasks just aren't fungible in most companies, and neither are they open-ended interpretable works designed to please or strike fear into the human soul. The average codebase is pleasing to me in the way an engine block or an oil refinery is pleasing. Q_rsqrt is pleasing in the way a mathematical proof is pleasing. reply com 8 hours agorootparentI’ve worked in engineering businesses, and SaaS scale ups and the “engineering” that gets done by SWEs had little to nothing in common with any of the engineering disciplines I’ve worked in apart from the E in the title. Little comprehension about cost engineering, maintenance, safety, durability and resilience. Half-baked bodies of knowledge. CV driven development. Fads and critical production systems held together with spit, tape and hope. It’s like Aristotle’s Cave in our field. reply strken 7 hours agorootparentAnd yet building software is still closer to engineering than it is to charcoal figure drawing or to driving a forklift at a door factory. reply antupis 11 hours agorootparentprevWhen you ship it is arts and crafts which usually leans heavily to a small group of people Then if you want it to be commercial succesfully it needs some manufacturing practices because otherwise, you end up with legacy software. reply nine_zeros 16 hours agorootparentprevI don't know why this post is getting down voted but the MBAization is truly it. MBA practices cannot deal with uncontrollable production. But software engineering is utter chaos. So they try to come up with bullshit units that can be easily managed in their opinion. But it never works - aka, a nimble competitor always eats the giant in software. The MBA style practice does work in factories and warehouses. But in software, a nimble startup with own the incumbent just be providing higher quality value. reply vdvsvwvwvwvwv 14 hours agoparentprevShipping is ... milestone hit on program management. reply anonu 4 hours agoparentprev... At a big company. reply dmafreezone 16 hours agoparentprevYeah, if you spent your life like this you kind of wasted it. I’ve noticed that HN has fewer and fewer hackers day after day. Not sure when they will change the name. reply lucianbr 12 hours agorootparentThe number of \"hackers\" who think it's better for devices to be locked down by Apple because that keeps them secure (and freedom to install unvetted software is dangerous), and who think AI will replace us because we are all \"statistical parrots\" and just regurgitate what we read somewhere anyway is really astounding. Also lots of \"hackers\" who measure success by how much money has been made, be it by a company or person. I mean it may not be impossible to be a hacker and believe those things, but it should at least be a rare thing. reply antonvs 8 hours agorootparentprevI mean, it's basically been Startup News for People Who Like To Pretend They're Actually Hackers from day one. reply jonas21 15 hours agoparentprevYeah, it's such a cynical take. I'm astonished that anyone here would believe this, much less write it up as a blog post and submit it to Hacker News. reply randomdata 18 hours agoparentprev> It’s about pleasing upper management. It's about the customer recognizing the product as something they are ready to buy, which is associated with the dictionary definition for shipped \"(of a product) be made available for purchase.\" It falls apart slightly in that the customer technically starts buying the product on day one, while it is still just a glimmer in someone's eye, but \"shipping\" referring to the point where the customer says \"Yes, that is what I wanted\" is close enough to stay within the intent of recognizing something available for purchase methinks. > If you’ve given users the best software ever Of course, in context, the users aren't your customer. They may be someone else's customer, but that wouldn't be shipped by your hand. Your delivery is limited to your customer. reply AdieuToLogic 17 hours agoprevThis post is about corporate politics, not \"shipping projects.\" To wit: If you ship something users hate and makes no money, but your leadership team is happy, you still shipped. You can feel any way you like about that, but it’s true. If you don’t like it, you should probably go work for companies that really care how happy their users are. When the stated goal is to make leadership happy and not solving customer problems such that customers are \"happy\", that is pretty much the definition of politics. As subsequently identified therein: Engineers who think shipping means delivering a spec or deploying code will repeatedly engineer their way into failed ships. I would question the ethics of engineers whom employ a strategy of preferring politics over delivering solutions. EDIT: clarified the ethical question. reply sbarre 16 hours agoparentLike everything else, writing code doesn't exist in a vacuum.. There will always be interconnected constraints and requirements, and you simply cannot \"deliver a spec\" and think that's all there is to it. And that has nothing to do with ethics.. The spec is outdated by the time it makes its way to you, and odds are it was flawed from the start in some way. And again this isn't because someone is bad at their job, it's because the business reality and conditions are constantly changing. And so someone needs to be keeping an eye on both of those things and steering the code delivery parts of the work to stay aligned with those changing business conditions. To your comment about politics: I would say that from a high enough viewpoint \"happy customers\" should converge with \"happy leadership\" even if it doesn't happen every single time you ship something.. If those two things don't converge, the company won't be around for long and then politics won't matter much, will they? reply jonahx 12 hours agorootparent> If those two things don't converge, the company won't be around for long and then politics won't matter much, will they? Have you ever worked at a big company? The level of dysfunction that can be sustained over years or decades at a place with decent market foothold is staggering. reply sbarre 4 hours agorootparentI work at a big company now. Of course there are exceptions to the rule.. Let's reframe as \"trending up\" and \"trending down\" based on customer happiness then.. Over a long enough time horizon, and generally speaking, I still believe I am correct. reply 0xpgm 9 hours agorootparentprev> To your comment about politics: I would say that from a high enough viewpoint \"happy customers\" should converge with \"happy leadership\" even if it doesn't happen every single time you ship something.. To look at a concrete example, with the quality issues Boeing has been having in the recent years, we can claim \"happy leaders\" diverged from \"happy customers\". Yet Boeing will still be around for a long time, and failures can be catastrophic. Whistle blowers who came out since can be said to have advocated for \"happy customers\" against \"happy leaders\" but were suppressed. reply sbarre 4 hours agorootparentYes of course there are exceptions to the rule, always. reply ozgrakkurt 12 hours agorootparentprevIt is not always a yes or no. “Executive high leadership” can approve of 60% customer friendly stuff and 40% bs. And if some engineer is pouring his heart and soul to make a x% good thing that would be a benefit then it might still be rejected or worse, if engineer is in bad terms with managers he has pretty much no chance. reply marcyb5st 4 hours agoparentprevExactly. This is basically \"enshittification\" [1] in its truest form. Look at Boeing for example, I bet leadership was very happy with the fat stock bonuses and I also bet a lot of engineers \"shipped\" products following the author definition of shipping. So much so that the \"if it's not Boeing I'm not going\" became \"if it's Boeing I'm not going\". Personal take, but if you are only playing politics you are a politician and not an engineer. [1] https://en.wikipedia.org/wiki/Enshittification reply HipstaJules 5 hours agoparentprevI feel that you don't trust leadership teams very much. reply bananapub 11 hours agoparentprevthis is a bizarre take. you work for the company, not for your abstract imagination of what users want. if you genuinely feel the company isn't aligned with users, then try to change that. it's not unethical (per se, obviously don't build bombs for them) to please your employer. reply akomtu 3 minutes agorootparentThe Company is an imaginary construct. The reality is that there is a group of people with common goals who work together towards those goals. Very often those goals are simply making money by any means possible. Working with them doesn't absolve anyone from responsibility. reply slfnflctd 7 hours agorootparentprevI've been in a really stressful position for the past 6 months. Things that I would've walked out over a few years ago are now things that, for various reasons, I kinda have to choke down. My entire concept of \"what is ethical?\" has undergone a transformation. It's not about my ideals any longer, or about feelings, or about how gentle or aggressive management acts in negotiations. It's about much deeper things-- like when I'm asked to support something I find distasteful, I need to really investigate whether, in context, it's actually something which violates my conscience. You know what? It almost never does. These are the two questions that matter most in my view: 1) Am I honestly being required to do something that harms someone worse than the status quo, and 2) Is anyone around me having a medical emergency - including certain serious psychological issues - that I can help with? Aside from those two things, there's a lot of ugly crap that you can still keep trucking through. Many people, particularly (but not only) younger ones, are oversensitive to things they simply don't like but that aren't actually wrong in any major way. You've got to choose your battles. reply 0xbadcafebee 2 hours agorootparentprevIn the Military, soldiers have an ethical duty not to follow an order that is illegal. It is called duty to disobey. In civilian life, you have a duty to disobey if what your employer asks of you will unnecessarily harm people. For example, shipping a broken insecure product that handles PII/PHI/etc is absolutely unethical, and possibly illegal (though often the legal consequences are minor, if not irrelevant). Your bosses will absolutely ask you to do illegal and/or unethical shit, so you always need to be aware of where the line is, both legally and ethically. It's not always clear where the line is. With AI work, the line has already been crossed several times (things like discrimination in output resulting in innocent people being hurt). Do not do whatever your company asks for. Do push back when you see a problem. Don't ship something that could hurt someone. If you're not sure, ask or find out. reply km144 4 hours agorootparentprevThat seems like a very narrow-minded view of the role of engineers in society. At the end of the day we aspire to solve problems that make the world better—I'm certainly not going to fault individuals for following the money, but to dismiss the ethical dimension completely is unreasonable in my opinion. reply lmm 10 hours agorootparentprev> it's not unethical (per se, obviously don't build bombs for them) to please your employer. What are the ethics of pleasing your managers and/or executives at the expense of your employer? reply PeterStuer 10 hours agoprevOh boy. I've been around these trenches long enough to have seen the dark side of 'shipping' strategies. Rarely in large enterprise environments are projects greenfields. The new system is often there to replace some existing Line of Business system. Inthese cases the pervers but common shipping strategy is: 1. freeze all maintainance and evolution of the existing system. Seems reasonable until you realize that these enterprise projects are multi year calendar endeavours and the business will not stop changing during that time. The idea is not realy to halt all development, just to inctease the friction of getting anything done on the now declared 'legacy' system above an administrative pain threshold. 2. Commandeer all the IT staff to serve on the 'new' system's project team and overwhelm them with tasks. Make sure they remember any time spend on the 'legacy' (keep hammering in that term) codebase is basically waisting time assuring you'll end up at the bottom of the corporate dinosaur tar pit at best. 3. Force they 'new' system into production long before it is ready. Use all the leverage you build from point 1 to promise 'going forward'. When essential gaps to support the business are pointed out en mass week1, reverse the tables and intigate a very heavy administrative process demanding proof that the lacking functionality is actually required with a full ROI breakdown coutering your handwoven 3 minute overinflated guestimate for implementation. Again, you know essentials are missing, you are just trying to gain time as the longer you can stay deployed the higher the chance you will. This process is very destructive to not just the business, but also moral of most involved. Most projects taking this scorched earth shipping strategy fail regardless. This is no small contribution to the cynicism oftem found in veteran battle hardened corporate IT shops. reply bob1029 39 minutes agoprev> Can we ship right now? Feature flags are the best way I’ve seen to do this, but staging environments also work, and so on. Feature flags are a super weapon if you are trying to keep the path to production clear, especially if you have a diverse deployment or customer base. They don't have to be a constant binary value either. I've set up \"flags\" that were SQL queries which produced the actual boolean fact based upon customer-specific data and requirements. These things do tend to accumulate, but cleaning them up is easy as long as you have a way to report on the current configuration across all deployments. If two or more instances have different settings but their users seem happy with this arrangement, then you go the other way and promote the flag into some kind of official configuration abstraction. Customer and environment specific branches quickly become a death spiral if you are trying to grow a B2B/SaaS product. I'd much rather fight a spreadsheet of flags & config than rebase branches and resolve conflicts that have silently piled up for the last several months. reply recursive 34 minutes agoparent> as long as you have a way to report on the current configuration across all deployments This seems to be the hard part. Some of our deployments are not generally accessible to us. reply thefourthchime 19 hours agoprevThis mirrors my views. In sports, winning fixes all problems; in software, shipping solves all problems. You need wins, and you need to ship. It’s like in Glengarry Glen Ross: instead of “ABC—Always Be Closing,” it’s “ABS—Always Be Shipping.” You’ll never ship a perfect product; no such thing exists. But if you ship early (and incomplete), users will be delighted—and often change their minds about what they want. That’s great, because you didn’t spend forever on their initial (flawed) requirements. reply jhwhite 3 hours agoprevI see so much backlash against Project Managers and they're just Outlook Calendars with legs, but this post is basically a love letter to good Project Managers/Release Train Engineers/Delivery Leads, whatever you want to call it. reply econnors 30 minutes agoparentI think the problem with those is that they lack understanding author mentions: > But it’s really important that one person on the project has an end-to-end understanding of the whole thing: how it hangs together technically, and what product or business purpose it serves. The reason people hate specialized roles of scrum masters/delivery leads is that they often lack the E2E understanding and therefor are inadequate owners. reply jhwhite 17 minutes agorootparentYeah but a good technical PM / whatever will have that understanding. Not a role that just checks milestones and statuses. reply aorloff 15 hours agoprev> If you ship something users hate and makes no money, but your leadership team is happy, you still shipped. Well now, hold on a second. You didn't tell me this was about consulting. If we're being paid like pirates and fightin' like pirates thats one thing. reply mihaichiorean 14 hours agoparentI shipped something users (internal) loved and the users were pushing adoption across the company. My leaders didn't consider it shipped. They never talked to the users. Didn't care. It needed perfect alignment with the org and needed to help the org's plans. Not the company or users across the company. reply high_priest 11 hours agorootparentThe users were happy, but you didn't get paid, or got fired for using company time out of assigned scope. reply hemloc_io 13 minutes agoprevI've also \"shipped\" projects at big tech companies and this level of bootlicking really doesn't deserve to be called \"shipping\" it's just delivering for your management. Using the term \"shipping\" is a great scissor statement because it muddies the water. The mentality from the article is another symptom of the many issues Software Engineering faces as profession. Namely that a significant portion of us think of ourselves not as engineers, who need to tell management to get fucked occasionally, but as optimizers for accolades from whatever group can dole out rewards. This starts off in academia and continues into the professional world. Certain folks just want to build a technical fiefdom for themselves, or get headpats from people who are above them in any given hierarchy. Yeah this is \"how the game is played\". Playing this game eventually leads to the death of your organization and is why we have a corporate life cycle in the first place. Eventually people like this eat an organization from the inside, pushing out anyone with an actual opinion or who optimizing for actually getting things done. Instead it's just pure mercenary behavior for your managements attention. reply pm90 17 hours agoprev> fact, it’s paradoxically often better for you if there is some kind of problem that forces a delay, for the same reason that the heroic on-call engineer who hotfixes an incident gets more credit than the careful engineer who prevents one. I could really relate to this. Having been part of incidents, I fucking hate them and try to anticipate them with various safe deployment strategies. To leaders though it apparently seems like Im not doing anything because “nothing ever goes wrong” lol. reply nine_zeros 16 hours agoparent> To leaders though it apparently seems like Im not doing anything because “nothing ever goes wrong” lol. They are not leaders. They are managers more akin to administration or HR. reply fergie 10 hours agoprevThis article is an expert-level primer on office politics in big tech masquerading as a primer on delivering software. reply rk06 9 hours agoparentYes, and because of it alone, I consider it one of the best articles of this year read by me. reply user_7832 5 hours agorootparentAgreed, as a green/still inexperienced employee it was quite a good read. reply EliRivers 7 hours agopreva project is shipped when the important people at your company believe it is shipped Definitely. This can work very much to your favour. There have been times when I have happily shipped a product containing issues and bugs that would be catastrophic for any customer using it, because I know that no customer actually ever will. The product is shipped and released, everyone is happy. The catastrophic issues won't ever come up because that shipped product will never be used by anyone. Big people are happy because the product is shipped. Team are happy because big people have stopped causing so much friction in their desire to ship. When the measurement becomes \"have we slapped the label shipped on it\", then that's what you get. A label. reply fmbb 7 hours agoparentIt will become the headache of future team members that have to debug it when it inevitably crashes four years in the future, or needs to be rebuilt or the deployment moved. Now personally I am fine with this, being that person. I will cause friction however. Unfortunately it is the new big people that take the hit from the previous big people. But such is the way of the world, this is what we are paid for. Sometimes you get lucky and can shut things down. Then you get to celebrate that as well, shutting down the thing nobody ever used but everyone celebrated “shipping”. At least I get my celebratory cake! reply ben_w 9 hours agoprev> Sometimes it’s just an influential VP or CEO’s pet project, and you need to align with their vision. My biggest career mistake was a project that I had no way to know was the CEO's pet project. Can't say where (non-disparagement agreement), but oh boy was that a lot of messy fallout — QA awarded me a prize for least bugs on launch, yet at the same time line manger also immediately went from giving me bonuses to putting me on a PIP for having too many bugs in launch. reply sethammons 8 hours agoparentoptics. If the CEO is reporting bugs they find or those bug numbers appear \"concerning,\" the apparent lack of quality calls for corrective action. Obviously things were not the healthiest there. The CEO should be similarly interested in other projects and their quality. Your manager should be aware of the relative quality and your award and tell his manager that \"it has been / will be dealt with\" and then to either never file the pip or speed run you through it (while letting you in on why: optics). And then the manager should be working towards producing better reporting metrics that executives can use that expose quality issues at large reply sumedh 8 hours agoparentprev> went from giving me bonuses to putting me on a PIP for having too many bugs in launch. Dont you have some kind of tracking to show the bugs were not in your code? reply ben_w 7 hours agorootparentLeast bugs, not no bugs. I'd like to say I can code perfectly, but I'm a mere mortal not Donald Knuth and I can't get away with saying \"Beware of bugs in the above code; I have only proved it correct, not tried it.\" We had tracking of launch bugs, the manager ignored the evidence — that didn't make any sense at the time, then I developed a better understanding of office politics and suddenly it became easy to understand. reply cdrini 5 hours agoprevI effectively agree with the \"destination\", so to speak, of this post, but disagree with the path taken to get there. In general when I ship projects in the context of the org I with for, I _do_ meet the requirements of higher-ups/stakeholders, but not because that's my goal -- but because we're aligned on those requirements. Shipping to make management happy feels kind of incestuous, you should be shipping because you and management both agree on what the end goals of the project are. This might seem like a subtle distinction, but it can create issues. If you're using your management as your metre-stick without truly understanding and believing in what they want, you'll likely over-optimize for the project's goals that they've stated, but miss the target of actually making the project successful. This approach is fine if you're primary goal is to get paid, get promoted, please your managers, etc. But if your goal is to create great things, I think you need set your metre-stick based on the project not on the management. From the outside these approaches look very similar -- which is why I largely agree with the \"destination\" and a lot of the tips in this post, otherwise. reply kqr 13 hours agoprevExcellent article. I'm going to pull out one point out of many that made me think: > Project competence. You want to aim for something like a NASA mission control vibe Having read a little about early Apollo-era (and earlier) mission control this was a fun comparison. The astronauts and flight controllers had no idea what they were doing! There was no textbook – they were performing a human first. They were generally young and very cocky people hired out of university, but were successful anyway, for some reasons, including: 1. They were further culled through harsh adversarial simulation training. This made sure only those that could cut it came out the other end. 2. They approached each new mission phase with a trial mission, each time extending the envelope in a controlled manner. (The cowboy moon touchdown on Apollo 11? It's often described as the first moon landing, but it really wasn't. It was just a test to see if they could reach the surface and get back up. The real first precision landing came on Apollo 12. Oh, but that was also just a rehearsal for the first scientific mission on Apollo 14, etc.) 3. They were fluid in how they organised themselves, and allowed mission needs to dictate which positions existed, rather than trying to impose a hierarchy onto a mission. Going back to shipping, we can squint and look at this as: 1. Fake it, either until you make it or get tossed out. 2. Prefer to ship many smaller things than one big thing. This builds confidence in your abilities, gets you experience shipping things, and allows you more feedback to adjust to what the real project is. 3. Build coalitions across department boundaries, and draw on their support to ship. Analogies are like scissors: more fun when you run with them. reply 0xbadcafebee 13 hours agoprevThis is amazing satire. It's like the CEO of Hooli had a Senior-Senior-Senior-Senior-Engineer blog. (more amazing: 54 ships, but not a single leader-ship joke. that takes nerve.) reply ctenb 4 hours agoparentI don't think it was meant as satire. I didn't like to read it, but it resonates with my experience working at big companies, like many others here. reply 0xB31B1B 19 hours agoprevthis mirrors my experience, but it doesn't give much actionable advice and probably only rings true to those who have experienced the same motions. \"You only know your project shipped if your leadership acknowledges it\". Yes ok great, how do you get their attention. I think this piece could be more easy to understand and influential if the author included a specific IRL project as a case study instead of having a bit of memoir about the vibes of their experience. reply drc500free 14 hours agoparentInternal Marketing is the primary role of the Product Manager at a lot of big companies. reply whstl 13 hours agorootparentAnd this is why it sucks so much to work as an engineer on big companies. You're not even able to do your politics effectively without a middleman that can easily undermine you. The only path to career advancement to this is to job hop as much as possible. reply abhpro 19 hours agoparentprevThe author just shipped the post reply dpkirchner 15 hours agorootparentWe can't be sure of that -- what did their boss say? That's all that matters. reply dpe82 19 hours agoparentprevIf they aren't paying attention then move to a project they /do/ signal interest in with their attention, and ship that. reply sbarre 16 hours agoparentprev> Yes ok great, how do you get their attention I'll tell you my own personal experience here: Go talk about it! Depending on the culture and rituals at your company: - Ask for a spot at an all-hands meeting so your team can showcase what you shipped - Record a demo video of the team's work and share it in Slack/Teams/Yammer - Write a post-mortem or internal blog post about the impact that your \"ship\" had on the business. - Etc... I'm a firm believer in the concept of \"internal marketing\" in big companies. I've had leaders and mentors repeatedly tell me \"no one will recognize you in a big company if you just sit around waiting for the recognition\"... You have to put it out there and talk about it and show it off... And yeah, I know a lot of tech folks hate doing this.. But in my experience that's how you play the game in an honest way... Find the right time and place to be proud of your work and show it off. reply gfysfm 15 hours agoparentprevYeah, I agree this post would have been better with a concrete example. It's hard to talk about a specific project though, since it comes down to describing in detail facts about a company's internal workings (often embarrassing facts). I couldn't figure out how to anonymize it sufficiently. reply up2isomorphism 9 hours agoprevEven what he said is valid for most big tech today, it is still a reflection of how messed up today’s tech jobs are. reply salviati 9 hours agoparentYes! And the most interesting thing here, to me, is how the crowd splits in two groups: one group basically saying \"That's how it goes, if you wan to get paid (and you're not intelligent if you don't) you need to play this game, even if you don't like it\" and the other saying \"This is unacceptable. We need to first recognize that the state of things is not good, so that we can then act and change them. So let's start by stating that this should not be accepted. It's wrong to accept it\". I belong to the latter group. reply user_7832 4 hours agorootparentI think the first group is more of “this is how it is” rather than “you’re not intelligent if you don’t play the game”. I personally don’t find this status quo good or healthy either, but I(or anybody) have little control beyond formulating policies at a company at best, and changing their job realistically. (Fortunately my current place seems quite decent in this regard so I’m good/lucky.) reply Attrecomet 4 hours agorootparentprevWhat is the alternative, though? This is an honest question, I really want to know: How would the \"this is horrible, how can you deign to work that way?\" crowd coordinate thousands of people on a project to create something that is bigger than what 5–20 people can create? Because most of the answers I see here gloss over that part, or strongly imply that engineers will always decide better than business people what should be released. And I can sympathize, especially if you are in an MBA-led org, but I am also certain that if you think you know perfectly what the enterprise or customer needs, and anyone opposing you is a Pointy-Haired Boss, that you are most probably the idiot in that case: 90% of the time a single dev will NOT have better business intelligence than everyone else. reply up2isomorphism 9 hours agorootparentprevAgreed. What I am a little surprised is that some engineers seem to trying to defend something that is knowingly bad just because it is the status quo. BTW, I don’t think catering the upper management as described is the only way to get paid. I ignored many upper management’s preferences because they are plainly stupid and in some situations get fired. But I still made good career growth and so do many of my friends. In fact being in a conflict and holding position tends to give me higher rate of returns, even in case not being able to “ship” as defined in the op. reply sethammons 8 hours agorootparentprevI wonder, given the year is divisible by four so it is on the mind, I wonder if that divide of \"acceptance of what is and working with that\" vs \"we can be better if we make it so\" is also the divide that manifests between the two political party system in the US. reply yhoots 1 hour agoprevmost of this makes sense but I think what would make it more useful is more focus on topics that mainly fall under project management: building relationships with key stakeholders, establishing early+clear communication channels, building in timeline slack, how to navigate management politics etc. i dont think shipping in big tech cos is significantly different to shipping a large construction project in terms of project management, but rather there is a tendency for managers in big tech to be significantly less tenured and hence ignorant of basic management priniciples that lead to easily avoidable blunders. reply Ensorceled 2 hours agoprevThis is why I'm a big fan of MVPs and quick iterations after ward. Launching a significantly complex product is HARD, even if it is an MVP. Nobody understands how hard, even if they've done it before. It works in staging, must be ready! Then users start trying to signup and actually use the product and the wheels come off. I've usually been the person that understands it all and launch week is always hell. Or depressingly boring because you have no users. reply jcmontx 4 hours agoprevThis reflects my personal experience as \"CTO\" of a software factory. I put CTO between quotes because my role definitely shifted away from technology itself more to a delivery role. I have to delegate responsibilities to the right people, act fast when a team member is pulling its weight, allocate resources to solve problems a team can't, and even jump in and work along the team if shit hits the fan. Delivery is the hardest thing; something that works for me is trying to have a plan and not only consider features but a checklist to reach Prod. What I mean is adding all those tiny things that add up to the planning (who's in charge of the DNS? who's setting up the Twilio account? etc etc etc) reply ChrisMarshallNY 6 hours agoprevI remember a manager that we worked with, once stating that \"Shipping is the #1 feature of this software.\" I have been shipping (as opposed to \"writing\") software, for pretty much my entire adult life. A lot of it has involved holding my nose, and gingerly handing it off, dangling between my thumb and index finger, while wearing rubber gloves. This chap has a point. \"Ship\" is in the eye of the managers. Which is why good management is so important. reply remify 2 hours agoparentI kid you not, I've seen managers claim that v1 is shipped while no software was deployed at all (it was just the production environment). All this just to say the project is on schedule (it wasn't !). I've also seen in the same company rushed QA (like ignore the guys) in order to ship faster to meet the managers' KPIs and bonuses. So yeah, shipping a project probably means something different than most developers think. reply mtnGoat 18 hours agoprevArticles like this are off to me… you’re going to need to quantify and qualify your claims of things otherwise I don’t know how much credence to throw ya. “I ship at big tech” is a broad statement… as a reader, I need elaboration or I tend to question the rest of the article. Is this just a guy bloviating or does he really know his stuff? And bold claims need to be back up. reply didibus 18 hours agoparentResume is here: https://docs.google.com/document/d/17Ql6AydCJ7-XhjrwEqzmRAaA... Looks like: ZenDesk and GitHub are the \"big tech\". Projects shipped look like: * Documentation portal * Refactor of some monolith into micro-services * Markdown rendering * Copilot onboarding flows * Varied Copilot anti-abuse related things reply mtnGoat 17 hours agorootparentThank you for looking that up, I was on mobile and being lazy. So it looks like he’s done some decent sized stuff. reply tonyedgecombe 6 hours agorootparentOr claims to have done so ... reply desaiguddu 11 hours agoprev100% relate to this! Some of my observations: - Often it is about taking a leadership & ownership of fixing if it fails in the production - Often it is about, guiding team not to overengineer for the future scenarios This becomes 500% difficult when you are building for someone else: In our current scenario, we are working with a semi-government organisation who goes by the RFP fine print then an actual project needs. reply tmarice 10 hours agoprevThis is what purgatory looks like for software engineers. reply nitwit005 13 hours agoprevLearning how to cancel, or quietly bury projects, can be just as important. You're quite likely to be handed projects that make no sense. Bad ideas are created every day. Even if you ship them, you may be associated with their failure. reply mrowland 7 hours agoprev> no matter the project goal, your leadership team (the people in your reporting chain who care about the project) will always have basically zero technical context about the project compared to you. This is not universally the case, and I've been much happier when I find teams and orgs where this is not true. Good leaders understand the details. Find them. Be one. reply Sandworm5639 6 hours agoprevAs any worthwhile piece of advice, this post is not saying \"Do good things, don't do bad things\" but instead \"Prioritize one good thing over another\". Hence lots of comments. I wish there were more submissions like this. reply ivanjermakov 6 hours agoparentThe post is not about engineering, hacking or programming, but pleasing management. I wish there were less submissions like this. reply user_7832 5 hours agorootparentThe reality is that it’s just the way life/“the game” is. I think it’s good to know about such things, it’s still very much up to the individual to use it/not get fired etc. Unless someone lives alone on a farm, they’ll likely need to know how to handle such things at some point (or be very lucky, or possibly suffer). reply Attrecomet 3 hours agorootparentprevIt's a post about getting your software recognized and used. For that, you actually need to get other people on board, yes. If you don't care about that, why are you even working in software development? It sounds tedious to just build things nobody cares about. reply whiplash451 6 hours agoprevA key point of this post is here: > you have to get clear on what the company is looking to get out of the project. Regardless of politics, starting with why we are doing this project at the first place is often overlooked. reply krony 6 hours agoprevEvery project has a role of Release Manager. Some teams are small enough that this role is filled by a team lead, project manager, architect, etc. some teams rotate this role to spread the pain and knowledge. Large teams have a defined employed role with title of Release Manager that could even include a team (think shipping large DoD contractual projects) There’s whole books on this subject. I think this blogpost does a great job of summarizing the goals for large tech company shipping — well written — nicely done reply shalmanese 11 hours agoprevIf you want a different but equally opinionated perspective of how to ship at scale, I really like Herb Sutter's FAQ on why the C++ standard ships every 3 years (from 2019): https://herbsutter.com/2019/07/13/draft-faq-why-does-the-c-s... reply gorgoiler 14 hours agoprevThe idea of “shipping” as being an emergent state of mind is a great one. A project grows the same way an embryo grows into a full animal: it does so in millions of tiny parts that overlap in discrete ways to produce a continuous spectrum of development. I think some good additional milestones to measure that kind of development might be as follows: * Your fir",
    "originSummary": [
      "Shipping projects in big tech involves more than just coding; it requires prioritization, comprehensive understanding, and effective communication.",
      "Successful project shipping demands anticipating problems, creating fallback plans, and deploying early and often to identify issues.",
      "The ultimate goal of shipping is to satisfy company leadership, requiring courage, focus, and maintaining leadership trust."
    ],
    "commentSummary": [
      "Successful project completion in large organizations often hinges on one individual having a comprehensive understanding and driving the project to align with company goals.",
      "Navigating internal politics and securing management approval are crucial steps in the process, as these factors determine whether a project is considered \"shipped.\"",
      "The definition of success in shipping projects may prioritize company objectives and stakeholder expectations over user satisfaction, highlighting a potential misalignment with user needs."
    ],
    "points": 1085,
    "commentCount": 294,
    "retryCount": 0,
    "time": 1731364226
  },
  {
    "id": 42110877,
    "title": "I Don't Have Spotify",
    "originLink": "https://github.com/sjdonado/idonthavespotify",
    "originBody": "Effortlessly convert Spotify links to your preferred streaming service Copy a link from your favorite streaming service, paste it into the search bar, and voilà! Links to the track on all other supported platforms are displayed. If the original source is Spotify you'll even get a quick audio preview to ensure it's the right track. Supported Streaming Services (Adapters) Adapters represent the streaming services supported by the Web App and the Raycast Extension. Each adapter allows the app to convert links from one platform to others. The table below shows which features are available for each one: Adapter Inverted Search Official API Verified Links Spotify Yes Yes Yes YouTube Music Yes No Yes Apple Music Yes No Yes Deezer Yes Yes Yes SoundCloud Yes No Yes Tidal No No (coming soon) No Web App Raycast Extension Local Setup (Web App) The list of environment variables is available in .env.example. To complete the values for SPOTIFY_CLIENT_ID and SPOTIFY_CLIENT_SECRET refer to https://developer.spotify.com/documentation/web-api, other variables related to cookies can be extracted from your browser. To get the app up: docker compose up -d bun install bun dev Local Setup (Raycast) Follow the guidelines https://developers.raycast.com/basics/create-your-first-extension and look for the folder: https://github.com/raycast/extensions/tree/8533f11972392b6d22f69f073fdb2af6d8ffee10/extensions/idonthavespotify More info Contributions are more than welcome, just open a PR and I'll review it promptly. Icon Generated by https://deepai.org/machine-learning-model/text2img",
    "commentLink": "https://news.ycombinator.com/item?id=42110877",
    "commentBody": "I Don't Have Spotify (github.com/sjdonado)664 points by sjdonado 20 hours agohidepastfavorite338 comments mkhalil 15 hours agoI know of a even more impressive website that will transfer playlists from Spotify (or 20 other platforms, including text files) to 20 other platforms or a text file. I will share the link, but don't hug it to death y'all. :) https://app.tunemymusic.com/transfer reply __MatrixMan__ 3 hours agoparentI used this. It worked fine. It's a shame it's necessary though... I wish there was some kind of vendor-neutral import/export format rather than requiring a third party to solve the whole matrix of integrations. reply coder543 1 hour agorootparentThe music industry needs to more widely use some kind of equivalent to the ISBN that the book industry uses. A simple \"ISMN\" list per playlist/library would be all that would be needed to move between services when both apps have the same songs. One could also imagine a standardized ismn:// URL format that could open in your preferred music app, and this could work even without a streaming service if you already own that song in your personal music collection. ISMN seems to exist: https://www.loc.gov/ismn/about.html But, I've never actually seen it used for recordings; it seems to be focused solely on music notation. So, it would be nice to have some kind of recording-focused identifier for keeping track of specific performances between services. reply rjmunro 1 hour agorootparentMusicBrainz has also been making a list of unique identifiers for music tracks: https://musicbrainz.org/ reply Muromec 1 hour agorootparentprevYeah, but the next step is to make identifier somethink like a has so the media can be content addressable. Wait, we can't have that. It's too convenient reply coder543 1 hour agorootparentContent addressable doesn't really work here... different apps may have the same recordings encoded in different formats and bitrates, but they are still the same recording. Unless you meant \"content addressable\" in the sense of a uniquely assigned identifier like I was already talking about, and not a computed identifier from the raw bytes of the file like a hash. reply bariumbitmap 7 minutes agorootparentThis sounds like an acoustic fingerprint, such as AcoustID[0]. I think AcoustIDs and XSPF[1] would be a good combination for shared playlists. It's a shame that development stopped on the Tomahawk music player[2], it would have been an ideal platform for shared playlists like this. [0] https://musicbrainz.org/doc/AcoustID [1] https://en.wikipedia.org/wiki/XML_Shareable_Playlist_Format [2] https://github.com/tomahawk-player/tomahawk reply sneak 1 hour agorootparentprevThey’re called magnet links. reply nonethewiser 40 minutes agorootparentprev> I wish there was some kind of vendor-neutral import/export format rather than requiring a third party to solve the whole matrix of integrations. \"vendor-neutral import/export format\" sounds like the definition of third party. It's not that there shouldn't be a third party, it's that spotify etc. should adopt it. reply piltdownman 8 hours agoparentprevAnyone know of a technical solution to retrieve a list of 'titles' for deleted videos from a youtube playlist? Have at least 10x Playlists full of removed/deleted music that has been inappropriately copyright striked, but I can't even reconstitute the playlists as I don't have the Title/Artist for the removed tracks. reply rvnx 7 hours agorootparentPaste the URL into savefrom, they have a cache reply brainzap 8 hours agorootparentprevI manually copy pasted the video urls into services that lookup details and check web archive reply mihular 11 hours agoparentprevI recently made a transition from Spotify to Tidal and found the suggested transfer service to do the job really clumsy. In my case I've transferred favorite artists and the service was just trying to match them by name which failed miserably when there was more than one with the same name - seemingly it picked one randomly. I wonder how this service would do. reply etra0 5 hours agorootparentI recently made the switch as well and used spotify_to_tidal [1] which is the free and open-source alternative to what Tidal recommends and it worked pretty fine! it couldn't find some specific tracks and I bet it does a somewhat similar name match as the one Tidal recommends, but at least this one doesn't have a limitation by the number of tracks, in case it's useful to someone else. [1] https://github.com/spotify2tidal/spotify_to_tidal reply dylan604 4 hours agorootparentother than name match, what exactly do you expect them to attempt to do? use a shazam like process to analyze each potential match? reply aaronax 2 hours agorootparentUse the Spotify artist ID[0] to find the Wikidata entry, and then grab the Tidal artist ID from the Wikidata entry to match the correct artist on Tidal. Even better if you use album IDs. (Brain explodes if you could use a song ID.) Realistically, Wikidata may not have enough of this data populated, but it is nice to dream. And it seems plausible that MusicBrainz or similar might have enough data. [0] https://www.wikidata.org/wiki/Property:P1902 [1] https://www.wikidata.org/wiki/Property:P4576 Edit: P1902 has 57000 uses and P4576 has 7000. So YMMV big time. reply dylan604 1 hour agorootparentGreat, yet another attempt at solving this with yet another standard that not everyone will use. Why did you pick this attempt instead of something more common like Gracenote? reply aaronax 1 hour agorootparentGracenote is owned by private equity and has limited availability of data. I prefer to encourage the use of more open data. MusicBrainz or Discogs would have been better choices than Wikidata based on quantity of entries. Though in 5 minutes I have been unable to find if Discogs even has external IDs, and I am not sure of the quantity of Spotify IDs that MusicBrainz has. reply dylan604 1 hour agorootparentGreat that you want to use open sources, but now, you've just provided more evidence for my case as you've listed 2 new \"sources of truth\". Even that fact that there are plural truth sources indicates no one source is truth. Why are they different? Same reasons that have already been discussed So, we really have not made any forward progress here reply rvba 40 minutes agorootparentReality is that simply very few people use this functionality. If those two open access sources become big enough, it is quite clear that someone will make a project to reconcile the data between them. If any of those projects skyrockets the same way wikipedia skyrocketed, then the topic will be solved. reply mihular 3 hours agorootparentprevIt could check the album names on both sides, for example. And in case of uncertainty, it could make a list of dubious matches. Stuff like that, I guess. reply dylan604 3 hours agorootparentThe point is that it's all just metadata. There's a saying along the lines of \"the filename is a really bad place to store metadata\". Whether the title is the same and/or the album name as an additional qualifier, it's all subject to data entry which is prone to mistakes. reply mihular 3 hours agorootparentTo some extent yes, but that data is usually sent from record label with the same values for different streaming services. But anyway, don't tell me that they can't at least figure out that there are more than one artists with the same name... reply notyourwork 2 hours agorootparentRecord labels are actually quite terrible at providing this. You would assume otherwise because it’s in their best interest. However, I work in the industry and can tell you it’s a ridiculous problem because their is no standard and lots of human effort in cleanup and cleanliness. reply dylan604 3 hours agorootparentprevYou'd think that, but not in my experience. It's not like they are getting ID3 tags populated by Gracenote or some such service. You're also assuming that the streaming platforms do not attempt to manipulate the metadata they received for their own internal policies. See my other comment in a sibling thread for specific examples. Too much inside baseball experience with the data the studios/labels believe is perfect that when received is far from perfect leaving the individual platforms to deal with it. reply interestica 3 hours agorootparentprevAllll the other associated metadata is useful... reply dylan604 3 hours agorootparentYou say that as if all metadata is the same. I can tell you it is not. Every company that uses metadata will at some point use a field differently from someone else. \"The Album\" => \"Album, The\" type of things. \"Album\" => \"Album (YYYY)\" types of things. \"Track remix by Artist\" => \"Track\" + \"Producer\" as different fields. reply iamacyborg 7 hours agorootparentprevMy impression is that Tidal does a bad job of this in general. I have lots of artists I follow on there who have albums appearing on their page from identically named but different artists. reply mihular 3 hours agorootparentDon't get me started on that. How can a company which core business is content streaming be that lazy is beyond me. I often feedback them the errors, but even such feedback is difficult. reply notyourwork 2 hours agorootparentSadly it’s an expensive scaling problem. Not trivial to solve at the scale streaming platforms operate at. reply iamacyborg 2 hours agorootparentDiscogs seems to handle it just fine. reply mobeigi 3 hours agoparentprevI've used this site before when moving from Spotify to Youtube Music, worked really well and didn't take long to transfer everything over. reply crossroadsguy 14 hours agoparentprevOr this https://playlists.cloud/ reply djsavvy 12 hours agorootparentThanks for sharing! I didn't want to sign up for a monthly subscription to transfer my music... reply crossroadsguy 9 hours agorootparentAgreed. Having said that I have used https://ko-fi.com/zzzrod to support (if it can be called that) the dev (the link is from app homepage) as per my personal capacity. Because it is such an excellent service and provided for free and also because it isn't behind subscription. So thought I will share that. But of course it is perfectly fine to use it for free as well if one wants to. Cheers. reply mkhalil 11 hours agorootparentprevI didn't even know TuneMyMusic had a premium service, but fwiw, it's free for the first 500 songs. I've only used it a few times and was pretty impressed at how many services it supports. reply myself248 14 hours agoparentprevI love TuneMyMusic, I exported my Spotify when I left, imported everything to Deezer, and now I periodically export everything from Deezer so I can slice and dice it in Excel for various reasons. reply saretup 15 hours agoparentprevThat’s the one I used when I moved from Spotify to YouTube music. Luckily my playlists contained less than 500 songs so the whole migration was easy and free. reply boringg 6 hours agoparentprevIf this does as you say it does… thank you for posting this. Ive been thinking of trying to get away from spotify but felt trapped at the playlist loss. My kid are now conditioned for instant music that might be the bigger challenge. reply therealdrag0 12 hours agoparentprevI used Soundiiz to go from Spotify to YouTube. I paid 5$, but was happy to pay. reply kristofferR 1 hour agoparentprevPlaylisty is a great iOS/MacOS app for doing it locally if you're using Apple Music. https://www.obdura.com/playlisty/ reply nunez 13 hours agoparentprevSoundiiz does this also. I've been using it for years. Great service reply freetonik 12 hours agorootparentI found Soundiiz pretty bad, at least when transferring from Spotify and Apple Music to Youtube Music. It failed to find about a hundred tracks from the library of couple of thousand tracks, and they weren't some niche, rare things, too. I had to manually search for them, using the same titles, and found most of them. reply nindalf 8 hours agoparentprevThis is so helpful. This is the one blocking piece preventing my transfer off Spotify. reply leddt 18 hours agoprevI made a very simple chrome extension that automatically redirects you to your preferred music service when visiting another service. In my case I have it set to YouTube Music, so if I click a Spotify (or other) link in Slack, I'll be redirected to YouTube Music. https://chromewebstore.google.com/detail/music-link/gnhphofp... reply paranoidrobot 15 hours agoparentDo you have a Firefox version of this? reply leddt 15 hours agorootparentNo, sorry. The code should be pretty easy to port, if you want to give it a go. https://github.com/leddt/music-link reply hknws2023saio 6 hours agorootparentCan I port it to FF? reply NiloCK 6 hours agorootparentFrom the parent comment: yes. reply leddt 6 hours agorootparentprevAbsolutely! reply jeffhuys 9 hours agorootparentprevOrion supports FF and Chrome extensions, if you're in the market for a (good) Safari clone. reply mettamage 17 hours agoparentprevThis type of stuff is what make chrome extension development fun reply vivzkestrel 16 hours agoparentprevsounds amazing, how did you map the urls manually? reply lelandfe 15 hours agorootparenthttps://github.com/leddt/music-link/blob/8faa5ceb0caa620499e... I guess this is a free service? E.g https://api.song.link/v1-alpha.1/links?url=https://open.spot... reply leddt 15 hours agorootparentExactly! Their docs are here: https://linktree.notion.site/API-d0ebe08a5e304a55928405eb682... It has a 10 request per minute rate limit, but no api key needed, so each user runs their own queries. reply askonomm 18 hours agoprevI'd love to actually buy music and store it myself, as I've started noticing more and more that some of the songs I have on Spotify have started to disappear, but I find it very difficult to buy modern music anymore. Most gets released as singles, and as far as I know, to only streaming platforms. Is there a way to still buy the same kind of music that is on streaming platforms, and actually get the audio files? reply keb_ 16 hours agoparentThe most sustainable way to \"buy\" music IMO, is to pirate it, and then buy merch from the artist as support. Or just buy off Bandcamp if its an option. reply NickC25 4 hours agorootparentOr going to their live shows if they happen to come to a venue near you. Or by buying vinyl at a local record store. Sadly, those are dying out, but you can find one or two good ones in any major city. In electronic, hip-hop, and a lot of music that has a lot of computer-assisted production, a lot of producers will also release sample packs or VST presets that they sell directly on their websites. While often in small amounts, $50 or less, it more often than not goes directly to the artist with very little middlemen involved. While not a huge stream of revenue I'd imagine, it probably does help smaller artists if they can count on an additional couple hundred bucks a month from people that truly appreiciate their craft and I'd bet that if I reached out to artist XYZ whose music is no longer available on major platforms and said \"hey i have been to a few of your shows, bought all your sample packs, and I can't find your tracks anymore\" the artist, if small enough, would probably oblige and send along a nice little folder of music. reply Minor49er 2 hours agorootparentRecord stores are thriving pretty much everywhere across the US. The ones that have been closing are the ones that only hold old stock and don't curate their inventories If you walk into a shop and all you see are old, worn out Barry Manilow and Bob Seger albums at $30+ a pop, the store isn't meant to last. Thankfully, the problem has been solving itself reply orblivion 16 hours agorootparentprevI Don't Have Spotify should add Bandcamp support. Bandcamp is great for just playing the music too. reply Syonyk 15 hours agorootparentIt's not. Artists will often enough remove old albums so you can no longer play them. Buy it, download as FLAC, put in your preferred local infrastructure to play. Plex/Plexamp works well, as does local file storage and a good command line music client if you're less GUI-friendly or don't have the resources for running them. reply dangravell 10 hours agorootparentYes, downloading is important as even download sites can redact later - e.g. https://audiophilestyle.com/forums/topic/70250-qobuz-may-be-... Another source are good ol' CDs. If you know where to look you can get them cheap too. Specialist charity shops that specialise in records and CDs in student or wealthy areas are good, as are second hand stores online. An alternative to self hosting is to use an online music locker. I wrote up a bunch here: https://www.blisshq.com/music-library-management-blog/2021/0... and (disclaimer) operate one myself: https://asti.ga reply wyclif 6 hours agorootparentWhere's the best place to buy CDs online now? reply wmeredith 6 hours agorootparentDiscogs is pretty great for buying CDs: https://www.discogs.com/ reply meeby 15 hours agorootparentprevDownloading large collections can be a pain though, one at a time and in zips. I made this to help though https://github.com/meeb/bandcampsync Bandcamp is the only place to sensibly buy music you can own these days which is pretty depressing. reply prmoustache 14 hours agorootparentwhat about online music shops like bleep.com and 7digital? reply hatsix 11 hours agorootparent\"Fun Fact\", 7digital is owned by the same parent company as Bandcamp. reply tempfile 4 hours agorootparentprevI always wanted this, thank you! reply amatecha 12 hours agorootparentprevplex alternative: jellyfin + finamp or fintunes. This is my new setup (alongside bandcamp if I haven't yet imported the bandcamp purchase into my jellyfin library). No cloud shit, no subscriptions, but I still support [most of] my favorite artists. Ones which aren't on bandcamp, well either I still have the CDs kicking around or some mp3s from wherever (yt-dlp + ffmpeg is useful when lazy too) reply devmunchies 14 hours agorootparentprevWait, all the music I bought on bandcamp can disappear if the artist removes it from their public inventory? reply hatsix 11 hours agorootparentNo, making an album private does not disappear the music from people who have purchased it. However, Bandcamp does abide by the laws that require them to stop distributing music at the rights holders' request. No music service, or any service, for that matter, will guarantee access to files without regard to laws. Some will try harder, some have tried harder and been beaten down. reply nsfmc 13 hours agorootparentprevthis has happened to me once, appropriately enough with some hauntology tracks. the songs are weirdly enough still available in the ios app to play but not to download via the web. presumably they're still somewhere in bandcamp behind a boolean, but i never got around to downloading them (to be fair, i have them on a _cassette_ that originally included bandcamp codes, so i mean, i really can't complain, i knew what i was getting into) reply rendaw 12 hours agorootparentprevThis happened to me a bunch. I think in one case an artist released an album, but wanted to disallow buying individual tracks so they relisted it after I bought one track. The most infuriating thing is that bandcamp gaslights you on it. I eventually confirmed that yes, I had bought that song, after tracking down the receipt in my email provider or something (it was hidden from purchase history, bandcamp \"I can't find my music\" link didn't mention this, etc etc). This isn't just an issue for playing music though - if you buy a bunch of stuff but don't download it right away you could loose it too. I bought the track I mentioned right after it was released, and the substitution happened within a day or two of that. Like, I get it, if there was some legal issue (pirated work - and then they should issue refunds). But the fact that bandcamp tries to hide it just means that they know they have no moral grounds here. reply Parae 10 hours agorootparentprevArtists can also remove old albums from Spotify. At least with Bandcamp you can buy the music and download the files - if you want to. And you can even send a mail to the artist to ask them why they removed old albums and if they can provide you a copy. reply rendaw 3 hours agorootparentArtists can and do remove your access to purchased albums on Bandcamp, see my rant below. reply orblivion 15 hours agorootparentprevI also buy from Bandcamp. reply MisterTea 3 hours agorootparentprev> It's not. Artists will often enough remove old albums so you can no longer play them. That doesn't happen on other platforms? I had two albums of a band who's front man died and they disbanded. The albums were removed but I still have them in my collection. You cant find it on the site anymore but I can still download and play them. reply aziaziazi 5 hours agorootparentprevDonating is also an option as soon as you got enough mugs and tshirts. Not mentioning the tot bags. reply eleveriven 12 hours agorootparentprevIn a way it seems like it's a practical approach to supporting artists directly reply null0pointer 16 hours agoparentprevWhen I moved country and updated my credit card in Spotify to my card from the new country Spotify also changed my “region”. As a result there are so many songs I have “starred”/“added”/“liked” (whatever fucking language they’re using for it now) are just greyed out and unplayable. Anyway as for actually getting copies of the music I listen to I think we should just pirate it completely unashamedly. reply amatecha 12 hours agorootparentsome time ago when I canceled spotify, they show this special playlist like \"we'll miss you\" or whatever, and each of the song names, in order, spell out this little goodbye message. Ironically one of the songs in that playlist was greyed out and unplayable. Like, great job reminding me why I'm canceling :) reply eleveriven 12 hours agorootparentprevThat sounds really frustrating! It’s one of those cases where it feels like the system is actively working against the listener reply verisimi 9 hours agorootparentprevIt's probably not Spotify's fault though, but it's actually on account of being able to finely control legal ownership of licensed songs. This is all insane imo, but legally sound. Welcome to the future. reply cdrini 18 hours agoparentprevI've been doing this, and here in Canada https://ca.7digital.com/ is literally the only option I've found that let's you buy normal MP3s, would highly recommend. I've been able to get modern albums without a hitch, but don't know about modern singles. I think in the US Amazon let's you buy MP3s, but not sure there. For the price of a Spotify subscription, I can usually buy a new album every month! Which is great; and I love slowly growing my album collection. reply jonhohle 18 hours agorootparentWhile it’s more of a treasure hunt, I really enjoy browsing for and buying physical CDs, especially second hand. Albums are often $1, they sound as good as when they were released and they’re easily convertible to any other audio format, including lossless, 16-bit, 44.1khz formats. The only thing better is SACD, but finding that is like a diamond in the rough and ripping it is its own challenge unless you have the right equipment. People are crazy for vinyl, but CDs are just _so_ convenient. reply ethagnawl 16 hours agorootparentA few years back, I did an apples-to-oranges test of an album I had on vinyl and CD. The vinyl version probably sounded better (usual BS about warmth and whatnot) but the CD sounded very, very good and it was way closer than I was expecting. It had been ~15 years since I'd listened to a CD on a real stereo and I'd totally forgotten how good they can sound. I'd certainly been swayed by the vinyl enthusiasts in the interim, too. The CD was so clean and clear but not in a robotic way. (I don't think this album had fallen victim to the loudness war either, fwiw.) Whereas the record sounded \"warm\" but also a little muddy and quiet (not in a good way) in comparison. I know there could be any number of reasons for this but that's also part of the problem. Was my setup dialed in and this is how it was supposed to sound? Or, was the table not flat? Was the needle dirty? Was the tracking force off? Yes, it's fun to tweak these variables but ... it's also fun to just listen to music that sounds excellent with zero effort. I've started buying CDs again (to my spouse's chagrin) and have no regrets. I do need to start ripping them before discrot comes for them. For anyone in the market, library sales are an excellent option to, essentially, buy CDs by the pound. They also often have rare compilations and anthologies that you won't find in thrift stores. reply snickerbockers 1 hour agorootparentCDs get a bad rep because people incorrectly assume that all digital music is CD quality. CDs are inherently superior to any lossy codec, especially the ones used by streaming services. Also discrot is only a problem if you don't keep your CDs in a case, or if the case is made entirely of transparent acrylic and you lost the labels and teh little booklet. They're very reliable when properly protected from scratches and radiation. reply mixmastamyk 16 hours agorootparentprevDisc rot is not a thing for factory pressed CDs, assuming normal storage. Cheap CDRs from ~2000 or so did have the issue. My CDs from the 80s and CDRs from the 90s are working fine. reply toast0 7 hours agorootparentI don't use my cds too often anymore, but I've got a pressed 2-disc set of the soundtrack from the song remains the same that's became unplayable because the media developed holes. These were stored in the case in my home, mostly coastal California, no severe environmental conditions. Disc rot of pressed CDs seems rare, I don't think I've seen it on other discs, but if it happened to me, it's definitely a thing. reply Brian_K_White 15 hours agorootparentprevdisc rot is a thing for every disc that's made with aluminum, which is all but a very few super special ones like mobile fidelity sound lab made with gold. Oxygen permeates through both the polycarbonate base and the clear coat top, maybe quickly, maybe slowly, but always. reply ssl-3 4 hours agorootparentAlways? As in... Eventually? Sure, I'll buy that: Aluminum and oxygen are great friends that love eachothers' company, and on a long-enough timeline here in Earth's atmosphere they'll always be reunited. But how does that timeline compare to that of a human? Or even of the compact disc itself (a bit over 42 years old now)? I mean: At least anecdotally, I have never discovered rot on any of my CDs that did not also have other contributing condition issues. I haven't even experienced the once-reported issues of air-dried, solvent-based (instead of UV-cured) inks. (And although my sample set is not infinite, it is also not particularly small.) reply Brian_K_White 2 hours agorootparentAs a laserdisc collector, I am particularly aware of disc rot and in those it is far more present by now. Practically all discs have some level by now even the good ones, and even if they look clean to the eye. There are people that say the same thing there, that there are good discs that don't have rot and bad ones that do. But that is not true, there are only better and worse examples, faster and slower progress. cds are both younger and built better, so they will not only last to a later absolute date, they will last longer relative to their manufacturing date, but cds have a few other things that mask rot even when it starts, which is both that they are digital and the player has buffering and interpolation, and also that the data format includes redundant data for error correction. (ld is analog and has neither, later better players do add some digital processing but it can't do the kind of good job with a 6mhz analog fm ntsc video signal that a cd player can with a simple audio bitstream) A cd with the same rot that is visible on a ld (visible in the output not visible to the eye on the physical disc) will appear to play perfectly even in the cheapest junk player. So, it will take longer, but I see no reason to treat \"longer\" as \"indefinite\". There is no specific time, but it is inevitable and I don't think it's in the 100's of years but in the 10's of years, and the 10's of years, especially when many are already 30 years old, is not very many more 10's of years left. And if that turns out to be pessimistic and they last another 50 or more? That's just a bonus. Lucky future rippers who get a chance to rip with even better tech later. Tangentially I do also assume that some day long before the polycarbonate disintigrates, there will be a practical way to read even fully oxidized discs with a different frequency laser or even a camera or microscope-based head, or even a bulk scanner that just rasterizes the whole surface without even bothering to read the track in a spiral until after the fact purely in software. As time goes on, tools get both better and more accessible, so in 1995 it would not be possible for a person to make their own laser head, but today it probably is, and in only a few more years will just get easier and easier, and probably at a rate that outruns the rate at which the discs fully degrade. reply elevaet 11 hours agorootparentprev> People are crazy for vinyl, but CDs are just _so_ convenient. I feel like I might be punished for stepping out of line here but CDs sound better than vinyl too. reply bluGill 4 hours agorootparentThis should be objectively true, but the limitations on vinyl prevent some of the abuses in the production processes (the loudness wars). Often vinyl is better anyway just because the engineers had to go back to make a good mix (mostly this is mastering not mixing) for vinyl - if the vinyl mix had been put on CD the CD would be objectively better. Vinyl does theoretically have a better s/n ratio, but you can only see this in perfect setups, including a new needle in your player. Even then after just a handful of plays and vinyl is worn enough to be worse (I've heard of laser based vinyl plays which don't wear the media - I have no idea if they are real or how they compare to CDs, but I need to acknowledge them because they might be different enough to matter) reply sam29681749 10 hours agorootparentprevCDs are smaller, cheaper, sound great, and have longer playtime. I think they're the superior medium. I get people prefer the sound of vinyl, though. reply LeoPanthera 17 hours agorootparentprevIf the store of your choice offers FLAC as an option (and I think they all do), you can simply make your own MP3s from the FLAC files. That's one of the biggest advantages of lossless audio. (The improvement in audio quality is actually pretty minimal, for most people.) You can also keep the FLAC files to convert them to some future format later, or even do something really wild like burn them to a CD or something. reply bluGill 4 hours agorootparentI did that for a while, but all the tools seem to have been unmaintained for the last decade. The command line ones still work, but the GUIs to make them easy still depend on qt3 or other such obsolete things. (streaming servers like jellyfin do this on the fly easy, but other workflows for offline use don't work anymore even though they are still sometimes useful) reply dehrmann 16 hours agorootparentprev> ...is literally the only option I've found that let's you buy normal MP3s I just went to Amazon and found what's advertised as \"mp3\" for a recent Taylor Swift album. reply cdrini 15 hours agorootparentThat's not an option here in Canada, alas! reply coryd_dev 18 hours agoparentprevBandcamp, 7Digital and (extremely reluctantly) Amazon. The bigger the label the harder it is to buy music digitally. reply WorldMaker 18 minutes agorootparentAs an equally reluctant option one side or the other to Amazon, Apple's \"iTunes Store\" still exists and is \"mostly\" DRM free, if you don't mind AAC and friends (MP4 Audio) rather than MP3. It's getting harder and harder to find those Buy buttons, especially if you start from an Apple Music link/the Apple Music app, but it's currently no worse than Amazon as Amazon and Apple seem deep in direct competition on how hard they make it to find Buy buttons. reply Pxtl 50 minutes agorootparentprevAmazon hates Canada (no Amazon music store, no Household plan) so here the tool of last resort is iTunes Music Store (it still exists, apparently). reply Zambyte 14 hours agorootparentprevHeh, I commented this exact list in order before reading your comment :D reply pier25 17 hours agorootparentprevalso Bleep reply Mainsail 18 hours agoparentprevI use a mix of Qobuz and Bandcamp and have been happy with them. https://www.qobuz.com/us-en/shop https://bandcamp.com/ reply Springtime 18 hours agorootparentQobuz removed a range of releases a couple months ago at short notice, including from users' accounts. Hopefully their catalog remains strong as it's about the only online-only store with lossless that has a wide variety of mainstream artists. I'll also mention: Bleep.com, Boomkat, Ninja Tune (label that directly sells), Junodownload. reply jazzyjackson 17 hours agorootparentYep, \"Pink Martini - A Retrospective\" was removed after I bought one song from it, when I click on the track in my library the error toast states \"It's impossible to play this track. Thank you for trying another playback format.\" But that's the whole point of buying it, mp3 is safely on my SD card, plays just fine reply netr0ute 15 hours agorootparentprev> Qobuz removed a range of releases a couple months ago at short notice, including from users' accounts. What was the deal with this? reply Springtime 14 hours agorootparentIt wasn't explained officially. I assume some distribution arrangement changed but the artists/releases were so varied and from various labels that I can't determine the relationship. I'd bought a handful of releases there and all of them were affected. reply Zambyte 14 hours agoparentprevI look for music on bandcamp, 7digital, and then amazon music in that order. All offering drm free mp3 and flac files. I don't think there has been something I wanted that I havem't been able to find yet. reply precompute 10 hours agorootparentBandcamp is the way to go. Artists get paid and I get to keep my data. reply jamesponddotco 18 hours agoparentprevPersonally, I have a TIDAL subscription, download everything I like from there, and then store everything on a Plex server. While not legal, having the subscription fix any moral problems I’d have with the idea. reply hatsix 10 hours agorootparentThe subscription pays tidal, but tidal only pays out based on usage... The artist gets about $0.01 per stream. The best way to support artists is to purchase albums the week they're released... Sales numbers are a key metric when labels decide touring and investment in the next album... Could mean a better studio or more resources... If you are committed to the download off of tidal strategy, then please make a playlist of the tracks you download and play it overnight... Otherwise, none of your money supports the artists you listen to. reply walthamstow 11 hours agorootparentprevI'm the same, but with Deezer, the Deemix downloader and Plexamp. reply carlgreene 16 hours agorootparentprevHow are you downloading from Tidal? reply plausibility 15 hours agorootparentTidal has lots of downloader clients you can install due to its often technical but niche user base. May I suggest Tidal-Media-Downloader[0]? Now if only there was a way to download things from YouTube Music with a Premium subscription. It's practically impossible to search for \"YouTube Music download\" without falling into the 'youtube-dl YouTube mp3 audio tracks!' SEO hole. Vague naming on Google's part. [0]: https://github.com/yaronzz/Tidal-Media-Downloader reply sphars 13 hours agorootparentYou can 100% download higher quality audio tracks from YouTube using yt-dlp. You have to use session cookies from a browser that you've logged into your premium account with to get the higher quality tracks. There are options with yt-dlp to help with this. reply plausibility 12 hours agorootparentThis is kind of the confusion I mean. Sometimes YouTube Music has audio tracks that you are seemingly different to the \"X Artist - Topic\" videos you can find on YouTube proper. I'll have to revisit this again to see if it's all the same now, because the last time I was looking into it a few years ago not everything I had organised in playlists on YTM was available via regular YouTube playlists I could rip with yt-dlp. reply lmm 18 hours agoparentprevAmazon music still sells the mp3 downloads, though they definitely nudge you away from them as much as they can. reply _DeadFred_ 18 hours agorootparentThis is a great way to use those digital rewards Amazon gives if you delay/combine shipping if you haven't dropped Amazon yet. reply hakfoo 12 hours agoparentprevUsed CDs are dirt cheap. Local thrift stores here tend to price them at $1-$1.50 each. Of course, the dedicated \"record\" stores tend to be closer to $6-10, but they're more likely to have things other than thousands of country albums. reply pjmlp 7 hours agoparentprevSome artists sell them directly either from the site, or at their concerts, the German region I live on still has several stores, and so far I also managed to get several MP3 albuns. I don't use streaming platforms other than being aware of new musicians in YouTube, which I eventually buy their albums. reply devmunchies 14 hours agoparentprevI recently learned about buying Mp3s on Amazon. Most CD purchase pages have a \"purchase options\" and you can do Mp3s. I do that for mainstream things for my kids that aren't on bandcamp (such as music from a kids TV show). I'm actually working on a IoT device where one of the main goals was selfhosting audio content for my kids. Uses AI for the user interface. Similar to Alexa but battery powered. Still in private beta (orders are closed right now) but here is the link for anyone curious. https://heycurio.com/ reply vunderba 12 hours agorootparentAh. AG Talking Bear meets LLM. I started working on something similar a year back - but tried to keep it restricted to offline which made it more challenging since inference on CPU of raspberry PI limits you to very small models. Sending voice clips of children to an always listening server is just a bit too dystopian for me. reply Aeolun 13 hours agorootparentprevIt exploded. I get only server errors now. reply eleveriven 12 hours agorootparentprevSeems like a smart setup reply cdrini 14 hours agorootparentprevWhat a beautiful website! Absolute joy to explore it. reply afranchuk 18 hours agoparentprevI've enjoyed the selection on Qobuz, which is all DRM-free and allows mp3 or lossless flac formats. reply Night_Thastus 16 hours agorootparentI like Qobuz too, but have a couple issues with it: * The prices are a lot higher there than anywhere else * They don't remember my payment information. I would opt-in to this if it's a legal concern. It's so annoying every single time having to enter it in all over again. I'd do PayPal but they charge a fee these days. * Their tar'd up download format sucks, and requires me doing a lot of re-naming and re-foldering things to get it to a sane format. * They started removing some of the things I PAID FOR from my account. Not cool. It's fine if you have to remove it from sale but removing it from my account should not be legal. * Many popular tracks from otherwise not-so-popular albums are locked so you can't buy just that song, you need to buy the whole album * If you've bought a few songs from an album, you don't get an appropriate discount if you later decide to buy the whole album - which some digital stores are good about. reply JamesLeonis 18 hours agoparentprevI have the most luck going to the artist websites or social media. They often have links to different storefronts to buy physical and digital copies. The majority are on Bandcamp, but larger groups also release on Amazon. reply glitchc 15 hours agoparentprevI still buy CDs. It's true a number of modern artists do not release on physical media, although vinyl is making a comeback. reply variaga 15 hours agorootparentSame. Especially for backfilling your collection, used CDs are incredibly cost effective and DRM free. Try BookOff, yard or estate sales, or \"friends of the library\" events. You will burn some time searching, but the hunt can be fun on its own. reply CHB0403085482 12 hours agorootparent>CDs are incredibly cost effective and DRM free I got one that wasn't; the music CD was published by SONY JAPAN. Had to do some shenanigans to play it on a PC drive. Decided it was best to rip it just in case. reply pjmlp 7 hours agorootparentprevAs someone approaching 50, the return of Vynil is quite strange feeling. I now see record stores so full of Vynil that it feels like I timetraveled back to my teenage years when CDs started to being sold, alongside laser discs on a little store corner. reply TacticalCoder 5 hours agoparentprev> I'd love to actually buy music and store it myself... Qobuz. For a start they only do lossless: no mp3. We're soon a quarter of a century into the 21st: gone are the Napster days of needing to stream mp3s. Then Qobuz often has albums in higher quality than 44.1 kHz / 16-bit stereo. Not that you'll hear the difference: but artists/sound engineer going to the trouble of offering higher sample rate / bit depth typically do care about producing good sounding music so there's that. Then Qobuz allows you to do precisely what you want: you can buy individual tracks or full albums to download, no DRM. I've got both a collection of audio files I ripped myself from my own CDs (which I keep too), in a 100% bitperfect / lossless way (verified with an online DB of people who also ripped their CDs) and a Qobuz subscription. The one criticism about Qobuz would be that music discovery ain't the best out there: the UI is actually quite bad. But it's good stuff for people who care about quality and who love to own their music. Most network streaming devices now support Qobuz: for example I've got a fully integrated Yamaha amp that contains a network streamer (Yamaha R-N1000A) and MusicCast (Yamaha's music streaming app, like Sonos I guess but Yamaha) supports Qobuz (and Tidal and Spotify). You don't just rent temporary access to an online service that may disappear under your feet or remove songs you used to listen to: you can actually buy and own individual tracks. Check the plans they have: depending on how many songs you buy, one may be better than the other. IIUC Spotify, under the pressure of both Tidal and Qobuz, announced they'll be moving to lossless streaming. It's 2024. At fucking last. reply Night_Thastus 16 hours agoparentprevBandcamp and Qobuz have been my only options for anything in lossless quality. Everything else is shitty compressed MP3s. reply 71bw 7 hours agorootparent>Everything else is shitty compressed MP3s. Check your supposed lossless files in Fakin The Funk or manually in Spek and become horrified at how many of them are complete garbage. reply Gigachad 16 hours agorootparentprevBeatport generally has more mainstream stuff and offers it in WAV and AIFF. reply Night_Thastus 3 hours agorootparentNot FLAC? I mean I guess I can run them through something to convert them, but I'm surprised. reply eleveriven 12 hours agoparentprevI know that some artists sell their music directly from their own websites. I prefer to buy CD versions actually... reply Pxtl 48 minutes agorootparentI can never justify it to myself if the shipping cost is more than 25% of the product price. reply antihero 7 hours agoparentprevBandcamp and Soulseek. reply paxys 18 hours agoparentpreviTunes and Amazon have pretty much every song you'd want to buy. reply kccqzy 4 hours agorootparentWhat's especially annoying is that sometimes there are albums that can be played on Apple Music but they cannot be bought in the iTunes Store. reply reaperducer 18 hours agorootparentpreviTunes and Amazon have pretty much every song you'd want to buy. Nope. Not even remotely. Only if your taste in music is very narrow. Just this weekend I tried to buy some Christmas songs that were popular and common on the radio in the 80's. I could only find about half of them on Amazon or Apple Music. Most had some version available, but not the canonical one I grew up with. Some didn't exist at all. reply nunez 13 hours agorootparentRecord company pulled he albums or they are stuck in rights limbo. EBay and record shops are your best bets for these tracks reply buildsjets 1 hour agorootparentThey even think they can exert rights over used album sales. As one example, pretty much all recordings that have rights attributed to an artist named Al Reed, who died in 1990, are blocked for sale on Discogs. Not just his own recordings, pretty much anything he has writing credit for. https://www.discogs.com/artist/623314-Al-Reed Found this out when I was adding Johnny Winter / Guitar Slinger to the collection and noticed it was blocked for sale. https://www.discogs.com/release/3318469-Johnny-Winter-Guitar... reply paxys 18 hours agorootparentprevnext [4 more] [flagged] recursive 18 hours agorootparent> were popular and common on the radio in the 80's You're grossly mischaracterizing this. > recorded a track in their garage in 1977 and sold a few cassettes to their friends reply PhasmaFelis 16 hours agorootparent> You're grossly mischaracterizing this. To be fair, so was Reaperducer, with the \"Only if your taste in music is very narrow\" bit. reply nobody9999 11 hours agorootparentprev>The volume of music available for an average person anywhere in the world to purchase today is many orders of magnitude greater than any era in the past. You are 100% correct. But not for the reasons you imply. Music recording is just barely 120 years old, and mass market music media sales are, perhaps 75-80 years old. And since many of those recordings are still around, with more music being recorded every year, it's no wonder there's more music available now than there ever has been. That said, Sturgeon's Law[0] applies to music as well as everything else. [0] https://en.wikipedia.org/wiki/Sturgeon's_law reply nunez 13 hours agoparentpreviTunes and record stores still exist! reply reaperducer 18 hours agoparentprevMost gets released as singles, and as far as I know, to only streaming platforms. Analog hole. It takes a bit of time, but if you really care about the music, it's worth it. Note: I suspect that the streaming services watermark the songs. I have some from Apple Music that it refuses to sync over its cloud service. Doesn't bother me, though, because I primarily sync via wire. reply Gigachad 16 hours agorootparentThey don’t have to watermark them to do that. They can just do the regular content ID thing YouTube does. reply reaperducer 16 hours agorootparentBut it works fine for songs ripped from vinyl. It's only things from streaming that gum up the works. reply whereistimbo 18 hours agoparentpreviTunes? reply HeavyStorm 8 minutes agoprevOmg I was planning to build this for ages! That's very good. reply pazimzadeh 16 hours agoprevThe youtube music matching didn't work for the first two songs I tried: Two Words by Kanye West: https://open.spotify.com/track/62wtttQzoIA9HnNmGVd9Yq?si=b1b... Went to Two Words by Milabel Ranque: https://music.youtube.com/watch?v=Y64cFG9dfYo Never Let Me Down by Kanye West: https://open.spotify.com/track/34j4OxJxKznBs88cjSL2j9?si=7ec... Went to Never Let me Down by Depeche Mode: https://music.youtube.com/watch?v=snILjFUkk_A Even though the correct album art appeared on the site. Actually none of the songs I put it are working. Is this what it's supposed to do? Find songs with similar titles? reply bsimpson 3 hours agoparentSame. I just searched through my texts to find the last song a friend sent me: https://open.spotify.com/track/5qFL2uwfnGU8FccwLMgPNQ?si=b-a... https://idonthavespotify.donado.co/?id=b3Blbi5zcG90aWZ5LmNvb... is missing the link to YouTube Music: https://music.youtube.com/watch?v=0IHBCxs7QPE&si=QYvCtGCjKav... I would get lots of use out of this if it was reliable though! Very useful tiny tool idea. reply jcul 7 hours agoparentprevTried a random track I happened to be listening to. https://idonthavespotify.donado.co/?id=b3Blbi5zcG90aWZ5LmNvb... The deezer link was correct, tidal didn't work, others were incorrect. Still a great idea, I thought about implementing something like this years ago. When sharing music with a mixed group that I know some don't have spotify, I tend to just fall back to the common denominator of youtube links. reply egecant 9 hours agoparentprevI don't understand why other people are hating on Kanye's music. I understand that he is not a very likeable person, but his music is damn good y'all. Especially the ones you tried :D reply smolder 3 hours agorootparentI don't think hating or lauding his music is really appropriate in this thread --it's kind of off topic. We can admit it's subjective and tastes will vary. reply cheema33 11 hours agoparentprevKanye West? Maybe the misdirection is a feature, not a bug. reply pazimzadeh 11 hours agorootparenti miss the old kanye reply shiroiushi 16 hours agoparentprevI don't see the problem here: it looks like it's working extremely well, and in fact doing you a huge favor, if it redirects you from Kanye West to anything else. Why on earth would you want to listen to Kanye West when you can listen to Depeche Mode instead? They do need to fix the bug with the album art though. reply vzaliva 17 hours agoprevI have to deal with spotify links sent to me often and this is great. The better link would be to the actual service page, not github repo: https://idonthavespotify.donado.co/ It would be fantastic to have this as an extension for us, Firefox users. I hope someone makes one someday. reply ThrowawayTestr 15 hours agoparentWhy do you get Spotify links sent to you often? reply johnisgood 13 hours agorootparentProbably because his friends use it. reply JadeNB 17 hours agoparentprev> It would be fantastic to have this as an extension for us, Firefox users. I hope someone makes one someday. If there's some easy way to figure out where that id parameter in the results page comes from (I assume some simple hash of the link), then you could probably even just make it a bookmarklet. reply pivic 13 hours agoprevI use this page to create a page with links to all kinds of music providers: https://odesli.co Works per artist, album, or song. Create a login to customise URLs. I'm just a user; I don't have a dog in this race. reply Outpox 2 hours agoparentI made a Discord bot which used songlinks API 5 years ago! Unfortunately not used much and not maintained anymore. reply herrherrmann 9 hours agoparentprevYes, I also really like Songlink/Odesli! Their search also works faster than Spotify’s or Apple Music’s search. reply JadoJodo 13 hours agoparentprevThey also have Slack integration (/songlink {url}) reply joking 11 hours agoprevOne of the best services I get from my Nas is the ability to save the music there and be able to stream to my phone. I prefer to buy some music and have it there than relying in any subscription service. reply rubidium 6 hours agoparentWould you share what setup you use or recommend for this, both NAS and software for phone streaming? reply loughnane 24 minutes agorootparentNot op but I have a similar setup. I have an old synology nas thats running Navidrome in a docker container. On my iPhone I use play:sub and point it to the local ip and port associated Navidrome. When I’m away I access the network through a WireGuard connection (set up on a protectli router running opnsense). Before I used traefik to expose it to the web. Takes some setup but once it works it’s great. reply porridgeraisin 18 hours agoprevWhen I used to maintain a discord music bot, it used to stream from YouTube. For Spotify urls to work though, I had to get YouTube search to work reliably. One trick which I found worked well was including the Spotify URL in the YouTube search along with the song name, artist name, etc. This helped quite a bit with picking out the \"official\" youtube video, since the official one often includes Spotify links in the video description, which YouTube search also matches against. reply mey 15 hours agoprevThis service connects to a few more services, but you can't just paste in an existing URL. https://odesli.co/ it's more link tree type service but since you can search for songs and albums it makes it easy to find things. Example https://song.link/i/1051394215 reply hutattedonmyarm 12 hours agoparentYou can paste in an existing url: https://odesli.co/https://open.spotify.com/track/1Yk0cQdMLx5... The placeholder in their search field even says \"Search or paste URL\" reply wmeredith 6 hours agoprevI started using Tidal earlier this year, simply because they pay artists more (it's still basically a pittance, but it's better.) If you share a song link using Tidal, it actually shares a landing page where the user can select from Tidal, Spotify, Apple Music, or Amazon Music. It's really great. reply juliangmp 10 hours agoprevSlightly off topic but does any one of the music streaming services actually not suck? Like I tried a bunch of them but each one made me quit in it's own unique way! Am I alone on this? reply 4ad 6 hours agoparentIt would help if you specified exactly what you didn't like about them. I use Apple Music, I use it because it's lossless and it's integrated in the Apple ecosystem. The UX of the actual Music app is... not great, but tolerable, better than the iTunes before it. I listen to some pretty obscure stuff and I don't think I ever found something missing on it. YMMV. reply legohead 1 hour agorootparentWell I can tell you as a Spotify user that their random play is horrible. It's not truly random, which is extremely frustrating when you have 1000+ playlist and keep hearing the same 10 songs over and over. Here's an ongoing 150+ page, 4 years old thread about it on their forums: https://community.spotify.com/t5/Live-Ideas/All-Platforms-Op... reply WorldMaker 12 minutes agorootparentThe silly trick I found is to use Apple's Smart Playlists to help. I've been creating playlists like \"Not heard since Jan 1, 2023\". Songs drop out after they are played in a shuffle. reply tailspin2019 9 hours agoparentprevYou are not alone reply pjmlp 7 hours agoprevMe neither, still buying CDs and MP3, making my own playlists, with music that will outlast me. reply Kudos 19 hours agoprevI built something very similar the last time I got laid off and needed something to do https://github.com/kudos/combine.fm reply dailykoder 11 hours agoprevHuh, that looks very interesting. A friend of mine made a streaming service back in the day where you could paste in youtube links, they got downloaded, added to a playlist and then you could listen to that together with friends on multiple computers. I always wanted to rebuild that and adjust to my needs. Now this convert thing from the OP seems to be an interesting extension to that. Just paste in spotify links, grab the YT one, yt-dlp it and there you go. Ill put this in my favorites, thanks! reply bdhcuidbebe 11 hours agoparentThe hoops to go through to have a ”legal” napster. Also not sure yt-dlp is any more legal than just downloading mp3s. reply dailykoder 11 hours agorootparentObviously it's all just a dream in a fantasy world. And even in that fantasy world it would be for friends only, not anything commercial. Edit: also we don't use mp3, we use free (tm) opus! (as in just yt-dlp -x ) reply cglong 19 hours agoprevThank you for the submission! Should this be a Show HN? https://news.ycombinator.com/showhn.html reply moffkalast 26 minutes agoprevI've never taken Spotify or any other music streaming service seriously. They are a joke for the same reason Netflix is, they only play limited licensed content so their selection inevitably drops and drops until everything you search ends with zero results. Obscure indie artists? Forget it. Add average 4G reliability to that and you have a service that never has what you need, and if they do it never works when you need it (e.g. long car rides in the middle of nowhere). And then they expect you to pay for it or listen to ads too. Nothing beats a good ol' folder of mp3s. And 128GB of the average phone can store many an mp3. reply joshdavham 14 hours agoprevNice work! It got me thinking how useful something like an \"I don't have instagram\" app would be. Unfortunately I suspect it would be impossible to implement. reply Kwpolska 12 hours agoparentFinding equivalent content elsewhere is probably not going to happen. The best the service could do is show you Instagram content without requiring an Instagram account. reply mfkp 18 hours agoprevA similar service that I use frequently to generate song.link URLs for sharing: https://odesli.co/ reply volteret4 8 hours agoparentThanks for this, I used an automated script to create a post with links on my gh . This looks great, ty reply bean-weevil 18 hours agoprevIt would be fantastic if this site were a pwa that supported the chrome api [1] that lets you share directly to it on android. I would make a pr but my company owns all my ip and getting an exception takes months :( 1: https://chodounsky.com/2019/03/24/progressive-web-applicatio... reply lmm 18 hours agoparentThey probably don't, especially if you're in California. Employers love to intimidate with unenforceable terms in contracts. reply amluto 17 hours agorootparentIn CA, the contracts often say something obnoxious to the effect of “we own all your IP except for the IP that the law says we don’t own.” reply bean-weevil 17 hours agorootparentprevUnfortunately I live in Texas. reply seb1204 15 hours agorootparentMaybe your wife can make the pull request? reply kyleee 14 hours agorootparentOr your dog reply gkoberger 18 hours agoparentprevI know it's a tough job market, but that's unacceptable! They won't change, but you shouldn't put up with that. reply bean-weevil 17 hours agorootparentI'm not done trying to convince them. They're small enough that I think I have a legitimate chance. reply vunderba 17 hours agoparentprevWon't help you now OP, but I've always negotiated an IP carve-out for any product(s) that I develop that: A. Are developed with my own hardware B. Are developed outside of hours of employment C. Are not designed to compete with existing company products Every place I've worked with was amenable to these terms, but I always make sure to get it IN WRITING. reply JoshTriplett 15 hours agorootparent> Every place I've worked with was amenable to these terms What is the largest company you've successfully gotten to agree to these terms? reply toast0 7 hours agorootparentIt's got to be easiee for a larger company to agree to. What would you be inspired to make that doesn't compete with an existing product if you work at big tech? It feels like they have products in all spaces. reply JoshTriplett 3 hours agorootparentLarge companies tend to have very conservative legal departments, and be less supportive of exceptions and more willing to just not hire someone who has requirements outside their perceived norm. The question would be whether the company has ever established an exception path, typically by having a high-level hiring manager insist and running it up the chain. reply bean-weevil 17 hours agorootparentprevI knew about this ahead of time. I was kinda going through it mentally at the time and I didn't have the energy to negotiate. reply gambiting 9 hours agorootparentprevI had that in my contract when I started in the games industry, it was made very clear to me that if I don't like the terms there are 500 other juniors willing to take my spot. Not excusing it, I'm just saying that sometimes you're not in a position to negotiate this if you really want the job(and I really wanted the job at the time, we can argue whether that was the right thing to do or not but the fact remains). reply kristofferR 1 hour agoparentprevJust create an anonymous new GitHub user, it's like jaywalking. They'll never know. reply netsharc 17 hours agoparentprevYour cat wrote this pull request? It must be a genius cat! reply bean-weevil 17 hours agorootparentThis is the strategy most of my coworkers take. On principle, I'm just not willing to lie to a project and tell them I have the right to contribute my work under their license. reply itishappy 18 hours agoparentprev... don't do it at work? If your company owns your free time as well, you've fucked up and should talk to HR. reply bean-weevil 17 hours agorootparentYou're correct, I signed a contract that says they own my free time. I didn't exactly want to, and I firmly believe it's wrong. Nevertheless, it's easy to say I fucked up when you don't know my exact situation. This is my first job and there are a lot of other benefits that made it the best option for me personally, even when there were alternatives that had no such clause. reply itishappy 4 hours agorootparentThat's fair, I don't know your situation, and my tone was overboard. I don't mean it as a criticism of your actions as much as a warning for others not to do the same without good reason. reply bluGill 4 hours agorootparentprevDoes that mean if you do something semi-illegal or immoral on your freetime they put their name on it? Start doing work on decrypting media (legal if the content is out of copyright, but good luck finding such a thing), porn (again, legal but many won't like it and you can find weird stuff that is even less liked while still legal), or something else that might technically be legal but they don't want their name associated with. reply recursive 18 hours agoparentprevWTF I've never heard of this. I hope you're getting compensated well. reply bean-weevil 17 hours agorootparentUnfortunately it's not uncommon here. reply ibz 11 hours agoprevI don't have Spotify, I have Navidrome. Self-hosted on a cheap old mini PC. reply _jcrossley 2 hours agoprevI built a proof of concept for a VC-scale app, and something like this is one of the core features. I applied to YC S24 and didn't get an interview (SUPER understandably). If anyone wants to hear details, shoot me an email (in bio); this project's vaporware until I find the right partner. reply sjdonado 20 hours agoprevIt has a Raycast extension too https://www.raycast.com/sjdonado/idonthavespotify reply somishere 6 hours agoprevBring back echo nest's Rosetta stone. https://musicmachinery.com/2010/02/10/introducing-project-ro... reply doubleorseven 8 hours agoprevThis is great. I don't have spotify but everyone i know has spotify. I wish I could just share the spotify link to a WPA app using the Web Share API and have it share back the url for my preffered music streaming app. I guess I can ask claude to do it for me and use the code here for the UI, but I can't find the license file reply notyourwork 2 hours agoprevNo support for Amazon Music is a bummer. reply Touche 17 hours agoprevI'm still mad that they killed Rdio because Spotify was \"free\". Will never use it. reply toomuchtodo 18 hours agoprevIs there a DOI equivalent for identifying music tracks? reply rajbot 18 hours agoparenthttps://musicbrainz.org/doc/MusicBrainz_Identifier > One of MusicBrainz' aims is to be the universal lingua franca for music by providing a reliable and unambiguous form of music identification; this music identification is performed through the use of MusicBrainz Identifiers (MBIDs). reply toomuchtodo 15 hours agorootparentA damn shame they want $5k for mbid.org reply volteret4 8 hours agorootparentCould you tell me who? I love MBID but didnt read about that. Thanks in advance reply toomuchtodo 1 hour agorootparentWhomever has listed it at GoDaddy when you land on the domain in a browser. https://www.godaddy.com/forsale/mbid.org reply welpo 18 hours agoparentprevYes, the International Standard Recording Code (ISRC): https://en.wikipedia.org/wiki/International_Standard_Recordi... I don't know how to look up music with a known ISRC, though. reply cxr 4 hours agoparentprevThe DOI equivalent for audio and video is also DOI. Good luck getting the industry to use them. reply seanvelasco 9 hours agoprevthis feels more like an art piece or statement, not an actual tool what if i have a youtube link and i want to stream on spotify? what if i have an apple music link but want to play it on a linux device where only spotify works? it's more likely that you discovered a song on youtube and wanted to add it to your spotify playlist, rather than browsing spotify and then deciding to listen on another platform. someone should make a service like this, but make it universal for all platforms. however, i found the ability of matching a spotify artist profile to the artist's platform profiles impressive. reply nobody9999 7 hours agoparent>a linux device where only spotify works? Huh? What linux device might only have access to spotify? Pretty much every Linux distribution (with the possible exception of Linux From Scratch[0]) has multiple local apps to play music, both from the command line and via a gui in their standard package repositories. Not to mention dozens of sites (if you can get to spotify you can get to them) that perform the same function. Please do explain, as I'm pretty confused. [0] https://www.linuxfromscratch.org/ reply seanvelasco 6 hours agorootparentapologies, i meant i only have a linux device with only spotify installed, because it's the thing i use. no, i'm not talking about music players, only streaming services. you're completely right other services and software are available on linux. but the point i'm trying to make is, this tool is spotify -> others, but a common use-case is others -> spotify. reply higgins 11 hours agoprevI run an ios shortcut to do the conversion when a friend messages a spotify link: https://x.com/justinprojects/status/1708184379326144925?s=46 reply dsalaj 10 hours agoprevThis failed completely after trying to search for songs that don't have a unique name. This seemingly just does a basic string search on other streaming platforms. Sad... reply impalallama 2 hours agoprevno tidal support yet but looks very useful for one off uses reply nipperkinfeet 18 hours agoprevFor me, it didn't work. The artists and tracks on almost all of the tracks I pasted were incorrect. I suppose it would only be compatible with mainstream music. reply justmarc 8 hours agoprevHear, hear! To more inclusive projects like this one. reply mbesto 16 hours agoprevYou can create an iOS shortcut to convert Spotify to Apple Music as well. This is how my gf and I share (she has apple music and I have spotify) reply xyst 17 hours agoprevSwitch out alternative streaming services with torrent links or alternatives ways to listen to the content. And you would actually have something here. reply excalibur 19 hours agoprevNot seeing Pandora, apparently 46 million people still use that as of 2023 reply pcmaffey 18 hours agoparentHighly recommend Hermes with a free Pandora account (Mac desktop app, no ads), if you just want to set a station and listen for hours. https://github.com/HermesApp/Hermes reply ProllyInfamous 18 hours agorootparentThanks for the Hermes.app recommendation... Even as a paying Pandora member I plan to use this (over their website). reply alpinisme 18 hours agoparentprev46 million active users or 46 million accounts created? reply zxexz 18 hours agorootparentI’d believe either, though the latter feels tiny. Pandora is still better than any of the others listed for discovering new music, IMO. Spotify always seems too conservative with its suggestions, making it worse for discovering new music. Subjective, of course. reply jollyllama 1 hour agorootparentPandora is also way more trainable. You can train that recommender with your thumbs up/down, and it's been like that for 15 years. reply ProfessorLayton 18 hours agorootparentprevI don't think it's subjective. Royalties aren't paid equally, and considering Spotify is partly owned by the record labels themselves, it makes sense to steer listeners. reply dafelst 18 hours agorootparentprevI agree, I feel like Pandora recommendations are far better than Spotify ones, at least for me. Spotify keeps me in my bubble, Pandora is constantly expanding it. reply dankwizard 18 hours agorootparentprevIt is tiny - It's US only. reply chiefalchemist 18 hours agorootparentprevI haven't tried Pandora lately but Spotify is horrible for suggestions. My goto remains BBC 6 Radio Music. reply samelawrence 14 hours agoprevBandcamp + iTunes Match is the sauce for folks in the Apple ecosystem. reply mfkp 18 hours agoprevDoesn't appear to work for Youtube Music links... \"Something went wrong, please try again later\" reply bni 10 hours agoprevThe EU should mandate that this gatekeeper (Spotify) make their links interoperable with other music streaming services. reply rsynnott 7 hours agoparentThe minimum financials for consideration as a gatekeeper for the DMA are 75bn EUR market cap, or 7.5bn EUR turnover (in Europe). In the last week, Shopify's market cap exceeded 75bn EUR for the first time. So, y'know, might be coming. reply kristofferR 1 hour agoparentprevhttps://dtinit.org/blog/2024/08/27/DTI-members-new-music-too... Apple, Google and Meta are Data Transfer Initiative members. I hope Spotify joins soon. reply throwoutway 16 hours agoprevI should create something simlar for Apple Music links I like this idea reply joemi 12 hours agoparentThis works with Apple Music links too. From the site: \"Paste a link from Spotify, YouTube Music, Apple Music, Deezer or SoundCloud to start.\" reply _DeadFred_ 17 hours agoprevNow that the app algorithms are horrible can we all go back to something like last.fm so I can discover new music? reply cxr 4 hours agoparentLet's go back to the word \"algorithm\" being used for what it actually means, instead of the opposite—like the way it's used here and in every article about social media written in the last 7 years. reply sph 7 hours agoparentprevThe real reason why last.fm lost to Spotify: https://www.youtube.com/watch?v=ZR8az1UMOiQ reply conradfr 9 hours agoparentprevYou need to use webradios, there's lot of them. But you can't skip to the next tune so you need to skip to the next webradio instead ;) reply adrianmsmith 6 hours agoparentprevlast.fm is still there and you can still use it to discover new music! reply pbiggar 15 hours agoprevLove it! Even since Spotify CEO Daniel Ek's investment company invested $100m into weapons tech, we've been looking at how to move off his platform. https://inthesetimes.com/article/spotify-military-industrial... reply Kiro 12 hours agoparentHelsing is currently helping Ukraine. It's easy to say \"military bad\" when you're in the US, but for Daniel Ek it's about self-preservation. As a fellow Scandinavian, I fully support him investing in defense tech. reply pbiggar 3 hours agorootparentIt has shareholders which benefit from killing people, and who benefit more from war proliferating. How do you think that turns out in the long run? How has it turned out for Ukraine? War companies sell war, and they sell it to evil people (see Israel's apartheid and genocide in Gaza). The privatization of war is bad for everybody. reply Razengan 7 hours agoprevMe neither, never used Spotify. I do use Apple Music, YouTube and SoundCloud though. reply tommygpt 18 hours agoprevInteresting Sjdonado reply grahamj 17 hours agoprevThis is great, thanks! I left Spotify when they signed Rogan. reply imperialdrive 15 hours agoparentI don't follow. Is he anti music or something? Afaik he's on Apple, Amazon, and Youtube as well. Do you not use anything related to him? I'm honestly curious for some reason. reply bigstrat2003 34 minutes agorootparentSome people are intolerant and think that \"they allow someone who I disagree with\" is grounds to stop doing business with a service. It's a toxic attitude, but sadly common. reply rzzzt 12 hours agorootparentprevHis podcast was exclusively on Spotify for a while, for a measurable amount of money (the article is from February when that portion of the deal ended): https://variety.com/2024/digital/news/joe-rogan-renews-spoti... reply CalRobert 10 hours agorootparentprevPersonally, I don't like the idea of my money supporting people who oppose vaccination, among other things. reply AdmiralAsshat 15 hours agoprev> Tidal No No No Well I guess I'll just go fuck myself, then. reply sjdonado 11 hours agoparentthe tidal API was not publicly available last year. I tried it today and it seems it is no longer in beta, will get this adapter done soon! reply gertlex 13 hours agoprevThis is a bit off-topic, but: am I just dim or could the README be a bit more informative? What it's for, who it's for, etc. (I'll give partial blame to me or github for the About section/link being there... it's offscreen by the start of the README, so I missed it) (I also... don't use spotify... so had less-than-average context to guess the purpose of this project with.) reply spondyl 13 hours agoparentAnecdotally speaking, Spotify has become a sort of cultural default for a bunch of people. If you're in a DM or a group chat, you may not hear \"You should listen to X by Y\" but rather \"Check this out: https://open.spotify.com/blah\" At my current workplace and a previous one, both had Slack channels for sharing music and they were 99% Spotify links. Partly because of genuine Spotify usage but even not using Spotify at the time, I would find the Spotify equivalent for my own recommendations (to reduce friction for the majority so they'd be more likely to actually listen to the recommendation) Presumably for those few users not using Spotify, rather than having to find the equivalent song via text search, which may or may not contain a result for Provider Z, this service straight up just converts the Spotify link you've been given into all of the other provider equivalents. reply antonvs 1 hour agorootparent> for those few users not using Spotify That's quite the extrapolation from your anecdotal experience. Technically, it would be more accurate to say, \"for those few users using Spotify.\" What you've noticed is that Spotify has the biggest market share, but that doesn't mean that the number of users not using it are \"few\". According to https://explodingtopics.com/blog/music-streaming-stats, Spotify has a 30% market share. That implies that up to 70% of streaming music users aren't regular Spotify users. reply nextlevelwizard 12 hours agorootparentprevDo the spotify links not just open the song in some kind of web app if you dont have spotify installed? I always thought giving a straight link to the thing was better for all. If they had Spotify it would open there and without ads if they had the subscription and if they had neither it would still open the web app and let them listen to it with ads and stuff. reply WhyNotHugo 8 hours agorootparent> Do the spotify links not just open the song in some kind of web app if you dont have spotify installed? The page won't even load if you don't have the DRM plug-in installed. I don't think you can _listen_ to the song without an account anyway. reply Cthulhu_ 11 hours agorootparentprevYeah, the generated preview (depending on what application the link is shared in) can play a 30 second sample, but if you want to listen to the whole song you need to have an account, and if you don't have a subscription you'll likely get an ad first. It's why I often share a youtube link instead, it plays inline a lot of the time and when it plays inline it often doesn't have ads. But that may also be because I have an effective ad blocker (for now). reply fragmede 10 hours agorootparentprevThat was true in the past but it's no longer true. I don't know when it changed. reply Semaphor 9 hours agorootparentThat’s absolutely still true. I just disabled Spotify app link handling, and then Spotify opens in Firefox on my phone. And on Desktop it works the same way. edit: misread parts of grandparent. Yeah, the 30s previews are gone, didn’t even realize anyone used those. reply fragmede 9 hours agorootparentWhen I open a Spotify link as a webpage, I can't play that song unless I have an account. At some point in the past you didn't have to. reply jorvi 9 hours agorootparentYou always had to, in the past it gave a 30s preview. It still does that in Discord. reply terinjokes 6 hours agorootparentAt least for me in the Netherlands, for the past month if I click a link to a specific song, I get redirected to a page to start a radio based on the artist and encouraged to upgrade to Premium. I've had to get friends to share the titles manually, before I found Odesli to be able to convert them. reply jorvi 2 hours agorootparentRight, but before it just loaded the page of the album/playlist and told you to sign in to your account. It has never allowed you to play songs without a sign in. reply Semaphor 9 hours agorootparentprevI’m in a dedicated music discord, about 70% of links are Bandcamp, 20% Spotify, 10% Tidal. BC percentage could be higher, but good enough, most of the time it’s only for those weird bands that don’t sell on BC anyway ;) That said, I do miss Songwhip. It was a website where you could search for a release, and then generate all links for it, including streaming services and bandcamp. reply tschumacher 9 hours agorootparentI miss Songwhip as well. We used to have a bot in our music sharing Discord channel that looks for links to any streaming platform and convert them to Songwhip links via the Songwhip API. The good thing about Tidal is that, like Songwhip, it provides you with a list of links to various streaming platforms when you're not logged in. reply Semaphor 8 hours agorootparentWish it had been open sourced, it worked so well. Or even better, if Bandcamp offered an API, so sites likes SW wouldn’t need to (probably) scrape that information. > The good thing about Tidal Can’t confirm, it’s worse than spotify for me, as I get an unclosable modal that asks me to sign up or login. reply tschumacher 4 hours agorootparent> Can’t confirm Try this link https://tidal.com/browse/track/18835695/u, for me it shows a list of links to other services: https://imgur.com/a/MEsaIZw reply cjaackie 8 hours agorootparentprevIt was such a beautiful ui and ux , elegant really. It’s a shame yet I wonder how could it have been profitable. There’s really not a whole lot to monetize unless I’m missing something. reply tschumacher 4 hours agorootparentSongwhip allowed artists to claim and customize their page for a fee. Back then I looked into why Songwhip closed but couldn't find a definitive answer. I found a Reddit post where the original creator shared their site many years ago, so it looks like Songwhip started as a personal project. When it closed down though that decision was made by Sony. So it seems like the original creator got bought out by Sony and then Sony decided to close the service. Just speculation though. reply wintermutestwin 13 hours agorootparentprevApple Music = few users?? From what I could tell when choosing AM over Spotify, the latter has a lot of playlists for discovery and I would never use my streaming service for discovery as it encourages the service to promote music it is paid to promote. Of course AM is annoying too because 3 out of 5 navigation icons along the bottom of the UI are for discovery. But AM has Siri integration, which works some of the time… :-/ reply freetonik 12 hours agorootparentApple Music has been utterly awful on desktop for years, with virtually zero positive progress. I made this angry video [1] 4 years ago, and have tried using Apple Music multiple times since then, and it never failed to disappoint. 1. https://www.youtube.com/watch?v=gE8ZikfrpFU reply shiroiushi 11 hours agorootparentDoes Apple care though? It seems that Apple's main focus these days is on mobile \"lifestyle\" devices and services: iPhone, Siri, and Apple Music fits right into that. How many Apple users actually care about listening to AM on their desktop (presumably a Mac)? Of course, Apple still pushes its overpriced Macs, but the focus there seems to be on developers (for the more expensive stuff--big monitors, workstations, etc.) or people (probably corporate workers, developers, etc.) using MacBooks. In both cases, the focus seems to be on machines used for doing work. I'm just guessing, but I would guess that most MacOS users who want to listen to (Apple) music would do so on their personal device, i.e. their iPhone, rather than their MacOS device which is probably owned and managed by their employer. reply submeta 11 hours agorootparentprevYou are spot on. Apple does one thing very good: MacOS + Macs. But I don’t like Apple software. Too limited, too crippled, too unpredictable. And they don’t listen to users, you cannot reach out to someone and hope your feedback will change something. reply 71bw 8 hours agorootparentprevThe new \"Apple Music (Preview)\" app on Windows (exclusively 11 IIRC) absolutely destroys anything they had in the past. And anything they have on macOS right now. It is absolutely stellar, and yet another example of the weird \"let's make out apps on opposing systems better than our native ones\" trend. reply saagarjha 11 hours agorootparentprevOh my god you made this video? I have sent it to so many people to explain my feelings for it. Thank you so much for saying what I wanted to but so much better! reply freetonik 10 hours agorootparentYou're welcome. I made that channel with the intention of making more videos about other apps and products, but so far could only muster Apple Music :) reply xanderlewis 10 hours agorootparentprevThis is great. reply rumori 11 hours agorootparentprevI used to use Apple Music but when my Credit Card expired I missed two months payment and Apple happily deleted all of my playlists and library. I don’t think they realise how bad this is, but I will never use it or subscribe ever again. reply senpos 11 hours agorootparentI had to pause my subscription for a few months for personal reasons and my collection is gone too. This is crazy. Not sure how they expect anyone to keep using their service with such attitude. Perhaps it is a lock-in strategy: don’t leave or you lose months or even years of your music habits. At the same time, both Spotify and YouTube Music keep all the data to this day. One might argue that they free plans, so they have to keep it. And I would say “I don’t care”. If I can’t rely on your service to keep a list of songs - I am not using it. Damn, they could utilize my iCloud account. Or allow me to export a text file with that data, so I could import it back later. But no. No money - you are screwed. reply lcmatt 9 hours agorootparentprevI don't understand why AM doesn't use iCloud to store playlists. You have the storage anyway and a good chunk of people pay for an additional increase too. reply 42lux 11 hours agorootparentprevYou missed two months of payment and you are angry that a company closed the account? Boy do I have to tell you a story about what you can lose by not paying your AWS bill for two months… I am curious how you handle customers that do not pay and continue to not pay instead of just ending their subscription. reply oarsinsync 11 hours agorootparentI stopped paying for Spotify for 3 years, didn’t login for 2 of those years, came back and my playlists were all still there. My annual Apple Music subscription lapsed for one day, and my entire library was gone the next day when I resubscribed for another year. Apple are allowed to make whatever customer hostile choices they want. As a former Apple Music customer, I’m not making that mistake again. reply vbezhenar 11 hours agorootparentprevAWS has to pay a relatively big money for keeping user data. It is understandable why they would want to delete it. Playlists are basically zero cost to store. You would spend more $ on delete processing than keeping them around for eternity. So it's just not well thought use-case, implemented without attempt to view the whole picture. reply senpos 11 hours agorootparentprevWhat do you lose if you don’t pay to AWS for two months? My account is still there. I can still use it. I am pretty sure it has some historic data there as well. Probably my old lambdas are still laying around. reply piva00 11 hours agorootparentprevIn many places I worked we would keep a user's history on the app for a long while in case they decided to resubscribe. It doesn't cost much to have a 6-12 months leeway before complete deletion. Erasing a music app data after just a couple of months is idiotic, even more for a company with such deep pockets like Apple. reply kcrwfrd_ 13 hours agorootparentprevApple Music also integrates with your own music library, which is the killer feature for me. reply ano-ther 11 hours agorootparentBeware of the full integration though. It deleted the files I had from my CDs and replaced it with the Apple Music version. Some items now stay greyed out because they don’t have a license. And some versions got replaced (eg, to the remastered ones). reply dustincoates 13 hours agorootparentprevAs does YouTube Music reply cwillu 9 hours agorootparentI've had songs I uploaded later disappear due to their changing agreements with music providers. A google take-out contained the missing files so I was able to recover them, but I'll never again rely on such an integration. reply dustincoates 5 hours agorootparentCould it be hidden behind the \"Uploads\" section? I have a lot of songs that I've uploaded that aren't available on YouTube, but they don't show up unless you go out of your way to find them in their dedicated section. reply Kiro 12 hours agorootparentprevDoesn't Spotify as well? reply jeltz 10 hours agorootparentIt used to, but then they removed it. They might have re-added it since though. reply freetonik 12 hours agorootparentprevNot really. Spotify's \"add your music\" feature has always been an afterthought, it's clunky and inconvenient. It doesn't really store your files in Cloud, like Apple Music does; it just allows you to access local files per device. reply nobody9999 11 hours agorootparent>It doesn't really store your files in Cloud, like Apple Music does; it just allows you to access local files per device. Perhaps things have changed, but 10 or so years ago I \"uploaded\" my music to Spotify and it didn't actually upload anything, nor did it play my local music. Rather, spotify used whatever it had in its database with the same name/artist, which wasn't always the same recording or even the same song. And then there were the ads. No thanks. I have my own library of more than 22,000 tracks and use Winamp, Jellyfin and VLC to play them wherever I happen to be. No muss, no fuss, and most importantly, no ads. reply freetanga 12 hours agorootparentprevI find the user experience of Apple Music to be subpar, and keeps pushing young genres in which I have zero interest. I use Cider on my desktop but mobile is still a challenge. reply theshrike79 12 hours agorootparentOn the other hand Spotify has literal porn on it along with Joe Rogan. reply shiroiushi 11 hours agorootparentThen it's easy to see why Spotify is so popular in America these days... reply adastra22 8 hours agorootparentprevHuh, ok. Thanks for explaining. I just don’t listen to music, full stop. Never used Spotify in my life, or any other streaming music service. Was really confused about all of this. reply bryanrasmussen 12 hours agorootparentprevSpotify doesn't require you to create an account to hear a song from what I recall, so why wouldn't someone send you a link? That's what the web is for. That said once you have heard it on Spotify, yeah you might want it on your service provider of choice so as to add it to whatever equivalent of playlists there are. reply SpotifyClosed 11 hours agorootparentThe previous comment was already absurdly america-centric. But with this response, the cake is taken. I have never been sent a spotify link, nor do people really over here, because you need an account. reply jeltz 11 hours agorootparentIsn't your comment also America centric? Spotify is huge in more countries than the US. reply bryanrasmussen 7 hours agorootparentprevsorry, it's been so long since I didn't have an account so I went and checked and I guess I was wrong they do require you to create a free account to hear the link you've been sent. You'd think my comment assuming you didn't need an account was already absurdly wrong but with your response the cake was taken, because I'm not from America either. reply spondyl 9 hours agorootparentprevIf you meant me, I live in New Zealand funnily enough. reply gloosx 11 hours agorootparentprevYou can just try any link in incognito mode to find out that is not true. Spotify is a walled garden reply grishka 10 hours agoparentprevThe readme also doesn't specify how to set up the development environment. I'd like to make a PR adding support for the two Russian streaming services most people here use, VKontakte and Yandex Music, and the code looks simple enough, but I have no idea how do I actually run it. It probably involves some npm commands? reply lewispollard 10 hours agorootparentLooks like a pretty standard npm-based application, so just clone the repo, run `npm install` and then `npm run dev` (see `package.json` scripts section for available commands to use with `npm run`) reply sweca 13 hours agoparentprevthe repository description sums it up already: Effortlessly convert Spotify links to your preferred streaming service reply emsixteen 11 hours agorootparentHonestly doesn't sum it up very well, given that it doesn't even mention that it's an extension. reply atoav 10 hours agoparentprevYeah, but as I musician they pay you next to nothing unless you're already on top anyways. I know touring musicians who can comfortably live from their physical record/merch sales who say they can basically ignore their spotify revenue since they earn more with their merch sales on one concert than they earn during a whole year of running on spotify. So if you care about your musicians consider seeking out other ways to get your records, e.g. bandcamp reply richrichardsson 10 hours agorootparent> as I musician they pay you next to nothing unless you're already on top anyways More like \"as a musician they pay you literally nothing for a song unless it receives 1000 streams/12 months\". This is total bullshit for small musicians. reply WhyNotHugo 8 hours agoparentprevThe project description on the right hand sidebar says a lot more: > Effortlessly convert Spotify links to your preferred streaming service reply gertlex 4 hours agorootparentThat's one sentence; it's a good sentence, but it's not a lot. Nothing about running it. And I already noted (in a very offhand way): > the About section/link being there... it's offscreen by the start of the README, so I missed it I think 10 years ago, that sidebar didn't exist on github, so I've got some old skimming habits I could modify... but I think the bar for READMEs should be higher. I was pleasantly surprised to see I wasn't alone in having too little info, though. This project is far far from being an outlier in this regards. 95% of ROS repos (robotics code packages) are worse :) reply tommygpt 18 hours agoprev [–] Let have some business done reply Consider applying for YC's W25 batch! Applications are open till Nov 12. GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The tool allows users to convert Spotify links to other streaming services, providing links to tracks on platforms like YouTube Music, Apple Music, Deezer, and SoundCloud.",
      "Users can get a quick audio preview if the link is from Spotify, enhancing the convenience of the service.",
      "The service can be accessed through a Web App or Raycast Extension, with contributions to the project welcomed via pull requests (PR)."
    ],
    "commentSummary": [
      "A GitHub user introduced a tool for transferring playlists between Spotify and other music platforms, sparking a discussion on the need for a universal music identifier akin to ISBN for books.",
      "Users shared their experiences with services like TuneMyMusic and Soundiiz, highlighting the challenges of transferring playlists due to the absence of a standardized system.",
      "The conversation also addressed the limitations of streaming services and emphasized the advantages of owning music files in the digital era."
    ],
    "points": 664,
    "commentCount": 338,
    "retryCount": 0,
    "time": 1731363037
  },
  {
    "id": 42110677,
    "title": "Improving Steam Client Stability on Linux",
    "originLink": "https://ttimo.typepad.com/blog/2024/11/the-steam-client-update-earlier-this-week-mentions-fixed-some-miscellaneous-common-crashes-in-the-linux-notes-which-i-wante.html",
    "originBody": "Just a moment...*{box-sizing:border-box;margin:0;padding:0}html{line-height:1.15;-webkit-text-size-adjust:100%;color:#313131;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}body{display:flex;flex-direction:column;height:100vh;min-height:100vh}.main-content{margin:8rem auto;max-width:60rem;padding-left:1.5rem}@media (width Enable JavaScript and cookies to continue(function(){window._cf_chl_opt={cvId: '3',cZone: \"ttimo.typepad.com\",cType: 'interactive',cRay: '8e18c62ebbb1627b',cH: 'OfCXpbDfMNopBBhxC0LAK9FPnWdP0QGRNKS_NcJlUH8-1731438123-1.2.1.1-cjPQ.blJPjjGhjMxYv4BDaW7pbmWB_62ZKmpJeN6Q_94c5Pdvgh5j638Dcn99qUe',cUPMDTk: \"\\/blog\\/2024\\/11\\/the-steam-client-update-earlier-this-week-mentions-fixed-some-miscellaneous-common-crashes-in-the-linux-notes-which-i-wante.html?__cf_chl_tk=OLuA.b4jJt1b0ugseVwsTzUVRkA_v93tqpuUATSATuA-1731438123-1.0.1.1-j5rKJPT92sf2RVx9fVroLAsAEa8HNxpPzSbBe7bDGag\",cFPWv: 'b',cITimeS: '1731438123',cTTimeMs: '1000',cMTimeMs: '390000',cTplC: 0,cTplV: 5,cTplB: 'cf',cK: \"\",fa: \"\\/blog\\/2024\\/11\\/the-steam-client-update-earlier-this-week-mentions-fixed-some-miscellaneous-common-crashes-in-the-linux-notes-which-i-wante.html?__cf_chl_f_tk=OLuA.b4jJt1b0ugseVwsTzUVRkA_v93tqpuUATSATuA-1731438123-1.0.1.1-j5rKJPT92sf2RVx9fVroLAsAEa8HNxpPzSbBe7bDGag\",md: \"XmtL.SOtk.gYL1nk20WAhnpRin9btKx.IoKy_l6cAyk-1731438123-1.2.1.1-5RP3AYxMXT4rficmrLLuSuRuH_zsmZjKOAeByl886tQookHHhpIcBP2yhfiPUldjEvdwReE0i9avUitW5x0IoNrXtWubu0jJz2_aN9y.3Hkie4tWK6RNucBNyj3gak9j1z9lroc7BYewT0mv4J0VmA8VBnBDDjUdxFLMKb4ZfQdihYM.XVXqtlPRfvksv_b92tUnQSO.OywDGtxxLYzUcyAtMwDpDYYFPSEWPnSFf_iSANWa7eS3Ym.Ezk_iRo0DOQ4uZf52hX0K_Lf7Hf0B35f2to3wOA7UqJ7q3Q5W1P.oNUv2w8TcgnFrIO3IyGsrW12.FTzhHPv9L3ekhtHG.naDxBbOKUsKhnXdcuBz8PpLeWrxlI30KToLWMGVKWXTz5YXbj_0fhjwpwIYDCXiYwkcqEdzJ9uGiPwH8A8iW6hVQsLdkFUr0yuKBGPaVXt.iycdw7gnZRwRpxr_Pxx3BXKO1EZLhcALwUDIzFRQVKTYnOIzCDLg6kA09XPDIKf.3MGCpAkoPVhlGATiR2pBxFnCc.nwlEW2uxirI8ge6DFYcF3YiT8NYNc6lmRPBxSTlsD8uzvZ8VtXX.N2JyfoQGTSvALTGG7ETiY6KgxruPBLtNSP3PxrPLO4gokfcnWs_KUz62qTb97gjuTQtEa4RPgqx9fbsj3zgrdB5ydyqaTbDI1uwHvMMW9kXR3naeU9.2khRQdxzKEgCtO8MAM0wuj19FNCaYoDBAeswdpUBpjkbReBNBhf5BqFS4VSTQkqybtg0iPDYhAFl.9wtx96Bc0kPj9hcQVuxbm.4tzgMakkiRxHjpkSv3YpSJf.55kqyDUShjAL3MC6D.CHGKlu7Ac_TZNCTioEZC9lh.3Ubq7hiImeW554Tgt3q0BccyJ_Zhth806HBOAHE5gmwCSviAqVXdDVukaRP4u29z3v8uxmNsfRMDV6kYuGRtq4b30c7_zQE7VUbzBXGgDEfu4C4Q6SOXRAmnguebFJPc6XxoLGLKd9u8.sEiRq9xojnlWH62nV8N9nXqob9kMDOuZZbKQ3fkkJtKRE1Ijb1JThTegHwUu0t4zUFiVHhMRzgxafX5WZdmrMPs3Oujo9oEPJc.UWQUpp3e7VL7R4rh.Af.5eF3YpukReWHLod14FRHYgRvfidopWjXqNG2dsmp1QQXIIGxmCeGsIxy1eXXRfbZzijX.gECJqMRLyJQ1htj3r9mKoB9lidmlp0mlJ0AP5xIluQ3yFtzM_OC.ljlaV3svGX_QZRJHSjnvqZvkFxOp0bp_wQBbTWvwGW3PQiP1JBJv3MV2PNaf_XBkIqhrjKvUvcDa29iPhWs2xEW8WRSmLZ94TV.aLEdlO499iVy52D8Th._e0nHEMs_9fezSZnK0p36fZqVfihKc_Rgin.gxQAc5vButQ1YdYYXDVl8dD98mZYdDuIOU9saXCFEmIv9cQyMpsZIKnn5XFI7lwkJ8VpgxDAyfvT0W2zgVmhlC8drLNpWhpCrYGdspmnzI.71NqeVYo8jRjB867xsMMd0rufKGZUD.WcEONmGAbm3sjJqR38tfYvmQjwdc40k24LQDZSPlJM70sQVF_Eq1EUvNKO9FPVivmZso45sWbeZITpGEYGWFPS9fGG.CtjdihEE8i0oDDk_fe6NUSBzUmPm6gs21DUkXlQMpFKRXZfViiOe9OV8_yf6PiM_DUo9tb6zoYsrKs0HEq7VwFw3.3EL6lmq62cWuViBiz._Ci49HscCY0RdRFrdVBRCi9cr8MkirckQDX.1UK18LZ1jLHC4oB9PubsZsHaV9_.UqluyScewc9tTA_lAgN_5kUa32rSUFF_GaGheyv_kQD1L5sMM2qhOIPoDbWrRo_mDx.IbG05bWyOqcxeDa.Yb8BZDiD26y.YIn9yEWJsf3gMFaFZDZBIMLC0CEVauAj1nH9dus7.eAIfoNtvvHBouNP1Lc38Rb.If1ghWpmy2JcXp4yw8YCSdEEgxGg3ItKMwT7YIavt7S4FLRLxR2qowYOLFnrXR5P3v5d4GTRKMzrvs3V68_zNb9FJ4RXmJQLMWiF0a1WdStuv2zf9EDUj69tj3JUR7XTNcbfVrhSbPvRFRkzMSWAtSNNsl1n3x_cREzV1kfgQns.x5A5NEiaX8ZubKVDzr2mGUnD7xyclCz7Ca9gCcjR5c2dv4aed3ffe04Txe6Cqg\",mdrd: \"JwFcwsrGNdoyKfA6mVWl8OqlKaO3NUOMeK80CKbfyqc-1731438123-1.2.1.1-GS7OTPi0gw4A0VJFH_ClwXRzUo3Z0SoW3TQZ2LE6lcSl_b_k5vimg3aYsNilsICrunDIsdN4hBjj9tv128hcOYC26p.xjVntSa9XD.D8PzqmuojJlwTm0HUQr1ishSZ.hlKzX3wUZF.UyLfsKdk6_rLicy5LTfxvyr3RSj1BfENnLNvKEeOnFAJozmLWakuj.wGg4sxjxuJUpY5CEaoHgsQEBQod1Uy6up..TVg0arUq8YCgL35uVS1px9szB_EACm1OuzzZlJk18Md06poC3E1euBJFUWl8LZmQbKPZSm0VYfCM1Q0S8DVleZwT9U61voYpWT88KF.J15F1FulU_IDtySr55luKHd04ELJPGlma2JuNdBemuS4NJjQA2.UWM4dx1iKUx_mpzntYcONWGUQfxsrVUmd4Izh8R_eZq.h7B7uwG0HSQX1sRrXEA_uogK.50.L6k3aEhFu7rT_UbkDj03T7fcU1APKY3SdHfWmyU3dnZtcD2BuRRia.5bZXLdBsx_5ewkEFGblDGIRbOQyAgXoM9pc4D_Nd2jrsgvZlURUak8lH5iJhe96dcK8Aa5dxtBuc6rFZ2Gq1t7ryp16K7Ot38p_xBuAPmsbmv98FQU0lBWaR8HI8v_sE5MOnFDWQ.X7PootFrECmEfkBBSX4GlSKpnCL5S.xDdUBWhYnBYGp7ogWvzIIGxlgmb6m2nC1P1WVY2IGmGCEjinJrzBXGtdcTm2LPtoq71w7FEK4jEPiSXz7IbzQ6lHe1sxKWXTR_GNrE3G3CyVsKFxaRxFr8VKvGVQu1WZF.vS4RuLycVAzhIJJzxtkjcyJ_5PhpYT2Rld3fNm9egklKJUla5yi6Wfz5QjAdW8HVFC.MmCU.xsQ.rHRU7zVe8AQwFVARgA7D0kXMBZT5GbfyGLOE6xMCLzTW_wNgsQVFwyliXUWfd5SMr8W3iSBakbWsYt8kro5KbmHhAdRyp_9quTzhHBfXreGTjV9FUKP2p8ap5.qWtQ8Uk15QotiPUTIQkaW6e_J2i5uFP1RlDmhPxWYPM0znoBO_lHo0uCzhp3TO2Ef81ctJ52ifXydQPMuRkgQMb7QOSwVWt6IT0Rzclfsg_Itj5IH0WNz_WP578EMLzkEybxnX.loR9jAirXOGYCowJpxvY_BWTI6FXEsPXG3a1VaQtYzd3X0XdWfWldS5pOn_b4.4XDEVfKsmNqOCjxKALMywqUYZgIjRpHa6LGFiiURWSGr0GoGrry7B.WE3wDlz6vT1t.ZXn_1SJBdVST.C1TyLg16tBVaoIfBbtgZD3pEsNIaW3hR.0y7UCnyA.1AYgS6wAveILeDvBgH2cMSCQVB8BBWJB3ASpffgFM1gw6CrtST.1OL_HeRlI_NW.xpq6PRNXhrtl2qelvl67nrFmjwBXaxKh1b422iaZ13N7cM28kG3NPajgJ.G6hxKkv9U37Co.hLBW_4KREGgc0BdzvQUvYDzkmJCPpRKI47TZfnuzstfvvQhqvx5tt5rZAAz_ylfQd_a2szXGqetZy6ejqbDblt1QL42IfazIGU9Uemdo2Fz7V6.WEGjL7hEl9tgB7jjBzxmY0TP6yfF4Y6.NbsMezpQddkFgwuakA0iJWt5JctHIrhoio_2lgEYnXJw84Ccp5olozzQoKTvfNOLaZiQ5S073KdPICipeR3bwMdCCaEo0IP0lC1CV5TaIrqTKpmu.NSf.mN4iEIr9ylVZKo3IRlx56fAJzw4H7eY1QmkUCkg0117Sq5uA4b84.GziM20Xd5L4.3xPR4QgM97Ot0dS5ano_Kk7.zzekOWrsO71vZ58PkM_jkDlw4LiokIhC6gfFsaRmRexyp0RKxzLbpR8n0GTpYulUzPmHFqVQ3HZMkHZl.JZVxYIicgV1zrfkQH2NWQRX73E6jwuM9mIQ81L2BAG6mxUgrkIjRg7IXq3oiwcBipea6jH_CDNZSKTEVJkhUVJiCvwYg57gPSQuQlRR4X08kVhdnxtY0iVOMOSJnkRhKxsHjw56sjJCijWEEBa8vJkuraACfRIpoITD9h1gPmyDOeidloKx0wWiBVcIcvP_UQWMe6e_7uBXW820LbmbOoGsETagdxtzG3Svq3V0SKbXMw_3TFi6Pz7eAk59Q6cKG4vIku31nq059BMG0BdW3.S7GVBDrllbqGAPY1_jYEB3_mtH_B3U52wQtbW5siOfTGjUYZVOwwF25WvSgn1e7.Bf09Up5zMAVOc97_phBAN7XcUTwmnZCyS2o4BOmwoJgc.9K0_oJAuixK5FYqgfcjjXVt7ndu0ZMogQWOG7mCXb7QS9krWjWlOSZeXcX0gsja7DuxpF9zjkcP6IAOKWpg2StF0dfMyjNp9zhO3JlkjhVeNcffXWksTBaUAc2Gk7dzRJdZbGKzSM\"};var cpo = document.createElement('script');cpo.src = '/cdn-cgi/challenge-platform/h/b/orchestrate/chl_page/v1?ray=8e18c62ebbb1627b';window._cf_chl_opt.cOgUHash = location.hash === '' && location.href.indexOf('#') !== -1 ? '#' : location.hash;window._cf_chl_opt.cOgUQuery = location.search === '' && location.href.slice(0, location.href.length - window._cf_chl_opt.cOgUHash.length).indexOf('?') !== -1 ? '?' : location.search;if (window.history && window.history.replaceState) {var ogU = location.pathname + window._cf_chl_opt.cOgUQuery + window._cf_chl_opt.cOgUHash;history.replaceState(null, null, \"\\/blog\\/2024\\/11\\/the-steam-client-update-earlier-this-week-mentions-fixed-some-miscellaneous-common-crashes-in-the-linux-notes-which-i-wante.html?__cf_chl_rt_tk=OLuA.b4jJt1b0ugseVwsTzUVRkA_v93tqpuUATSATuA-1731438123-1.0.1.1-j5rKJPT92sf2RVx9fVroLAsAEa8HNxpPzSbBe7bDGag\" + window._cf_chl_opt.cOgUHash);cpo.onload = function() {history.replaceState(null, null, ogU);}}document.getElementsByTagName('head')[0].appendChild(cpo);}());",
    "commentLink": "https://news.ycombinator.com/item?id=42110677",
    "commentBody": "Improving Steam Client Stability on Linux (ttimo.typepad.com)416 points by Venn1 21 hours agohidepastfavorite121 comments fweimer 20 hours agoWe've got patches under review: https://inbox.sourceware.org/libc-alpha/cover.1722193092.git... (triggered by https://issues.redhat.com/browse/RHEL-42410, a graphics stack stability issue that wasn't as visible in RHEL 9 for some reason) At least the first one (the getenv thread safety fix) will hopefully make it into glibc 2.41 and it should be quite safe to backport. It turns out that setenv is easier to handle because glibc already never frees environment strings. It's concurrent unsetenv that is rather tricky. Without some snapshot approach, getenv would return null pointers instead of environment variables values that are actually set. I don't want to introduce locking into getenv because getenv without setenv has been async-signal-safe for so long that it would likely break applications. The environ handling fixes are a bit more controversial because vfork+execve make it complicated to avoid memory leaks, but these further fixes are less important to the stability of the graphics stack. reply robocat 9 hours agoparentPerhaps related: \"Setenv Is Not Thread Safe and C Doesn't Want to Fix It\" (2023) -- https://www.evanjones.ca/setenv-is-not-thread-safe.html and HN comments regarding how rust was affected: https://news.ycombinator.com/item?id=38342642 Decades old footguns - aaargh! reply fweimer 30 minutes agorootparentFortunately, for glibc, the most controversial decision (setenv/unsetenv/clearenv leak) has been made decades ago. It does not look like something that can be changed, so it's actually fixable in the glibc context. But this puts pressure on other libcs to adopt essentially the same approach (even if they don't leak environment strings today), so that's not universally popular. reply sumtechguy 3 hours agorootparentprevThat has been around for a long time. I remember it in the early 2000s. > Decades old footguns - aaargh! Indeed... The tricky problem they have is wrapping it into some sort of lock could cause so many issues. Places that dont deadlock, suddenly could. Not a fun problem to solve. In practice it is usually not too bad as you are usually not changing your env vars much. But when you run into it, ugh. reply cryptonector 1 hour agorootparentprevSolaris/Illumos has a thread-safe setenv()/unsetenv()/putenv(). There is no reason not to have it be thread-safe, though it must leak (Solaris/Illumos retains the references to the deleted envs so as to fool memory debuggers into thinking they are still referenced and so quiet what would be essentially false positives). reply Asooka 18 hours agoparentprevWhat about using a linked list for variables added after the start of the process, which can be implemented atomically? Then once it gets \"too long\", a thread executing setenv could construct a new hashmap and replace the pointer to the old one with the pointer to the new one atomically, all without locking? To prevent two threads from rehashing at the same time, use an atomic flag for whether a thread is rehashing right now. That means if other threads call setenv in the meantime, the extra added variables would be appended to the list to be processed by a later setenv call (if one happens). That list could grow unbounded if enough threads call setenv quickly enough, but I think the simplicity of atomically swapping pointers might be worth it and setenv isn't called very frequently. reply fweimer 10 hours agorootparentPOSIX requires that the environment variables can be access as an array, through the environ variable. This array is expected to be used with POSIX interfaces such as posix_spawn and execve. If the array already has to exist, why not use it in getenv? A purely hash-based implementation is not possible because there is putenv, and some applications expect modifications of environ to be visible via getenv. reply sunshowers 18 hours agorootparentprevAs far as I'm concerned this is the only correct way to do it. I believe illumos does this, which is why its env functions are thread safe and have been for decades. reply jeffparsons 18 hours agorootparentprevI like this approach, because it lets everything Just Work without anyone outside of the implementation having to think about it at all, and only incurs meaningful overhead if you're doing something really silly, but crucially still won't break — it'll just be slightly slow. That feels like the right trade-off. reply electromech 19 hours agoprevThank you! I deeply appreciate that Steam works so well on Linux these days. I don't take for granted the hard work happening behind the scenes to make that a reality for us. reply BolexNOLA 19 hours agoparentI really hope they drop a full steam OS release again soon. I’d love to build a gaming tower around it. Might settle for bazzite but I’d like to do steam OS tbh reply anotherhue 18 hours agorootparentYou can run gamescope as your WM and have a steam-deck-like experience on your desktop, ideal for a living room. https://wiki.nixos.org/wiki/Steam#Gamescope_Compositor_/_%22... reply BolexNOLA 16 hours agorootparentI honestly don’t want to be tinkering all the time. The steamdeck is pretty much my limit for tinkering with gaming these days. Kids do that to you lol reply mgrandl 11 hours agorootparentBazzite is the answer. It’s basically out of the box SteamOS, just somehow even better. reply anotherhue 6 hours agorootparentAlso https://github.com/Jovian-Experiments/Jovian-NixOS reply BolexNOLA 5 hours agorootparentprevI imagine it is great but I just don’t want to have to troubleshoot my operating system, games, and hardware. It is probably reasonable to assume that a stable steam OS will be more consistent for me. Maybe I’m underestimating bazzite but in my experience regular Linux users (I have some experience but hardly an expert/daily user) underestimate how frequently one has to tinker with their OS’s. reply Andrex 4 hours agorootparentI use Linux every day and I never have to tinker with it, nor did it need any tinkering to install. An extremely tinker-free experience especially compared to modern Windows. I feel your anecdotes are at best outdated. Desktop Linux has come along way. reply BolexNOLA 4 hours agorootparentI get people bristle when someone says linux has a little friction, but as someone who does use Elementary and Mint from time to time I just don't get how people can say my view is \"outdated\" when all one has to do is pick up a console or Mac to see the difference. How many times have we seen folks troubleshooting wifi card drivers on forums? It is not some massive gap, using Linux is not some herculean feat, but surely we can agree that most people would never call it plug and play. Linux is a great experience these days but you do have to tinker sometimes. You have to mess with drivers and settings and command line. It may be minimal for people comfortable with computers but it's not as friction-less as you're claiming. reply freedomben 3 hours agorootparentI think you're both kind of wrong and right on this. Contemporary linux distributions really don't require tinkering anymore for most cases, yet it's also true that sometimes there is tinkering required. The reason why this is true, yet I don't blame Linux for it, is because it is hardware dependent. If you buy hardware that is compatible with Linux, then you won't really have to tinker (at least, any more than you would with any other OS, for example, tweaking resolutions, etc). Unfortunately, it's newer hardware that typically requires the tinkering. If you don't want to tinker, I would recommend going with generation n -1 or even n -2. If you go with the latest and greatest, expect to have some tinkering required. Distro choice does of course matter a great deal. I've been using Fedora as primary OS now for many years and absolutely love it, and it's what I recommend to most people. Ubuntu and derivatives are good of course, though the older kernels do often decrement the generation of hardware. For example, Fedora on n-1 is going to be pretty good. Ubuntu might still lack some support at that age, so should go with n-2 or n-3 to be safe. reply BolexNOLA 1 hour agorootparentThe plan is to build a modern PC and the fact that people have to adjust their hardware decisions in such a way (downgrading/using older components) to accommodate linux kind of reiterates my point IMO. If I was installing windows this wouldn’t remotely be a consideration. Though I certainly don’t want windows, it is a notable difference. reply talldayo 48 minutes agorootparentAs someone that has gamed an equal amount on Windows 10 and Linux, I think you're blowing things a little out of proportion. Windows is a tinker timesink too if you want to uninstall Candy Crush and Xbox Game Bar, disable all telemetry and ads, or even just get a good version of Java installed for Minecraft. Windows can \"just work\" for some games, but for others it's a nightmare to get running. Another good example is the Fallout games, which have a decades-old bug that crashes the game if you alt-tab away from it. On WINE this bug can be fixed by simply running the game fullscreen in a virtual window. The flexibility is excellent and saves me from trying to inject a DLL file just to get proper borderless fullscreen to work the way it should. My big takeaway is this; if you are comfortable using the Steam Deck to play games and install software, you will not struggle to get Linux to run games. Pretty much anything that isn't a gaming laptop is going to have some form of support, and even the famously crappy Nvidia drivers were recently updated to support Wayland and other new Linux protocols. Now more than ever before, using Linux to game is probably easier than getting the equivalent experience on Windows. reply tapoxi 4 hours agorootparentprevBazzite is atomic and image-based, so it is designed to play your games out-of-the-box without any additional configuration, and instead of package updates you are pulling the new image that's built and tested by Bazzite. From a design perspective it's extremely similar to SteamOS. reply superkuh 3 hours agorootparentSo it works until it doesn't (because your hardware is not their test hardware) then there's no way to debug or fix things. reply mrj 3 hours agorootparentprevYeah same. I didn't want to install all of those i386 library versions either. But I've found the flatpak steam client to be wonderfully easy and maintenance free, which let's me use my computer for other things, too. https://flathub.org/apps/com.valvesoftware.Steam reply pnw 18 hours agorootparentprevI thought Valve already said they don't plan to do that. Steam OS 3.0 is only for the Steam Deck isn't it? From https://repo.steampowered.com/steamos/README.txt SteamOS version 1 'alchemist' and version 2 'brewmaster' have been discontinued. No further updates are planned. The SteamOS 'clockwerk' prototype has also been discontinued and will not be released. reply bsimpson 14 hours agorootparentThe link you referenced just says that the Debian packages are irrelevant to the current codebase, as used on the Steam Deck. It doesn't say anything about the Steam Deck being the only hardware that will ever run it. Some of the recent SteamOS release notes have included references to Asus's handheld, which has reinforced the community expectation that it will eventually be available as a distribution you can install on 3rd party hardware. If you go read interviews from Valve employees (Lawrence Yang comes to mind), I believe they've publicly stated that after the OLED shipped, they wanted to start focusing on porting to other devices. reply jorvi 9 hours agorootparent> If you go read interviews from Valve employees (Lawrence Yang comes to mind), I believe they've publicly stated that after the OLED shipped, they wanted to start focusing on porting to other devices. If so, it is kind of bizarre they haven't reached out to the Bazzite maintainers at all. In general, it seems like it would save them a tonne of effort if they'd switch from a bespoke Arch-immutable spin to making a spin of Silverblue, something that has been meant to be immutable from the beginning. reply bsimpson 5 hours agorootparentIs it? They already have a system that works exactly how they want it. They already rebased from Debian to Arch to get it there. They have enough Linux staff on contract to build and maintain that system. Maybe Bazzite is closer to their goals; maybe it's not. It's certainly not a slam dunk that the best thing they could do is throw away the thing they've been building for years to join a community project on GitHub that's trying to clone that thing. reply marcthe12 4 hours agorootparentprevUpstream Kde is now making an arch based immutable distro too. As steamOS is already using kde and arch, maybe once the kde distro is release, steam will rebase on that instead. Also Valve is now funding Archlinux so they are commited to arch. reply ensignavenger 15 hours agorootparentprevThe last I heard, they said they were planning to do it, for example, this article: https://9to5linux.com/valve-says-steamos-3-0-will-be-availab... But I haven't heard anything one way or the other in a while. But as it stands, they have stated that they plan to do a general release. Unless there is another source where they say they changed their mind? reply CivBase 16 hours agorootparentprevLast I heard they were still working on a general desktop release but it's slow going, largely due to Nvidia support. reply nar001 10 hours agorootparentOr not supporting them rather? Do you have a link somewhere they talk about it? reply BolexNOLA 16 hours agorootparentprevThey’ve been pretty quiet about it yeah but last I saw there was some plan to do it some day reply tombert 13 hours agorootparentprevFor what it’s worth, I have had pretty good luck with Jovian for NixOS. My primary game console is a little gaming PC running it, I like it. reply hypercube33 17 hours agorootparentprevChimeraOS is a clone or fork or something of SteamOS. Works great on AMD tiny PC hardware. can't really comment past that. I found the keyboard and mouse setup kinda jarring and just threw windows back on...for now. reply bsimpson 14 hours agorootparentAs noted in a sibling comment, Valve has released an open-source compositor (`gamescope`), which is what presents Steam as a console-esque UI on the Steam Deck. Using gamescope to present Steam, you can make an arbitrary Linux feel indistinguishable from a Deck. There are many gaming distributions (e.g. Bazzite, Jovian/NixOS, Nobara, Chimera…) that take this approach. They're usually just standard desktop distributions (Fedora or NixOS) with gaming packages configured. There is a Russian teenager who's trying to cobble together a SteamOS clone using as many Valve packages as possible. His project is called HoloISO. reply jorvi 9 hours agorootparentYou're talking about Big Picture, which has been a thing for.. 8 years? Maybe 10? The compositor is what runs two layers down, under the window manager. reply izacus 8 hours agorootparentNo, he's talking about the compositor which has several gaming related features which then runs the Big Picture version of Steam for UI to select and manage games. reply entropicdrifter 1 hour agorootparentThey're right that the compositor is gamescope, it's made by Valve and it has game-related features, but the person 3 comment-levels above me did seem to be conflating gamescope with the Big Picture UI. You can absolutely use gamescope and not use Big Picture mode at all, lots of people using Wayland do so by wrapping their games in a call to gamescope. reply eek2121 7 hours agorootparentprevSame. I have been toying with an idea that I want to turn into a business. I know there are 3rd party attempts to replicate Valve’s stuff, but I would rather use something sanctioned by Valve. reply eloisant 6 hours agorootparentprevWhat do you want from a generic SteamOS that Bazzite doesn't have? reply lordofgibbons 18 hours agorootparentprevWhat would that get you over any other distro with the steam software installed? reply zamadatix 16 hours agorootparentThere's a lot more to SteamOS than \"it ran `apt install steam -y` for you\". Even just having things like Gamescope running out of the box (which is more than just `apt install gamescope`) is a huge amount of headache set aside. Plus the guarantee when it doesn't work it's because of a bug rather than something you did or some incompatibility with your exact distro setup. reply eloisant 6 hours agorootparentBazzite has gamescope running out of the box, and other distributions probably have it too. It's also an immutable distribution, like SteamOS (except it's based on Fedora Silverblue instead of Arch) so there is no \"incompatibility with your exact distro setup\": you have the exact same distro setup as every single Bazzite user. reply zamadatix 51 minutes agorootparentYeah, Bazzite is probably the best alternative barring official support. It attempts to tackle most of the issues head on. reply akimbostrawman 11 hours agorootparentprev>guarantee when it doesn't work it's because of a bug rather than something you did or some incompatibility with your exact distro setup. Flatpak fixes this problem. You don't need gamescope unless for stuff like scaling. The only few times you need to fiddle with anything on desktop is changing proton version or adding a launch variable from protondb.com (just like on steamdeck) reply zamadatix 52 minutes agorootparentGamescope does a lot more than scaling. HDR, better framerate limiting, non-rgb gamut handling, isolating \"fullscreen\" games, shader effect loading, and probably more I'm forgetting. Flatpak let's you run the Steam app itself correctly, nothing more. These \"you only need to fiddle when\" are exactly what add up and create frustration between users on different systems just wanting to play a game instead of read a manual/guide to find which \"few tweaks\" they each need to do to get the same experience as SteamOS would give them. reply BolexNOLA 16 hours agorootparentprevYeah you get it lol I just want to play my damn games and not tinker all the damn time! reply BolexNOLA 16 hours agorootparentprevI like console gaming because it just works. I sit down on my couch, I turn on my controller, and I’m back in my game in under 10 seconds. The series S has honestly been a fantastic purchase for me despite the many drawbacks. PC gaming is very enticing but we all know that’s simply not how it goes down. I would love to build a PC that is literally just discord and Steam. I want to run it in big picture mode for the most part and treat it more or less like a console. I have really enjoyed my steam deck and it has fit that desired role pretty well. But obviously it is just not that powerful. It’s impressive for what it is, but for me it’s basically a great indie game machine with the occasional AAA option that is tolerable. A well-built machine with that kind of UX (minus the known idiosyncrasies of the deck) would be fantastic. To answer your question more directly: Most Linux distros do not offer this either. Bazzite is the closest I’ve seen. reply shortrounddev2 18 hours agorootparentprev1st party support reply vlovich123 14 hours agoprevIsn’t best practice to read all environment variables on boot and never use setenv? The only place where setenv would matter is for spawning new processes where you should probably be creating an new environ cloned from the current one and update the new values. Using getenv/setenv as an IPC messaging mechanism seems to be an opportunity for lots of issues aside from it historically not being multithreaded-safe on Linux and having all sorts of potential memory leaks hiding (which is what the post ignores when it says that it’s thread safe on MacOS). reply cryptonector 1 hour agoparentNo. Because you might end up using a library that calls getenv(). Java does what you say, but it still presents problems for JNI code using libraries that want to getenv(). reply bhawks 11 hours agoprevFWIW the decision to leak memory on Mac actually goes back ~26 years to FreeBSD - https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=5604 which OSX inherited. I would not be surprised that Windows setenv has BSD roots due to licensing. 26 years ago people knew this API was broken but didn't fix it due to inertia of breaking buggy programs further. There really shouldn't be a need to change your own process's envvars. For subprocesses just use the proper exec function. For anything else there should be a clear API to call rather than changing a global variable and hoping some code far away from yours rereads it and handles things correctly. reply o11c 20 hours agoprevThe real question is: is there any case where a program calls `setenv` in one thread and actually wants it to take effect in other already-existing threads? That said, GLIBC is pretty good at documenting all the dangerous functions, so it is possible to add locking/copying yourself. reply fweimer 19 hours agoparentInteresting idea. I strongly suspect that there are programs out there that expect that setenv changes the environ array (and they do not treat it as an opaque pointer passed to posix_spawn/execve). With a per-thread setenv, we would need a per-thread environ variable as well. Unfortunately, that's not really compatible with POSIX because environ is not declared in a header. Instead, programmers are expected to write a declaration extern char **environ; into their sources, and that declaration is incompatible with environ being a thread-local variable. reply o11c 17 hours agorootparentHm, in the end most of the problems do come down to stuff not coming from blessed headers. Regardless of anything else, how about: * deprecate direct access to `environ` and add functions to replace it. Have a macro that indicates this and provide a canonical compatibility shim for people to copy if they might use old libcs. * using linker magic, change the behavior of programs depending on whether they attempt to access `environ` or not, so old-API programs are still thread-unsafe but new ones are thread-safe. It's amazing how much you can do with the conditionally-linked object files from a static \"library\". Much of C's cross-TU \"UB, no diagnostic required\" is inexcusable since we can detect it quite easily with zero overhead (at least, for static linking) using today's linkers by deliberately causing multiple definition errors. Compatibility with old-ABI programs probably means fixing `environ` is not that simple, but you are libc and libc is in control of dynamic linking ... reply fweimer 33 minutes agorootparentMany years ago, glibc did something along those lines for the _res variable (with preprocessor magic instead of linker magic). For the main thread, legacy _res (the actual global data symbol) and new thread-local _res (actually *__res_state()) are the same object, but they diverge for subsequently created threads. I don't think this would work here because it likely changes semantics too much, and not all binaries that need a thread-safe getenv/setenv combination can be rebuilt, especially since compatibility with both variants from the binaries would likely some changes to each application/library. reply ptsneves 10 hours agorootparentprevAll the inconsistencies you suggest sound like a trap, especially when you suggest ABI and API behaviour divergences. From what I understood of your macro idea this would lead to API changes that would lead to ifdefs for different (g)libcurl versions. Doesn’t feel good especially for software distributors. Also the changes you mention require changes in the linker scripts distributed by a variety of toolchains and would need to check if the libc target was a blessed one. In effect the deprecation would never move to obsolete and kept around forever. To clarify the above post libc is in control of dynamic linking through the dl*(dlopen) family of functions. reply kelnos 16 hours agoparentprev> so it is possible to add locking/copying yourself. Not if third-party dependent libraries use getenv/setenv. (The article mentions this as a continuing problem with the steam client.) reply o11c 12 hours agorootparentAs a rule you should not assume third-party libraries are at all thread-safe. reply cryptonector 1 hour agoparentprevGlibc could crib from Illumos, which has a thread-safe putenv()/setenv()/unsetenv()/getenv(). reply Asooka 18 hours agoparentprevYes, I set up environment variables in a plugin that are later read by already started worker threads. It's not a problem for me because the worker threads are all sleeping on a runqueue, but technically I do want to set an env var in one thread and read it in another that is already running. reply INTPenis 10 hours agoprevThe mere existence of Steam is astounding to someone who grew up playing nethack and chess on Linux. But the Steam client is really strange. Sometimes it works for months, and suddenly a game won't start, or something doesn't work, and I have to do weird stuff to get it working like purging all files or reinstalling. It doesn't make sense, it's like the Steam client rots. reply VyseofArcadia 59 minutes agoparentIn my experience, all of those things are also true of Steam on Windows. In fact, if anything I have to deal with it less frequently since switching exclusively to Linux. reply sunaookami 6 hours agoparentprevSteam is one of the worst software, it's frankly embarassing for such a huge company. It's a hotchpotch of different design principles and new features only get tacked on with a very different UI + UX. The client is mostly webviews but they are so slow and buggy and they use a very old insecure Chromium version under the hood. The launcher is still a 32 bit program. It's sad that other launchers are even worse though. reply 0x457 32 minutes agorootparentIt seems like a lot of steam client issues come from weird desire to: 1) Keep it 32 bit 2) Have a single store-frontend At least, it came to a conclusion that it steam itself should be responsible for managing runtimes for games. reply tapoxi 3 hours agorootparentprevI checked and its using Chromium 126.0.6478.183 from July, which isn't that old. reply sunaookami 2 hours agorootparentIt's four versions behind the current one with a lot of CVEs. There seems to be an LTS 126 but it's only for ChromeOS - it's at least behind this one which fixed one critical and two High CVEs: https://chromereleases.googleblog.com/2024/11/long-term-supp... Even being only one version behind is dangerous for such a huge attack vector. reply josephcsible 18 hours agoprev> One of my colleagues rightly dubbed setenv \"the worst Linux API\". Is setenv really a Linux API, since it's neither defined by Linux (it's in POSIX) nor implemented by the Linux kernel (it's entirely in userspace)? reply amiga386 16 hours agoparentYes it is, if you program application software for Linux (and your other two supported platforms are Windows and macOS, as is the case for OP and their colleague who appear to work for Valve, supporting Steam) And the reason the colleague dubs it the worst has nothing to do with its specification in POSIX (which doesn't require the function to be thread-safe but also doesn't prevent it from being made thread-safe), but rather its specific implementation in glibc, which is the C library in use on all the Linux distributions that Valve support Steam on and all are equally dubbed as \"Linux\" reply WhyNotHugo 7 hours agoparentprevTechnically, this is a GNU libc limitation. A libc _could_ make this thread-safe. Languages like go just implement this feature internally and don't have this limitation. The limitation is contemplated in POSIX itself; from the posix documentation: > The setenv() function need not be thread-safe. reply deathanatos 1 hour agorootparentI think you get thread-safety and memory leaks (the article alludes to macOS taking this approach), or it's unsafe but doesn't leak. But that is inherent in the API, as specified by POSIX: setenv must necessarily either invalidate the pointer returned by getenv (which is cannot do safely) or leak it. Perhaps the leak is \"better\", in at least there won't be non-OOM crashes, but it still leaves a bad taste in one's mouth. For a long running program like Steam (that is for some odd reason calling setenv…?) … I'm not sure which is better. Better would be not calling setenv, which it sounds like they've worked on. reply WhyNotHugo 7 hours agoprevI'm really curious why they're using setenv(3) so much. The main usages that I can think of is setting an environment variable before calling something like exec(3). That doesn't seem to be the case here. The article mentions that they use exevpe for spawning children processes. So what usages of setenv(3) would remain? reply Tobu 6 hours agoparentIt is possible to check for setenv/unsetenv/putenv with nm -D, and a quick sample of my ~/.cargo/bin/* shows far too many programs using those. Yeah they could be single threaded, but who can guarantee they will remain so? Come to think of it listing symbols could detect pthread_create as well. I'd be interested in a way to do static binary analysis to get from those symbols to a call tree, as well. I don't see a way to check for **environ usage though, the compiler could turn this one into anything. reply accrual 15 hours agoprevThis is really cool insight into both the Steam client and Linux programming. I understand why there may not be detailed release notes every release, but wow \"Fixed some miscellaneous common crashes\" is an understatement when you know about this work! reply bhaney 21 hours agoprev> If this can be addressed in glibc, it may involve a tradeoff on features, maybe an opt-in mechanism with a slight departure from the \"impossible\" POSIX spec. That's something we may pursue in the long term if we can propose something sensible. Yes please reply thrdbndndn 12 hours agoprev> We removed the majority of setenv calls. It was mostly used when spawning processes Could someone elaborate this for a non-developer? Why would you use `setenv` (which I assume is functionally similar to `export key=value`, but correctly me if I'm wrong) (extensively) for spawning processes? reply fulafel 11 hours agoparentEnvironment variables are per-process, but inherited by child processes (not system wide). So when you start other programs you often set up env vars for them, or clear env vars that were used by your parent process to not inadvertantly perturb the child's behaviour. reply bhawks 11 hours agorootparentYes the proper way to do that is execve, not by changing global variables in your parent process. https://man7.org/linux/man-pages/man2/execve.2.html Using setenv is mostly always a hack that relies on a bunch of assumptions that could easily change and be hard to debug. reply ptsneves 11 hours agorootparentUnless there is a fork exec family of syscalls are not child processes but the same process itself. Small detail but important because sometimes you really want a separate process altogether. reply gpderetta 5 hours agorootparentin that case you do not need setenv to pass values to the underlying process though. And if you are forking without immediately execv in a multithreaded program, setenv is the last of your problems. edit: what's probably happening is that execve is four or five abstraction layers deeper (possibly in a third party dependency) than where the env variable need to be set without a clean way to pass the values through. reply fulafel 10 hours agorootparentprevThe likely scenarios I was thinking (setenv vs execve) would both be called in the child process after fork. But of course here we get to the fascinating world of fork interactions with threads, and you could even have one thread fork()ing while another thread is doing a setenv(). reply thrdbndndn 9 hours agorootparentprevRegardless of whether it's a hack, my broader question is: is it common in Linux to manipulate environment variables on the fly for a process or program? I primarily use Windows, both as an end-user and an amateur programmer. From my experience, most programs on Windows don’t do this. If parameters are needed, they’re usually passed as arguments, while environment variables are used for more permanent settings, like %PATH%. reply johannes1234321 8 hours agorootparentPATH is a good example why steam does this: Steam is a program to launch a wide variety of other programs, which it doesn't fully control. Those programs (games) may do anything including launching further programs (utilities), so steam may set PATH so that the game finds those utilities. It can also be a way to pass license information or other configuration settings. reply Tobu 6 hours agorootparentLooks like the Steam team moved to control spawning and do execvpe. I would like to see at least in-process environment modification discouraged. Rust is dealing with the issue by considering getenv unsafe when coming through C, but getting rid of the read side is much harder than the write side. reply jpk 7 hours agorootparentprevOne thing to note about command line arguments on Linux is, any user can typically inspect `/proc/{pid}/cmdline` and get the full command line used to start the process. So if you pass secrets like API keys, passwords, etc, via an argument, they're visible to the rest of the system. However, if you put secrets into the environment of the child process, only the user that owns the child process can inspect `/proc/{pid}/environ`. reply vbezhenar 6 hours agorootparenthttps://man7.org/linux/man-pages/man5/proc.5.html#DESCRIPTIO... One can use `hidepid` parameter when mounting procfs to hide cmdlines. I don't know why this is not implemented today by default in most distros. Probably history reasons. reply izacus 8 hours agorootparentprevYes, the fact that the original article exists shows that it's common :) reply russnes 5 hours agoprevI love the steam client on linux these days, especially the compatibility for non-steam games is so great and Ive been using it to play WoW Classic while I have covid reply apatheticonion 9 hours agoprevWould love an open source Steam client reply Pannoniae 19 hours agoprevTo raise awareness: there's been a bug with the Linux Steam client which has been persistent for a long time. TL;DR: if you have Steam running for more than a ~day or so, you will run out of window handles so you won't be able to open any new graphical application/window until you restart Steam. Using Steam Chat appears to make the issue worse (it happens earlier). This has been documented under https://github.com/ValveSoftware/steam-for-linux/issues/9094 but for some reason that issue has been closed. I personally just restart Steam every day but if someone else encounters this issue and doesn't know why their windows are not opening, this is why :) I am using KDE/Wayland but I've observed this under X11 too. reply LorenDB 19 hours agoparentKDE Wayland user here. I have never observed this issue myself, and I leave Steam running all the time (although I never open Steam Chat). reply snvzz 19 hours agorootparentAlthough, not albeit. You have a slave sentence there. These are incompatible with albeit. reply LorenDB 18 hours agorootparentThanks, fixed! \"Albeit\" seemed like it would work, but \"although\" indeed fits much better. reply soulofmischief 18 hours agorootparentTo put it another way, albeit shouldn't be used with independent clauses. 1. I leave Steam running all the time (although I never open Steam Chat). 2. I leave Steam running all the time (albeit never with Steam Chat). \"I never open Steam Chat\" can stand on its own as a sentence, but \"never with Steam Chat\" does not and thus can be appropriately modified with albeit. reply CoastalCoder 4 hours agorootparentprevI kinda wish HN allowed a visual indicator for subthreads that focus on tangents that don't hold universal appeal: comment grammar, humor, \"why did I get downvoted?\", etc. There are lots of little discussions like this that I'd love to have, but which sometimes lead to a lot of downvotes. reply k4rli 10 hours agoparentprevThis has made Steam something to avoid for me. I tried switching to Flatpak version to see if that would help, but unfortunately not. For me it started ~1 year ago. The performance issues have made me not want to even open Steam anymore so I have nearly completely stopped playing. (not related to this issue but several games have also added kernel anticheats, killing off Linux versions, which also has contributed to this) reply nazgulsenpai 19 hours agoparentprevVoid Linux, xorg and never has this issue, often going many days without rebooting with Steam constantly open. reply jandrese 14 hours agoparentprevInteresting. I've left the Steam client running for weeks at a time and have not seen that issue. I bet it was closed because Valve couldn't replicate the problem. reply GauntletWizard 18 hours agoparentprevI've got several Linux gaming machines (and a couple of business desktops I play FTL on sometimes), and it's weirdly inconsistent - the best and worst machine I have both use Intel Graphics. It almostnever shows up on the A770 - that one stays awake for weeks of daily gaming and I have no problems with it. My laptop with integrated Intel sees it all the time. My laptop with Nvidia graphics sees it often, but not nearly as often. The one that's so annoying that I've actually developed habits around it is the tendency for the library window to freeze when it becomes unfocused - it's not all the time, but it's often enough that I now habitually close the window anytime I defocus it reply DanielHB 9 hours agoprevI can't wait to ditch windows for my tower PC. reply nineteen999 17 hours agoprevThe stability is fine for me, but the rendering performance in the steam client when the mouse is in the window is abysmal. reply Vilian 14 hours agoparentNvidia? reply dpkirchner 1 hour agorootparentNvidia in my case, and I agree, the app performance is very poor. The easiest way to see the lag, IMO, is to open up the achievements list for a game and try to scroll around. It takes almost a second for mouse scroll wheel movements to have an effect. (Up to date mint, cinnamon) reply yxhuvud 14 hours agorootparentprevCould just be really old gnome installation and higher poll rate than normal. There used to be issues there.. reply Aeolun 13 hours agoprevMy only issue with Steam at this point is that it’ll just randomly complain it has no connection, no matter which content server I set it to connect to. If I spam the ‘retry’ button it’ll eventually work, but it’s a massive PITA. reply jeffbee 20 hours agoprevMaybe among the best decisions Java ever made was hiding setenv. You simply cannot set env vars in Java. reply mschuster91 19 hours agoparentJava in general tends to massively dislike environment variables. Which is a Good Thing, but unfortunately it makes dealing with proxy support so much harder - especially as there are just so damn many HTTP libraries that people use... reply aidenn0 18 hours agoparentprevSo does that also mean you can't write e.g. a POSIX shell in Java? reply asveikau 18 hours agorootparentexecve(2) and friends allow you to specify a new processes's environment variables. How Java may choose to expose that I don't know. Assuming they do, that is all a shell needs. You do not strictly need to call setenv(3) to change a variable that gets evaluated with $, etc. You do need to pass the modified environment to a child process. reply bhawks 18 hours agorootparentprev1) java shell starts 2) read getenv into a java hashmap 3) evaluate shell input - any sets update the hashmap, any gets read from the hashmap 4) when you get to a point where you need to exec a process you use the hashmap to pass envvars into process builder - which is going to call execvpe for you. So yeah you definitely could (there'd be other reasons why java wouldn't be a good choice). TBH reading that folks were calling setenv before an exec to propagate env vars to a child made me sad. I would guess that other use cases were leveraging environ as a poor man's global variable - which is also unfortunate. reply lmm 17 hours agorootparentprevYou can pass a new environment to a process you spawn, which I think is adequate? You just can't modify the environment of your existing process. reply shakna 18 hours agorootparentprevSystem.getenv exists, so getting is easy... But setting env vars generally involves a convoluted process. You can modify the JVM's buffer, or spawn a new ProcessBuilder, or a few other things. But it's a nasty place to be. reply MBCook 18 hours agorootparentOr make a little JNI class. reply shakna 17 hours agorootparentThat doesn't work for preserving to child threads, unfortunately. Which is something people expect. reply sunshowers 7 hours agorootparentprevThere are tons of reasons you can't write a POSIX shell in Java, starting from the lack of support for non-UTF-8 paths :) reply NotACracker 14 hours agoparentprevI admire your courage to say something positive about java. On another note, I believe Zig does the same thing. reply matheusmoreira 2 hours agoprevI wish they'd make it more virtualization friendly. I don't want to run untrustworthy proprietary software on my main system. Common sandboxing mechanisms are insufficient since Steam and its games need access to the entire device tree anyway. Nothing short of a real virtual machine would do it for me. Will also make compatibility painless since I can just install the Linux distribution they support. I shopped around for computer parts with complete IOMMU support just so I could map the discrete GPU to the virtual machine and achieve near native performance... Only to discover they are exceendingly hostile to users who do this VFIO stuff. Just yet another reminder not to \"buy\" games on these platforms, I guess. reply carlhjerpe 1 hour agoparent> I shopped around for computer parts with complete IOMMU support just so I could map the discrete GPU to the virtual machine and achieve near native performance... So just any standard/decent motherboard bought within the last 3-4 years? > I wish they'd make it more virtualization friendly. Which games do you have issues with when virtualizing? I've only been locked out of Halo Infinite and I enable all hyperv flags in libvirt. > Just yet another reminder not to \"buy\" games on these platforms, I guess. If you buy a game on Steam and you're unable to play it they'll refund you straight away, which is why everyone loves Valve and Steam even when the client is crappy. I couldn't be happier with my setup, which I assume is similar to yours. (2 GPUs) reply matheusmoreira 0 minutes agorootparent> So just any standard/decent motherboard bought within the last 3-4 years? It isn't at all obvious that IOMMU is supported by even current top of the line motherboards. I look at a lot of products and have yet to see the VT-d and AMD-Vi keywords mentioned in technical specifications. To confirm support I had to read their UEFI firmware manuals and look for instructions on toggling the virtualization support. https://pcpartpicker.com/forums/topic/466120-ecc-ram-and-iom... > Which games do you have issues with when virtualizing? From what I'm reading many games take virtualization as evidence of cheating and have no regard for false positives. It looks like any game with battleye or easy anti cheat is issuing permanent bans on virtualization detection. > If you buy a game on Steam and you're unable to play it they'll refund you straight away Somehow that doesn't bring me much peace of mind. reply snvzz 19 hours agoprev [–] Considering glibc's effort, I have to wonder what the other libc do, and whether they already implement something like this. reply Consider applying for YC's W25 batch! Applications are open till Nov 12. GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [],
    "commentSummary": [
      "Efforts are being made to enhance the stability of the Steam client on Linux, particularly addressing issues with environment variable handling in the GNU C Library (glibc).",
      "The primary challenge is to make the `setenv` function thread-safe without causing memory leaks or disrupting existing applications, with some patches currently under review.",
      "Users are sharing their experiences with Steam on Linux, highlighting both performance and stability issues, as well as the desire for a more console-like gaming experience."
    ],
    "points": 417,
    "commentCount": 121,
    "retryCount": 0,
    "time": 1731361297
  },
  {
    "id": 42113113,
    "title": "Leaving and Waving",
    "originLink": "https://deannadikeman.com/leaving-and-waving",
    "originBody": "Leaving and Waving For 27 years, I took photographs as I waved good-bye and drove away from visiting my parents at their home in Sioux City, Iowa. I started in 1991 with a quick snapshot, and I continued taking photographs with each departure. I never set out to make this series. I just took these photographs as a way to deal with the sadness of leaving. It gradually turned into our good-bye ritual. And it seemed natural to keep the camera busy, because I had been taking pictures every day while I was there. These photographs are part of a larger body of work I call Relative Moments, which has chronicled the lives of my parents and other relatives since 1986. When I discovered the series of accumulated “leaving and waving” photographs, I found a story about family, aging, and the sorrow of saying good-bye. In 2009, there is a photograph where my father is no longer there. He passed away a few days after his 91st birthday. My mother continued to wave good-bye to me. Her face became more forlorn with my departures. In 2017, my mother had to move to assisted living. For a few months, I photographed the good-byes from her apartment door. In October of 2017 she passed away. When I left after her funeral, I took one more photograph, of the empty driveway. For the first time in my life, no one was waving back at me. Exhibition at Charlotte Street Foundation La Esquina Gallery, Kansas City, MO August 2018 Leaving and waving, 7/1991 Leaving and waving, 6/1992 Leaving and waving, 7/1994 Leaving, 11/1995 Leaving, 12/1995 Leaving and waving, 5/1996 Leaving and waving, 7/1996 Leaving and waving, 9/1996 Leaving and waving, 12/1996 Leaving and waving, 6/1997 Leaving and waving, 12/1997 Leaving, 5/1998 Leaving and waving, 9/1998 Leaving and waving, 12/1998 Leaving and waving, 5/1999 Leaving and waving, 9/1999 Leaving and waving, 11/1999 Leaving, 12/1999 Leaving and waving, 4/2000 Leaving, 6/2000 Leaving, 10/2000 Leaving and waving, 12/2000 Leaving, 6/2001 Leaving and waving, 7/2001 Leaving and waving, 12/2001 Leaving and waving, 3/2002 Leaving and waving, 7/2002 Leaving and waving, 12/2002 Leaving and waving, 5/2003 Leaving and waving, 12/2003 Leaving and waving, 3/2004 Leaving, 4/2004 Leaving and waving, 8/2004 Leaving and waving, 12/2004 Leaving and waving, 3/2005 Leaving and waving, 6/2005 Leaving and waving, 12/2005 Leaving and waving, 3/2006 Leaving and waving, 6/2006 Leaving and waving, 8/2006 Leaving and waving, 12/2006 Leaving and waving, 3/2007 Leaving and waving, 6/2007 Leaving and waving, 8/2007 Leaving and waving, 12/2007 Leaving and waving, 3/2008 Leaving and waving, 5/2008 Leaving and waving, 8/2008 Leaving, 12/2008 Leaving and waving, 3/2009 Leaving and waving, 5/2009 Leaving and waving, 7/2009 Leaving and waving, 8/2009 Leaving and waving, 9/2009 Leaving and waving, 12/2009 Leaving and waving, 6/2010 Leaving and waving, 8/2010 Leaving and waving, 12/2010 Leaving and waving, 6/2011 Leaving and waving, 8/2011 Leaving and waving, 12/2011 Leaving and waving, 3/2012 Leaving, 6/2012 Leaving and waving, 8/2012 Leaving and waving, 12/2012 Leaving, 3/2013 Leaving and waving, 6/2013 Leaving and waving, 8/2013 Leaving and waving, 10/2013 Leaving and waving, 12/2013 Leaving and waving, 3/2014 Leaving and waving,7/2014 Leaving and waving, 8/2014 Leaving and waving, 11/2014 Leaving and waving, 12/2014 Leaving and waving, 6/2015 Leaving, 8/2015 Leaving, 11/2015 Leaving, 12/2015 Leaving and waving, 4/2016 Leaving and waving, 5/2016 Leaving and waving, 8/2016 Leaving and waving, 11/2016 Leaving and waving, 12/2016 Leaving and waving, 3/2017 Leaving, 4/2017 Leaving, 5/2017 Leaving, 7/2017 Leaving and waving, 8/2017 Leaving and waving, 10/2017 Leaving, 10/2017 ↑Back to Top All images © Deanna Dikeman. Please do not reproduce without the expressed written consent of Deanna Dikeman.",
    "commentLink": "https://news.ycombinator.com/item?id=42113113",
    "commentBody": "Leaving and Waving (deannadikeman.com)390 points by Duke_Pixie 13 hours agohidepastfavorite37 comments jmathai 6 hours agoThe finality of death feels impossible to grasp. I think of this with my parents who are in their 90s and live on the other side of the world. I also think of it with my own children - how do you say goodbye when you’re the one leaving? I love the story these photographs tell. I’m an avid archiver of our family’s photos. The other thing I did was to interview my parents 20 years ago to document their life experience in one go from their perspective (separately, because they are different). Maybe not everyone is a nostalgic, but for those of us who are - I encourage doing these things now. It’s never to late to start and they might bring comfort both today and when you wave your last goodbye. reply JKCalhoun 1 hour agoparentWe reach! I also am the avid family photo archiver (I scan them, tag them, release them). The oldest photo I have is a tintype of a young girl around 1882 or so. She is maybe two years old — and is my great grandmother. I never met her, she had died before I was born. But I have studied her in the photos going all the way back to that tintype of her — somewhere in Missouri. Photos show her with her sisters and parents not long before they died, working in the fields, married to my great grandfather, with her children. Her children become adults and at some point it is clear that the daughter's role has reversed and she is taking care of mom. Great grandmother is soon old and so frail looking. And then there is a photo of the headstone for her. It has been a little sobering, as \"photo historian\" for the family, seeing the arc of lives lived and now gone. reply sirdvd 5 hours agoparentprev> Maybe not everyone is a nostalgic, but for those of us who are - I encourage doing these things now. Is not just for nostalgia. I would've loved if my parents recorded even just a few minutes of their grandparents or great-grandparents to pass them to my children. reply jmathai 5 hours agorootparentYou’re right. I have a video recording of a my grandparent talking on the porch of his home in India where my parents grew up. He was describing the elephants that roamed the area and how he and his siblings would help tend the land. Truly a treasured clip treasured if my children’s great grandparents. reply jareklupinski 4 hours agoparentprev> how do you say goodbye when you’re the one leaving? promise to bring back something nice reply abyrne10 5 hours agoprevMade me think of this bit from Tim Urban’s classic blog post, The Tail End[0]: >It turns out that when I graduated from high school, I had already used up 93% of my in-person parent time. I’m now enjoying the last 5% of that time. We’re in the tail end. [0] https://waitbutwhy.com/2015/12/the-tail-end.html reply the_gipsy 31 minutes agoprevIt's crazy how our purpose in life really is just to train another human or two to predict like we do, once per lifetime. Then we die and the new human has to do the same, all over again, a little bit better this time - maybe. reply unsnap_biceps 10 hours agoprevI teared up when the father passed away and actually cried at the empty driveway. What a beautiful expression of love. I wish I had done something similar when I had the chance. Thanks for sharing. reply nf3 1 hour agoprevWonderful! Watching one's closest people age is so cool! I love looking at my wife (we've been married for 20 years) and seeing how she's changing through the years, her eyes, her skin, her figure, it's fascinating. Same for the wrinkles on my mother's hands, or even my own. For me, there's nothing scary or sad about growing old and then dying. It's natural, it's beautiful, it's just great the way it is. reply iammjm 8 hours agoprevRight now I’m on a train from southern Poland to north-western Germany, about 1200 kilometres apart, after visiting my family, as I do about twice a year, and going back to where I live and work. My parents have both passed 60 recently. How many more such visits will I yet get to spend with them? Thank you for this submission, very well timed for me, and made me tear up a bit, but also made me appreciate my folks even more. It’s up to us to make the best of the time we and the people we love still have left with each other reply noneeeed 8 hours agoparentWe really don't appreciate how little time we get with our parents once we grow up and move away. It comes in snatches and moments, and then they are no more. I wish I'd spent more quality time with mine while I could. I feel like I didn't start really talking to my dad until the last few years of his life. I didn't realise how much I had to ask them both until they were gone. reply jaymzcampbell 7 hours agorootparent> I wish I'd spent more quality time with mine while I could Absolutely! My parents were never always that healthy but would love a long walk and meander. I had a period where I didn't go home for a few years and when I finally saw them again it was shocking how much they'd declined. A couple more years since and now they can barely walk more than 10 meters without stopping in pain. Now it's so bad we can't even walk to a corner shop nearby. When I think back that only a few years ago I could've gone on a long walk through London with my father, it stings. Now it's a case of \"what next\" with their health. Of course it seems like you have to learn this lesson \"for real\" for it to sink in, which is the sad bit about life... reply pjmlp 3 hours agoparentprevI left Portugal and have been around other European countries since the early 2000's, also do similar trips back home, already lost many dear relatives including one of my parents, yes it hits hard, and makes one wonder how to sort out this kind of issues. It is also one of the reasons why I no longer take jobs without remote option across Europe, not only the country where the company is located (naturally as long as I can afford to be picky). All the best. reply fschuett 6 hours agoprevRemember friend, as you pass by As you are now, so once was I As I am now, soon you may be Prepare for death and follow me reply JKCalhoun 1 hour agoparentYep, got a relative with that exact phrase on their headstone. reply JohnDeHope 3 hours agoprevI don't appreciate this stuff, I'm not the target audience for it, but I'll be darned if this didn't kick me hard in the feels. reply litenboll 6 hours agoprevVery touching and beautiful. Just now, this year, I started taking pictures of my parents waving me away on the platform. reply TheFin 7 hours agoprevWell, someone's chopping onions. In a Datacenter. Go figure. reply penguin_booze 2 hours agoprevEvery time I visit my parents (who live in another continent), every time we celebrate something together, every time we fight, I think to myself, \"how would next time look like\". I know for sure that some of them will be irredeemably different to the present. No amount of negative visualization may help me, I fear. [0] https://stoicismu.com/stoicism-negative-visualization/ reply indianmouse 10 hours agoprevThe most beautiful thing I've ever seen in a very long time! I could relate to it though there are no photographs, but the memories and the moment are frozen forever! Some can never be replaced or compared against! Thanks for sharing and bringing a tear drop around the corner of my eyes! Have a beautiful day! Love from India! reply nicgrev103 3 hours agoprevA few years ago I went through digitising all my grandmothers old albums. The final picture was my grandfather on his deathbed, she stopped making any albums after even though she was only 60. She died 2 yrs later. This hit me hard. reply pknerd 5 hours agoprevAm I the only one who had tears after seeing the last picture where none of his parents were there to say goodbye? reply eclecticfrank 10 hours agoprevThis made me cry. Being intimidated by the temporality of relationships but also stunned at how beautiful goodbyes can be. I had seen these photos before and saw them return to reddit during the past few days. Couldn't click on them until now, because I was afraid of the emotions they would surface. Impressive work. reply siavosh 3 hours agoprevBeautiful. As I’ve grown older and moved back near my parents with my own family, this is something I think about every time we visit. I’m going to start taking some of these pictures. reply jihadjihad 2 hours agoprevMan the last one where the mother is at the house (3/2017) is just tough. reply t3rse 5 hours agoprevHits hard for me as a Gen X - my parents are still here but it's a reminder of how time is passing on us. They live in Africa so visits are few. reply binary132 6 hours agoprevOh boy. Right in the feels. My dad is starting to decline. reply hardlianotion 7 hours agoprevBeautiful and so very sad. reply erwincoumans 9 hours agoprevBeautiful fragility captured. reply martypitt 9 hours agoprevThis is beautiful, and heartbreaking. Thanks for sharing. reply kokkis 8 hours agoprevI cried. reply yapyap 5 hours agoprevwow, right in the feels reply justmarc 8 hours agoprevBeautiful. Sad. Life. reply crabbone 4 hours agoprev [–] I was recently recommended the book The Last Lecture by Randy Pausch. And while people who recommended this book said they had an epiphany moment reading it, all I saw there was a story of someone who's been served everything in their life on a silver platter. Someone who came to meet the literal end of their life, and yet grown no humility nor a bit of introspection... Until the last page I was waiting for the punchline. I wanted the author to admit that he was exceptionally lucky, that when things stopped being easy, he finally saw the light. The missing punchline turned out to be much harder to swallow than anything author could probably come up with. The whole thing turned out to be the typical in academic circles foreword to \"selected works\", where the author desperately tries to mention every even marginally useful person in a vain hope that by stroking their ego, they'd increase their \"impact factor\". One of the points in that book that came out as bizarre was when the author sought love advice from his parents... at the young age of thirty-something years old. The reliance on the parents, while doesn't play the key role, is still prominently featured throughout this self-styled epitaph. * * * I've only ever gotten to know one of my grandparents. My grandmother passed away when I was twelve. I have zero photographs of her. Nothing's left in the family to remind me of her. I don't know if my mother is alive. The last time we spoke I was sixteen. I have no idea if she still lives where she used to live when I left. And I have no interest in discovering what if anything's left of her. My parents split up when I was seven. Despite being a spiteful and abusive evil piece of shit who couldn't hold a job and had no means to sustain herself, let alone two children, my mom got full custody by the time it came to the family court. So, I grew without a father. I got briefly to know him by the time I was in high-school, but then I left to a different country. Today we don't speak the same language, live worlds apart, and there are front-lines of a very hot and bloody war between us. I don't come to visit, and don't expect to be able to come to my dad's funeral. People waxing emotional over having living parents who took part in their lives, who had something to contribute... kind of turn my stomach upside-down. They have no idea how good they have it, and yet they present their quite happy and fulfilling life as some kind of world-ending tragedy. reply ndileas 4 hours agoparentI am going to say something straightforward and possibly hurtful. I mean it seriously and respectfully. Just because you have been damaged emotionally, does not invalidate other people's emotions. They are quite possibly feeling the lowest lows of their lives -- even if that low is a mountain pass versus your death valley. They still deserve respect in grief, even if overall they have had a wonderful life. reply DiggyJohnson 44 minutes agoparentprevRespectfully, this is kind of a shocking thing to read. > People waxing emotional over having living parents who took part in their lives, who had something to contribute... kind of turn my stomach upside-down. They have no idea how good they have it, and yet they present their quite happy and fulfilling life as some kind of world-ending tragedy. Good fortune can open oneself up to greater heartbreak, and misfortune can do the worse. Likewise, the opposite can happen: fortune can blind the fortunate, and enable happiness when the unfortunate overcome. It goes all ways and directions. But for whatever hardship you have, you missed out on other sorts of hardship. And whatever hardships you dealt with, the author of any memoir may have missed those obstacles. Be at peace! And don't expect anyone to walk the same path as you. I'm sorry you missed out on these experiences, but that doesn't mean that the normal experience of being a human - that is your parents living into your own adulthood - ought to be taboo. reply gooeyblob 2 hours agoparentprev [–] It is very weird to write all this about a nice series of photographs reply Consider applying for YC's W25 batch! Applications are open till Nov 12. GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [],
    "commentSummary": [],
    "points": 390,
    "commentCount": 37,
    "retryCount": 0,
    "time": 1731390298
  },
  {
    "id": 42110901,
    "title": "YubiKey still selling old stock with vulnerable firmware",
    "originLink": "https://news.ycombinator.com/item?id=42110901",
    "originBody": "FYI, YubiKey is apparently still selling old stock with firmware vulnerable to the EUCLEAK attack instead of disposing of them, as a reader of Fefe&#x27;s Blog reported: https:&#x2F;&#x2F;blog.fefe.de&#x2F;?ts=99ccc8dc",
    "commentLink": "https://news.ycombinator.com/item?id=42110901",
    "commentBody": "YubiKey still selling old stock with vulnerable firmware268 points by MaKey 20 hours agohidepastfavorite85 comments FYI, YubiKey is apparently still selling old stock with firmware vulnerable to the EUCLEAK attack instead of disposing of them, as a reader of Fefe's Blog reported: https://blog.fefe.de/?ts=99ccc8dc Modified3019 19 hours agoI hadn’t noticed the announcement of the vulnerability, looks like it’s nothing I care about for my “thread model”. https://www.theverge.com/2024/9/4/24235635/yubikey-unfixable... >“The attacker would need physical possession of the YubiKey, Security Key, or YubiHSM, knowledge of the accounts they want to target, and specialized equipment to perform the necessary attack,” the company said in its security advisory. “Depending on the use case, the attacker may also require additional knowledge including username, PIN, account password, or authentication key.” But those aren’t necessarily deterrents to a highly motivated individual or state-sponsored attack. reply zahlman 17 hours agoparentThe attacker would need physical possession of the [key]... Depending on the use case, the attacker may also require additional knowledge including... PIN, account password, or authentication key. If you already had both these things, any vulnerability in the key's firmware would be moot, surely? It's hardly a surprise that 2FA can be compromised by compromising both factors. reply Sayrus 17 hours agorootparentThe vulnerability allows extracting the secret key from a vulnerable device. If I remember correctly, it's after a successful auth / sign flow, which requires the login/password of the target website. I could give you my security key and you'll be able to login once. If you can extract the key, then you could login without the security key. In the context of a targeted attack, that could heavily change the impact. reply water-data-dude 2 hours agorootparentAnd you can store things like your PGP keys on there. I use mine for code signing, ssh, and encryption. For me it’d just be a PITA, since I don’t operate in a very sensitive or valuable area, but it could be a nightmare for someone who signs code a lot of people use, for example. reply Y_Y 10 hours agorootparentprevIf you're paranoid, of course, you're not going to trust a key that's left your possession, even if you get it back later. One it's gone it should be revoked permanently. reply chrisjj 9 hours agorootparentThat presumes you'd know. reply Y_Y 4 hours agorootparentIt does. If you can get my yubikey off my keyring while it's in my pocket and put it back on without my noticing then I don't know how I can defend against that. reply nativeit 3 hours agorootparentSort of like how several plot points of the last Mission: Impossible movie could have been thwarted by a zipper. reply GoblinSlayer 9 hours agorootparentprevWhat is your job where you need to give your key to lieutenant Chang daily? reply nh2 16 hours agorootparentprevThe whole point of a YubiKey is that it can produce inextractable keys so it cannot be forged/cloned. Without that property, might as well use aAlso I returned my yubikey to my $work when my contract ended so I know at least Microsoft reuses these keys. Or destroys them. reply bostik 11 hours agorootparentprevThe attacker would have to take the targeted YubiKey physically apart to get access to the Infineon chip. Then, after performing enough successful FIDO2 challenges (ie. logins with phished credentials) they would need to put the device back together, and do so without the victim noticing that their YubiKey has been physically compromised. The keys are tamper-evident. The attack is not impossible, and surely fits within the capabilities of nation state actors. For majority of other users it's a theoretical attack. reply chrisjj 9 hours agorootparent> The keys are tamper-evident. No. Attacker replaces the shell. reply croes 12 hours agoparentprevYou should care about a seller who sells products with known flaws. reply userbinator 9 hours agorootparentEvery product has \"known flaws\". reply mihaaly 8 hours agorootparentAlmost every known product maker make procedures around having a vulnerable product and advertises it as 'securing your data has the utmost importance' while releasing thick stream of security patches on the back of patches, more than not making updates mandatory this way or the other. 'We may finish that later sometime after sales' kind of product development. reply lxgr 3 hours agorootparentNot in this particular case. Here, it's more like \"buy our new product if you care enough about the latest vulnerability; the old one is unpatchable by design\". reply chrisjj 9 hours agorootparentprevYou should care about the seller who conceals them at sale. reply croes 8 hours agorootparentprevKnown to the seller or the buyer? reply joecool1029 18 hours agoparentprevIf I recall RSA keys on an affected unit are also not impacted. reply noinsight 17 hours agorootparentYeah, but what isn't ever(?) mentioned is, \"other\" ECC keys are (should be) impacted by this too, not just FIDO2, i.e. ECC smart card certificates if you're using those. reply joecool1029 17 hours agorootparentThat's why I said it. I primarily use mine for signing commits with gpg. This use case isn't impacted since I use rsa keys. reply SushiHippie 19 hours agoprevRelevant bit: > Update: Ist sogar noch krasser, wie ein Leser anmerkt: > zu der Yubikey-Geschichte sei noch angemerkt, dass die aktuell sogar so dreist sind erstmal ihre Lagerbestände mit verwundbaren Keys abzuverkaufen anstatt die zu verschrotten. Hab neulich zwei von den Dingern bestellt (die teure FIPS-Variante!) und was bekomme ich geliefert? Die Keys mit der alten, verwundbaren Firmware. Hintergrund soll wohl sein, dass die zunächst Behörden und andere \"priorisierte\" Kunden mit den Keys mit der neuen Firmware beliefern. Machine Translation: > Update: It's even more extreme, as a reader points out: > Regarding the Yubikey story, it should be noted that they are currently so brazen as to sell off their stock of vulnerable keys instead of scrapping them. I recently ordered two of those things (the expensive FIPS version!) and what do I get delivered? The keys with the old, vulnerable firmware. The background seems to be that they are initially supplying authorities and other \"prioritized\" customers with the keys that have the new firmware. reply palata 2 hours agoparentI agree that it would look bad if Yubico pretended to send patched keys and instead sent the vulnerable ones (which this anonymous reader seems to claim). But I think it would deserve more than an anonymous, unverified claim. For what I see, on Yubico's store it says which version of the firmware I am ordering. reply guenthert 9 hours agoparentprevoff topic, but I'm so mesmerized, I can't help it -- the translation is just perfect, even though the original is ripe with colloquialism. Not too long ago, this was SciFi. reply SushiHippie 6 hours agorootparentSame didn't want to shill, but I used Kagi Translate https://news.ycombinator.com/item?id=42080012 reply consp 10 hours agoparentprevAFAIK key extraction is not allowed by 140-2. Weird to call it FIPS approved. reply snvzz 16 hours agoparentprevwtf. And these YubiKey aren't exactly cheap. You'd expect the price to cover whatever they have to do on their end so that you do not receive a known vulnerable device. reply palata 2 hours agoprev> as a reader of Fefe's Blog reported My understanding is that the blog post complains about the fact that there was a security vulnerability in Yubikeys and that Yubico doesn't exchange everything they have sold until now. But it makes sense to me: I buy a Yubikey at time T, with firmware F that by design cannot be modified. I don't buy a subscription that will provide me with an updated key every month, it's a one-off. Until the security flaw was discovered, my keys were fine. So I paid 50$ per key for 4 years, I don't think it's exactly expensive. Now there are two questions for me: 1. Should I replace my keys? In my case, I don't think so (given my threat model) 2. Should I stop trusting Yubico? I don't think so. It doesn't seem like this flaw is due to a total incompetence from their part. If I stopped trusting software every time a critical flaw was discovered, I wouldn't use software anymore. The blog post then goes on claiming that Yubico pretends that they sell keys with the updated firmware (on their store, it clearly says if I am ordering a key with firmware 5.7 or not) but sell keys with older firmware. That would be pretty bad from Yubikey, but the blog gives absolutely no proof. It could as well just be an empty claim to hurt Yubico's reputation, for what I see. reply MaKey 51 minutes agoparentThe FIPS Series shows firmware 5.4: https://www.yubico.com/us/product/yubikey-5-fips-series/yubi... Instead of stopping the sale of them, they're dumping old stock on unsuspecting customers. reply atoav 11 hours agoprevThe problem here is that depending on your threat model it might be important for customers to trust Yubico not to sell out against rich/powerful attackers. This behavior adds a datapoint that speaks against them, even if they are technically correct. I do not expect a manufacturer of such hardware to be like: \"Eh it is okay\" when skipping the fix to their IC manufacturers fuckup saves them money, I expect them to go out of their way to protect their customers. Seen like this their refusal to replace compromised keys was already brazen, them selling compromised keys constitutes a breach of trust. I am already researching for alternatives. reply palata 2 hours agoparent> Seen like this their refusal to replace compromised keys was already brazen, Does it really sound crazy that they would not replace all the keys they ever sold? At that price, it feels like it's obviously part of the deal. If you want to buy a security key that will get audited every day by 10 experts and receive new versions delivered in your hands by approved staff, I guess you should expect to pay more than 50 bucks, right? > them selling compromised keys constitutes a breach of trust. Some anonymous reader of some blog claims it. It doesn't mean it's true, does it? For what I can see, it says on the Yubico store which version of the firmware I am getting. Can anyone confirm that they ordered the new version, received the old version and Yubico refused to exchange that? reply atoav 1 hour agorootparentOf course they would like to avoid replacing every (affected) key they ever sold if they don't absolutely have to. But if they sold cars and this was a defective airbag they would have been forced to replace them. You as a manufacturer are responsible for the products you bring to market — don't want to recall your products? Then ensure they work and you don't put all your eggs in one basket. In this case Yubico is very likely not legally bound to recall, but I made a case how this is an issue of trust. You know what would have been a good move? A deal where you can order a new one at strongly reduced prices if you can show you had an affected device, or something among those lines. Or selling the affected ones for cheap and give the customers the choice. There are many ways to deal with that situation in a better way than they did and they decided to choose the one that helped their very short term bottom line the most. As a owner of an affected Yubikey I have to saybthat the whole episode put an questionmark behind thir product for me. Not because it was affected, because of how they dealt with it. reply palata 1 hour agorootparent> in a better way than they did What did they do? What I see is that I can't choose to order a key with an older firmware, and it explicitly says \"firmware 5.7\" everywhere I look. > But if they sold cars and this was a defective airbag they would have been forced to replace them. New cars have those electronic keys that work remotely (automatically close the door when you leave, automatically open when you arrive). There has been an increase of car thefts from those keys, because they are objectively less secure. Have you ever tried asking the car manufacturer to change the key for free? Or to sell you a new car at a strongly reduced price? reply CarpaDorada 14 hours agoprevIf you lose your YubiKey, or any other hardware key, for all intents and purposes all your data on it is compromised. What I'm reading fromis this: >This vulnerability – that went unnoticed for 14 years and about 80 highest-level Common Criteria certification evaluations – is due to a non constant-time modular inversion. The vulnerability is therefore that the secrets can be extracted without taking the YubiKey apart, by measuring timings, thus tricking you into thinking that your YubiKey is intact (but you were already compromised the moment you could not account for the location of the YubiKey). On the other hand, a well motivated adversary can take apart your YubiKey, extract the secrets through other means (every hardware key is vulnerable to this) and finally put together a new YubiKey, identical on the outside to your old YubiKey, with the same secrets. The two scenarios are almost the same, unless you're biotagging your YubiKey (which only buys you knowledge that you've been compromised). If Yubico is selling these keys, it's because it would be too expensive for them to clearly label the firmware version on each YubiKey sold, for various reasons. I think this is a great opportunity for a competitor to arise, who hopefully allows flashing of the firmware, at a minimum. The Nitrokey seems like a good option . reply r-w 1 hour agoparent> biotagging Sorry, what does this mean? I couldn’t find anything on Google about it. reply palata 10 hours agoparentprev> The Nitrokey seems like a good option . My experience with Nitrokey is different. I trust Yubico for my threat model, I just don't trust Nitrokey at all. They seem to have more products than employees and in my experience they have a history of advertising/selling features they don't have. reply palata 3 hours agorootparentFor those who downvote me, let me add some context. I count 14 employees in the company picture [1]. They say \"up to 20 employees\". I assume not everyone is a software developer. They have 1. Nitrokey 2. NitroPhone 3. NitroTablet 4. NitroPad 5. NitroPC 6. NextBox 7. NitroWall 8. NetHSM which look like very different products. On top of this, they have consulting services and NitroChat (not clear to me if it is just a branded Matrix instance) and \"Android FIDO SDK\" (which for some reason points to https://hwsecurity.dev/, which doesn't exactly seem to be a Nitrokey product). That seems like a lot for 14-20 employees. But then my experience was with the Nitrokey 3 NFC. They advertised all the main features that Yubikey had and accepted pre-orders. They claimed that the software was ready, in Rust and open source (!), and that it would just take a few months for the hardware. It took 2 years, and when I finally received my Nitrokey, none of the software was ready (it had just one feature, maybe FIDO?). Finally, it is great that it is open source, but the fact that it is flashable does not sound like a security feature to me: doesn't it mean that an attacker could flash a malicious firmware on it from a compromised computer? [1]: https://www.nitrokey.com/about reply CarpaDorada 2 hours agorootparentFlashing firmware makes it easier to compromise an unattended hardware key but as I said above every hardware key could be considered compromised in this sense. Pre-order generally come with stipulations on when you receive the product and what it will be. NitroChat is them running a Matrix chat server for you, they probably intend to have integrations with their Nitrokey. The SDK mentions that it is \"Offered in partnership with Hardware Security SDK by heylogin GmbH\", the intend of heylogin GmbH is to charge you for commercial use of the SDK. Them having less than 20 employees makes sense, it's a niche market. What it comes down to is that YubiKeys have better integration but Nitrokeys are more fun if you want to hack on them, and it's not really a matter of security. Note that smart cards in general can be used for the same purposes, e.g. Java Cards. USB keys do not require you to carry around a card reader. reply palata 1 hour agorootparent> Flashing firmware makes it easier to compromise an unattended hardware key but as I said above every hardware key could be considered compromised in this sense. Isn't there a difference between your compromised laptop being able to reflash your Nitrokey and your compromised laptop not being able to reflash your Yubikey, though? > Them having less than 20 employees makes sense, it's a niche market. Maybe, but they sell 8 different hardware products. Have you ever been involved in a hardware product? I have, and it feels like they must not put a lot of resources on them. Which is kind of proven in my experience with the fact that my Nitrokey arrived 2 years after I ordered it and by then, only a fraction of the software had been written. reply bigjay517 5 hours agoprevIs this really true? Looking at the Yubikey Shop I see that the purchase page explicitly states that the key is shipped with Firmware 5.7 (the fixed version). If a device is received with the old firmware, I would believe that this not intentional and support would resolve the problem. reply MaKey 47 minutes agoparentThey're still selling the FIPS series with firmware 5.4: https://www.yubico.com/us/product/yubikey-5-fips-series/yubi... reply nine_k 15 hours agoprevIf I consider buying a security token similar to a Yubikey, I'll try hard to buy one with open firmware, and preferably open enough hardware. Something that has been independently inspected, and something that allows me to load the firmware I control and can inspect. (The ability to only load it once would be fine; an ability to securely update it would be really nice.) reply GauntletWizard 18 hours agoprevI would gladly take an old stock yubikey at a discount - my threat model doesn't have a serious need for resistance to stolen keys, because at the user level they're unlikely to not notice them missing for long enough to successfully attack and then replace to a keychain. reply telgareith 18 hours agoparentYou're joking, right? reply mynameisvlad 18 hours agorootparentThe vulnerability, as another commenter mentions, is extremely hard to exploit and requires both physical access and the specific accounts to clone the key for. That may be too much of a risk for enterprises, but as a personal security key? That seems like a completely reasonable choice to make. reply technion 17 hours agorootparentprevA yubikey vulnerable to this attack perfectly protects against phishing, which is the attack the 99.9% of us have a practical reason to worry about. Not all vulnerabilities are equal. reply lxgr 14 hours agorootparentBut so does a software password manager supporting passkeys – at a much lower price. reply palata 3 hours agorootparentBut a software password manager on a compromised computer can be compromised, right? It feels like the secrets can't be extracted by a compromised computer: the attacker needs physical access to the Yubikey. This sounds better than a software password manager, right? Or am I missing something? reply jyounker 7 hours agorootparentprevBut lesser convenience and with more hassle. reply meowster 7 hours agorootparentYou're right: a physical security key is a lesser convenience with more hassle than a personal password manager in my case. reply burnt-resistor 13 hours agorootparentprevThe attack is local, limited, and requires sophistication to pull off. For most people and most use-cases, this is a theoretical vulnerability rather than a real one. While some users may need to buy updated YKs, perhaps having a tier of discounted \"vulnerable\" new old stock and more expensive patched new stock would make the most economic and utility sense. reply m-p-3 16 hours agorootparentprevIf he understands the risks and deems those manageable according to their threat model, I don't see a problem. reply GauntletWizard 17 hours agorootparentprevNo, I'm not. I've got a bunch of yubikeys locked in lockboxes when they're not in use, serving as trust anchors for internal PKI, but also using certificate logging. If one is compromised, there's a short window until it's known, and access to the box has a very small group of people. My threat model does not include \"Insider under the watchful eye of two other insiders\" reply wannacboatmovie 17 hours agorootparent> My threat model does not include \"Insider under the watchful eye of two other insiders\" Some Mastodon infosec grifter is going to name this \"Insider Triple Threat\". reply mrtx01 10 hours agoprevThank you so much! My client was in the final stage of selecting security tokens. They have contracts with administration and their tokens need to be secure. I was strongly for yubikeys, now they will not be an option any longer. It is not so much about the flaw, but about their handling of the broken security tokens, still claiming them to be somehow secure-ish. Even if they offered us the new tokens, that wouldn't make a difference. Their claim to making the internet more secure for all, contradicts their attitude. That is really disappointing. reply TheNewsIsHere 4 hours agoparentThat seems really reactionary based on a single random report posted to HN. It’s worth actually verifying if this was intentional or accidental. They’re marketing the keys as having the new firmware. It would be really idiotic to do that and then intentionally ship old firmware. Anyone and everyone would be able to figure that out in an instant, and would severely damage their business. reply MaKey 44 minutes agorootparentThe report can be verified by visiting the product page of the YubiKey 5 NFC FIPS: https://www.yubico.com/us/product/yubikey-5-fips-series/yubi... It is listed with the vulnerable firmware 5.4. reply mrtx01 2 hours agorootparentprevI was in contact with a Sr. Customer Support Specialist from Yubico and I was not impressed by their denial of a problem. The reason to get such a Hardware Token is, that the private key cannot be extracted, even if the users lose it. They have plausible deniability for fraud with the broken devices. Claiming that this would not be a problem and trying to explain why it is not a problem without considering their client could be right, is pure arrogance. Only a complete exchange of the whole management of yubico could save them, when they want to be taken seriously ever again. And of course the new management should immediately offer a cost free exchange program. D'oh. reply captainepoch 14 hours agoprevJust go with Nitrokey, the software is, at least, published at GitHub https://github.com/Nitrokey reply palata 9 hours agoparentThat's about the only advantage I see with Nitrokey. Support is terrible (in my experience) and they sell unfinished products while advertising features they don't have. I have never reached a point where I could trust Nitrokey (I have a Nitrokey that I never used because after waiting 2 years to receive it, it still had none of the features that were announced when I ordered it). reply echelon 14 hours agoparentprevClassic strategy. Market leader is closed source. Follower attempts to be open source to gain market share despite being behind in features and market. Has this strategy ever worked? Gitlab went public, but it's barely a fraction of what GitHub is. Framework laptops aren't really all that big. Maybe Android? But it had huge backing. reply eco 12 hours agorootparentBitWarden went this route against LastPass. They've had their own closed source component contoversies lately though. reply elashri 10 hours agorootparentThe password manager market does not have a dominant player like Github vs Gitlab (others). Actually this would be more true if you add non commercial offerings like Keychain passwords, Google passwords and Firefox (other browsers password managers). Lastpass didn't have a majority at anytime. And their decline is related more to thei breaches and horrible practices. They are trying to be relevant now. They offered my university free subscription for all students and faculty and still people don't even consider them. At least this is among people who consider password managers. Also for bitwarden the controversy was about their SDK licence being proprietary but they re-licenced to open source [1] [1] https://news.ycombinator.com/item?id=41940580 reply 0x073 8 hours agorootparentprevGitlab and GitHub can't be compared. GitHub is a social platform. We would need mastodon for GitHub. reply vdvsvwvwvwvwv 8 hours agorootparentGitHub is also CI/CD like Bitbucket and GitLab etc. reply Blackcatmaxy 12 hours agorootparentprevFor how new framework is they are actually pretty big on college campuses especially among engineering students in my experience. They're still a fairly new company in the scheme of things and I'd say the strategy is definitely not hurting them. reply notpushkin 12 hours agorootparentprevYeah, not enough people care about open source right now. Maybe after this incident more will! In any case you're right, if you try doing open source purely as a marketing tactic it may or may not work out. I think one good reason to do open source is because you believe it's more sustainable, or transparent, or just being decent to your customers. reply pandemic_region 11 hours agorootparentprevNot sure where Framework laptops fit in that strategy. They are ahead in terms of features (but not market, granted). reply cerved 10 hours agoprevWhere did this unknown individual buy the keys and when? I see a lot of smoke but where is the fire? reply randompeach 13 hours agoprevI personally find token2 really nice. reply jnsaff2 12 hours agoprevAnd when you do order a single key from them be prepared for a barrage of passive-aggressive sales e-mail along the lines \"I wanted to discuss your rollout plan\". reply m3kw9 17 hours agoprev [–] A lot of hardware is vulnerable but still being sold. All hardware is infact reply hobobaggins 15 hours agoparent [–] Hopefully not hardware with known vulnerabilities. reply ta988 12 hours agorootparentA lot of IoT devices, cameras, alarm systems, car components have known vulns and are still sold... reply whiskey-one 11 hours agorootparentIt might make sense for a product that is hard to patch due to a more complex manufacture to drain supplies before updating. For a security product that is known to be vulnerable it is not forgivable to keep shipping. reply Hackbraten 7 hours agorootparentI’d say security cameras and alarm systems are security products, too. reply m3kw9 4 hours agorootparentprev [–] Almost every hardware have known vulnerabilities, you can't just take things off shelves once one is found, they don't have a money printer. reply Consider applying for YC's W25 batch! Applications are open till Nov 12. GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "YubiKey is allegedly selling older stock with firmware susceptible to the EUCLEAK attack, rather than discarding them, as reported by a reader of Fefe's Blog.",
      "The EUCLEAK attack is a security vulnerability that could potentially compromise the integrity of the YubiKey devices.",
      "This situation raises concerns about the security practices of YubiKey, particularly regarding the handling of outdated and vulnerable products."
    ],
    "commentSummary": [
      "YubiKey is allegedly selling older stock with firmware vulnerable to the EUCLEAK attack, which requires physical access and specialized tools, posing a risk mainly to highly motivated attackers.- The situation has led to debates about the balance between risk and usability for personal use, with some users criticizing YubiKey for not offering replacements for compromised keys.- This issue has prompted discussions on trust and security in hardware tokens, with some users exploring alternatives such as Nitrokey."
    ],
    "points": 268,
    "commentCount": 85,
    "retryCount": 0,
    "time": 1731363175
  },
  {
    "id": 42115597,
    "title": "The EdTech Revolution Has Failed",
    "originLink": "https://www.afterbabel.com/p/the-edtech-revolution-has-failed",
    "originBody": "Share this post The EdTech Revolution Has Failed www.afterbabel.com Copy link Facebook Email Note Other Discover more from After Babel Using moral psychology to explain why so much is going wrong Over 105,000 subscribers Subscribe Continue reading Sign in The EdTech Revolution Has Failed The case against student use of computers, tablets, and smartphones in the classroom Jared Cooney Horvath Nov 12, 2024 127 Share this post The EdTech Revolution Has Failed www.afterbabel.com Copy link Facebook Email Note Other 53 26 Share Introduction from Jon Haidt and Zach Rausch: When smartphones and social media platforms swept into teens' lives in the early 2010s, schools experienced their own digital revolution, with 1-to-1 laptops, tablets, and iPads becoming staples in classrooms across the Western world. (1-to-1 means one device for every student.) A decade later, the revolutionary optimism is fading. One OECD review found that most educational technology (EdTech) has not delivered the academic benefits once promised. Meanwhile, global test scores in math, science, and reading have been plummeting, as you can see in Figure 1 below. These trends were exacerbated by the COVID-19 pandemic, but they began in the early 2010s, just as digital devices were being placed on students’ desks. Global PISA Test Scores in Decline Figure 1. Declines in math, reading, and science scores averaged across the 38 OECD countries. Image source: The Atlantic, from the OECD. In The Anxious Generation, we advocated for phone-free schools. We made the case that locking up phones from bell-to-bell would improve student performance and focus, and the quality of students’ in-person relationships. (That seems to be happening, at lightning speed, and with very positive effects.) However, the impact of EdTech more broadly on student outcomes was unclear to us. Since publication, we've engaged with leading experts on the subject, and we are now publishing a series of posts to address questions that many educators, parents, and students are asking: Is EdTech actually better than traditional learning methods? When is it helpful, and when do the distraction effects overwhelm the pedagogical benefits? At what age (if any) should students start using iPads and Chromebooks in the classroom? And is the sudden proliferation of 1-to-1 devices partially responsible for the global decline in test scores over the last decade? In the first post in our series, Everyschool co-founder Amy Tyson addressed five major myths about screens in school. In this post, neuroscientist and educator Jared Cooney Horvath goes further, arguing that the EdTech revolution has been a failure. He explains why schools across Europe and Southeast Asia are moving away from student-facing digital technology, favoring more traditional methods—and why American schools would benefit from considering a similar shift. Jared is the author of six books and over 60 research articles. He currently serves as an honorary research fellow at St. Vincent’s Hospital in Melbourne and leads LME Global, a team dedicated to making the latest brain and behavioral research accessible to teachers, students, and parents. In December of last year, Jared reached out to Jon about a review article he was writing. Jon read an early draft of the article, found it to be powerful and well sourced, and invited Jared to consider publishing a shortened version of it here at After Babel. We hope you find it as thought provoking as we did. — Jon and Zach p.s. We are looking for a variety of perspectives on this important topic. We would especially value hearing from those who can make a strong case for the benefits of 1-to-1 digital tech in the classroom, ideally backed by research. If you can make such a case, let us know in the comments below and submit an essay to zach@anxiousgeneration.com. Leave a comment The EdTech Revolution Has Failed by Jared Cooney Hovrath In May of 2023, schools minister Lotta Edholm announced that Swedish classrooms would aim to significantly reduce student-facing digital technology and embrace more traditional practices like reading hardcopy books and taking handwritten notes. The announcement was met with disbelief among pundits and the wider international public: why would an entire country willingly forgo those digital technologies which are widely touted to be the future of education? In a recent survey, 92% of students worldwide reported having access to a computer at school. In New Zealand, 99% of schools are equipped with high-speed internet while in Australia the student-to-computer ratio has dipped below 1:1 (meaning there are more computers than students in school). In the U.S., government expenditure on EdTech products for public schools exceeds $30 billion annually. With these numbers, you’d think EdTech had clearly demonstrated a strong beneficial impact on student learning. Think again. (In this article, I’m defining EdTech as any student-employed, internet-connected digital device; this includes computers, laptops, tablets, cell phones, and smart watches. I am not discussing or evaluating the use of digital devices by teachers.) An OECD international review of the impact of computers in education reports: “Students who use computers very frequently at school do a lot worse in most learning outcomes…And perhaps the most disappointing finding of the report is that technology is of little help in bridging the skills divide between advantaged and disadvantaged students.” After reviewing 126 research studies exploring technology-based education interventions, the global research center J-PAL concluded: “Initiatives that expand access to computers…do not improve K-12 grades and test scores. [Furthermore], online courses lower student academic achievement compared to in-person courses.” A recent analysis investigating the impact of computers on reading performance among K-12 students across the U.S. concludes, “…even small daily amounts (30min) of use of digital devices in classrooms are negatively related to scores on a reading comprehension test.” A similar analysis of learning moderators within university settings concludes, “…expanding the use of…technology at the expense of other forms of instruction is likely to have detrimental effects on achievement.” Yet another set of analyses reported that investing in air conditioning has a more beneficial impact on student learning than investing in a laptop for every student (ES = 0.21 vs 0.16) “But wait,” some readers might say: “if giving every student a laptop has an effect size of 0.16, then surely this means digital tools can improve learning!” Let’s take a closer look at the data. Situating the Data Since the 1980s, a number of meta-analyses (and meta-syntheses pooling these analyses) have been conducted exploring the impact of digital technologies within varied fields of learning. What do the weighted mean effect sizes show? Math: ES = 0.33 (22 meta-analyses / 1060 Studies / 1464 effect sizes)1 Literacy: ES = 0.25 (17 meta-analyses / 736 Studies / 1547 effect sizes) Sciences: ES = 0.18 (6 meta-analyses / 391 Studies / 567 effect sizes) Writing Quality: ES = 0.32 (6 meta-analyses / 75 Studies / 85 effect sizes)2 Specific Learning Needs: ES = 0.61 (10 meta-analyses / 216 Studies / 275 effect sizes)3 At first blush, this looks very promising: seeing as each effect size is larger than zero, surely this means EdTech is working, right? Not quite. In 2023, educational statistician John Hattie released Visible Learning: The Sequel. In this major work, he analyzes over 2,100 educational meta-analyses exploring 357 different moderators affecting learning within the typical classroom. What he found was equal parts surprising and predictable: nearly everything has a positive impact on student learning. In fact, of the 357 included learning moderators, only 33 reported a negative effect size (this includes things like abuse, malnutrition, illness, and mental disorders). In other words, 91% of everything a teacher does can be said to improve learning. Although this finding has doubtless been influenced by publication bias and the file-drawer problem, one additional practical explanation concerns engaged time-on-task. Students spending any amount of time explicitly focused on learning novel material would be expected to demonstrate improvement compared to students spending no time focused on learning novel material, regardless of the specific tool or technique employed. Seeing as nearly every strategy serves to increase engaged time-on-task (this includes employing air conditioning during hot days), then comparing the impact of digital technologies to ‘zero’ makes little sense. So, when considering effect sizes within education, what is a reasonable baseline? Acknowledging that this is a tricky metric within social science, yet remains the strongest representation of quantified impact we possess within education, what effect size would constitute ‘meaningful’ improvement? Data suggests that in order for students to maintain a 50th percentile rank nationwide, they must improve an average of 0.42 standard deviations per year (calculated using standardized reading and math data across K-12); anything below this will likely lead to declining rank and vice versa. A similar analysis places this value at 0.46, suggesting an effect size of around 0.44 would be a reasonable educational baseline. As a secondary estimate, when the effect size from all 357 moderators noted above are pooled, Hattie reports the average value sits at a less conservative effect size of 0.4. In fact, he calls this a ‘hinge-point’ and recommends that only those tools and/or strategies with values above this level can be seen to ‘work best’ and should be considered for mass inclusion across education, as those have the greatest chance to deliver the greatest impact to the greatest number of students. Using the less conservative baseline of 0.4, the aforementioned meta-analyses look much weaker. In fact, the only realm within which digital tools seem to be meaningfully beneficial is in the realm of specific learning needs (a topic we will discuss later in this piece). Use of these tools outside of this context may well be driving learning; unfortunately, that learning will be slower, less robust, and likely lead to a drop in rank compared to other, more powerful, non-digital methods. The fact that dozens of meta-analyses comprising thousands of calculated effect sizes has done little to quell excitement over digital technology in education suggests that we may be dealing less with an issue of evidence and more with an issue of wishful thinking. So let’s step back from the data and explore why it is that digital technology in students’ hands may be doing more harm than good. Share Multitasking Is Really Bad for Learning To understand the primary reason why digital devices make learning so difficult, we need to take a quick cognitive tangent. Rest assured, we will return to EdTech and tie this together shortly. A commonly used phrase amongst educational researchers is, “Attention is the gateway to learning.” Perhaps the best way to conceive of human ‘attention’ is as a filter. Much like 3-D glasses, which only allow certain wavelengths of light to reach the retinas, attention only allows relevant information to pass into conscious awareness; irrelevant information is blocked out. What, then, determines if a particular bit of information is relevant? Much like board games, every task we undertake comes with its own unique set of rules that dictate what actions are required for success. For instance, to successfully read these words, your ‘reading ruleset’ dictates you must move your eyes from left to right, hold each word in memory until the end of each sentence, use your fingers to scroll, etc. Whenever we engage with a task, the relevant ruleset must be loaded into a small area of the brain called the Lateral Prefrontal Cortex (LatPFC). Whatever ruleset is being held within this part of the brain will ultimately determine what the attentional filter deems relevant or irrelevant. Here's the problem: the LatPFC can only hold onto one ruleset at a time. This means anytime we attempt to consciously undertake two tasks simultaneously, the brain simply cannot handle this; the best it can do is quickly jump back-and-forth between tasks, swapping out the ruleset within the LatPFC each time. This jumping between tasks incurs three significant costs. Time: It takes the brain about 0.15 seconds to swap out a ruleset, during which time all external information stops being consciously processed and learning slows considerably (this process is called task-switching cost). Accuracy: Whenever we jump between tasks, there is a brief period of time when the two rulesets conflict and general performance suffers (this process is called cross-talk dual-task interference). Memory: Memories are typically processed by a part of the brain called the hippocampus. However, when jumping between tasks, memories are more often processed by the striatum (an area of the brain linked to reflexive processes), ultimately leading to the formation of subconscious memories which are difficult to access and utilize in the future. In sum, multitasking is among the worst things that students can do for learning and memory. When we multitask, we go slower, our accuracy drops, and our learning decreases significantly. Why does any of this matter? Leave a comment What is the Primary Function? The primary function of any tool can be thought of as the main task or job said tool is believed to perform: or, as I often consider it, it’s the manner in which 80% of people spend 80% of their time employing said tool. Consider a hammer. There are many uses for a hammer: door stop, bottle opener, back scratcher, screw driver. etc. However, 80% of people spend 80% of their time using this tool to hit things – as such, if I were to hand you a hammer, you would begin looking for something to hit. What is the primary function of a computer? When students sit down in front of a screen, what is the fundamental behavior that immediately jumps to mind? A pre-Covid survey exploring how US students aged 8-18 utilize digital technologies both inside and outside of school provides the answer (values below are per week): 10 hours 44 minutes playing video games 10 hours 2 minutes watching television or film clips 8 hours 14 minutes scrolling social media 7 hours 32 minutes listening to music 3 hours 25 minutes doing homework 2 hours 5 minutes doing schoolwork 1 hour 14 minutes reading for pleasure 52.5 minutes creating digital content 14 minutes writing for pleasure If we extrapolate and consider a typical U.S. academic school year of 36 weeks, these numbers suggest that students spend 198 hours annually using digital devices for learning purposes, and 2,028 hours annually using those same exact tools to jump around between scatter-shot media content. Do you see the issue? Seeing as the great majority of students spend over 80% of their digital device time using these tools to multitask, the automatic response for a great majority of students using these tools has become multitasking.. Unfortunately, when we attempt to employ digital devices for learning purposes, this primary function quickly bleeds into student behavior. This is why, when using a computer for homework, students typically last fewer than 6 minutes before accessing social media, messaging friends, and engaging with other digital distractions. This is why, when using a laptop during class, students typically spend 38 minutes of every hour off-task. This is why, when getting paid as part of a research study to focus on a 20-minute computerized lesson, nearly 40% of students were unable to stop themselves from multitasking. It’s not that the students of today have abnormally weak constitutions; it’s that they have spent thousands of hours training themselves to use digital devices in a manner guaranteed to impair learning and performance. It’s also that many of the apps being run on those devices were carefully engineered to pull young people away from whatever they were doing. Perhaps we can draw an analogy: imagine I sat a group of people around a jug of beer and asked them to use that beer to learn about buoyancy. This tool (beer) is perfectly suited to the task, and if the group of people were non-drinkers, I would expect no problem achieving my learning goals. However, if the group of people were alcoholics - individuals who had spent thousands of hours training themselves to use beer in a manner that does not concern buoyancy - then the tool would most likely hinder my learning goals. And perhaps this is the key point: I’m not saying that digital technologies can’t be used for learning; in fact, if these tools were only ever employed for learning purposes, then they may have proven some of the most important academic inventions ever. The argument I’m making is that digital technologies so often aren’t used for learning that giving students a laptop, tablet, or other multi-function device places a large (and unnecessary) obstacle between the student and the desired outcome. In order to effectively learn while using an unlocked, internet-connected multi-function digital device, students must expend a great deal of cognitive effort battling impulses that they’ve spent years honing - a battle they lose more often than not. (of course schools do often try to implement blockers and restrictions, but this opens up an eternal cat-and-mouse struggle, and the mice are very good at finding ways to evade the cat.) To be fair, even before digital devices took over the classroom, students struggled with lack of attention, shallow thinking, overconfidence, and other learning problems. However, with digital devices, the frequency of these problems increases. Many schools were already struggling with issues of engagement, so we need to consider what additional harms may have occurred in the early 2010s when so many schools adopted tools that can be described as distraction machines. Subscribe The Three Excuses Seeing as enthusiasts can’t lean on empirical data to support the adoption of student facing, internet connected digital devices across education, they frequently turn to three seemingly compelling arguments to excuse the lack of clear evidence of effectiveness. When placed in context, however, these arguments lose a lot of their exculpatory power. Excuse #1: Digital devices have so much potential (or “Tech is the future…”). It’s easy to get swept up in the promise of computers in education. Returning to the J-PAL review quoted earlier, after concluding that computers do not benefit learning, this group goes on to state: “Computer assisted learning shows considerable promise…against this backdrop, promising uses of education technology have the potential to support massive inroads in learning.” Potential is what something could be, what it should be, and what we hope it will be – not what it actually is. This means that arguments from potential do not accurately reflect reality; rather, they reflect the faith, belief, and desires of the speaker. In fact, when people say that computers have the potential to drive student learning, they are tacitly acknowledging that these tools are not currently achieving this aim. I am not arguing against having hope for EdTech; there is a good chance that somebody will someday create a program that outshines even the best teachers in the world. I am simply pointing out that this has not yet happened, and that promissory arguments are not a solid enough foundation upon which to change educational practice at mass scale. Excuse #2: Digital devices are ubiquitous (or “They ain’t goin’ nowhere…”) Health insurance. Taxes. Video games. Dating, marriage, and divorce. Mortgages. Laundry. Student loans. Litigation. Self-defense. First aid. Pet care. Superannuation. Yoga. I mention these things to highlight that just because something is ubiquitous does not mean it needs to be explicitly taught in school. Teachers have long recognized that they are not alone in the journey of education, and that many essential concepts are meant to be passed along by parents, peers, society, and life experience. With that said, an argument could be made that schools should be teaching these ubiquitous subjects; that it’s the responsibility of education to ensure all students are well versed in those things they are certain to encounter in their adult lives. I think this argument has some merit. However, to argue that a topic should be taught is far different than arguing that all things should be taught through that topic. The former is an argument about curriculum; the latter is an argument about pedagogy. For instance, you might believe we should teach table manners to students (curriculum), but that’s different than arguing we should teach all classes in a dining room over dinner (pedagogy). Determining what to teach and how to teach are two very different considerations. Here is where the excuse from ubiquity goes awry. Through some linguistic alchemy, the argument “we should teach computer skills” has morphed into “we should teach all skills through a computer.” Teachers around the world are being asked by developers, politicians, and their own principals to adopt digital technologies within their classroom, even if these tools aren’t well suited to the learning goals these teachers desire. Although teaching computer processes, coding skills, and digital etiquette are worthwhile goals (curriculum), it does not follow that we must reconfigure all academic subjects to achieve this goal. When it comes to effective teaching and learning (pedagogy), we should select the tool best suited to the job; not the tool that is most prevalent. Just as power tools are confined to the woodshop and Bunsen burners are confined to the science lab, perhaps student-facing digital devices should be confined to a dedicated computer lab within school; they should not be freely available whenever and wherever. Or perhaps devices should be disconnected from the internet and/or locked using an LMS system that only allows for specific programs to be employed. Employing mediated devices or a singular location may ensure that teachers choosing to employ tech have a clear reason for doing so, and students choosing to employ tech have oversight and less opportunity for detrimental multitasking. Excuse #3: Schools are using digital devices incorrectly (or “It’s all your fault…”) As referenced earlier, following a three-year analysis of hundreds of thousands of data points and concluding that computers significantly reduce learning, the OECD report went on to state: “One interpretation of all this is that building deep, conceptual understanding and higher-order thinking requires intensive teacher-student interaction…Another interpretation is that we have not yet become good enough at the kind of pedagogies that make the most of technology.” In the interest of digging deeper, let’s give this excuse the benefit of the doubt. If computers are in fact being used incorrectly in schools, then what is the correct way to use them? As the OECD report states: “[Digital technology] is linked to better student performance…when computer software and internet connections help to increase study time and practice.” In case you missed it, let me rephrase that: learning improves when students spend more time learning. This revelation is not unique to computers. Flashcards, workbooks, an empty milk jug, my great aunt Justine… as the work of John Hattie mentioned above reveals, when used to increase study time and practice, literally any tool will improve student performance. The relevant question is whether or not computers and tablets actually do lead to increased learning time. Unfortunately, as we’ve already established, the answer to this seems to be ‘no,’ they are at least as likely to increase time spent on video games, video watching, social media, and listening to music. Share When Does EdTech Bring Benefits? While I am generally critical of the way that EdTech has been put into the hands of students, I do see two ways in which digital technologies can be extremely helpful for teachers and for students. The first concerns teaching. When digital tools are used and controlled by a well-trained teacher to drive pedagogy, then any problems of multitasking and distraction that occur due to student-facing digital technologies can be averted. However, simply asking teachers to employ computers in their teaching will not, in itself, boost learning. It is essential that teachers continue to select the strongest pedagogical techniques, regardless of whichever tool they choose to employ. For instance, employing PowerPoint slides during a didactic lesson has sometimes been found to impair the amount of verbal information students retain. Again, this is not due to the tool itself; rather, it is determined by the way in which teachers choose to use this tool. In the words of the great media scholar Neil Postman, “I do not say that [digital technologies], when used properly by a skilled teacher, will not help [learning], but I doubt that it can do better than pencil and paper, or speech itself, when used properly by a skilled teacher.” In other words, digital tools do not obviate the need for sound pedagogy; and sound pedagogy will rarely be dependent upon digital tools. The second instance where EdTech may be helpful concerns issues of learning abatement. For instance, if learning is abated due to school closures necessitated by environmental disasters (e.g. poor air quality from fires), sociological upheavals (e.g. violent political protests), or health risks (e.g. local epidemics or global pandemics), then it’s worthwhile to employ digital technology as a solution. With that said, issues of digital distraction, diminished impact, and socioeconomic divide persist or increase during these forms of digital-based distance education. In fact, in a recent survey, 95% of students admit to media multitasking during distance learning, with 15% admitting going off-task over 30 times per session. As another example, if learning is abated due deafness, blindness, orthopedic, or other forms of specific learning disabilities that preclude students from engaging with non-digital learning materials, then it’s worthwhile to employ digital technology as a solution. In the end, if there is no other avenue or option for engaging with learning material besides digital technology, then we are well justified in employing it. However, if there are two or more options for engaging with learning material, then it is best to select the tool that will yield the best results. As we’ve seen, that tool will rarely be digital in nature. In Conclusion… Enough. As mentioned above, we are seeing a shift away from digital reliance in schools across many european and southeast asian countries, not just Sweden. I urge readers to take these shifts seriously and look closely at emerging data in schools that reduce their use of EdTech. If the educational and cognitive research that I have discussed is accurate, then we should see not only improvements in student learning, but also improvements in student relationships, mental health, and physical wellbeing. Subscribe 1 Mitchell (1987), Ran et al. (2021), and Benavides-Varela (2020) omitted from analysis due to looking at students with learning needs. Note: Mitchell (1987) was an as yet undigitized dissertation. Meta-analytic results, though, can be found here. 2 Two studies comprising two effect sizes were omitted from Little et al. (2018) for explicitly exploring students with learning needs. Two recent meta-analyses were added: Graham et al. (2012) and Wen & Walters (2022). 3 Mitchell (1987), Ran et al. (2021), Benavides-Varela (2020), and the two omitted studies from Little et al. (2018) were added to this analysis. Subscribe to After Babel Thousands of paid subscribers Using moral psychology to explain why so much is going wrong Subscribe Error 127 Share this post The EdTech Revolution Has Failed www.afterbabel.com Copy link Facebook Email Note Other 53 26 Share Previous A guest post by Jared Cooney Horvath Jared Cooney Horvath (PhD, MEd) is a neuroscientist, educator, best-selling author, and expert in the field of human learning. He has worked with teachers and students from over 1,000 schools worldwide.",
    "commentLink": "https://news.ycombinator.com/item?id=42115597",
    "commentBody": "The EdTech Revolution Has Failed (afterbabel.com)258 points by obscurette 4 hours agohidepastfavorite340 comments donatj 3 hours agoI work in EdTech, I have for a very long time now, and the problem I have seen is no one in education is willing to ACTUALLY let kids learn at their own level. The promise of EdTech was that kids could learn where they are. A kid who's behind can actually continue to learn rather than being left behind. A kid who's ahead can be nurtured. We had this. It worked well, in my opinion at least, and the number of complaints and straight up threats because kids would learn things \"they shouldn't be\" was just… insanely frustrating. Now in order to keep schools paying for our services, every kid is banded into a range based on their grade. They are scored/graded based on their grade level rather than their growth. It's such a crying shame. reply tombert 3 hours agoparentA bit tangential but related. I dropped out of college in 2012 and was one of the very lucky few who managed to find software engineering work almost immediately [1]. I had a bit of a complex about not having a degree, and a few times I tried going back only to drop out again because I would get bored; by the time I had gone back, I already knew enough stuff to be qualified as an engineer, and as such I didn't feel like I was getting a lot out of school and I would paradoxically do pretty poorly because I was half-assing everything. It wasn't until I found out about WGU in 2021 where I actually decided to finish my degree, primarily because WGU lets me work at my pace. Since I already knew a lot about computer science, I was able to speed through the classes that would have been very boring to me, and I finished my degree really quickly as a result. I don't feel like my education is appreciably worse than people who did things in a traditional brick and mortar school, but I'm not 100% sure if I'm a test for this. It made me realize that, at least for people like me, EdTech can be extremely powerful stuff. School can be a lot more engaging when it's personalized, instead of the frustrating \"one size fits all\" of traditional lecturing. [1] I say \"lucky\" because I think it was exactly that: luck. Yeah I learned this stuff on my own for fun but finding an employer who was willing to hire someone without credentials was never guaranteed and I feel extremely fortunate to have accidentally timed my dropout about perfectly. EDIT: For those confused, WGU means \"Western Governors University\" in this case. reply SoftTalker 1 minute agorootparentA big difference though between how you're able to leverage online learning as an adult with at least some real-world life experience vs. what a 3rd-grader can do. I am a strong advocate for zero technology in schools until high school. One thing that is rarely mentioned is that schools that issue technology to students and use it in the classroom now need to have a hardware, software, and network support person at every school. These jobs use funds that could otherwise be used to pay for more instructional staff, reduce student-teacher ratios, provide more special-needs instructional specialists, etc. reply corytheboyd 2 hours agorootparentprevI dropped out around the same time, and one other key thing I’ve noticed is the tech bootcamps hadn’t completely taken over yet, so there was less of a flood of other entry level people to fight for every single opening. You would even get a call back sometimes applying cold (no internal referral). I tend to throw “lucky” in there too when telling the tale of how I got my foot in the door— it’s hard not to, considering my jobs before that were call center rep, bus boy and dishwasher at restaurant, camp counselor. Tech changed my entire life. reply ryanmcbride 2 hours agorootparentprevI dropped out and became an engineer at almost the exact same time. I've thought about going back for a degree but I was always so horribly bad at school that it's scared me off. I was bad at it mainly for undiagnosed ADHD reasons that I'm now getting successfully treated, but I'm still worried that if I went back the same things would just happen again. I'd join a class, I'd already kind of know what they're teaching (or think I did), I'd get bored and be unable to pay attention, I'd suddenly find myself MASSIVELY behind. I really hope this isn't just an ad or something because I'd really love if there was a decent way for me to get a degree without having to go back to a college campus at 35 reply BJones12 1 hour agorootparentIt also worked for me. Whatever material you already know you can mostly skip (though you will get tested on it). Check out /r/WGU and /r/WGU_CompSci reply tombert 2 hours agorootparentprevNope, not an ad, I promise. I have negative things to say about WGU too, if that would help (mostly in their class selection for the CS degree). Feel free to email me if you have any specific questions, I think you and I might be pretty similar in this regard. reply uncletaco 1 hour agorootparentprevI dropped out of school for adhd reasons and after getting treatment I went back and finished my last couple semesters (and wrote a novel, that first year on vyvanse was insanely productive). I found it a lot easier to engage with the work and pay attention long enough to take notes in class. reply ryanmcbride 1 hour agorootparentI was skeptical when I first started treatment because I've internalized the whole \"You don't have ADHD you're just lazy\" thing for literally my entire life, and then imagine my surprise that the medicine designed specifically to make my brain work, actually makes my brain work! I still get feelings of skepticism that it actually does anything every once in a while. Despite the overwhelming evidence from my wife, my coworkers, and my life in general that it absolutely does. reply ggm 2 hours agorootparentprevIn some economies, to be an engineer means a chartered engineer, which demands completion of a formal assessment by the national engineering council. I'm not throwing shade on you, my degree from 1982 was 1 year too early to make certification in my field and I have worked for 42 years in software and systems without charter status. I am however cautious of using the word. I call myself a computer scientist even when what I do is systems and network engineering. reply throwaway2037 1 hour agorootparentI see this type of comment on HN frequently. I have a dim view of national certifications for software engineering or computer science. Are there any highly advanced economies that have \"a formal assessment by the national engineering council\" for software engineering or computer science? If so, are they useful? Do they actually indicate quality? For me, the field(s) are changing so fast, that it hardly makes sense. If you are working in an area that is not life threatening, I am not a believer in certifications. It all seems like a bunch of gatekeeping. Today, I was listening to the Lex Fridman podcast with John Carmack. It reminded me that John Carmack does not have a university degree, yet, he is one our generation's globally recognized masters of software optimisation. There are few in the world who can do what he does, and he has no uni degree, nor (I assume!) any \"national certifications\". Michael Abrash is similar. On a personal note: (US) Wall Street has similarly ineffective gatekeeping with the Series 7 & 63 exams: My father called it \"toilet bowl knowledge\" when I studied for it. He said: \"Once you are finished the exam, you can flush away that knowledge. You will never use it again.\" He is right about more than 90% of the \"knowledge\" required to pass those exams. reply seabass-labrax 1 hour agorootparent> Are there any highly advanced economies that have \"a formal assessment by the national engineering council\" for software engineering or computer science? The EUR ING certificate from Engineers Europe can be awarded to those who have attained a degree in engineering, but also for those with \"no exemplifying formal qualifications, but will have engaged in professional Career Learning and peer review via the individual route\". https://www.engineerseurope.com/what-eur-ing-certificate Since Engineers Europe is a private organization (albeit one that is widely recognized), I would imagine that individual European countries have their own rules about when someone can call themselves an engineer. I am pretty sure that Germany only requires a degree for instance. Looser still are the rules in Britain: the UK does not require any certification at all for the basic term 'Engineer', although there are more specific titles that are strictly protected (ICTTech being one of them, and yes they really do use that silly abbreviation, obligatory italics included). Theoretically, a country could refuse to recognize certifications from Engineers Europe, but that would not exactly endear them to the European Commission or to other European countries! reply fredgrott 25 minutes agorootparentprevOn personal note, Series 7, 63, and 62 are not hard tests....one can pass it without much study...I did pass the series 62 in my sleep. But keep in mind those are legal compliance tests...WTF? In short words, they give the legal basis for why in finance we have to follow a sales script as it then covers the legal boilerplate mess... On the other hand in the late 1980s I had a chance to be in the Turtle Trading class in Chicago....obviously that would have been more helpful as I think the success rate was over 50% for students of that pratical turtle trading class. reply matt_s 1 hour agorootparentprevIn the software industry and related domains in other industries (i.e. software at a bank, software for retail systems, etc.) the words engineer, developer and programmer can be used interchangeably. I think \"engineer\" is more trendy these days than \"programmer\". Other industries also use the words \"architect\" or even \"sanitation engineer\" and they mean different things. I don't think its a big deal that the same words are used in job titles in different industries. The second anyone reads the job description or follows up with a question will understand the domain someone works in. I usually go with \"I work in software\" and non-software people equate all of that to \"IT\", much like I classify Doctors as \"medicine\" and there are different disciplines. reply marssaxman 1 hour agorootparentIt is a little amusing when people get fussy about credentials and certifications for the term \"engineer\" given that an \"engineer\" in the railroad industry is simply a person who operates a locomotive engine. It seems a very small stretch to analogize software engineers as operators of computing engines! reply snapcaster 1 hour agorootparentprevI would be skeptical of granting that much power/mental space to gatekeepers you didn't elect. You're fine at your job without the certification right? so maybe it's not needed? reply nadermx 2 hours agorootparentprevSo much this. I studied and got a degree in civil engineering and only call myself studied as an engineer because I never apprenticed or took the professional engineer exam. Despite doing a ton of software now I still feel it would be an insult to my friends who are P.E.'s to call myself an engineer. reply ghaff 1 hour agorootparentIn civil engineering especially, you sort of assume senior people have PEs because they have to sign off on certain official documents. But, in general, outside of a few contexts like that, very few people pay any attention to whether someone is a PE or not. reply tombert 2 hours agorootparentprevThat's fair, I say the word \"engineer\" because that was the job title at the companies. Generally when people have asked what I am, I just say something kind of hand-wavey like \"Eccentric\" or something. reply cwdegidio 2 hours agorootparentprevWGU BSCS grad here as well. Regular brick & mortar schools never worked for me, but WGU clicked and let me finally get my degree. Now I’m working on my MSCS with CU Boulder, which although being managed via Coursera has the same feel overall as WGU. In some ways I can see how some think EdTech failed… but I do think there are players in the space that are doing good things reply sourcepluck 1 hour agorootparentprev> \"It wasn't until I found out about WGU\" Could I politely suggest writing out the full acronym the first time, and then using WGU subsequently? It'd be a good deal more considerate of non-U.S. readers. reply berelig 1 hour agorootparentJust adding this on OP's behalf: WGU = Western Governors University https://www.wgu.edu/online-it-degrees/computer-science.html reply kridsdale1 1 hour agorootparentprevYes it leaves me guessing. West Georgia University? Washington, George Understanding-Builder? reply mbreese 1 hour agorootparentWestern Governors University But they rarely use the full name, even on their own site. reply el_benhameen 2 hours agorootparentprevAlso tangential, but do you feel like you’ve gotten your money’s worth out of the WGU program? I have also been employed as degree-less an engineer for a long time (I have a BA in an unrelated subject), and I’ve occasionally thought about going back to get a BS or a masters in comp sci. Partially for the signaling aspect, and partially to fill in any knowledge gaps that I’m unaware of. WGU’s pacing and pricing sound great. I’ve also heard that it can sometimes be a questionable resume signal. Any thoughts? reply BJones12 1 hour agorootparent> I’ve also heard that it can sometimes be a questionable resume signal. Any thoughts? There are jobs that require a degree, and there are jobs that require a degree from MIT. This will get you in the first door, but not the second. Also consider GaTech's OMSCS, though there are CS entrance requirements. reply cwdegidio 2 hours agorootparentprevNot OP, but I think it was worth it. Within a year of getting my BSCS, I added almost 25% to my salary. It gave me the leverage I needed to push for more. For someone coming into it with no experience I can’t say how well it will play out, but for a degreeless developer, I think it just checks that one box and helps. reply jspiral 2 hours agorootparentprevWGU was a customer when I was at Learning Objects, they always impressed me visionary and outcome oriented. glad to hear a positive anecdote more than 10 years later. reply VSerge 2 hours agorootparentI think many people have very positive experiences and data, at scale, speaking to the kind of success Edtech can have. I was involved with a study by the Center for Game Science (University of Washington), led by Zoran Popovic (of Foldit fame), with over 40 000 kids in the US, Norway and France participating, from grade 1 to the end of high school. I think the numbers were 93% of kids managing to achieve mastery in solving an equation for x in one hour and a half of this, starting from first principles in their learning (it didn't matter what they knew before or didn't). This was met by downright hostility from some schools systems, with the institutions saying in essence \"it's impossible kids learn like this\", ignoring empirical evidence in the process. Teachers on the other hand, thought it was great and had a profoundly positive impact on their students. Nordics seemed to be less averse to letting their students progress along this path. Ultimately the company that had developped the game went towards more traditional school publishing with paper methods + digital tools, which in my opinion is vastly less efficient, but that has the huge benefit of being something school systems know how to buy and implement. This is meaningful when looking at the promise of edtech, because a lot of what's called edtech is frankly of poor quality, but some things are pure gems, and saying edtech has failed like the author of this article is not only misguided but dangerous in the extreme for the kids, often from underprivileged backgrounds, who benefit the most from this kind of cooperative, adaptive, and gamified approaches. These approaches don't feel like school, they don't feel complicated, and kids can just have fun and explore and learn logical rules, verbalize what they are doing with one another and help one another, progress at their own pace, and end up learning stuff considered \"hard\" when it really isn't, like math, physics, chemistry, etc, ie logical ruleset that can be represented with meaningful manipulatives and made into a fun learning journey. Here's a 5 minutes vid the center for Game Science published at the time: https://www.youtube.com/watch?v=IdrraeJyhoQ Some numbers here: https://dragonbox.com/about/algebra-challenge reply cwoolfe 48 minutes agorootparentYeah! I used Dragon Box in my high school math class back in 2015. Loved it! reply quacksilver 2 hours agorootparentprevI'm sad WGU is only for US citizens. I hear lots of good things about it but can't join in. reply jackbravo 1 hour agorootparentYes, I'm wondering if there are alternatives outside the US to get a full undergraduate or master's degree online at your own pace. reply simonw 58 minutes agorootparentThe UK has Open University which has been around for a long time (since 1969) and has a really good reputation: https://en.wikipedia.org/wiki/Open_University reply Sanzig 1 hour agorootparentprevIn Canada, Thompson Rivers University offers a bachelor's in computer science as a fully distance option. On the French language side, Université TÉLUQ (part of the Université du Québec network) also offers a BS in CS. reply gedy 1 hour agorootparentprevOregon State has a online BSCS program reply BJones12 1 hour agorootparentprevA few Canadians can sneak in, depending on location. reply gspencley 2 hours agorootparentprevI had a similar experience but I dropped out of high school. For years the social stigma about being a high-school dropout got to me, and I was determined to enter University as an adult student and get my CS degree. The problem was that I already had steady work as a software developer. And the entire reason I wanted to go to school in the first place was to level up those skills. It didn't help that, in my late teens / early 20s, I was working for a dot-com startup and we had coop students from the local University, and they weren't being taught anything that I didn't already know or understand. Eventually I came to the opinion that, at least for me (not necessarily for others), formal education institutions amount to little more than institutional child abuse. For hyper-independent and high IQ students, particularly those with aspergers (I've never been diagnosed, but even my mother says it would put my childhood into perspective), class rooms are not a positive experience. And I can't honestly look back at my time in public school and identify a single subject that I learned in class, as opposed to independently. According to my parents I was literate before entering kindergarten and I taught myself maths and history as an adult because school taught me to hate both (I don't hate either now, but the way they were taught in school divorced them from our day to day lives, created busy work and the impression that what we were being taught was irrelevant and unnecessary). I tried online learning for a little bit in order to get my GED but I abandoned that as well because it still felt like boring busy work. EdTech seems like it might offer the solution to younger children with my personality type. But honestly, I personally learn best by reading books, experimenting (hands on learning) and having goals that I actually care about and can relate to. If school had taught us to prepare a tax return, balance a household budget, that history gives us predictive \"power\" by examining how humans dealt with certain situations historically, if English class focused on effective communication rather than trying to guess at metaphors and hidden messages in the writings of dead authors who can't be asked to comment on that conjecture... maybe I wouldn't have loathed the experience so much and felt like I was just in a prison for children. In other words, my personal experiences with EdTech has seen these trying to take a standard public school curriculum and package it in a digital \"work at your own pace\" format. Whereas my issue with school was at least in large part the curriculum itself. The pace was a factor too ... just not the only one by far. reply marssaxman 2 hours agorootparentprevWhat was your motivation for getting the degree? It does not seem, from your story, that its absence blocked the growth of your career; were there subjects you wanted to learn for which self-education proved difficult, or does the credential itself have some value? reply tombert 1 hour agorootparentA few reasons. For the most part, my career was fine. I had a job at Apple as a senior software engineer at the time (though I didn't really enjoy the job itself). Part of it was just a bit of an inferiority complex over insecurity of not having a degree. People were generally very polite about it, but internally it felt like every bad thing happened to me in my career was because of the lack of a degree; every comment felt like it was loaded with passive aggression, even if that wasn't true. Kind of the straw the broke the camel's back was actually a bit funny; I had applied for a job as an engineer at Microsoft Research, and I was declined for it. It was far from the first time I had been declined for a job, obviously, but in this case it was the first time that the declination specifically said \"declined because you don't have a degree\". In the nearly a decade of working as a software person prior to that, I had never explicitly been told that my lack of degree was the reason for a rejection. That rejection coincided with another milestone: my 30th birthday. I had told myself I'll finish my degree \"next year\" for nearly a decade, and now I wasn't in my 20's anymore. Obviously there's no real difference between 29.99 and 30 years old, but it just kind of hit me like a ton of bricks. I registered for WGU that day. There are probably numerous other reasons, I did want to transition to a more theoretical role as well, but those are the main ones. reply marssaxman 2 minutes agorootparentThank you for sharing your story. I, too, dropped out of college, but finding employment as a programmer back in the mid-90s required very little luck; people were figuratively beating down my door with offers of work. It became difficult to justify the time and expense of further education when my career already seemed to be launching, ready or not. Funny that you mention MSR - I applied there back in 2007, and they are also the only people who have ever turned me down for lack of a degree! (Though I still got an offer out of it, after they forwarded my information along to devdiv...) bravetraveler 1 hour agorootparentprev+1, very powerful stuff. My anecdote: I was expelled from a vocational school my senior year, thanks to EdTech I returned and finished the year within a month reply mrandish 1 hour agorootparentprevSorry, what is WGU? reply pen2l 1 hour agorootparenthttps://en.wikipedia.org/wiki/Western_Governors_University reply tombert 1 hour agorootparentprevApologies for confusion, I forget people don't have a direct microscope to my brain sometimes! I edited the post to clarify. reply lolinder 2 hours agoparentprevThe incredibly frustrating thing about this is that this is always done in the name of \"equity\", but the result is that the system perpetuates the inequities that already exist. Because the public schools force kids into grade bands and don't allow children who are ahead to learn at their level, wealthy parents (and only wealthy parents) figure out ways to supplement or move their kids into schools that are appropriate for their level. Only wealthy parents can afford to do that, while everyone else is stuck with whatever their local school offers or doesn't offer. This perpetuates generational inequalities in ways that the public school system is supposed to solve, all in the name of \"leaving no child behind\". reply s3r3nity 2 hours agorootparent+1. Folks pushing for equity haven't read (or too young to have read) \"Harrison Bergeron\" by Kurt Vonnegut, and it shows. Instead of handicapping those who are ahead, we should intervene with those who are falling behind. Instead of enforcing equal outcomes, instead prioritize offering equal opportunity for every student to get the highest quality of education. reply Spivak 1 hour agorootparentYou're literally describing equity. The more interesting question what option will you choose when you're told that individual interventions as you describe are so expensive as to be infeasible. I don't think it's an issue of a person's politics, Republicans tried the exact same thing with No Child Left Behind. Is the more important thing the individual rising to their highest potential, or is the more important thing the system where economic factors have created a cycle where only children of middle-class or better families are given the environment to rise and those kids run with the flywheel and become the middle-class parents. I was literally never not going to be successful, I think I'm reasonably intelligent but that by far wasn't the biggest factor. My parents made damn sure I was on the gifted track, always got A's, and was set up to get into an in-demand major at a prestigious university. Was I actually that special or was I just the chosen one, in that I was chosen? You can only be like \"that's not true of everyone \" but the exceptions fall away in the aggregate where your success is frighteningly well predicted by your zip code. reply lolinder 56 minutes agorootparent> The more interesting question what option will you choose when you're told that individual interventions as you describe are so expensive as to be infeasible. The top-level-commenter's point is that this is not necessarily the case anymore—the whole promise of educational technology was that we could finally scale individual intervention to every child, but efforts to do so have met with stiff resistance. I also work in EdTech and I've seen exactly what the OP is talking about. We're at the point where we could extend the flywheel to more children than ever by integrating it into the public school systems instead of having it be something that upper-middle class parents have to provide as a supplement, but the culture has so thoroughly embraced the idea that \"getting ahead\" is unfair that we're not allowed to systematize it even when doing so would benefit poor students the most. reply mrandish 1 hour agorootparentprev\"Bergeron\" is one of those rare things that's just presciently ahead of it's time it's almost spooky (kind of like \"1984\"). reply phil21 1 hour agorootparentprev> wealthy parents (and only wealthy parents) figure out ways to supplement or move their kids into schools that are appropriate for their level. Not true. AP courses and magnet schools are the sole way for working class/poor students to get ahead in life in the public school system. Myself and many friends took advantage of this, and zero had wealthy parents. Many had food scarcity levels of poverty at home but received excellent educations due to these programs existing. Heck, private schools also participated in this - giving out test and grade based scholarship for exceptional students from poor socioeconomic backgrounds. Many friends participated in such programs, even to the point of working \"jobs\" for the school after classes to pay for their education. This is now seen as abusive to many. The ironic and incredibly frustrating thing are now these programs are being systematically dismantled over the past 20 years in the name of \"equity\" with these trends only accelerating. The one thing it DOES require is parents who care and give a shit about their kids. I suppose if you squint that's a form of wealth, but not what people mean when they talk about such topics. reply hintymad 22 minutes agorootparentprev> that this is always done in the name of \"equity\", I never understood the rationale behind these progressives. Don't they have kids? Don't they know even twins may perform differently in school? I have two kids. They are only 1 year apart. They can access any educational materials as they want. Even if their school teachers were not good (they are good, by the way), they had access to excellent private teachers and tutoring. Yet, one handles maths with ease and has jumped three grades without even trying, but on the other hand does not like reading or writing. The other can barely keep up and I spend enormous amount of time just to make sure he can understand the fundamentals, but on the other hand he love reading and is creative in writing. Equity my ass. reply nitwit005 14 minutes agorootparentprevPeople were like this even before equity was much of a concern. I think it's sort of natural for teachers to view kids that are both too behind or too ahead as \"problems\". In both cases, there is an indication they've failed, and no one likes that. reply emodendroket 40 minutes agorootparentprevIt is not \"always\" done for that purpose; often people don't want children to learn things for other reasons, like wanting to have more control over them, not liking the implications of certain historical events, or having fanciful ideas about preventing their children from engaging in risky behaviors by pretending they don't exist. reply lolinder 37 minutes agorootparent> The promise of EdTech was that kids could learn where they are. A kid who's behind can actually continue to learn rather than being left behind. A kid who's ahead can be nurtured. ... > Now in order to keep schools paying for our services, every kid is banded into a range based on their grade. They are scored/graded based on their grade level rather than their growth. This is the behavior that I'm referring to. I'm not talking about political fights about what goes into the curriculum in the first place, I'm talking specifically about efforts to keep children from getting ahead along whatever the curriculum is already defined to include. reply theossuary 2 hours agorootparentprevThis is a silly thing to say. There's no evidence that edtech was forced to band students to grade levels due to equity. It's just as likely it happened due to Bush's Leave No Child Behind, or out of a desire for administrators to follow rules. reply unsui 1 hour agorootparentReminiscent of the recent HN submission for \"Security is a Useless Controls Problem\", re: 5 monkeys & ladder expt.: https://news.ycombinator.com/item?id=42110149 The crutch isn't the EdTech itself. The numerous examples regarding WGU's success for some self-driven training here suffices to suggest the tech isn't the issue. It's the metrics required as part of legislation such as NCLB that effectively bind administrations to ensure adherence to a common curriculum, regardless of capacity or competence. This effectively imposes Goodhart's law, since the only way to meet these measures on scale is to teach to the test, and only the test. This ensures that no actual deep learning occurs for those falling back, while hamstringing those who master the subject matter early since there is no mechanism for rewarding early mastery. reply lolinder 1 hour agorootparentprevWhere do you think the rules that administrators have to follow come from? And what do you think the purpose of No Child Left Behind was? Its long title is \"an act to close the achievement gap with accountability, flexibility, and choice, so that no child is left behind.\" I think you may have interpreted my use of the word \"equity\" to mean something along the lines of \"woke\", but I meant it in the strictest sense: The red tape that OP is talking about was put in place in the name of ensuring equal opportunities for all children, but has actually accomplished the opposite. reply gosub100 2 hours agorootparentprevPlus it can't be denied that the system incentives holding smart kids back because they boost the metrics: GPA, standardized tests, graduation rates. reply WillAdams 1 hour agoparentprevThe best school which I ever attended rigorously divided academic and social classes --- academic classes (reading/English/math/science) were attended at one's ability level, while social classes (homeroom, phys. ed., social studies) were attended at one's grade level. There was a 4 year cap up through the 8th grade (so I was a 4th grader attending 8th grade English, math and science classes), and after that, the cap was lifted and students could begin taking college courses in 8th grade --- some of the teachers were accredited as faculty at a nearby college, and if need be, arrangements were made for students to travel to the college, or professors from there to travel to the school. It was not uncommon for students to graduate from high school and simultaneously be awarded a 4 year college degree. Apparently, the Mississippi State Supreme Court declared the system illegal because it conferred an unseemly advantage on the students who were able to take advantage of it, with no equivalent compensation for students who were not. reply walterbell 52 minutes agorootparentAmazing! Any articles on that school? reply WillAdams 17 minutes agorootparentNot that I've been able to find --- it would have been the school local to Columbus AFB in the late 1960s to mid 70s. The State Supreme Court stuff is my hazy recollection of letters my parents received from other folks who were still living there when the school system was changed. reply walterbell 4 minutes agorootparentLooks like other cases were ongoing even in 2002, https://www.cleveland19.com/story/1045614/ohio-supreme-court... reply boomchinolo78 1 hour agorootparentprevThis is terribly sad! Almost satire reply chongli 2 hours agoparentprevThis is because education is more about gatekeeping and politics than trying to maximize human capital development. We all ostensibly want it to be about human capital but our attitudes and behaviour towards education at the political level show otherwise. The gatekeeping element seems to have developed in tandem with / response to the signalling hypothesis [1]. Simply put, if kids are trying to do the minimum necessary to get by, we raise the bar on the minimum standard until we're satisfied. Teachers (K-12 at least) respond with grade inflation, adding lots of noise to the signal, and we in turn respond with standardized testing in an attempt to clean up the noise. [1] https://en.wikipedia.org/wiki/The_Case_Against_Education reply michaelrpeskin 2 hours agoparentprevThat's \"equity\" for you. We can't be unfair and give someone something that makes them better. It's easier to keep the top kids down than it is to lift the bottom kids up. reply Afton 2 hours agorootparentTo be fair, it is less about \"keeping top kids down\" and more about \"let's use our very scarce resources helping the bottom kids\". Put that way it seems less malicious, and more like probably the right thing to do over all, while still being extremely frustrating if you are, or are the parent of, a 'top kid'. I know that in Seattle, I've been very frustrated with all the talk and promise of our school to provide enrichment to kids like mine who are able to learn quickly and are ready for more advanced learning opportunities, only to discover that it is haphazard, often in name only, and there isn't time or interest in providing more. But it's not because of some drive for 'equity'. I've talked with teachers (as friends, not in a school setting). They're doing what they can with the resources they have. reply dxbydt 1 hour agorootparent> \"let's use our very scarce resources helping the bottom kids\" So why does the richest country on the planet have \"very scarce resources\" only when it comes to educating its kids ? Of course, that very same public school has a stadium that is easily several times larger than facilities provided for Olympic level athletes in a poor country like India. That same school has a music program with a huge ballroom, recording studio, fancy musical instruments...bass sax, harps, bassoons and contrabassoons, double bass, violas...like literally, even a top of the line Bollywood studio doesn't have half of this. USA has chosen to prioritize just about everything other than basic classroom stem education. Then when you ask the math teacher why the kids don't know their logarithms and trig tables, he is like...well we have calculators and chromebooks. I have spent multiple years trying to engage with school board officials in public schools here in the mid-west. The most reasonable, unemotional, takeaway after all this engagement is that Americans are simply not interested in classroom education. They don't have teacher, don't have the time to teach, don't care for books or chalkboards...its simply not their thing. That's fine. I do hope all of this hyper-investment in music and sports produces some world class track and field athlete who can run a mile under three minutes while playing the bassoon. reply chongli 2 hours agorootparentprevand more like probably the right thing to do over all It’s only the right thing if you assume equity as a starting position though. We already know, rather robustly, that the weakest and most disruptive students can consume far more than their share of limited resources and produce correspondingly limited outcomes. Another theory goes that we should provide more resources to the best and brightest students so that they go on to become great leaders and experts in their fields and then improve society for everyone. This may be called the “rising tide lifts all boats” theory. It was the predominant one in the US for much of the 20th century and earlier, and it arguably led to the US’s position as a global leader in science, technology, and industry. reply mitthrowaway2 2 hours agorootparentprevOne unfortunate consequence is that underchallenged \"top kids\" can quickly turn into \"bottom kids\" themselves. (Especially, but not only, if they are bullied by their peers for appearing too engaged with their studies). This is a devastating loss. reply dartos 2 hours agorootparentprevI don’t think anyone is trying to keep bright kids down, but you need to ask. Is it worth it to spend monumental effort trying to get not very bright children to meet some minimum requirement OR is it more worth it to just encourage and lift up brighter students. I don’t think there’s a clear answer, but what we have isn’t it. reply theamk 1 hour agorootparentUnless your school is so small that there is only one math class per grade, it is entirely possible to do both. reply theamk 1 hour agorootparentprevI think you've got lucky. In our public school, there are multiple math classes already with people randomly assigned to one of them, and both advanced and regular classes are taught by the same teachers. So there is very little extra cost to have more advanced math classes - shuffle kids around and allow teachers to teach one of the classes faster. And yet we only one advanced half-class, despite dozens of students wanting to go there. Why? Our school management is explicitly against that. I've talked to them directly, and they admitted that they are very much against any \"out of the grade\" behavior, the teachers are not allowed to give more advanced material. It was all in the name of equity of course. reply BeFlatXIII 2 hours agorootparentprevAs one of those frustrated top kids, it taught me a well-earned contempt for my neurotypical peers. Frustration at spending the resources on them when it didn't seem to move the needle. reply snapcaster 59 minutes agorootparentBut you turned out fine right? you're mad you're not even further ahead than the normies or what? reply tqi 2 hours agorootparentprev\"let's use our very scarce resources helping the bottom kids... They're doing what they can with the resources they have.\" I'm not convinced that resources are actually that scarce (the US has the second-highest amount spent per pupil among OECD countries). I think your teacher friends are doing the best with what they are being given by school boards, which is different. In many cities, the school board is considered a key stepping stone into bigger and better offices (city council, boards of supervisors, mayor, etc), which means it often attracts folks who are trying to leverage their positions to take stances on issues that have nothing to do with education. I think attacking gifted programs / tracking is one example of this, which are cast as perpetuating inequality, despite evidence that they help students across the board. reply ndriscoll 1 hour agorootparentprevThe top kids don't need more resources. They need to be segregated from the bottom kids, which can be done with the same number of teachers by tracking. reply boomchinolo78 2 hours agorootparentprevI mean there are alternative models. Lee Kuan Yew from Singapore famously opposed the \"helping the bottom kids at expense of the top ones\". Is it really the right thing? reply sixo 2 hours agorootparentprevEquity really isn't the ideology doing this, except in a few cases, it's something else. I'd speculate the dominant effect is that people tend to dislike and resist what they have a hard time imagining: there's a strong bias towards easily-administrated uniformity, and ppl tend to enforce what they know and what they were brought up in themselves reply fearmerchant 2 hours agorootparentI work in education and you're probably right that it's not THE thing, but it does enter the conversation. Teachers are supposed to provide what's called differential instruction but the quality and fidelity really depends on the teacher. reply sixo 1 hour agorootparentyeah, it's there, but I tend to think that \"equity\" is what people end up reaching for as a rationalization of the emotional need for uniformity / conformity / familiarity It sort of \"fits\" but it just doesn't explain very much on its own reply fearmerchant 1 hour agorootparentAs an aside, I'm not really sure whether equity in the schools is simply being used as a buzzword folks think they need to include in their statements about various topics, or whether people really adhere to what it means and entails. Probably a little from column A and a little from column B. reply dpkirchner 2 hours agorootparentprevAgreed, and that strong bias is likely driven by cost, not the equity boogeyman that causes many a jerked knee. reply hibikir 2 hours agorootparentCost is a reason, but also there's social concerns. In the standardized system, all classmates share the same material, at the same speed. This shared experience disappears when every student is going at their own place, looking at a computer. This leads to the students being a bit more alienated from each other, and comparisons that go way past just a grade. When a classmate at the same age is covering material that someone else did three years ago, you will get the tension from both sides, in the same way that it's not all that great socially to be on a traditional school and take classes 3 years ahead. This issue disappears with all adult students, but around puberty, we are short tools whenever we don't have large enough cadres that we can just put all the kids fast at a given class all together. reply theamk 1 hour agorootparentAmerican high schools (grades 9+) already give each student customized schedule, so there is no single set of \"classmates\" anymore - a Computer Science class might have 9-th graders and 11-th graders sitting side-by-side. This does not reflect their knowledge levels, it only means that one student decided to take CS first, and other student decided to leave CS for later and take some other class (like Physics) first. This is why parents are unhappy: it's OK to skip most math classes entirely and only do state-mandated minimum... but skipping _basic_ math classes and jumping straight to advanced ones is not allowed. reply robertlagrant 2 hours agorootparentprevNot really. Equity is a philosophy (of many; none perfect) that describes how to spend money. Do you spend money (mostly) on bringing kids up to average, and any kid average or above average basically stays where they are, as far as the school's efforts are concerned? Do you spend equally per child, aiming to uplift each of them by the same amount? ... Many options. Equity is the first one. reply leereeves 2 hours agorootparentprevCan you name any examples of gifted programs being shut down, citing any reason other than equity? The examples I've seen, in New York, Seattle, and LA, all cited equity as the reason. Edit: I'm responding here to the comment \"It's easier to keep the top kids down than it is to lift the bottom kids up.\" reply sixo 1 hour agorootparentOP said: > It worked well, in my opinion at least, and the number of complaints and straight up threats because kids would learn things \"they shouldn't be\" was just… insanely frustrating. .... Now in order to keep schools paying for our services, every kid is banded into a range based on their grade This sentiment that \"they shouldn't be\" learning advanced things is not an equity argument—it's probably the kids' OWN parents complaining! I certainly agree that the equity-based shutdowns in highly-progressive cities are a problem, but that's really a very limited case; this thread is really about an entirely different phenomenon. reply gamblor956 47 minutes agorootparentprevLAUSD has gifted programs. As do the dozen other districts in LA County. NY also still has gifted programs... Yes, some of these were shut down. It wasn't because of \"equity\". It was because of something called \"budget cuts.\" reply AdamN 2 hours agorootparentprevThat's not necessarily the reason. OP probably was letting faster kids jump ahead but that doesn't really do anything helpful for a class that's going through a topic together step by step. Better would have been to let the faster person learn something else tangentially related to the course so that they stay engaged but they don't disengage because they're simply ahead of the rest of the class on the next topic - which is just frustrating for everybody. Alternatives exist for self-directed study and the tutorial system but that's presumably not what they're building for. reply JoshTriplett 1 hour agorootparentOr just...not have students at wildly different levels in the same class. At high school and more so in universities, there are distinct classes at different levels, and prerequisites for those classes, and students at different levels. Bring that system to all grades, rather than just having \"age N = grade X\" as one giant class with pressure for uniformity. reply mettamage 2 hours agorootparentprevI find that an uncharitable take of equity. You can also make someone like that grow stronger so that they have more to contribute to society. “Strongest shoulders carrying the heaviest burden” and all that (it’s a Dutch saying about the Dutch tax system). reply insane_dreamer 2 hours agorootparentprevNonsense. Equity is not to blame. Finland has arguably the most equitable education system in the world and it's ahead of the US. There are plenty of problems with the US education system -- among them this typically SV $$$-eyed idea that \"tech solves everything\" -- but investments to raise up the educational standards of low-income or underserved communities is not one of them. reply deanCommie 2 hours agorootparentprevThere are many good reasons to criticize equity. But one should understand what that term means before doing so. This seems quite the opposite - promoting mandatory equality (equality of outputs in fact) rather than equity (which would explicitly account for giving students different paces to learn at, and grade accordingly) reply unsupp0rted 2 hours agoparentprevI've never seen a teacher that was comfortably capable with even 50% of whatever EdTech they're handed. How are they supposed to maximize the use of it? I remember having to painfully sit through multi-hour presentations in which they'd explain how to use a hamburger menu to find the app settings, and half the participants furiously scribbled down notes so they wouldn't get lost later when they needed to find the settings without guidance, on their home computer. This was only a decade ago and I doubt it's much better now. People who go into teaching aren't exactly the best & brightest most of the time. And the results speak for themselves. reply kmerroll 1 hour agorootparentNo doubt that there have been poor teaching experiences, but I would counter that my experience with EdTech teachers has been amazing and empowering. Really don't think we can tar all the teachers with the \"EdTech sucks\" brush. reply luqtas 2 hours agorootparentprevas a counter-point, not a teacher nor related to but i heard around 400 hours of pedagogy podcasts, be it the science of it, small-talk about teaching & sometimes edtech software that seriously, most of the time just sounded as apps coming from the next guy trying to be the next silicon money maker by offering what Google Docs offers but in a fancy app or in the most complex cases, what Matrix/Discord offers for free or what Emacs org-mode could accomplish without diving far from the basics it provides. there was good apps & often these were backed/based by novel & evidence based ways of teaching reply unsupp0rted 40 minutes agorootparent* where \"evidence-based\" in pedagogy is a grad student who studied two classes of 13 Inuit 3rd graders in 2002 and extrapolated from there reply handfuloflight 1 hour agorootparentprev> there was good apps & often these were backed/based by novel & evidence based ways of teaching What are the good apps? In what direction do you think educational software should go? reply narrator 28 minutes agoparentprevI think the Lysenkoism of our age is all people are equally intelligent and equally good at all things, thus one size fits all education is an ideological imperative. There are too many unacceptable facts that lead to conclusions that contradict this ideology in the kind of approach you're talking about. If all children do not perform roughly the same, ideologues will not think that people have naturally different talents and abilities, but instead think there are implied violations of laws protecting against discrimination in education. That being said, I'm sure homeschoolers and people not indoctrinated, even those with lesser abilities, will really appreciate this approach. reply cptaj 3 hours agoparentprevThis has also been my experience. Curriculum standards really put a stop to any radical changes in the way we structure the learning process. I guess that IS the point of standards, but we really should be experimenting more on the fringes. reply jt2190 2 hours agoparentprev> The promise of EdTech was that kids could learn where they are. This is only truly possible if we trust educators enough to allow them to use a different approach with a child. The system we have has leaned heavily toward “trust nothing”. Parents and teachers all want the best for their students but at the same time we demand that everyone stick to the prescribed curriculum lest something unapproved should enter a classroom. This is how you get “McDonalds” results: Consistent and maybe somewhat average overall. reply bitcurious 3 hours agoparentprev> We had this. It worked well, in my opinion at least, and the number of complaints and straight up threats because kids would learn things \"they shouldn't be\" was just… insanely frustrating. Can you give examples? Are we talking evolution or addition? reply Swizec 2 hours agorootparent> Can you give examples? Are we talking evolution or addition? Not GP but I can share a personal experience from high school: I was extremely advanced in English class. Like would literally finish a 45min exam in 10min and get an A. This caused problems for the teacher. For one I was constantly bored and disruptive of others around me because I was bored and needed friends to chat with. But this made their grades suffer (it’s okay I did their exams too, lol). Another big problem for her was that teaching me was a pain in the ass. I was clearly fluent in English but couldn’t be arsed to follow today’s lesson. My essays were a pain to grade because she could never tell if I was using a weird word I picked up from Tolkien or the internet, or just used the wrong word. She had to use a dictionary. During class sometimes I’d pull her on tangents discussing the nuanced meaning of a word she was teaching and none of the rest of the class could follow. Etc. Basically I was a pain in the ass because the class was too easy and teenage boys aren’t known for their good classroom behavior. The best advice that teacher gave me before the matura exam (like SATs) was this: Ok Swiz I know you think you’re a wiseass, but the matura commission won’t pull out a dictionary, they’ll just mark your answer wrong. Tone it down. And if you think “Wow that teacher failed to control a problem student”, I think she did the right thing. It’s very easy to crush someone’s spirit if you don’t let them explore and pursue a thing they’re clearly talented in. reply kridsdale1 1 hour agorootparentI was the same in math and science. I remember being told “You are not supposed to know that, and who told you?” angrily. My moment of disillusionment with authority. reply shortrounddev2 2 hours agorootparentprevMy guess is that the kids were learning ahead of the rest of the class and it made the teacher's life harder to keep track of where each kid is, or had to field questions outside of her expertise since often elementary school teachers only know enough to teach elementary school reply JoshTriplett 1 hour agorootparentA major part of this problem is teachers who treat \"student knows something I don't (or aren't prepared to teach right now)\" as a status challenge to be rapidly obliterated, rather than as an opportunity to encourage a student. Many, many adults are extremely emotionally unprepared to accept the possibility that they may be wrong and a child may be right; they start from the assumption that this is an impossibility, and reason backwards from there. Or, in the case where they do in fact know that the child is right, they nonetheless decide to prioritize asserting authority over demonstrating how a mature adult should handle being wrong. And thus do students learn bad examples of what to do when they're wrong. reply Projectiboga 1 hour agorootparentprevOn top of that the teacher has to juggle two tracks, the normal one and a special needs one. There has been a push for awhile to put mentally disabled kids in with their age peers and the teacher has to handle it, maybe with a low pay assistant. reply miningape 43 minutes agorootparentDenmark did this about 10 years ago, the results pretty much speak for themselves: Everyone is frustrated with it, teachers, parents, students, as well as their special-needs counterparts. Grades have been steadily decreasing across the board, while enrolment in private education has skyrocketed (private schools do not have to accept difficult students). The private education is particularly surprising as Denmark has a very strong tradition of public education, where private education was viewed as something for the \"elites\" of society (e.g. royalty), now it's becoming more and more common. reply AdamN 2 hours agorootparentprevYeah - this is on OP if that is the case. No teacher wants that and it's annoying for the ahead kids and the behind kids. Better to give them something tangential to keep them engaged but still gate on moving ahead with the mainline curriculum. reply oytis 1 hour agorootparentTo be fair - maybe that's what the product mentioned should have been doing? You can focus on general problem-solving ability by giving talented kids hard problems with the amount of knowledge adequate for their level rather giving them more an more material and making the whole learning process less manageable. reply lifeisstillgood 42 minutes agoparentprevI love the idea of individual pacing of kids educational journies - if you do have the syllabus and software to take every kid individually through school, is it impossible for us to fund the school for five years - and after years of every kid walking out with top grades there might just be some social proof It seems like it is possible - probably enough people on this thread could make that investment reply jdprgm 1 hour agoparentprevI've always thought it would be interesting to have a education system that focused primarily on the best outcome for the brightest students and focused the vast majority of resources on the top 5% or so. I wonder if the total impact made (gdp, research contributions, etc) by a cohort of students this way would be higher vs spending resources to slightly bring up the average on a large number of students that never make much of themselves. reply williamcotton 48 minutes agorootparentThere are concrete objectives for educating a voting public in a democracy that would be entirely unserved by this proposal. reply miningape 4 minutes agorootparentThey're not any harder to manipulate once educated reply smeej 49 minutes agoparentprevThey're not just banded into a range based on their grade. They're banded into a grade based on their age, even though \"being within a year of the same age as somebody\" becomes essentially meaningless as soon as you're out of school. reply Alex3917 2 hours agoparentprev> the problem I have seen is no one in education is willing to ACTUALLY let kids learn at their own level. OK but we've known this since, when, the 60s? Look at all the academic research on the adoption (or lack thereof) of programmed instruction, programmed learning, etc. If we didn't already know this before the \"EdTech Revolution\" then of course the industry would get a pass, but the fact that we already knew what would happen and why is what makes it a scam. reply dfabulich 1 hour agoparentprev\"Holding kids back\" is not the reason EdTech fails at scale. The problem is that people who succeed in tech are able to effectively educate themselves, alone, without a dedicated human teacher supervising them or a group of student peers. (You need this skill to succeed in tech, learning new APIs/languages from written materials and online videos.) The techies who build/fund EdTech wrongly assume that everyone could do this if only they had access to the learning materials, or if the tech vaguely simulated a teacher (an interactive textbook). But for most students, fitting in with peers and earning the respect of their teacher is the only reason they're bothering to learn at all. (For kids especially, adult career prospects feel so remote that it scarcely seems worth the trouble, whereas earning respect right now is a very, very concrete problem!) Banding kids into grades is the only thing making most kids succeed. I guess that is a \"crying shame,\" but it's a tragedy, not a policy failure. reply miningape 0 minutes agorootparent> everyone could do this if only they had access to the learning materials, or if the tech vaguely simulated a teacher Everyone could do it if they were taught to teach themselves, it's funny we've almost come full circle back to the original intention of public education and universities reply ndiddy 22 minutes agorootparentprevYou're absolutely right, even in this thread there's a ton of \"I was able to teach myself, so clearly everyone would be geniuses if only the system didn't hold them back\" posts. It's the same thing that led to a lot of the problems with the OLPC project (check out the book \"The Charisma Machine\" if you're interested in that subject). reply kranke155 2 hours agoparentprevMontessori worked on this problem, and did a fairly good job, but somehow it's still under the radar that we could revolutionise our educational system according an already proven model. reply doctorpangloss 2 hours agorootparentMontessori is more of a brand. People definitely perceive it to be the way you are describing, but really, if there were something old and certain, it would be widely used. On the flip side, there are lots of pedagogical practices that are proven, and this article is trying to show you how they are probably being disrupted by cell phones. reply johnnyanmac 1 hour agoparentprevMan, No Child Left Behind left a larger mental scar than I ever imagined. \"learning they shouldn't be\"? I never would have gotten fast tracked in math, and by extension gotten into a decent engineering school, if that's how my teachers thought. Then university wonders why kids are less prepared. reply doctorpangloss 2 hours agoparentprev> I have seen is no one in education is willing to ACTUALLY let kids learn at their own level... and the number of complaints and straight up threats because kids would learn things \"they shouldn't be\" A charitable way to read what you are saying is, \"kids are not sufficiently challenged in school.\" But you are railing against an antagonist that is kind of vague. What, specifically, are you talking about? reply dathinab 2 hours agoparentprev> We had this. It worked well, in my opinion at least, and the number of complaints and straight up threats because kids would learn things \"they shouldn't be\" was just… insanely frustrating. are you US based? so of the Nordic countries have implementing thins similar to what you describe as their normal form of education reply ozim 1 hour agoparentprevAnother instance where technical solution is not the solution for people problem. We can make all bells and whistles but if people won’t use it there is nothing more that can be done unfortunately. reply Fin_Code 3 hours agoparentprevCustomized skill based education should be the future. reply jerf 3 hours agorootparentThe problem is that it should be the present. Oh, I've been an engineer for a while and I know the system can't turn on a dime, it would take some time. However, we should be seeing visible progress towards this goal, and frankly, if anything, the system continues to be moving in the other direction, lowering bars to try to get everyone into the exact same level long after it should be clear that lowering the bar still isn't even achieving that goal, even as it destroys everything around it in the process. The system isn't even trying to customize skill-based education, beyond a bit of clearly-ineffectual lip service. reply Vegenoid 2 hours agorootparentLarge bureaucracy wants people to be as fungible as possible, so that systems can be designed that interact with fungible units instead of complex, multifaceted individuals. reply throwaway2037 1 hour agorootparentI reject this kind of thinking. To be clear, most engineers at FAANG would describe their own companies as a \"large bureaucracy\", yet, the engineers at these places are highly skilled, \"complex, multifaceted individuals\". Their hiring strategy has demonstrated this time and time again on HN discussions. It is insanely hard to get hired into these places. There must be at least 10 qualified candidates for each role. And, weirdly, I would say that almost all of the most highly skilled software engineers that I have known in my career are also the most dynamic. By definition, that makes them fungible because they can learn new skills so quickly. reply vundercind 2 hours agorootparentprevComputerization barely helps with \"customized skill-based education\" outside of parts of certain topics (some areas of math, notably, are very well-suited to it). Detailed feedback from humans is vital in many topics and for learning many skills, and, as they say, that doesn't scale. We can do it, but it means spending a lot more on teachers, so we aren't going to. We may eventually get a half-assed version involving LLMs or whatever nonsense, but that will be brought in mainly as a way to get by with fewer teachers (they're cost-diseasing into something we can't afford any more, it seems) not to increase educational quality. My expected outcome for all of this is that the gap between rich and poor students will grow, as only rich students will continue to have decent student:teacher ratios (their ratios already tend to be a ton better than public school kids). Paid tutoring will become common somewhat farther down-market than it currently is, as more people choose to pay extra just to cover what their tax money used to, but no longer does. reply tokinonagare 2 hours agoparentprevI worked in EdTech research, it's a shitshow. Indeed the focus is on institutional learning while the power of tech is to empower people outside formal education. The amount of wishful thinking is unbelievable, protocols are often very weak, hard problem aren't addressed and focus is on what is easy to measure. There is so much potential, but it's vastly underexploited. reply davidee 2 hours agoparentprevI hear you. We built a product specifically for student-centric work where educators could assess student progress (think Hattie's Visible Learning and similar lines of thinking) and compare student growth against their own previous work. We encouraged educators to quickly tailor the tasks to individual student needs. Educators (and pedagogues) loved it. But we couldn't gain traction with the buyer persona: Administrators asking \"what's in it for me?\" Data on improved outcomes wouldn't be immediate, so it was a no buy. This was exacerbated by Google and Microsoft giving away their office productivity suites repackaged as classroom tools to ensure future market capture. Because you totally want your 8-year-old becoming a Word or Docs or Excel expert right? So yeah, we have a reality where students don't have really great EdTech—they have tech that's masquerading as EdTech, picking up all the low-hanging fruit and leaving the hard problems of education unsolved (or unexplored). The company is in the process of folding, and I'm hoping to re-release the software as true open source sometime in the future once all the legal / corporate shutdown stuff is finished. reply brightball 2 hours agoparentprevThis is why I hear stories every year at my kids school about home school kids enrolling, then being place in math classes 1-2 years ahead of the max possible for somebody who had been in the school system to start with. reply mettamage 2 hours agoparentprevI skipped out complete uni classes and followed an analogue online. Maurice Herlihy had its concurrency and multithreading classes online for a while. I passed my c&m course with it, we also used his book reply boomchinolo78 2 hours agoparentprev>straight up threats because kids would learn things \"they shouldn't be\" What do you think is behind the threats? Do the teachers fear being replaced or is it coming from a different set of people? reply VyseofArcadia 3 hours agoparentprevThis has been the case for a long time. I was one of those kids who usually \"got it\" the first time I saw it, and then remembered it. So lectures usually moved much too slowly for me. In an effort to not be bored, I would usually sit quietly and read ahead in my textbook. Some teachers were cool with this, but most of them would yell at me for not paying attention, and a couple specifically called me out for reading ahead on the basis that I thought I was too good for the class. reply graemep 3 hours agoparentprev> It worked well, in my opinion at least, and the number of complaints and straight up threats because kids would learn things \"they shouldn't be\" was just… insanely frustrating. That is bad. I have to say no teacher I had a problem when I learned things ahead of time. Some less good teachers were not actually encouraging, but they certainly did not think it was a problem. That said, IMO the school system does not cope well with kids who are not going at the average speed. This is one reason i home educated my kids. We need to change how schools work to take advantage of ed tech (and a lot of other opportunities - you can learn at your own pace from books, like I did) reply johndhi 2 hours agoparentprevcan you give an example of someone being upset and what the thing they'd learned that they \"shouldn't?\" as a parent I find it confusing that I'd consider getting upset if my kid was learning 6th grade history as a 3rd grader (or 2nd grade art as a 3rd grader). what actual examples are there? the only examples of parents being upset about learning I'm aware of lately is, like, critical theory and marxism reply red_admiral 2 hours agorootparentSex education? Not in the sense of the kids watching porn, but learning about contraception and STIs and that kind of thing. reply johndhi 34 minutes agorootparentfair enough but is that really the reason edtech has failed? reply deanCommie 2 hours agoparentprevThis sounds like the promise vs. reality of Agile software development too :( reply Parfait__ 2 hours agoparentprevI think it's weird that you're not telling us what \"things they shouldn't be\" are. There are plenty of things I think kids shouldn't be learning. reply devin 2 hours agorootparentI doubt they were talking about any kind of \"adult\" content. The situation they're referring to is more like \"your second grader should be focused on multiplication, not long division.\" reply red_admiral 2 hours agorootparentNever underestimate how upset people can get when a kid does longhand addition the old way (write numbers under each other, carry the ones) rather than some more \"holistic\" way. reply doctorpangloss 2 hours agorootparentprevI'm not sure why the commenter is being downvoted. I too can make a drama, literally capitalizing one of the worst words ever invented, \"actually,\" about a vague antagonist, and rile people up, letting their imaginations fill in whatever boogieman they feel wronged them in school. What specifically is the situation? I don't want to speculate. reply miningape 1 hour agorootparentprevIt's an edtech platform for kids - forgive me but I somewhat doubt there's porn on there reply basilgohar 2 hours agoprevAs someone who's worked in EdTech for around two decades, I know why people think this. It's what a lot people here have already said. Education is what is failing, EdTech didn't magically solve this. Just like money, you can't just throw tech at education and expect it to solve anything. There are too many profitable incentives to poor education that are conspiring to perpetuate it. An ill-educated populace is easier to manipulate, gravitate towards consumerism, and won't hold their leaders as accountable. Power generally resides with those who benefit from an ill-educated populace, so anything that would actually help educate children and people at large is discouraged. I'll repeat what others have said here. Giving teachers the means with which to properly work with their students, and investing in students at a more individual level, is what's needed. Sadly, my refrain with regards to public education is that is has become little more than glorified babysitting. Those that succeed do so in spite of the system, and not because of it. Meanwhile, students that suffer from one or more disadvantagements (poverty, disability, social issues, mental or physical health issues, and so much more) tend to just...suffer more. And then they fall into cycles where preventable issues repeat or enhance into the next generation. They'll still spend all of their little income excessively, so profit is still to be had, or they'll end-up in prison, which, again, thanks to privatization, is also immensely profitable, so no problem there, right? The system is setup to fail because that's what's profitable in the long run for those seeking such profits. And because they can lobby, and use their wealth to influence politics, it won't change. Something else needs to happen first. reply fny 2 hours agoparent> An ill-educated populace is easier to manipulate, gravitate towards consumerism, and won't hold their leaders as accountable. This is a reactionary take. Math, science, and basic language skills do not lead to political upheaval, and are incredibly valuable skills to the capital class. Leadership would be more apt to propagandize social studies and suppress dissent. China easily comes to mind as a counter argument. I'd apply Hanlon's razor: education languishes due to poor funding, lack of competition, and low salaries that attract mediocre teachers. We don't even properly fund development for blue collar jobs! Also the problem compounds since one generations students become the next generations teachers. reply dehrmann 1 hour agorootparentIf the US electorate had better economics education, they would have thought both the [2024] candidates were economic idiots. reply krapp 1 hour agorootparentIf the US electorate had better economics education, the 2024 candidates might have been forced to present sane and reasonable economic platforms, because doing so would have actual political value. Dare I say at least one of those candidates wouldn't even have made it to the primaries. Which I leave as an exercise for the reader. They aren't economic idiots, they just know most American voters mistrust any economic concept more complex than \"taxes bad. China bad. jobs good.\" reply dehrmann 1 hour agorootparentThat's fair, and someone told be there's a distinction between politics and policy, but when politicians pander to the crowd, it's really hard to get an idea of what their actual policy will be. reply AnimalMuppet 1 hour agorootparentprevI think it's worse. Regardless of the amount of education, they would have to care about policy enough to read and act on candidates' policies. reply soarerz 2 hours agorootparentprev> China easily comes to mind as a counter argument. I mean, cultural revolution was still going on 50 years ago lol reply mbesto 2 hours agoparentprev> It's what a lot people here have already said. Education is what is failing, EdTech didn't magically solve this. To expand this more globally - anything that requires human interaction fails at scale. Healthcare, trade skills, education, housing, etc. is all \"failing\" to some degree no matter how much technology we throw at it. The costs continually go up and the value isn't paired to it. reply czinck 53 minutes agorootparentTo put a name on this, it's the Baumol effect, https://en.wikipedia.org/wiki/Baumol_effect. Essentially, as productivity increases in most industries (from automation), it drives up labor costs in the industries that can't be automated (healthcare, education, performing arts, etc), which drives up the price of those services (healthcare), or drives down the quality to find a market clearing price (increasing student to teacher ratios). reply jppope 2 hours agorootparentprevSeems like you're listing highly regulated industries not human interaction. reply consteval 1 hour agorootparentThese industries, more or less, need to be highly regulated because we've faced the alternative and it's worse. The quality of education went up SIGNFICANTLY when the state took more control over it. reply seabass-labrax 51 minutes agorootparentPart of that is questionable, because the state gets to set the means by which the quality of education is measured. However, a more objective measure is the extent of education; certainly, the introduction of national education has always produced a much greater literacy rate. reply Yhippa 2 hours agoparentprev> There are too many profitable incentives to poor education that are conspiring to perpetuate it. An ill-educated populace is easier to manipulate, gravitate towards consumerism, and won't hold their leaders as accountable. Power generally resides with those who benefit from an ill-educated populace, so anything that would actually help educate children and people at large is discouraged. I want to believe this but I can't honestly imagine someone actively thinking about this and dedicating part of their work to misinforming the poor intentionally. reply mbesto 2 hours agorootparent> actively thinking about this and dedicating part of their work to misinforming the poor intentionally. I'm reminded of the quote > “No one involved in an extralegal activity thinks of themselves as nefarious. I'm a businessman, okay?\" - Quark, DS9 S6E25 I don't believe anyone nefariously sits there and says \"lets make sure people aren't educated\" but I genuinely believe there are people who say \"I did this thing and people keep voting me in to keep doing that thing or keep paying me to do that thing, so I'm going to continue doing it that way\" reply ImPostingOnHN 2 hours agorootparentYou are 100% correct, people mostly follow incentives. The problem is that, for many politicians, \"this thing\" in \"I did this thing and people keep voting me in, so I'm going to continue doing this thing\" refers to the starving and/or defunding of education. reply BadHumans 2 hours agorootparentprevI can almost admire how you manage to think that but that is just ignoring reality. Politicians have created entire media giants that are designed to either lie to you and trigger an emotional response within you. Maybe not out of pure maliciousness but they benefit from doing it. reply lesuorac 2 hours agorootparentprevWhy did all the civics classes go after the Vietnam protests? reply zen928 13 minutes agorootparentprevThat's because you aren't viewing it in the proper context and think that the result of the action is isolated. I can't honestly imagine that you couldn't come up with a single incentive for misinforming people on topics in such a way that would result in your own benefit. Just curious, how would you describe the motivations of a stereotypical sleazy car salesman offering predatory loan rates: A hard working person doing what they need to do to survive, or a con artist trying to find more victims? Only one of those choices represents reality, and you should really be wary of anyone who would suggest the other choice. reply sofixa 1 hour agorootparentprev> I want to believe this but I can't honestly imagine someone actively thinking about this and dedicating part of their work to misinforming the poor intentionally. Populism is exactly this - misinforming poorly educated people with bad scary words, \"others\", \"easy\" fixes. > Inflation is bad! Crime is bad! We'll just deport 20 million \"others\" and everything will be allright! Or: > Let's send all the money we're spending on the EU on the NHS, 350 million pounds per week more for the National Health Service! In some countries, like the US, there are active efforts to sabotage education, or at least cripple it - by reducing funding to a point where educators have to spend their own money for supplies, get burned out, have poverty-level wages, etc. Those can't be accidental. reply ImPostingOnHN 2 hours agorootparentprevIn the US, it's easy to imagine, or just see, politicians actively opposing expansion of the currently-poor education system. Some actively seek to further defund it (see school vouchers). As for actively misinforming poor people, that is the day job (campaigning) for countless politicians, who usually spend less than half their time drafting or voting on legislation. reply wintermutestwin 1 hour agoparentprevFocusing solely on the “babysitting” aspect of your post: Since babysitting is essentially required in our current social framework, why do we need physical schools with in person teachers. It seems to me that we could have babysitting facilities spread to lots of small commercial spaces with in person babysitters for kids who are doing school on computers with synchronous teachers online. I realize that the model I’ve laid out here is simplistic, but it would solve so many problems that it seems worthwhile to flesh it out and mitigate the issues. reply dennis_jeeves2 1 hour agoparentprev>An ill-educated populace is easier to manipulate, gravitate towards consumerism, Very wrong. Education only camouflages stupidity, it does not remove it. And then part of education is indoctrination to trust authority (eg. trust the science). That said, basic education reading/writing/simple math/science is indeed valuable. reply tqi 1 hour agoparentprev\"There are too many profitable incentives... Power generally resides with those who benefit... The system is setup to fail because that's what's profitable in the long run for those seeking such profits. And because they can lobby, and use their wealth to influence politics, it won't change. Something else needs to happen first.\" Who exactly are you talking about? reply krunck 1 hour agorootparentGoogle? reply kortilla 2 hours agoparentprevI don’t think this is the case for several core reasons: - higher income people spend more money. The middle and upper class is by far the largest market and source of tax revenue. - poverty generally turns areas into low trust higher theft spots that need expensive security. - high income places generally have good public schools because a majority do know how important education is - this requires a pretty vast conspiracy of people saying “keep people dumb so we can profit”, which I haven’t heard of at all I think the much simpler explanation is that there is no accountability for inept pockets in the education system. Schools can’t really be punished for sucking and parents can’t move their kids in most states without just switching to private. There is no feedback loop for broken schools. reply bbor 2 hours agoparentprevWell put, all around! If it makes you feel better, state-funded education has, as a rule, pretty much always been babysitting. As we fight together for a brighter future, I think it’s important to know that we’re building something new and glorious, not restoring some natural status quo. Tho I’m no history buff. Maybe some civilization had really great public schools? Designating only a small portion of your population as True Pure Citizens does tend to help with stuff like that reply zusammen 4 minutes agoprevVenture capital technology is mostly about replacing expensive processes with human input by cheap substitutes that are 75% as good but hoping scale will compensate. Sometimes 10x at 75% is really is better than 1x at 100%. Sometimes it’s not, because 75% isn’t good enough, and it might as well be 10x at zero. Education is closer to the latter. VCs think they can remove the humans and the scale and cheapness (the latter in theory, at least) will compensate, but people are social animals, and students lose trust in the state when it wastes their time, so education by machine turns out not to work well at all, despite the fervent belief held in a few hundred Bay Area tech companies that it should. reply throw_pm23 3 hours agoprevThe teaching method I find best is a teacher explaining and writing with chalk on the blackboard, and the students taking handwritten notes on paper, asking whenever something is not clear. In other words, the most boring classical setup possible. Of course all the nuances and little details make all the difference: board picture, structure, teacher personality, pacing, choice of topic, interaction, motivation, excitement, etc.. It is not guaranteed to work, but as a format it is workable, and I found nothing so far that is better either as a student (long time ago) or as a prof at a top university (for some time now). A distant second is the format we used during COVID: writing with a tablet using xournal, and streaming it via zoom (loosely like Khan academy). This is of course only my personal experience/opinion, but also informed by vast amounts of student feedback. EDIT: I agree with the different perspectives from the responses, and should have qualified that I meant it for subjects one typically learns at a university, like calculus or linear algebra. One-on-one tutoring, self-learning can work even better or complement the above and skills, e.g. playing a musical instrument should be approached totally differently. reply samvher 2 hours agoparentSeems like there might be some survivorship bias here, right? You teach students who made it to a top university because they thrived in the classical setup which is the most common one. Presumably your preferred teaching style aligning well with the classical approach also helped get you to that position. Personally I feel like my education/learning only really started to take off when resources like EdX and Coursera became available. I did reasonably well at uni but was not motivated with others deciding what I had to learn and when. Lectures tended to be slow paced and often boring, so I zoned out instead of being pulled in (I passed my exams by working through the problem sets in the textbooks, I skipped most lectures). When I got the ability to play/pause/skip/1.5-2x videos, and when I could choose what subject to learn like a kid in a candy shop, I did start consuming lectures much more aggressively. Still, I think well designed problem sets and assignments actually do the bulk of the work when it comes to learning/teaching, and I regularly skip the lectures and dive right to those. Not saying that your method doesn't work, or that it shouldn't work for you, but its suitability depends on the topic, the student, and the setting. reply chamomeal 1 hour agorootparentSame. I could never EVER pay attention in class. I learned math from khan academy, and physics from my textbooks. When I exams were coming up, I would skip every single lecture to read my textbooks and do practice problems. Did that all the way through physics undergrad, and I never would have graduated via the standard lecture + questions method. Maybe my professors were mediocre, but I think I’m just not built for classrooms! reply BriggyDwiggs42 2 hours agorootparentprevOh I agree 100%. Recorded lectures are a miracle for the 2x speed and buffering. reply randomdata 16 minutes agorootparentAnd variety of lecturers. Sometimes another person saying it changes everything. reply psychoslave 3 hours agoparentprevI have no doubt it is the best option. For certain people. But why impose a single way to learn, when there is no such a thing as a \"single size fit them all\" learning experience? All the more when there are alternative options. reply obscurette 2 hours agorootparentThere is. There is a ton of alternative schools, homeschooling is legal in most of places in the world etc. The problem is that people expect teachers adopt to every single pupil. It's not possible. reply randomdata 10 minutes agorootparent> The problem is that people expect teachers adopt to every single pupil. Nah. The people expect EdTech to allow children to find their own suitable learning style with only babysitter oversight. But no teacher wants to \"demote\" themselves to being a babysitter, nor do the administrators want to become seen as running a daycare, so you end up with https://news.ycombinator.com/item?id=42116365. reply dghlsakjg 1 hour agorootparentprevMaybe the solution is to segment students to the teaching style? We can't expect teachers to provide a good environment for students who are good at self paced learning, and students who need structure in the same classroom. But we might be able to have classrooms that lean one way or another... reply panzagl 3 hours agoparentprevMy wife had one kid scream for 10 minutes yesterday and another throw a chair. Another just sat there and didn't do a thing for 7 hours. The Little House/Christmas Story model hasn't been able to work for a long time. reply tejohnso 2 hours agorootparent> My wife had one kid scream for 10 minutes yesterday Did she actually allow this kid to disrupt the entire class for 10 minutes? Isn't there a responsibility to all the other students that they should have a reasonable learning environment? I remember being sent to the office for a lot less than that. reply panzagl 0 minutes agorootparentShe called for admin backup, which reacted pretty quickly, but they basically just calm him down and return him to class. And of course the screaming happened after a series of de-escalation attempts by her, which often works, but not always. He is non-neurotypical, mostly ahead of the class academically (though there are gaps), but very behind emotionally. He is the 'worst behaved' in her grade level, but every class has at least one that is liable to 'go off' as it were. It is in no way fair to the rest of the class, but while the state we live in likes to act blue, when it comes to paying for social services it's pretty red. And this is in a state with school choice, so don't think that necessarily helps either... vundercind 1 hour agorootparentprev- Some schools don't have the resources to send a kid who screams for 10 minutes to the office. Schools in bad areas may have a line of battery incidents waiting for admin's attention by noon. There are schools where second graders threatening the teacher with sexual assault is just a Tuesday and basically gets ignored. - Schools in nicer areas are sometimes in the middle of some dumbshit half-implemented (the other parts made admin uncomfortable) \"discipline plan\" that the superintendent got sold on at some damn district-paid drinking vacation away from the family... er, I mean, education conference, which may lead to insane crap like letting a kid scream in the classroom for ten minutes (sending them to the office might get the teacher in trouble for not following the plan). Half-implemented plainly-doomed-to-fail admin-driven plans for discipline, or for education approaches to any or all subject areas, are often a factor in stupid crap schools do. reply bell-cot 2 hours agorootparentprevMy impression is that both a teacher's power to do much anything about such behavior, and the rights of the non-problematic students to a viable classroom environment, are either gone, or \"going, going\", in most parts of America. reply ghaff 2 hours agorootparentprevThere was a story in the NY Times a few months back about a basically one room schoolhouse in Alta Utah. Of course that's a small and mostly homogeneous community and, as I recall, it was unclear from the article how well students were learning other than presumably becoming good skiers. reply Molitor5901 39 minutes agoparentprevYou would enjoy Cliff Stoll's writings on this topic. He hates technology in the classroom, and still firmly believes teachers with chalkboards and flashcards are superior to any technology in the classroom. I disagree with him only in so much as technology allows for media that can help simplify some things, but agree with him that nothing beats a good teacher. reply graemep 3 hours agoparentprevIMO that is about the third best method. The best two are self teaching and one to one teaching. Both are, of course, \"boring classical setups\" but both can be improved by technology. My daughter had one to one teaching over video in subjects that we would have struggled to find a tutor for locally (classical civilisation, for example). Self teaching is hugely improved by access to more materials - this does not need fancy tech, but just websites and videos can help a lot. reply dbspin 3 hours agoparentprevWorth noting that this is fine for academic subjects (although highly dependent for success on student interest), but doesn't work at all for skill based subjects. reply potato3732842 3 hours agoparentprevThere are a lot of things, particularly in math and science, that really benefit from modern media when it comes to illustrating things. reply BriggyDwiggs42 2 hours agoparentprevI mean, I’d argue the chalkboard method often can’t visualize things as well as modern educational stuff like 3blue1brown, which is the kind of thing I often supplement for my relatively dry university material. For tons of things, well-produced videos are more effective, especially when compared to a class with maybe a hundred fifty people in it where questions are discouraged during lecture. reply phyllistine 2 hours agoprevThis is largely just anti tech puritanism. I cant comment on the psych and neurological arguments, but the following line of reasoning > A pre-Covid survey exploring how US students aged 8-18 utilize digital technologies both inside and outside of school provides the answer (values below are per week) ...If we extrapolate and consider a typical U.S. academic school year of 36 weeks, these numbers suggest that students spend 198 hours annually using digital devices for learning purposes, and 2,028 hours annually using those same exact tools to jump around between scatter-shot media content. is incredibly silly, given that it is counting time on device outside of class (things that students are allowed to do) against effectiveness of in class usage. It's like arguing that a student who likes reading Harry Potter, or Comic Books 2 hours a night is forming habits against the idea of using books for learning. Students who play games or watch movies are not alcoholics using beer for buoyancy studies. Not only this, it groups listening to music on a computer as an independent recreation activity, and not something that students will do concurrently with homework or other tasks outside of class, double dipping on recreation hours. As if listening to music isn't a boon for learning, which it easily can be. reply luzojeda 1 hour agoparentIMO the correct analogy would be a physical object where you could switch back and forth between Harry Potter and books used for learning. If that were the case I'd agree with you. But here we are talking about two separate distinct physical objects, the Harry Potter book and, for example, a biology book. When a person is reading the latter they can't easily switch to HP, but I can do that while learning anything in my computer. It's as easy as doing ctrl + T + red + enter and I get to the infinite entertainment that is Reddit thanks to the browser autocomplete, for example. reply phyllistine 48 minutes agorootparentSwitching to nonsense with physical books is as easy as having two books in your bag/desk, or reading a physical newspaper with a comics section. Treating the ability to switch context quickly as essentially bad for learning is reductive, especially when the ability to add more context (searching unknown words, useful videos, articles etc) can obviously be incredibly useful. Stopping the ability to do ctrl+T+reddit.com also prevents the huge amount of info the rest of the informative internet can provide. The article also includes smart watches as computers, and personally as a Apple Watch user, the amount that this device can distract is incredibly low, and obvious to viewers like a teacher. reply pessimizer 2 hours agoparentprevNo, it's saying that if you use the same device to entertain yourself and to do homework, and you use it for entertainment 10x as often as you use it for homework, you'll get distracted then you're doing homework. > It's like arguing that a student who likes reading Harry Potter, or Comic Books 2 hours a night is forming habits against the idea of using books for learning. Books are separate objects, they are not a platform. It's saying that if you put a child's homework as a two page insert into a great comic book, the rest of the comic book will distract from the annoying, difficult insert. The opposing theory is that the proximity of homework to comics will somehow make the homework fun. Homework is going to be hard and annoying no matter what you do, if it's not hard you're not learning anything from it. reply phyllistine 56 minutes agorootparentThe Harry Potter and comic book argument also works for paper newspapers, the same object contains good, informative articles, opinion pieces etc, but also the comics page. I am arguing that thinking that the same object cannot be used in two contexts is incredibly reductive and essentialist. They are stacking the books (by double counting time listening to music etc) to prove the idea that they are insistent on, that computers (which the article generalizes from desktops to chromebooks to iPads to smart watches) are essentially bad for learning, when this is not necessarily the case. Students will continue to learn using computers, just as I will, because they are ridiculously effective for doing so. reply rahimnathwani 1 hour agoprevThe argument Jared makes in the body of his article (\"The argument I’m making is that digital technologies so often aren’t used for learning that...\") is less bold and sweeping than the one in the title (\"The EdTech Revolution Has Failed\"). It's true that edtech hasn't (yet) created an educational utopia, as some people may have imagined or hoped. But there are educational technology tools that my son (8yo) uses several times per week, that undoubtedly help him to learn important stuff: 1. Math Academy (truly amazing for 4th grade math all the way to first year of undergrad: https://www.bit.ly/ma-way) 2. Skritter (for learning to write Chinese characters) 3. Anki (flashcard program). 4. Octostudio (for learning to code, by the same folks as MIT Scratch) #1 and #2 are both much more efficient (learning per unit of time) than any other method I've seen. They (along with #3) use spaced repetition and retrieval practice as part of their secret sauce. But they are also highly domain-specific. Math Academy relies on thousands of hand-crafted math problems, all designed within a (hand-crafted) graph of topics that students must master. Skritter has tools that give people (adults or children) an easy on-ramp to learning the broad strokes of each character, and more advanced modes that train more precision. reply narcraft 20 minutes agoparentI'm an adult user of Math Academy. I have a bachelor's in Math and I'm working through the Mathematical Foundations series to brush up on material from all the lectures/assignments I skipped and fill in the cracks of my knowledge. I absolutely love it. reply rahimnathwani 13 minutes agorootparentI used it for 2 months during spring last year (averaging over an hour per day). I have chosen not to prioritize math study for now, but I also absolutely love it. reply pessimizer 1 hour agoparentprev> 1. Math Academy (truly amazing for 4th grade math all the way to first year of undergrad: https://www.bit.ly/ma-way) This stuff is so exciting. He dips in and out of HN periodically when the subject comes up. reply senko 3 hours agoprevAs others commented, the article doesn't really talk about edtech, but about introducing smartphones/tables/computers in curriculum in a way that makes it harder to limit their use both at school and at home. From my kids' experience, I agree with the article. But I also want to touch on products. Had a startup in the space[0], and we only achieved commercial success once we started gaining customers outside of EdTech. EdTech is hard, in that it combines enterprise-like sales with scrappy startup-like budgets. On top of that, you're selling to people who are far removed from the user experience (heads of districts vs students and teachers). End result is stuff like Blackboard, who everyone hates, but it's everywhere. I've seen a ton of interesting, promising startups that tried to engage students and help with learning (in various ways), only to never hear about them again. I've also seen (& heard from) a lot of teachers with great ideas, who basically need to do grassroots campaigns and teach each other tips & tricks, because they're not really supported by their organizations. [0] https://blog.senko.net/the-story-of-a-web-whiteboard reply hintymad 31 minutes agoprevAs someone who tried all kinds of EdTech, I'd venture to say that the key to education quality is not in tech but in pedagogy and student engagement. The pedagogy depends on the quality of teachers, or specifical",
    "originSummary": [
      "Despite the widespread integration of digital devices in classrooms, the anticipated academic improvements have not been realized, with global test scores in math, science, and reading declining.- Studies indicate that frequent computer use in schools often leads to poorer learning outcomes, primarily due to the encouragement of multitasking, which hinders effective learning.- Some regions, such as Europe and Southeast Asia, are shifting back to traditional teaching methods, suggesting that American schools might also benefit from reducing digital reliance in education."
    ],
    "commentSummary": [],
    "points": 258,
    "commentCount": 340,
    "retryCount": 0,
    "time": 1731420671
  },
  {
    "id": 42110588,
    "title": "Visualizing World War II",
    "originLink": "https://nathangoldwag.wordpress.com/2024/10/26/visualizing-the-past-world-war-ii/",
    "originBody": "Visualizing the Past (World War II) October 26, 2024 / nathangoldwag If you’ve been reading this blog for any length of time, you’ll know that maps and history are two of my favorite things. I love history because I love learning about the vast panoply of the human experience, the millions of twisting threads of time that created the world we live in today. And I love maps because I don’t think you can really understand the world without being able to picture it. Maps are such amazing tools, laying out in detail how the world functions, its geography and politics and topography, and the ways in which those change over time. It probably won’t surprise you, then, to know that I like historical maps quite a lot. Learning about how someone chooses to depict the world can tell you quite a lot about their point of view, and seeing the way in which people in different times make different choices about how and what to illustrate can show you how our perception of the world has changed. That’s what we’re going to do today. I have here a small collection of historical maps that I think are really cool, and that I think can teach us something about our shared past. In today’s edition, we’re going to look at the Second World War, with a particular focus on the maps that newspapers would print so their readership could follow along as the world burned. So, without further ado: Previous Installments: WWI, Part One, Part Two, Part Three In February 1942, as the United States reeled from the Pearl Harbor attack and girded itself for intercontinental warfare, President Franklin D. Roosevelt gave a speech to the American people about the coming conflict: This war is a new kind of war. It is different from all other wars of the past, not only in its methods and weapons but also in its geography. It is warfare in terms of every continent, every island, every sea, every air lane in the world. That is the reason why I have asked you to take out and spread before you a map of the whole earth, and to follow with me the references which I shall make to the world-encircling battle lines of this war. Many questions will, I fear, remain unanswered tonight; but I know you will realize that I cannot cover everything in any one short report to the people. Fireside Chat, February 23, 1942, Franklin D. Roosevelt (Source) This was a global war, fought by a modern population with access to modern information sources. The new technologies that allowed millions of men to be mobilized allowed their families at home to follow along with a level of detail never before possible, and newspapers rushed to provide it. We’ll start with this map, published in the Los Angeles Times on September 10th, 1939, only ten days after Germany’s invasion of Poland. This is a wonderful example of what I love about this genre of work–the depth of detail and information that newspapers were attempting to convey to their readers. In 1939, the world was beginning to fall to pieces, and everybody knew it, and a lot of people wanted to know more. This map includes instructions for removing it from the paper and preserving it, under the assumption that you’d want to keep it to follow the course of the conflict. What I also love about this is that it’s from early enough in the war that the patterns and narratives that we take for granted haven’t coalesced yet. The USSR, Italy, and Balkan states are still neutral, and Charles H. Owens of The Times art staff takes note of potential rail and sea corridors with which the Western Allies could supply Poland–something that never materialized. Note also the focus on naval bases, fortifications, strategic resources, and the aerial distance between cities, as the artist tries to grapple with the new kind of warfare that was still being born. It’s a wonderful achievement. I cannot help but notice, however, that Mr. Owens has forgotten about the existence of Estonia. Jumping back in time a few months, here we have a map of Germany at its greatest pre-war extent, following the Anschluss, Munich Agreement, and the Occupation of Czechoslovakia. There are a few things of interest about this. Firstly, how contemporaneous it is–dated May 1939, it was only printed three months after the final events depicted had occurred. Second is how granular it is. We tend to blur many of the fine distinctions and territorial adjustments made by the NSDAP during this period, seeing everything as Allies, Axis, and/or Soviet, but issues like the independence of Slovakia and the cession of Carpatho-Ukraine to Hungary were of vital interest to participants at the time. Third and last, we should take note of the source, the German Library of Information, in New York. This was a Nazi propaganda bureau established in 1936, specifically to try and influence American public opinion and popularize the German perspective on international affairs. (I appreciate the comparison of the German Reich’s scale to that of Texas, which I suspect was an attempt to emphasize how small it still was compared to the US). Today we’re so used to engaging with this time period from the perspective of either victors or apologists, that we forget that something like this map of territorial conquest–now seen only as an ominous indictment–could be presented as an achievement to be celebrated, even to a neutral audience. Another propaganda map, this one published by the Los Angeles Examiner in 1937, showing the potential results of an American defeat in another world war, the specter of which was already rearing up over Europe. What’s fun about this one is that it is agnostic on who exactly would be defeating us; several years before the outbreak of the war, the coalition lines not yet firmly drawn, the Examiner focuses on speculating as to what resources and regions would be most coveted by the “victorious powers”, leaving it up to the reader’s imagination who those would be, exactly. It’s an intriguing look at the kind of perspective that I’m trying to showcase here, before hindsight solidified our understanding of the possible. Note, for example, that the main comparison point here is the post-WWI fate of Germany and Austria, as well as the Partitions of Poland. The Los Angeles Examiner opposed America’s entry into the First World War, and you can perhaps see echoes of that here. The San Francisco Examiner published this map on June 2nd, 1940, just eight days before Italy entered the war on the side of the Axis, and it’s an absolutely gorgeous example of its genre. This map doesn’t just show you Italy and the Mediterranean, it attempts to give the reader the geopolitical and geographic context for the war, and what the various powers hoped to gain from it. Note how the headline correctly identifies the driving force behind Mussolini’s ambitions, completing the goals that Italy had failed to achieve in WWI. Three days after this was printed, Mussolini would tell Chief of the General Staff Pietro Badoglio “I only need a few thousand dead so that I can sit at the peace conference as a man who has fought”. I love this map because it really does tell you so much of what would happen over the next few years in this theater of war; from the conflicts in the Balkans as nations chose sides or were torn apart, the various imperialist and irredentist claims that Il Duce was pushing against his neighbors, to the vital supply lines between Sicily and Tripoli that Rommel would depend on, and the thorn in its side at Malta, and Italy’s dependence on foreign trade routes with the Americas and the British Empire. The game board is set, the pieces are ready, and now we’re just waiting for someone to make the first move. Another example of the same genre, this one published by the Chicago Daily Tribune, a week after Pearl Harbor. The focus here is to show how the Japanese Empire has expanded over the previous fifty years, through the First Sino-Japanese War, Russo-Japanese War, World War I, and Second-Sino-Japanese War, leading up to the present crisis, with the Imperial Japanese Army and Navy threatening to overrun the East Indies and Philippines. The breakdown in expansion over time is so valuable, showing how these crises didn’t emerge from thin air, or from some primordial conflict, but were the result of long-running dynamics. With this, we can understand both the threat of Imperial Japan in 1941–and also how fragile it really was. Note also the caption at the very bottom of the page: “This is another in the series of new colored war maps–offered as an aid to readers in visualizing the extent of the enemy empire across the Pacific.” Here we see an effort by Russian War Relief Inc. to convey to the American people the scale and scope of the Eastern Front, and what the USSR was suffering in the war. You can find a similar juxtaposition map in my earlier WWI collection, and I think it says something about America’s uniquely privileged position over the last few centuries that these maps are the only way we can truly imagine our country occupied or invaded, and the rather desperate attempts by our allies to convince us of the true severity of their plight. Here the Soviets try and demonstrate to America what was happening there; the entire eastern seaboard occupied by a genocidal army, Rochester cut off and besieged for months, American soldiers fighting for every square inch of St. Louis as enemy tanks drive deep into the Southwest, tens of millions of refugees fleeing as the world ends around them. You can’t help but admit that it’s a very effective tool. This is a really interesting item; a world map focusing not on borders or armies or resources but on air routes, the new field of battle truly coming into its own for the first time. Airplanes and airships were more than just useful tools or weapons, they were the subject of popular fascination and military imagination, as people tried to imagine the new world taking shape. H.G. Wells’ 1907 novel The War in the Air, in which fleets of aerial weapons destroy all of civilization, was emblematic of the fears of the time, which seemed to be vindicated by WWI. Following the war, innovative military theorists like Giulio Douhet and Billy Mitchell envisioned a new type of warfare, in which air power would render everything else obsolete. This map, presented by the World Publishing Company of Cleveland, Ohio, makes an attempt to chart out the terrain and environment of this new stratospheric conflict that they could just see coming into view. Earlier this year I was visiting family in Pennsylvania when I stumbled across a book entitled Special Edition World War II: Six Years that Changed the World, 1939-1945, containing reproductions of the front pages of the Intelligencer Journal, Lancaster New Era, and Sunday News from those years. I bought it at once. It’s an amazing resource, showing not just how contemporaries witnessed the war years, but specifically how they were covered by the newspapers of a relatively small provincial city. The paper’s article on Pearl Harbor, for example, features an inset covering a sailor from Lancaster who was stationed at Hickam Field. This map, provided by the United Press, dates to May 10th, 1940, the same day that Germany launched Fall Gelb, the stunningly successful invasion of France, Belgium, and the Netherlands. It’s another example of this wonderful series of attempts to communicate the strategic situation to the public, published right at the moment when that situation irrevocably shifted. Can Hitler invade England this year? Will he? To us, those are questions of alternate history–and not particularly interesting ones, for that matter. Most students of World War II will tell you that Operation Sea Lion was never more than a pipe dream, and that the Nazis never had anything close to the resources needed to successfully carry it out. But to Americans in 1941 who’d watched France–widely regarded then as one of the most powerful countries on Earth–be humiliated and crushed by the Wehrmacht in only three months the previous year, it was a very real topic of concern. The Intelligencer Journal here attempts to game out the scenarios, examining how the new, ill-understood weapon systems of submarines and aircraft might allow Hitler to do what Napoleon never could. There is something surreal about seeing charts of German airborne landings in England, not presented in a speculative fiction novel, but in the respectable local paper of a small American city, alongside headlines like “County Youth, 19, Has Meningitis” and “Poultry Meeting at Maytown High.” Here we see another example from the same source, this time showing a diagram of the Allied landing of Operation Torch in November 1942. There’s a few reasons I wanted to spotlight this. First is the granularity of it, and the window it gives us into how people would have experienced these events. We see this as history, as clean lines on a map representing something immovably fixed in the past. But seventy years ago, Americans would have used maps like this to try and keep track of where their family members were, what they were doing, what they were facing. Operation Torch was the first large-scale US involvement in the European theater, and for those left behind at home, maps like this would have been their only way of knowing exactly what their loved ones were facing. The other thing I love about this is that the creator seems to have added a completely fictional Free French advance up from Lake Chad through southern Tripolitania to outflank the Afrika Korps, something that would have been wildly impractical given that the Sahara Desert was in the way, and (as far as I know?) never even contemplated by Allied High Command. You can’t always trust what you read in the newspapers. I love this so much. We’ve talked a lot here about hindsight and perspective, and about how people living through events often have a very different way of looking at them than we do. But this “Ten Year Map” shows us that sometimes, people understand very well what they’re seeing. The Intelligencer Journal published this in November 1939, just a few months into the general European war, but what it does beautifully is place that war into the context of the geopolitical chaos that had engulfed the world over the preceding decade. “What The Decade Has Done To The Map” indeed. We see here not just German expansion in central Europe, and war with Poland, but the Spanish Civil War, the Italian invasion of Ethiopia, Japan’s conflicts with China and Russia, border disputes in South America and the Middle East, the growth of long-distance air travel, and how the New Deal and Tennessee Valley Authority reshaped the American landscape. The 1930s were an extraordinarily tumultuous decade, as the fragile post-WWI order began to implode, and I’ve never seen a better illustration of it. All put together like this, we can really see the fracture points and battle lines of the new world war coming into view. And it’s all the more remarkable to realize that they were seeing this as it happened, in real time, unable to do anything but watch and read the morning paper. Share this: Twitter Facebook Like Loading... Related Visualizing the Past (Part One) March 26, 2022 In \"Cartography\" Visualizing the Past (Part Three) June 9, 2024 In \"Cartography\" Visualizing The Great War May 8, 2017 In \"Cartography\" Cartography, World War II",
    "commentLink": "https://news.ycombinator.com/item?id=42110588",
    "commentBody": "Visualizing World War II (nathangoldwag.wordpress.com)233 points by gaws 7 hours agohidepastfavorite57 comments ww2supercut 5 hours agoI recently finished a large World War II project that covered the full timeline of the war, and Google Maps was a valuable tool to follow what was happening in any given battle. The problem is Google Maps has more detail than you need, so trying to follow something like Operation Market Garden is much more difficult than just looking at this beautiful battle map: https://www.alamy.com/a-bridge-too-far-image68088140.html. \"The West Point Atlas of War\" is another great resource. Maps cover the spatial side of war, but in addition it's difficult to follow the timeline. My project stitched popular World War II movies together into a chronological series, making it easier to see what was happening across the world at any given time. You can view the episodes and the full blog post here: https://open.substack.com/pub/ww2supercut/p/combining-143-wo.... And in addition \"The Second World War\" by Churchill's biographer Martin Gilbert, is a chronological, 750 page book that I couldn't put down. reply ssl232 2 hours agoparent> Maps cover the spatial side of war, but in addition it's difficult to follow the timeline. I'd love for there to be an OpenStreetMap style history project with a slider to change the date, allowing users to fill in battle lines and unit positions throughout history. There must be enormous troves of information on units and battles in archives around the world that can be put online in the right form. One obvious problem would be overcoming conflicting accounts of unit positions, strengths and extents, but even basic information on positions of units over time would allow users to get an idea of what was happening in a theater by dragging the slider. reply jeffreyrogers 18 minutes agorootparentI made something like this and briefly had it online but I didn't think there would be enough demand to make the time and costs of running it worth it. reply SimplyUnknown 1 hour agorootparentprevNot quite what you are looking but if you're interested in Operation Market Garden: for the Dutch maps there is https://www.topotijdreis.nl, which gives you historical maps with a year slider. This can at least help one visualize how cities, villages, and topography at through the years. reply wkat4242 2 hours agoparentprevDon't forget some cities have changed a lot during the war. For example Rotterdam was almost completely levelled so what is there now is nothing in relation to how it was then. reply wbl 33 minutes agorootparentThat's not the only thing that's different in the Netherlands: the Flevopolder was not drained yet. reply ICameToComment 5 hours agoparentprevThis should be a Hacker News frontpage posting all by itself. I'm deeply impressed. reply FredPret 2 hours agorootparentSeconded. This is awesome reply ww2supercut 2 hours agorootparentThanks for the kind words! reply pif 4 hours agoparentprev> Google Maps has more detail than you need I'd happily pay for a version of Google Maps where you can hide the streets and highlight the borders between countries, states, provinces and so on. reply briandear 12 minutes agorootparentYou can do that with Apple Maps. reply FredPret 3 hours agorootparentprevI think Google Earth has that option reply vundercind 3 hours agoparentprevVeeery interesting. After realizing that Tora, Tora, Tora! and Midway might make a good double-feature (I tried it, and, they do!) it occurred to me that it might be possible to assemble a film-based curriculum to teach a great deal of the history of roughly 1933-1948, covering the lead-up to and immediate aftermath of the war, in a way that's entertaining while being more informative than misleading. There are thousands of films covering the time period from dozens of countries, and lots of those stick reasonably close to historical events, so it might work out. The hard part, I think, would be tracking down films that give a good sense of the causes and course of more-obscure things like Italy's invasion of Ethiopia. You'd need to find two or three good films on that. Spanish civil war? The invasion and occupation of Poland? The political maneuvering between the Nazis and Soviets before they went to war with one another? The Winter War? These have to be covered by a few films that could act to \"teach\" the events, but I don't know what those films are and bet most are non-English and not well-known in English, making them harder (for me) to track down. reply mordechai9000 30 minutes agorootparentThe first English language film that comes to mind for the Spanish civil war is For Whom the Bell Tolls. It's been a while, but I don't think it has much discourse about the causes or the background for the war - but films often treat those subjects either as assumed background information the audience already has, or as something that is not needed to identify with the characters and enjoy the narrative. So you could use it, but it would need to be accompanied by supplemental factual materials. But I think that is true of many, if not most, non-documentary popular war films. reply briandear 5 minutes agorootparentprevInterestingly, a curated collection of films in my opinion is much better than relying on a few history books that, under the cover of being \"academic,\" are considered \"authoritative,\" but, in fact -- there are a lot of facets that aren't easily reconciled. While film simply embraces the ambiguity (meaning a collection of films all telling the story from slightly different viewpoints is a lot better than a single textbook that might be authoritative, but also suffers from the point of view of the writer. Here is an interesting article on the debate over when WWII actually began (this illustrates my point as \"The Invasion of Poland\" is often used at the \"starting point\" of WWII, when that is probably out of academic convenience rather than being factually correct (it's hard to say precisely when WWII began.) https://english.elpais.com/culture/2023-09-11/what-if-all-th... reply ww2supercut 2 hours agorootparentprevThis could work for World War II since there's so many movies, but even so a bunch of events aren't covered. I also created this spreadsheet of films with their time periods and events covered. It's not exhaustive by any means though, and new ones are coming out constantly. reply WesleyLivesay 4 hours agoparentprevNow I am wondering if there are any deep studies of \"World War 2 movie scenes where they talk to a map\" from movies. That scene from A Bridge Too Far is a great example of giving the audience some spatial understanding both quickly and using the scene for character building as well. reply 082349872349872 42 minutes agorootparent8 seconds of Star Wars (ANH) was used to establish the time and space background for the \"battle of Yavin\": https://www.youtube.com/watch?v=3yWrXPck6SI#t=20s and the rest of that scene plays out in the real time (15min) given during those eight seconds. In contrast, https://www.youtube.com/watch?v=BEv999K5Lr0 , with a similar theme and screen time, is nowhere close to real time or distances. (although I guess Star Wars did have a strong advantage in being fictional) reply doodlebugging 2 hours agoparentprevJust when I was about to finish my profile destruction on reddit I find another reason to dig a little deeper into the stew. I wish I had found your stuff on /r/fanedits a long time ago. The work you've done is excellent and is right up my alley, putting things into historical context using reliable sources. One thing I would like to mention concerns the last map at the end of your post where you show a map based on information from the Conference on Jewish Material Claims Against Germany. The caption above the map says \"Can't name a concentration camp or ghetto\" and the lower states \"Many Americans can't name a concentration camp or ghetto\". I find it unusual that New York has such a high percentage of the population that is so clueless about history that is this recent. They are, according to your map, #2 behind Mississippi which I would've expected to be #1 or tied for it with some other southern state where white supremacists have long had a foothold or stranglehold on education. I see that most of the poorly educated states are in the south with Illinois (neo-Nazi foothold in some places) and Oregon (originally intended to be a whites-only state) being exceptions. And also, that map projection used makes it appear that a (large) hidden hand has torqued the eastern seaboard to the south from Maine to the (limp dick) state of Florida. You can see the distortion along the state lines east of the Mississippi River. Anyway, great work! I enjoyed reading your post. reply sofixa 3 hours agoparentprev> I recently finished a large World War II project that covered the full timeline of the war When I was in high school I really wanted to make a full blown website with a timeline of WW2, using something like timelineJS (or whatever was available back then), with Wikipedia articles for all events, chronologically and filterable/organised by theatre. Never got around to actually making it, because it would be a massive undertaking. Related, if anyone is interested in a chronological telling of WW2 in video format, I can recommend the World War 2 channel, ran by real historians, with an episode a week (+ specials covering special events or topics or people): https://www.youtube.com/@WorldWarTwo reply jonpurdy 5 hours agoprevI expected to spend a couple of minutes browsing this, yet 25 minutes later I'm not even halfway through. The best (so far) are the ones above the strings \"on June 2nd, 1940\" and \"effort by Russian War Relief\". I can't imagine the amount of research and sheer work (especially pre-internet) to create these. I was a kid who played SimCity 2000, RISK, and had tons of books about geography. Having physical pieces of paper that I'd spend minutes or hours analyzing was so satisfying. Scrolling around Google Earth or doing GIS-based analysis is also satisfying, but I really got a kick out of looking at this post (putting aside the seriousness of WW2). reply Yawrehto 4 hours agoprevI have a 1944 World Almanac. It's incredibly detailed on World War Two - by my count, page 31 and 35-113 are mostly or totally devoted to it, in addition to the various bits on armies scattered throughout. Sometimes I look at it just to see what happened on that particular day (for instance: today, German forces landed in Leros, in the Aegean Sea, which was at the time held by the British, among many other events - and that just in 1943!) There are also some incredibly detailed war maps which I sometimes look at. At some point I should probably get around to uploading them, as they are absolutely amazing and I'd like to share it, but it's always near the bottom of my to-do list. reply derbOac 3 hours agoparentI have a copy of Churchill's memoirs of WWII and also read his memoirs of WWI. I always liked the maps in the books, as they somehow brought me a little closer to the time. They're another way of conveying information not only about what is being discussed, but also how the people going through it saw things and what they wrestled with conveying. Maps made in the current day to accompany Churchill's text wouldn't have the same effect. reply Someone 4 hours agoparentprevDo you mean this: https://archive.org/details/worldalmanacbook0000unse_z4q3? (Unfortunately only borrowable) reply Archelaos 3 hours agorootparentHere is a full version: https://archive.org/details/world-almanac-and-book-of-facts_... reply Yawrehto 2 hours agorootparentI think both of those are correct, although they appear to be the paperback, as the hardcover has the front illustration on the inside and is otherwise plain. The electronic version does feel rather odd, though. It's much harder to open it to a random page and find something interesting (say, a list of refugee scholars who at the time had moved to the US, 561-63), which, for me at least, is the point. I could find the vast majority of the information, if not all of it, elsewhere with little effort, if I was so inclined. It's more in the discovery aspect of it (and the advertisements, which are often absolute gems, although less so than the 1909 edition, which included two awkwardly arranged vertical ads which had large text of 'Rupture' on the left and 'Your Lungs' on the right so it reads as 'Rupture Your Lungs', and also \"Dr.\" Rupert Weils, who claimed to be able to cure cancer at home, using \"radiatized fluid\", which I think is radioactive water; by 1944 they were much less blatantly wrong or poorly arranged.) reply bane 45 minutes agoprevSomething I've come to really appreciate about WWII, is how much effort was put into either creating or implementing concepts about organization and efficiency into action. WWII was likely the largest organizational endeavor in human history. There's an almost paradoxical immensity to it, where humans, using paper, typewriters, physical mail, and early electric (not electronic) communication systems had to organize millions of humans into large coordinated efforts over about half the surface of a planet. They did it without the aid of computers and the unlimited up-to-date firehoses of data that we have today. The paradox is that it's not entirely clear that our modern civilization, using these advantages, would be able to do what they did. Modern technologies seem to create an effect of overanalysis, where the WW2 generation often worked in deeply ambiguous grey areas. Our tendency today is to want to produce as much up to date information as possible, even if its not necessary to the overall goal. We want to use a computer to scrub deeply through immense data to produce marginal gains. A Strategic General in WW2 might want to move 100,000 men and arms to a different location and issue the order where it would be relayed by post, telephone, or telegraph. To find out if that order was fulfilled might take weeks or months to even find out. Today we would want to track each soldier's boots to watch them march across a digital map in real-time. Yet it worked. With major operations occurring down to the minute that involved multinational organizations moving millions of tons of human lives, arms, supply, and equipment, all also built to fulfill that order, on time and at high quality. reply 082349872349872 20 minutes agoparentThey didn't have computers, but they did have card machines. https://www.ww2online.org/image/large-replica-punch-cards-bu... https://www.columbia.edu/cu/computinghistory/405.html https://www.computerhistory.org/collections/catalog/10264546... dieselpunk ftw reply AcerbicZero 8 minutes agoprevThose are some impressive maps, with tons of foreshadowing, barely 9 days into the conflict. reply stared 52 minutes agoprevFor WW2 visualizations, The Fallen of World War II (http://www.fallen.io/ww2/) is a masterpiece—well-researched, clearly visualized, and paired with excellent narration. It balances nuance with the big picture, and even though it addresses tens of millions of deaths, it reminds us that these are people, not mere statistics. reply cf100clunk 2 hours agoprevExcellent historical resource. Also the ''Atlas Of World War II'' is quite good: https://commons.wikimedia.org/wiki/Atlas_of_World_War_II and there is this hard cover ''Atlas of World War II'': https://www.amazon.com/Atlas-World-War-II-Cartography/dp/142... reply panick21_ 2 hours agoparentI would add to this: \"A History of the Second World War in 100 Maps\" See: A History of the Second World War in 100 Maps reply WesleyLivesay 4 hours agoprevInteresting article! The details on the maps are always interesting. The first map of 1939 shows the British blockade line of the North Sea that was so important during the First World War but would play a much lesser role in the Second, it probably would not even be present on most maps made after the war. reply warrentr 2 hours agoprevThe winds of war and war and remembrance books (or audio books) are a pretty good way to get a feel for ww2. They're historically accurate fiction and offer a lot of long-form detail and context (at least from the US/allies side of things) reply BubbleRings 2 hours agoparentIf you really want to have a solid overview understanding of World War 2, and you are just not the type to read two long books no matter how good they are, then here is probably your best option by far: 1. Pay for an Audible account. (Or figure out how to get free access to audio books from your local library.) 2. Listen to the books “Winds of War” and then “War and Remembrance” by Herman Wouk. The drama and characterizations are just fine, and will pull you right in to caring for Pug Henry and wanting to know what happens to him and his family. The battle scenes are true history and will blow you away, and teach you a lot. Midway, incredible. The coverage of the Holocaust will break your heart, but make you think, “wow, everybody in the world should read this once”. The character evolution of Werner Beck, in light of today’s world events, might terrify you. Whole nations don’t all of the sudden become evil. Evil powerful leaders push evil down into a country over time. reply MrMcCall 4 hours agoprevMy son and I are fans of Stephen E. Ambrose's books \"D-Day\" and \"Citizen Soldiers\" (as audiobooks), but would really love a video companion to the books that charts the territories being discussed. It would be like a subtitles file, but with map images and timing. I would love to endow Mr. Goldwag to undertake such an endeavor. His site demonstrates his love of maps as tools to help understand history. Fantastic! reply TacticalCoder 4 hours agoprevSome still haven't seen this picture: https://en.wikipedia.org/wiki/Operation_Overlord#/media/File... I don't think we can really comprehend how big an operation that was. A movie like \"Saving Private Ryan\" was incredibly good (especially the scene on the beach front) but didn't come anywhere close to show anything resembling that picture. reply bloopernova 4 hours agoparentEven more incredible, the USA landed on Saipan soon after the Allies landed in Normandy. The landing ships for operation FORAGER had to travel 1,000 miles across open ocean. Recommended reading: The Fleet at Flood Tide by James Hornfischer, and Twilight of the Gods by Ian Toll. reply simonh 3 hours agorootparentFound this image of the landing craft: https://weaponsandwarfare.com/2019/07/09/saipan-landing-i/#g... reply bloopernova 3 hours agorootparentThat's a really good article, I hadn't seen those details before. Thank you! Second part: https://weaponsandwarfare.com/2019/07/09/saipan-landing-ii/ reply Someone 1 hour agoparentprev> I don't think we can really comprehend how big an operation that was. I think that very impressive photo doesn’t even show it. FTA: “A 1,200-plane airborne assault preceded an amphibious assault involving more than 5,000 vessels” ⇒ I estimate that that photo only shows about 2% of the vessels involved. Getting (also FTA) “Nearly 160,000 troops crossed the English Channel on 6 June” onto a coast without using any ports and where you are getting shot at takes a lot of effort. reply potato3732842 51 minutes agorootparentThe photo also doesn't really do justice to how much stuff was going on at one time since it just makes it look like supplies are being delivered to a beach. You've got an an incredibly dense (in terms of participants per area or volume) naval battle, infantry engagements, air superiority operations, close air support and logistics operation all at the same time in roughly same place and even if you pick one aspect to focus on you'll find that the scale and tempo of operations in any one area exceeds what's \"normal\" even for a pitched battle. reply the_af 4 hours agoparentprevImpressive photo. I imagine many more are even less familiar with the massive operations from the Eastern Front, simultaneously more important and lesser known in the West (at least in pop culture; historians of course know them). E.g. Operation Bagration. reply The_Colonel 3 hours agorootparentOverlord overshadows other operations because it was unique in its nature, scale and difficulties. Eastern Front also had its iconic moments like Battle of Stalingrad or Siege of Leningrad... reply the_af 3 hours agorootparent> Overlord overshadows other operations because it was unique in its nature, scale and difficulties Without diminishing Overlord (a landing of this magnitude was unparalleled), I think Bagration is just as impressive, devastatingly effective at annihilating the German army (most of Army Group Center gone, poof), and must have been a logistical and secrecy nightmare to employ maskirovka at such a large scale. It was larger scale than Overlord, too. Not many in pop culture know about the Siege of Leningrad. Stalingrad is better known in pop culture, but regrettably most of it at the level of terribly bad and misleading movies such as \"Enemy at the Gates\". > Eastern Front also had its iconic moments [...] That's a bit of an understatement... The Eastern Front is where most of the fighting in WWII happened. It's where the European theater of war was truly won or lost. reply JackFr 2 hours agorootparenthttps://www.amazon.com/900-Days-Siege-Leningrad/dp/030681298... The 900 Days is an eye-opening and compelling book about the siege of Leningrad. Highly recommended. reply MichaelZuo 5 hours agoprevI’ve heard there were also great maps published in non-english newspapers during this time period. reply doodlebugging 2 hours agoparentI'm a map guy. I love maps and I regularly use online translations to help me understand what the map-maker or poster is trying to convey. With your post and all the opportunities open to you I feel like you advertised a grilled sausage event but when I showed up I discovered you were vegan and only serving salad. Where's the links? reply MichaelZuo 1 hour agorootparentI should have added that I haven’t physically seen these maps which may never have been digitized in the first place… so grilled sausage enthusiasts beware. reply aziaziazi 25 minutes agorootparentI only eat plants but you woke my interest. Translator machine helped me to google “ Karte aus dem ersten Weltkrieg” and found this funny German map from 1014: https://www.vintage-maps.com/de/antike-landkarten/europa/eur... reply arethuza 3 hours agoprevAlso worth thinking about the plans that were in place by the Nazis but never fully implemented due to the defeat by the Allies: https://en.wikipedia.org/wiki/Generalplan_Ost reply hnpolicestate 2 hours agoprevThe more I philosophize on the subject. The reason Western boomers had it so very good is due to them being born mere moments after a cataclysmic, violent human struggle that killed nearly 80 million people ended. reply lsy 2 hours agoprev [–] It's wild to compare these maps with what is being published today in the New York Times about the war in Ukraine: https://www.nytimes.com/interactive/2022/world/europe/ukrain... The modern maps, while technically more \"accurate\" than hand-drawn diagrams, are almost shockingly light on information in comparison, and the accompanying text is a linear recounting of various advances and retreats with only passing explanation of the strategic importance of either. I think there are two effects at play here: one is the decrease in expectation of the readership to have much comprehension or critical thinking facility, which is counterintuitive given supposed strides in education over the last eighty years. The second is the gutting of the news media as an industry where career professionals could get and keep lifetime experience in understanding important events and their place in history. While no doubt reporters today are doing their best, the news media is increasingly reliant on contract work and fresh grist for the mill, and it seems obvious that the writers at the NYT have just not been given the resources or motivation to become as familiar with the contours of the conflict as the writers of the past. reply jcranmer 1 hour agoparentI don't agree. Part of the issue is that World War II is a vastly more complex situation than the Russo-Ukrainian war; it's really not so much a war as it is an overlapping mess of several smaller wars, with a large amount of rapid geographical alterations in a short timeframe. To explain to people in September 1939 what's going on, you have to bring up the Saarland, Sudetenland, Danzig, the Polish Corridor, the dismemberment of Austria and Czechoslovakia... and that's before Germany actually invades Poland. For the Russo-Ukrainian war, you need to bring up... Crimea, the Donbass, and maaaaybe Transdnistria, Abkhazia, and South Ossetia if you're trying to build a wider geopolitical picture. And most maps you see do highlight Crimea and the Donbass! As the war progresses, World War II grows in massive scale, so that places like Tobruk became important locations for the strategic aspect of the war, and even a well-informed individual would have been hard-pressed to locate Tobruk before then. So you need to highlight this town in North Africa, and then explicate why a town in North Africa is important in the context of a literal world-wide war. By contrast, Ukraine is far smaller than the entire world, and even an important linchpin like Vuhledar has only the significance of, say, Bastogne in WW2. reply openasocket 2 hours agoparentprevI disagree. I see about the same amount of information on the maps in the article in comparison to maps of the war in Ukraine. The maps in the article are certainly prettier, but not more informative. I think your complaint about the \"linear recounting\" has more to do with the nature of the war in Ukraine compared to WW2. The battle in Ukraine is almost entirely on land, while in the WW2 maps the majority of the maps are focused on sea lines of communications and air bases. The front lines in Ukraine aren't static by any means, but compared to WW2 these lines are barely moving. > the decrease in expectation of the readership to have much comprehension or critical thinking facility > the gutting of the news media as an industry where career professionals could get and keep lifetime experience in understanding important events and their place in history I think you have certain per-conceived notions and are trying to justify them in these maps, rather than the other way around. I've read old newspaper articles and really don't see any \"decrease in expectation of the readership\". As for the \"gutting of the news media,\" I think there is some truth their, but I don't think you should denigrate the journalists of today. Recall that Ernie Pyle, perhaps the most famous war correspondents of WW2, before the war was a human interest writer. reply ThrowawayR2 2 hours agoparentprevOr maybe it's because they're busy fighting a war and trying not to die so that they haven't had the time to provide records for the historians and analysts to ruminate over. reply stonesthrowaway 2 hours agoparentprev [–] > The modern maps, while technically more \"accurate\" than hand-drawn diagrams, are almost shockingly light on information in comparison, and the accompanying text is a linear recounting of various advances and retreats with only passing explanation of the strategic importance of either. Feels like both are light on information. But what do you expect? It's war time propaganda. It isn't meant to educate or inform. The news during war is not the same as it is during peacetime. They serve different goals. Whether it's ukraine. Gaza. Or ww2. > one is the decrease in expectation of the readership to have much comprehension or critical thinking facility, which is counterintuitive given supposed strides in education over the last eighty years. Mass education was never meant to increase critical thinking. Mass education exists to brainwash and instill conformity. The modern education system was created by the prussians in the 1800s to \"educate\" the peoples of the various germanic states into one single nation. It's the same education system adopted by the US and much of the world. > and it seems obvious that the writers at the NYT have just not been given the resources or motivation to become as familiar with the contours of the conflict as the writers of the past. Because NYT reporters were so familiar with the contours of iraq and their wmd program? If someone gave the NYT a trillion dollars, what would change? Nothing. The reporting would be the same. Especially when it comes to wars. When you read war propaganda from the past ( pick any war ) or in any country, it's remarkable how similar they all are. reply Consider applying for YC's W25 batch! Applications are open till Nov 12. GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The blog post delves into the author's passion for history and maps, particularly focusing on World War II.",
      "It emphasizes the importance of maps in understanding historical events and how they reflect changing perceptions over time.",
      "A collection of World War II maps is shared, showcasing their use in newspapers to inform the public about the war's progress, including aspects like territorial changes and strategic insights."
    ],
    "commentSummary": [
      "A project initially used Google Maps to track World War II battles but found it overly detailed, leading to the creation of a chronological series of WWII movies to visualize the war's timeline.",
      "Recommended resources for understanding WWII include \"The West Point Atlas of War\" and Martin Gilbert's book \"The Second World War,\" highlighting the interest in a historical map project with a date slider to track unit positions over time.",
      "Discussions arose about the challenges of modern war reporting compared to WWII-era journalism, with suggestions for films and books to gain a comprehensive understanding of the war."
    ],
    "points": 233,
    "commentCount": 57,
    "retryCount": 0,
    "time": 1731360508
  },
  {
    "id": 42111260,
    "title": "Bus Number – The GitHub plugin my coworkers asked me not to write",
    "originLink": "https://www.scannedinavian.com/the-github-plugin-my-coworkers-asked-me-not-to-write.html",
    "originBody": "Shae Erisson's Blog Home About Contact The github plugin my coworkers asked me not to write. Posted on 2024-11-11 This blog post was written together with , who made coooool visualizations like the picture at the end of the post! Update: Here’s mclare’s blog post about this, with visualizations! What’s a Bus Factor or Truck Factor? According to wikipedia: The “bus factor” is the minimum number of team members that have to suddenly disappear from a project before the project stalls due to lack of knowledgeable or competent personnel. Why? In 2015 or so, my employer had layoffs. One of them was the only contributor to part of the codebase that made money for our company. I remembered reading about Truck Number on the original wiki, so I thought it’d be fun to write a github enterprise plugin that calculates who you can’t afford to fire. I enjoy reading research papers, and found this truck factor research paper. I started writing the plugin, and talked five minutes on it at our Thursday afternoon lightning talks. My coworkers said it would immediately hit Goodhart’s Law. They saw this as a way for management to easily calculate who you can fire! What? The original authors calculated how many people had to be hit by a bus for a bunch of popular GitHub projects to stall. This includes the Linux kernel among others. In the first preprint, they said 80 people would have to leave the project for Linux to stop. Last week I mentioned this blog post idea to mclare, and she said we should try to reproduce the results and see if the truck factor has improved in the past ten years. The authors’ github repo is available and still works! Are we able to reproduce the results? The Truck Factor research paper links to a github repository! The data from the paper is available as JSON! Their visualization is backed by a CSV we can scrape! But, we don’t know the date they pulled the data. The README instructions don’t quite work, and we spent an hour figuring out how to execute the pieces. Fortunately, the issues on the github repository told us how to fix the problem. I wanted results, not an afternoon of debugging their use of awk in shell scripts. mclare got the list of github repos out of the first column of their CSV. We needed to clone them all! We had fun learning about gnu parallel to run a bunch of git clone commands at the same time. Gnu Parallel Why does gnu parallel use all the cores when we tell it to use only 8? We only saw eight git clone processes at a time, but a large number of git index-pack processes that maxed out all 32 cores on my laptop. I’m guessing git’s index-pack is a forked subprocess and allows parallel to start another git clone? If you know the answer, send us a message! Ruby Gems in NixOS The Truck Factor code uses linguist to filter out files that are only documentation. Later in the paper the authors say that documentation is the best way to keep your project alive, so I’m not convinced that’s good. In any case, I’m running NixOS and have no experience with Ruby, thus installing Ruby Gems did not fit in the time I had. If you know a good way to install the linguist plugin in a Nix flake, please send me a message! (or even a pull request) But, how did you recalculate the results? We forked the original repository on github, cloned it locally, and puzzled our way through the README. We used mvn package to compile the Java source into a jar, and tried each of the steps on the numpy github repository. Then we were ready to recalculate all the things. mclare downloaded the CSV from the authors’ visualization and we converted the first column into a list of github repositories. I started with a for loop, but mclare switched to gnu parallel, because it’s cool. Also because everything gets done faster. # clone the repositories parallel -j 8 git clone ::: $(cat ../meta/repo_list.txt) # change into the directory so you don't get the awk error cd gittruckfactor/scripts # scrape out all the git commit info for x in ../../repos/*; do ./commit_log_script.sh $x; done; # run the java code that ingests the scraped commit data for x in ../repos/*; do dirname $x >> ../results.txt && echo java -jar ./target/gittruckfactor-1.0.jar $x $x >> ../results.txt; done; I have a fast gigabit internet connection at home, it took 17.5 minutes to clone all the repos one at a time. Processing each repo took about the same time, eighteen minutes maybe? Here’s one example output for the linux kernel repository: linux TF = 12 (coverage = 49.98%) TF authors (Developer;Files;Percentage): Linus Torvalds;5712;6.59 Mauro Carvalho Chehab;2479;2.86 Rob Herring;1313;1.51 Thomas Gleixner;1228;1.42 Krzysztof Kozlowski;1222;1.41 Ben Skeggs;1211;1.40 Arnaldo Carvalho de Melo;911;1.05 Greg Kroah-Hartman;852;0.98 David Howells;718;0.83 Ian Rogers;599;0.69 Masahiro Yamada;598;0.69 Takashi Iwai;581;0.67 ProblemsThis calculation neglects the review process. As you go up the career ladder, developers should do more review and less hands on keyboard. Further Work does the truck factor calculation take into account git’s co-authored-by and reviewer headers? If not, could it? why is our number for Linux so very different ten years later? The original paper gives a truck factor of 80, we get EIGHT! The original paper uses a Levenshtein distance of one to find and merge developer aliases. I don’t think we did that. Maybe that changes our number? Would this version of the truck factor code still give us 80 if we checkout the Linux kernel repo at mid-2015 ? According to the git history, the algorithm was updated in 2016, could we get new numbers for a later blog post? We could look at some of the 156 citations of this paper and see if someone came up with a better calculation. We could compare popular projects of today to their history. Rust and other recent big names are not mentioned in the 2015 paper. For that matter, we could write a script to find yearly truck numbers for any git repo. Shae wants to figure out how to install Ruby Gems in NixOS so the linguist plugin can filter out which files are only documentation. Conclusion - Bus Factors got scarier. The biggest question we both had was, did it get any better? I’m gonna say no, it’s gotten worse. The 2015 preprint of this paper gave the linux kernel a truck factor of ninety! The full publication gave that same repository a truck number of fifty seven. Without the linguist plugin to filter out documentation and third party libraries, we got a truck factor of twelve for the Linux kernel repository. After mclare installed the plugin on her system, she got a truck factor of eight for the Linux kernel. This is not an improvement. If you want more articles on this subject, send us a message! Visualize! For more visualizations and nifty details, check out mclare’s blog. RSS ATOM Site proudly generated by Hakyll ← Constellation Webring →",
    "commentLink": "https://news.ycombinator.com/item?id=42111260",
    "commentBody": "Bus Number – The GitHub plugin my coworkers asked me not to write (scannedinavian.com)226 points by todsacerdoti 19 hours agohidepastfavorite108 comments bunsenhoneydew 17 hours agoThis is one of the features of https://codescene.com/ It looks for knowledge islands and relates those to frequently modified code, to identify hotspot, or areas of high risk due to low knowledge distribution in areas of high change. Another use is if someone hands in their notice you can easily see all the code that only they know, so your handover planning is mapped out easily. I’ve never thought of it being used maliciously, it’s for visibility. It would be a shitty manager that would use it that way and if they’re already shitty then this tool won’t change that. reply healsdata 2 hours agoparent> I’ve never thought of it being used maliciously, it’s for visibility. It would be a shitty manager that would use it that way and if they’re already shitty then this tool won’t change that. I've had three jobs where Pluralsight Flow was introduced. At two of them, the managers immediately started using the metrics for feedback, performance reviews, employment decisions. At the third, the developers saw this coming a mile away and refused to engage with or evaluate the tool. Unfortunately, the absurd pricing of these tools means that people who approve them have to get some sort of ROI. Since they don't have a good way to measure productivity/output/knowledge silos, they instead turn to \"Well Jose had less PRs this week...\" reply llm_trw 14 hours agoparentprev>I’ve never thought of it being used maliciously, it’s for visibility. It would be a shitty manager that would use it that way and if they’re already shitty then this tool won’t change that. You are a member of the intelligence community of a country, let's call it Tussia, which has been locked out of the leading kernel for military hardware in the world. Let's call that Kinux. You know that the guy down the office has started a project to fork that kernel for your countries own internal usage. You're an over achiever and want a promotion before he gets one. You call acquisitions for 8 female agents with special training for intimacy with nerds, you also make a back up call for 8 doses of polonium in case the agents aren't successful. In case you think the above is fiction I know a CEO of a unicorn startup who got the first part of the treatment when he was looking for seed funding. reply 1123581321 13 hours agorootparentDid it work? reply llm_trw 11 hours agorootparentTo protect the guilty, and any future books I might write on the subject, I'll leave it to your imagination. reply vasvir 8 hours agorootparentDont' forget the movie... reply aa-jv 8 hours agorootparentprevYou'd basically be writing a treatise on the Peter Principle, anyway .. reply behringer 3 hours agorootparentprevYes, honestly that's so glaringly obvious that the author of the tool really ought to stop dismissing the criticism out of hand and take it seriously. He's built a tool that generates hitlists for any competitor to use. reply yellow_lead 2 hours agoparentprevAn outside firm might use this to help a company conduct layoffs. Manager could be amazing reply toss1 4 hours agoparentprevExcellent points about visiblity, as long as you can keep it in that domain. But this always lurks in the near shadows: >>I’ve never thought of it being used maliciously, it’s for visibility. It would be a shitty manager that would use it that way Therein lies the problem, on both sides. It would just become another arms race, as the developers would use it to identify and move into target project areas/components to get themselves on the list of un-fireable workers. Ideally, the workers would ensure work together to ensure that the truck_factor was zero, i.e., none of them could be fired. Of course all of this rapidly becomes a (nearly)complete waste of time, proving the blogger's friends original point: >>\"My coworkers said it would immediately hit Goodhart’s Law. \" reply grogenaut 17 hours agoprevAmazon has these numbers easily accessible as reports on their code systems runnable at any manager level, and many other ways to inspect what the team is doing and the risks you might have. I find them useful. Bus factor is one way to think of it. Another is it lets you spot silos, or engineers who aren't working with others, or places where you can't as easily move engineers around (so you can fix that). Some developers fear fungability, they think that that one system only they know is job security. I see it the other way, I see that as a technical risk, but also a thing that might be keeping a great engineer from working on more important projects. Or the way to work on something else when you get fed up with that one system you hate. reply rafaelmn 6 hours agoparent> Some developers fear fungability, they think that that one system only they know is job security. I see it the other way, I see that as a technical risk, but also a thing that might be keeping a great engineer from working on more important projects. Or the way to work on something else when you get fed up with that one system you hate. I don't fear fungibility - if a place doesn't want me there I don't want to be there either. I dislike idea of fungibility because it creates huge overhead and avoids using talented people to full potential - because they are not fungible. In some places that's warranted - but in others - the process overhead is far greater risk to your project success than bus factor. reply abirch 6 hours agoparentprevI know a def who was denied a transfer and promotion because he couldn’t easily be backfilled. Spoiler he left company within 3 months reply giantg2 6 hours agorootparentEach department in my company can designate someone as a \"critical man\" so they can't change teams. However, those people usually get the highest possible ratings and raises. I've only seen it used maybe one time. reply grogenaut 1 hour agorootparentprevThis is the other reason I want people to be somewhat fungible... so management can't shoehorn them. Really the ability to move is a good thing for both the company and the employee. Moving doesn't HAVE to happen, but it's really much better when everyone has options. reply tdiff 7 hours agoparentprev> Some developers fear fungability, they think that that one system only they know is job security And this is pragmatical for an employee who's primary goal is not optimizing Amazon's income. reply fn-mote 15 hours agoparentprev> Some developers [...] think that that one system only they know is job security \"You can't be promoted if you can't be replaced.\" reply Cthulhu_ 10 hours agorootparentBut a promotion also means change, maybe people are happy where they are? After all, you're most productive in a familiar codebase. Then again, if a codebase is \"done\", productivity is less important and often work dries up. There's plenty of people that are happy with working 10 but getting paid for 40 hours a week. reply eek2121 7 hours agorootparentThis. I am not a manager, but I LOVE writing code and solving problems. I would NOT love being a manager. reply catlifeonmars 4 hours agorootparentSome companies have parallel career progressions for individual contributors and managers. For example, Amazon has a distinct career progression for software development engineers (SDE): SDE I, SDE II, Senior SDE, Principal SDE, Senior Principal SDE. Sr Principal is a VP level position, but has no direct reports. It’s an advisory role. reply deltaburnt 4 hours agorootparentI've noticed that, while these tracks are still technical, you will still find yourself in more and more meetings and writing less code. I think everyone needs to come to terms with whether or not they want a promotion regardless of the track. reply rty32 6 hours agorootparentprevAt Amazon, if you don't get promoted, you get pipped, eventually. reply swiftcoder 4 hours agorootparentOnly if you aren't at a terminal level already, and you are easy to replace. When I was there one could find plenty of SDE IIIs (and a smattering of SDE IIs) who had found nice quiet niches of the codebase to hide out in for 5 years or more... reply tobyhinloopen 12 hours agorootparentprevWho needs promotion? I just want more money reply null0pointer 14 hours agorootparentprevPerhaps another framing of the same idea is that you can’t work on other (bigger and better) things if you can’t hand your work off to someone else. reply shae 6 hours agorootparentArticle author here: I've always said I want to be able to go on vacation and not get a call. I like your framing better! reply efitz 12 hours agorootparentprevI don’t want to frame it positively. In my experience, people who hoard knowledge and/or relationships (as with other teams or customers) are toxic. I hate all sorts of gatekeeping behavior but I especially despise having to wheedle information or effort out of someone like that. They almost invariably have an ego that is out of proportion to their contributions. Side note: Occasionally I have seen people who take on the thankless task of being a maintainer of something no one else wants- those people tend to welcome others and share as much as others are willing to listen to, so being the single person who knows something doesn’t make you a gatekeeper. It’s the gatekeepers that I hate. reply grogenaut 13 hours agorootparentprevhonestly every system I saw someone corner themselves in didn't take very long to have someone else figure out. you just toss some smart motivated folks at it. paging them every time something breaks also seems to help the knowledge transfer. I know it motiviated me to get in there and do a gut rehab. reply krageon 4 hours agoparentprevAt the end of the day the engineer has a valuable skill and you're the one telling them they need to be more replaceable. You're the enemy. Of course you're going to think the tools that let you dehumanise your employees at scale are good things. reply goostavos 3 hours agorootparentHard disagree. I think a huge part of our job as engineers is to build systems that can outlive us and comfortably change hands (without the next team cursing the former). Maybe this is born from spending so many years in Amazon (with it's high turn over and near-quarterly re-org shuffling), but what's getting called \"replaceable\" here I'd call \"writing maintainable software.\" The goal is to get knowledge out of your head and into the codebase so everyone can reap the benefits. Knowledge hoarding is lame. reply bhaney 14 hours agoprev> Why does gnu parallel use all the cores when we tell it to use only 8? We only saw eight git clone processes at a time, but a large number of git index-pack processes that maxed out all 32 cores on my laptop. I’m guessing git’s index-pack is a forked subprocess and allows parallel to start another git clone? Parallel is running 8 git clone jobs at once (as asked for) and each git clone is starting as many index-pack threads as it wants. Temporarily setting pack.threads to 1 (via git config) would help here. reply chrismorgan 13 hours agoparentThis is an increasingly common problem: two layers, both trying to utilise the entire machine by parallelising by the number of CPUs/cores, and so the inner layer gets N² threads/processes. Being quadratic growth, this means that the problem becomes worse the more CPUs you have. With 32 cores, 32² = 1024, though in practice Parallel was told 8 so it’d cap out at only 256 index-pack processes. But that’s a lot of memory needed to support that, especially given that it’s doing no good. The solution is for only one of the two layers to parallelise. —⁂— Given that you talked about pack.threads, here’s its description from `man git-config`: > Specifies the number of threads to spawn when searching for best delta matches. This requires that git-pack-objects(1) be compiled with pthreads otherwise this option is ignored with a warning. This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads. Specifying 0 will cause Git to auto-detect the number of CPUs and set the number of threads accordingly. reply PhilipRoman 12 hours agorootparent>The solution is for only one of the two layers to parallelise If you have a common scheduling API, you can manage this much more elegantly. For example make(1) can control the concurrency level across recursive invocations by using a \"job server\" https://www.gnu.org/software/make/manual/html_node/Job-Slots... With this, you can have, for example, 3 top level subprocesses, each spawning multiple threads of their own, but never exceeding the CPU count. Alternatively, parallel could make it's subprocesses think that they're running on a 1-core machine, although this may have some subtle side affects. reply slimsag 12 hours agorootparentReminds me of a Zig proposal I saw recently to make the std.Thread.Pool API respect the Linux jobserver and macOS dispatcher automatically out of the box: https://github.com/ziglang/zig/issues/20274 reply PhilipRoman 10 hours agorootparentThose are some really interesting proposals. I agree that a lot of code ignores resource cleanup, especially when it comes to driver-userspace communication. For example, driver authors just implement a netlink/ioctl system which manages persistent state in kernel space, even though they could bind the state to a device file descriptor, which automatically gets cleaned up upon process exit (but still can be handed to another process, if really needed) reply rwmj 10 hours agorootparentprevThe solution is a global scheduler (the one thing that Kubernetes does well). It would be aware of what every program needs, not just in terms of CPU, but also memory, devices, time etc. and split the available resources fairly. reply notpushkin 12 hours agoparentprev> Temporarily setting pack.threads to 1 (via git config) Or just use `git -c pack.threads=1 clone`: https://git-scm.com/docs/git#Documentation/git.txt--cltnameg... reply shae 6 hours agoparentprevThank you, didn't know this. I'll add it to the article. reply jschrf 13 hours agoprevI don't like this take. This post is for any engineering leader. The Bus Factor is how hard your team would suffer if you - or anyone else on the team - got hit by a bus. Ideal Bus Factor for all team members is 0. This might sound counter-intuitive at first, almost like \"make everybody expendable\", but it's quite the opposite and kind of the point. Teams should be good enough that they are a) autonomous and b) there are no mysteries. In the ideal state, everyone understands how everything works. New employees should hit the ground running and be able to produce value immediately. Departing employees should feel comfort in knowing that there are no unknowns. An ideal team with 0 BF across the board is desirable. It means that team members are fungible. It means that every single team member can fill in the gaps if someone is ill, or on vacation, or actually leaves or is removed. More importantly, a 0 BF is a reflection of simplicity. The software, its build/test/deployment pipelines, documentation, and support, should all be cohesive and coherent. Siloing information in team members is bad, everyone should be able to build and deploy. 0 BF is a healthy metric, but it is absolutely 100% not measured in email rate, commit rate, PR rate, lines of code, timeliness, GitHub heatmaps, etc. Those metrics indicate nothing at all. Quite the oppositve. They are harmful, awful metrics. Measuring people by these metrics is just monkeys on typewriters. More startups need to hear this. reply saghm 13 hours agoparent> The Bus Factor is how hard your team would suffer if you - or anyone else on the team - got hit by a bus. > Ideal Bus Factor for all team members is 0. This might sound counter-intuitive at first, almost like \"make everybody expendable\", but it's quite the opposite and kind of the point. I've always heard bus factor described in the inverse fashion, as in \"how many people would need to get hit by a bus for the project not to be able to continue\", with the optimal number being the same as the number of people on the team. It sounds like the idea is the same, but I'm surprised to find out that the number people to convey the concept isn't always the same. reply Moru 7 hours agorootparentA number between 0 and 1 can easily scale to whatever company you have. A number that is different depending on how many is on your team is harder to compare between teams. I guess it depends on if you ask a programmer, administrator or mathematician what a logical system would be :-) reply saghm 3 hours agorootparentFor sure! The simplicity of having the same ideal bus factor for all sizes definitely appeals to me, but maybe due to familiarity, I think I prefer the well-defined units from the version I cited. It's a bit of a https://xkcd.com/883/ situation in terms of how bad your imagination is for what \"maximum suffering\" would be. reply com2kid 12 hours agoparentprev> Teams should be good enough that they are a) autonomous and b) there are no mysteries. In the ideal state, everyone understands how everything works. New employees should hit the ground running and be able to produce value immediately. Departing employees should feel comfort in knowing that there are no unknowns. I've worked on projects where we had engineers who were one of a countable handful of people in the world with their particular skillset. The bus factor was most certainly 1 at that point. > More importantly, a 0 BF is a reflection of simplicity. The software, its build/test/deployment pipelines, documentation, and support, should all be cohesive and coherent. For projects which push the frontiers of what is possible, simplicity isn't an option. (Granted these are a small % of overall software projects that exist!) When something has never been done before, you aren't worried about keeping the code As Simple As Possible, you are worried about how the hell you can even do this particular thing. I'm not saying the code should be low quality! However sometimes doing hard stuff involves complex code, and maybe a couple generations later people have figured out design patterns so the hard stuff can have less complex code, but that may be a decade down the line! reply jdiez17 6 hours agorootparentIn the wise words of Grug: > grug understand all programmer platonists at some level wish music of spheres perfection in code. but danger is here, world is ugly and gronky many times and so also must code be https://grugbrain.dev/ reply capitol_ 11 hours agoparentprevIf you only build things that are so simple that anyone can understand the code on day one and you don't need any domain knowledge, then what is your value proposition? If the most complex thing you can build is a todo-app, then I think you don't produce much value to society. reply RHSeeger 6 hours agorootparentBeing able to write code that is able to be understood by someone new to the project is a skill set. It is certainly one that is not universal. And it is certainly one that should be admired. Solving hard problems in the simplest way, with clear information about why/how it works is one of the most important skills of a developer, imo. reply linhns 5 hours agorootparentprevNot day one, but anyone should be able to follow the code using a debugger and understand it. If you write spaghetti code segments, it's high time to change them. reply Moru 7 hours agorootparentprevIf you ask society what has helped them the most, you will be surprised to learn how many claims the todo-list (paper or app in whatever time frame) is their main way of actually getting anything done. reply jdiez17 6 hours agorootparentUm, I would argue that what has helped society the most is agriculture, sewage systems, healthcare, electricity and heating, etc. All of which are technological innovations. Also, how many variations of a to-do app does the world need? reply reaperman 4 hours agorootparentDental care and air conditioning (more generally, refrigeration) are probably my top 2. reply james-bcn 9 hours agoparentprevAgreed. People who are good at their jobs and confident in what they do actively try to make their Bus Factor as low as possible. If you have a high Bus Factor that means your employer keeps you because of what you have done in the past, not your potential to do great stuff in the future. reply Animats 9 hours agoparentprev> Ideal Bus Factor for all team members is 0. The military thinks that way. They expect to lose people and keep going. reply jaza 8 hours agorootparentThe military operates that way with 99% of their personnel, who are grunts, expected to only ever follow orders, to never think for themselves. They're expendable cannon fodder - think of them as pieces of hardware in a software company. But with the 1% at the very top (basically just generals), I'd say the bus factor comes into play, same as in any other organisation - certain individuals have all the knowledge of certain domains, and if enough of those individuals are taken out, the wheels grind to a halt. That's why targeted assassinations happen to the top brass. reply swiftcoder 4 hours agorootparentSure, if you manage to assassinate the entire command chain, things will go pear shaped. I dare say you could likely assassinate half the command chain, and the military will still managed to get where they need to be, when they need to be there. Military command chains have levels of redundancy that civilian organisations wouldn't dream of. As a concrete example, it's estimated that the British lost ~40% of their officers in the Battle of Albuera, and they still managed to repel Napolean's forces. reply result2vino 7 hours agorootparentprevNot really sure what the point is meant to be here. I’m not sure if this is news to anyone. reply kookamamie 8 hours agoprev> As you go up the career ladder, developers should do more review and less hands on keyboard. A common misunderstanding in tech companies, I think. You don't want to exchange great developers for mediocre managers. reply giantg2 6 hours agoparentYep, we have a tech lead who has great code writing abilities. But he has terrible leadership, feedback, etc skills. He would be much better as a senior dev instead of a tech lead. I can't imagine how miserable his team would be if he was a manager. reply result2vino 7 hours agoparentprevIf you think that code review is “management” then that’s very very concerning. reply swiftcoder 4 hours agorootparentWell, it certainly isn't \"development\". It's a hoop we jump through so that management can tick a box labelled \"all commits were reviewed by another engineer\" on the SOC2 audit... reply akerl_ 4 hours agorootparentThat’s a really weird way to view code review. Everywhere I’ve been part of development, code review is part of ensuring code quality, catching bugs, and avoiding silos. reply danielvf 3 hours agorootparentJust going to second this. Good code reviews (not just typo nitpicking) can be a great way to simplify down code, and spread knowledge horizontally across the org. Not to mention catching bugs. Unit test aren't a substitute because unit tests check that the success paths are good. That's a good start, but it's not the same as verifying all the possible ways code could go wrong in a complex system, and one of the cheapest ways to spot those problems is with people familiar with complex system looking at new code. Code review give you the double benefit of building more people who understand the whole system, and having the code looked at by people who understand the whole system. reply swiftcoder 4 hours agorootparentprevIf a non-trivial percentage of your code review feedback is about code quality and bugs, you are severely underinvesting in autoformatters/linters/strong type systems/testing/continuous-integration. It's not a cost-effective use of (expensive) software engineers to have them scanning every PR on the off-chance they notice a typo. I'll grant you they can help break down silos, but the question you should be asking, is why your codebase is so convoluted that silos are developing in the first place? reply philipwhiuk 18 hours agoprevFrom the original paper the key argument is: > Our estimation relies on a coverage assumption: a system will face serious delays or will be likely discontinued if its current set of authors covers less than 50% of the current set of files in the system An author of a file is defined as a user who has made significant (based on pre-calculated weights) contributions to a file reply stevage 18 hours agoparentThanks, this is the key info I was looking for here. reply aorloff 16 hours agoprevThe sad irony of this is that its still the wrong question. When startups have to do layoffs, the question isn't \"who can I fire and keep the existing business going\" it is instead \"who is the team I want building the next version of the product quickly enough to not go out of business\" But every fork in the road is just exactly that, and not choosing a path quickly enough has been the death of many reply nextlevelwizard 11 hours agoparentHow is this ironic? reply thepuppet33r 17 hours agoprevOn the one hand, I would be very surprised if this sort of dashboard metric didn't already exist in some enterprise software somewhere. My management at a previous company literally asked me if we could do a daily report on who sent and received the most email in our department. I refused to do it because I didn't like where I saw it going, but another coworker did. Unsurprisingly, the person who got the most email and sent the most email was the Sysadmin whose email account was set as sender for all the automated emails from the various servers, as he would literally email himself hundreds of alert emails a day, on top of all the crap newsletters and digests he subscribed to. On the other hand, all of your coworkers asking you to not do something that could potentially impact their jobs, and you do it anyway as a hobby project? Sounds like kind of a jerk move. reply shae 6 hours agoparentI didn't write it in 2015 when my coworkers asked me not to. I do want to see if open source software I use has spread the knowledge to increase survival. I refused the jerk move! reply thepuppet33r 6 hours agorootparentNice! reply jschrf 14 hours agoparentprevKudos to you. Bullshit metric. reply chuckadams 14 hours agoprevCPAN has been tracking the Bus Factor for a long time now. For example, https://metacpan.org/pod/Moose shows a Bus Factor of 5 in the left column info. reply oalders 2 hours agoparentAlso, we did document how we arrive at the number: https://www.olafalders.com/2021/06/30/cpan-bus-factor/ reply egeozcan 5 hours agoprevI really don’t like the term \"bus factor\" because I lost someone in a bus accident. On the other hand, millions of lives have literally been lost on various hills on various battlefields, yet no one seems to mind when someone says, \"this is the hill I’m willing to die on.\" :) reply jjkaczor 4 hours agoparentThese days the \"politically correct\" phrasing is: \"Lottery winner\" Someone wins the lottery. (I am old - I start with the poor bus driver scenario - but then try to inject the new phrasing into the conversation - as typically I am the only technical person on my team and they begin to rely on me for EVERYTHING) reply woodrowbarlow 4 hours agoparentprevi worked a software job that sometimes involved literally going to the busyard to debug on-board equipment. people at that job used the phrase attrition risk rather than bus factor because the latter was just a little too \"real\". reply jedberg 13 hours agoprevWe like to call it the lottery factor. Would the project keep going if someone won the lottery and took off to an off-grid tropical island. Less morbid that way. reply wccrawford 8 hours agoparentPeople who win the lottery give their 2 weeks notice, and you can call them on the phone afterwards if you really have to. People hit by a bus disappear immediately. It's just not the same thing. reply swiftcoder 4 hours agorootparentOnce the big tech employers started having security march employees out of the office the moment they handed in their notice, a lot of folks stopped giving them two weeks notice. Also, it's not guaranteed that your management will actually tell you if they did - one employer asked me not to tell my team I was leaving until the last day for morale... reply bravetraveler 8 minutes agorootparentBeing marched out isn't universal. A household company [left out of FAANG, but still huge] let me actually do a hand off during that time reply erik_seaberg 12 hours agoparentprevA good employee will want to hand off his projects and take questions, but you need to be ready if he can't. reply rightbyte 9 hours agoparentprevYe using sudden death as an eupheism for changing employer leaves a bad taste. It is like when people complain about people using sports metaphors. I say that at least it is not military metaphores. Also, there is usually no handover anyways. So the suddeness factor is not that important. reply swiftcoder 4 hours agorootparent> Ye using sudden death as an eupheism for changing employer leaves a bad taste. Well, see, we can't just straight-up tell employees that we're not going to give them promotions or raises, so they'll have to jump ship in a year... That'd be a disaster for morale! reply ainiriand 13 hours agoparentprevI'd argue that it is easier being hit by a bus so you have to factor that. reply jedberg 13 hours agorootparentTrue, it's about 1000 times more likely to get hit by a bus, but only 5% of those are fatal. So it's not that far off. And still less morbid. :) reply sam_bristow 12 hours agorootparentI tend to phrase it as hit by a bus OR jump on a bus to another company. reply EVa5I7bHFq9mnYK 12 hours agoparentprevDon't know anyone who won a lottery big, or got hit by a bus, but know several people who quit cause of crypto riches. reply pabs3 3 hours agoprevWonder how many managers are thinking about the bus/lottery numbers of all the open source projects their developers are relying on, and then doing something about it. reply m-clare 3 hours agoparentThis is what I was most interested in with this project (especially in light of the https://opensourcepledge.com/). We didn't run it against any new libraries, so it would be interesting to see the state of the most starred libraries. reply shae 6 hours agoprevPost Author here! mclare posted the other half with visualizations: https://mclare.blog/posts/the-bus-factor/ Check it out! reply shiroiushi 18 hours agoprevFrom TFA: >In 2015 or so, my employer had layoffs. One of them was the only contributor to part of the codebase that made money for our company. Maybe I missed it, but I didn't see the author mention what came of this. I'm very curious: did someone else take it over, or did the employer go down in flames? reply chuckadams 14 hours agoparentI imagine the employer limps on with the current codebase and/or is spending beaucoup bucks to rewrite the codebase while still using the old one. reply shiroiushi 13 hours agorootparentProbably, but I'm always hoping to hear a story about a company laying off a highly valuable employee(s) (usually for cost-cutting reasons) and then going bankrupt as a result. reply letters90 9 hours agoprevIf you wanted to view this from a darker side it could also be titled: How to generate a hit list to hurt a global economy reply shae 6 hours agoparentTrue! The original 2015 article I found on Linux Weekly News had comments that worried about that https://lwn.net/Articles/651384/ I think Linux is safe because everyone uses it. reply serbrech 17 hours agoprevThe Codescene product provides an in-depth analysis of knowledge distribution over time: https://codescene.io/docs/guides/social/knowledge-distributi... I recall seeing the linux kernel repo analysis as a show case, but I can't find it anymore. reply joshdavham 14 hours agoprevIt would be cool if you guys produced a graph for truck factor vs number of github stars. It could roughly model the importance per team member or the net impact it would have on the \"stargazers\" if the maintainers were hit by a truck. reply shae 6 hours agoparentCould happen? mclare published the other half of the blog post with nice graphs a few hours later: https://mclare.blog/posts/the-bus-factor/ I'd like to build a tree of open source dependencies and find out which parts need the most knowledge spreading. reply gklitz 10 hours agoprevPut a positive spin on it. We don’t talk about coworkers getting hit by a bus, we talk about them winning the lottery and quitting on the spot due to their newfound fortune. Same discussion but it’s less morbid, and doesn’t end up sounding like your prioritizing the health of your project about the literal lives of your employees. reply Boltgolt 10 hours agoparentThe implications are different. There has to be a high euro sum you can offer to get someone who won the lottery to still brief a colleague. You can throw money at a dead person all you want but that will not have the same result. It is a sudden end in knowledge that can not be restored with time or money (like running out of lottery funds) reply hnbad 9 hours agorootparentAlso, the idea that the only reason people work on the project is that they need the money surely seems less appealing than that the only thing stopping them from working on it is death? Or are we now just okay with saying the quiet part out loud and acknowledging the exploitative nature of the economic system? reply DeathArrow 8 hours agoprevThe title and the first paragraph mentioned a plugin but the article is not about a plugin but about trying to replicate some old results, and they've failed at that since they didn't 100% respect the method of original authors. reply burnt-resistor 6 hours agoprevStep 0. Document everything in an organized manner, create runbooks, and forbid knowledge hoarding and manual processes only (so-and-so) knows. reply swiftcoder 4 hours agoparentWhile it is the platonic ideal for operating an existing service, this is also a great way to kill your velocity if you are an early-stage project which needs to deliver results yesterday, and/or pivot on a dime, in order to stay funded... reply nextlevelwizard 11 hours agoprevso where is the \"plugin\" mentioned? I want to see for funsies what my projects look like, but I dont want to run some random crusty java. reply RIMR 2 hours agoprev\"Bus\" and \"Truck\" terminologies invite you to imagine your coworkers being crushed to death. This isn't great. I've always preferred the term \"lottery factor\". If this employee won the lottery (almost certainly leaving their day job behind), would you be able to survive their sudden departure? reply dragonwriter 2 hours agoparentOver 30-ish years of work, I’ve lost about 0 coworkers without warning or transition to lotteries or similar events, and more than a few (whether permanently or for an extended period) to unexpected sudden death, injury (traffic related being particularly common), or other unheralded misfortune (law enforcement involvement, on a short out of country trip and then encountered visa issues, whatever.) “Bus factor” is a more realistic reflection of the threat model, and resonates with experiences anyone who has been working more than a short time probably has more than “lottery factor”. reply d--b 13 hours agoprevNot only is this a metric that doesn’t make any sense, simply floating the concept that this metric corresponds to anything in real life is harmful. Teams are social constructs, and you simply cannot apply an algo to some observable code metric and get any kind of proper result. People leave, others step up, or don’t. End of story. The problem with these kinds of metrics is that even if people know they are ridiculously off what they mean, some still think that the idea they convey is correct: ie. That if x people were to leave, the project would stall. That premise is simply not true. Don’t even think about this stuff. It’s stupid. If you want to know more about these risks, talk to the team. People on the team know if anyone is irreplaceable. reply aa-jv 8 hours agoprev [–] There's a very quick fix to this, which also radically improves the strength and potency of any organization: Do not ever accept management directives from someone who couldn't do your job. Yes, you heard me. If your manager cannot do what they are asking you to do, fire them immediately. This has the added bonus of ensuring that Peters Principle doesn't become a major mountain instead of a mole-hill. This does not mean that the manager has to do your job. It does mean that making sure your manager knows how to do your job is your responsibility and something that you, yourself as a worker-cog in a large machine, actually do control. I have shipped software all over the planet in all kinds of markets for all kinds of users. The most successful project is composed of individuals who have great deals of trust in each others' ability to perform, and who share the load in ways adequate to the task. In the most successfully managed projects, those managers who I knew could do my job, but didn't (because I did it), were absolutely the best to work for .. whereas those who had no idea how to wrangle a single line of code, yet gave themselves the altitude required to be a 'manager' were, across the board, a catastrophe. BTW, if you feel 'seen' by this comment - i.e you are a manager who feels a bit imposter'ish - don't worry, this is Peters Principle at work, and you can easily fight this by better communication with the folks whose work you cannot do .. reply Consider applying for YC's W25 batch! Applications are open till Nov 12. GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Shae Erisson's blog explores a GitHub plugin concept to calculate a project's \"bus factor,\" which indicates how many team members can leave before a project is jeopardized.",
      "The idea was inspired by a 2015 layoff experience, but there are concerns it could be misused by management to identify expendable employees.",
      "Shae and collaborator mclare faced technical challenges but calculated a truck factor of 12 for the Linux kernel, suggesting a decline from the original study's 80, indicating bus factors have worsened over time."
    ],
    "commentSummary": [
      "The GitHub plugin aims to identify \"knowledge islands\" in codebases, which are areas where only a few team members have expertise, to aid in handover planning.",
      "While the tool is intended to increase visibility and reduce risk by broadening team understanding of critical code areas, there are concerns about potential misuse by management for layoffs or performance evaluations.",
      "Critics argue that relying solely on these metrics can be detrimental, as they may not accurately reflect the complexities of team dynamics and project dependencies."
    ],
    "points": 226,
    "commentCount": 108,
    "retryCount": 0,
    "time": 1731366679
  },
  {
    "id": 42115515,
    "title": "When muscles work out, they help neurons to grow, a new study shows",
    "originLink": "https://news.mit.edu/2024/when-muscles-work-out-they-help-neurons-grow-1112",
    "originBody": "The findings suggest that biochemical and physical effects of exercise could help heal nerves. Jennifer ChuMIT News Publication Date: November 12, 2024 Press Inquiries Caption: In response to biochemical and physical cues of exercise, motor neurons (in purple) exhibit new growth (in green) faster than neurons that experience no exercise-induced cues. Credits: Credit: Angel Bu Caption: MIT scientists find that motor neuron growth increased significantly over 5 days in response to biochemical (left) and mechanical (right) signals related to exercise. The green ball represents cluster of neurons that grow outward in long tails, or axons. Credits: Credit: Angel Bu Previous image Next image There’s no doubt that exercise does a body good. Regular activity not only strengthens muscles but can bolster our bones, blood vessels, and immune system. Now, MIT engineers have found that exercise can also have benefits at the level of individual neurons. They observed that when muscles contract during exercise, they release a soup of biochemical signals called myokines. In the presence of these muscle-generated signals, neurons grew four times farther compared to neurons that were not exposed to myokines. These cellular-level experiments suggest that exercise can have a significant biochemical effect on nerve growth. Surprisingly, the researchers also found that neurons respond not only to the biochemical signals of exercise but also to its physical impacts. The team observed that when neurons are repeatedly pulled back and forth, similarly to how muscles contract and expand during exercise, the neurons grow just as much as when they are exposed to a muscle’s myokines. While previous studies have indicated a potential biochemical link between muscle activity and nerve growth, this study is the first to show that physical effects can be just as important, the researchers say. The results, which are published today in the journal Advanced Healthcare Materials, shed light on the connection between muscles and nerves during exercise, and could inform exercise-related therapies for repairing damaged and deteriorating nerves. “Now that we know this muscle-nerve crosstalk exists, it can be useful for treating things like nerve injury, where communication between nerve and muscle is cut off,” says Ritu Raman, the Eugene Bell Career Development Assistant Professor of Mechanical Engineering at MIT. “Maybe if we stimulate the muscle, we could encourage the nerve to heal, and restore mobility to those who have lost it due to traumatic injury or neurodegenerative diseases.” Raman is the senior author of the new study, which includes Angel Bu, Ferdows Afghah, Nicolas Castro, Maheera Bawa, Sonika Kohli, Karina Shah, and Brandon Rios of MIT’s Department of Mechanical Engineering, and Vincent Butty of MIT’s Koch Institute for Integrative Cancer Research. Muscle talk In 2023, Raman and her colleagues reported that they could restore mobility in mice that had experienced a traumatic muscle injury, by first implanting muscle tissue at the site of injury, then exercising the new tissue by stimulating it repeatedly with light. Over time, they found that the exercised graft helped mice to regain their motor function, reaching activity levels comparable to those of healthy mice. When the researchers analyzed the graft itself, it appeared that regular exercise stimulated the grafted muscle to produce certain biochemical signals that are known to promote nerve and blood vessel growth. “That was interesting because we always think that nerves control muscle, but we don’t think of muscles talking back to nerves,” Raman says. “So, we started to think stimulating muscle was encouraging nerve growth. And people replied that maybe that’s the case, but there’s hundreds of other cell types in an animal, and it’s really hard to prove that the nerve is growing more because of the muscle, rather than the immune system or something else playing a role.” In their new study, the team set out to determine whether exercising muscles has any direct effect on how nerves grow, by focusing solely on muscle and nerve tissue. The researchers grew mouse muscle cells into long fibers that then fused to form a small sheet of mature muscle tissue about the size of a quarter. The team genetically modified the muscle to contract in response to light. With this modification, the team could flash a light repeatedly, causing the muscle to squeeze in response, in a way that mimicked the act of exercise. Raman previously developed a novel gel mat on which to grow and exercise muscle tissue. The gel’s properties are such that it can support muscle tissue and prevent it from peeling away as the researchers stimulated the muscle to exercise. The team then collected samples of the surrounding solution in which the muscle tissue was exercised, thinking that the solution should hold myokines, including growth factors, RNA, and a mix of other proteins. “I would think of myokines as a biochemical soup of things that muscles secrete, some of which could be good for nerves and others that might have nothing to do with nerves,” Raman says. “Muscles are pretty much always secreting myokines, but when you exercise them, they make more.” “Exercise as medicine” The team transferred the myokine solution to a separate dish containing motor neurons — nerves found in the spinal cord that control muscles involved in voluntary movement. The researchers grew the neurons from stem cells derived from mice. As with the muscle tissue, the neurons were grown on a similar gel mat. After the neurons were exposed to the myokine mixture, the team observed that they quickly began to grow, four times faster than neurons that did not receive the biochemical solution. MIT scientists find that motor neuron growth increased significantly over 5 days in response to biochemical and mechanical signals related to exercise. The green ball represents cluster of neurons that grow outward in long tails, or axons. Credit: Angel Bu “They grow much farther and faster, and the effect is pretty immediate,” Raman notes. For a closer look at how neurons changed in response to the exercise-induced myokines, the team ran a genetic analysis, extracting RNA from the neurons to see whether the myokines induced any change in the expression of certain neuronal genes. “We saw that many of the genes up-regulated in the exercise-stimulated neurons was not only related to neuron growth, but also neuron maturation, how well they talk to muscles and other nerves, and how mature the axons are,” Raman says. “Exercise seems to impact not just neuron growth but also how mature and well-functioning they are.” The results suggest that biochemical effects of exercise can promote neuron growth. Then the group wondered: Could exercise’s purely physical impacts have a similar benefit? “Neurons are physically attached to muscles, so they are also stretching and moving with the muscle,” Raman says. “We also wanted to see, even in the absence of biochemical cues from muscle, could we stretch the neurons back and forth, mimicking the mechanical forces (of exercise), and could that have an impact on growth as well?” To answer this, the researchers grew a different set of motor neurons on a gel mat that they embedded with tiny magnets. They then used an external magnet to jiggle the mat — and the neurons — back and forth. In this way, they “exercised” the neurons, for 30 minutes a day. To their surprise, they found that this mechanical exercise stimulated the neurons to grow just as much as the myokine-induced neurons, growing significantly farther than neurons that received no form of exercise. “That’s a good sign because it tells us both biochemical and physical effects of exercise are equally important,” Raman says. Now that the group has shown that exercising muscle can promote nerve growth at the cellular level, they plan to study how targeted muscle stimulation can be used to grow and heal damaged nerves, and restore mobility for people who are living with a neurodegenerative disease such as ALS. “This is just our first step toward understanding and controlling exercise as medicine,” Raman says. Share this news article on: X Facebook LinkedIn Reddit Print Paper Paper: “Actuating Extracellular Matrices Decouple the Mechanical and Biochemical Effects of Muscle Contraction on Motor Neurons” Related Links Ritu Raman Department of Mechanical Engineering School of Engineering Related Topics Biology Neuroscience Cells Biological engineering Health Medicine Mechanical engineering Research School of Engineering Related Articles MIT engineers design flexible “skeletons” for soft, muscle-powered robots Light-activated muscle grafts show promise in aiding muscle recovery post-trauma Wobbly gel mat trains muscle cells to work together At the forefront of building with biology Previous item Next item",
    "commentLink": "https://news.ycombinator.com/item?id=42115515",
    "commentBody": "When muscles work out, they help neurons to grow, a new study shows (news.mit.edu)191 points by giuliomagnifico 5 hours agohidepastfavorite81 comments cdrini 3 hours agoClarification since a number of the comments are reading this as \"strength training makes your brain stronger\". This study looked at _motor_ neurons, not neurons in your brain. Motor neurons are the neurons between your spinal cord and muscle cells, responsible for transferring the signal from your brain to contract/relax your muscles. I think it was already known that working out muscles increases the innervation (the resolution of how many neurons are attached to a muscle) of the muscles, which is the mechanism for increased motor control that eg pianists have. I think this study is shedding more light on process, and providing stronger empirical evidence for that exact mechanism. Very exciting that this might be used to help people recover from nerve damage/spinal cord injury! reply deepGem 38 minutes agoparentI have a unique related problem. My left leg calf muscle is almost an inch smaller than my right calf muscle. I just noticed it this year. Felt so weird. Why would there be imbalance in calf muscle growth to such an extreme degree. Then I tried to do a single leg calf raise on the left leg and couldn't do it. I still can't do it after 6-7 months. I must admit I am not training the left calf muscle at all, just the usual running and some sporadic squats. This could have something to do with motor neurons not firing or something I don't know. I went to a physical therapist who suggested some calf and toe stretches and it seemed ridiculous to me. Like why would I exercise a muscle or a bunch of bones that is not functioning as expected, wouldn't that exacerbate the problem ? He didn't give a convincing answer but this paper makes me think he was spot on. Isolating and exercising the calf muscles could probably help fire those neurons I don't know.I should do some more study on this. It's not debilitating now but I don't know what will be the impact on my balance 20-30 years from now. I am 47. reply FartyMcFarter 4 hours agoprevMuscles need neurons to control them, so it makes sense that some feedback loop would exist. I remember reading about similar feedback loops between muscle growth and bone density (as you get stronger, bones benefit from being resilient to higher loads). As I understand it, the kinetic chain goes nervous system -> muscles -> tendons -> bones. It would make sense for all of these to make each other stronger in some way. reply JusticeJuice 3 hours agoparentDon't forget cartilage. Regular cyclical loads trigger cartilage growth. Source: https://www.youtube.com/watch?v=6PNBjKJ9hxQ reply elsamuko 3 hours agoparentprevSea squirts digest their own brain when they become stationary: https://scopeblog.stanford.edu/2022/07/20/what-can-sea-squir... reply barrenko 3 hours agoparentprevIt makes sense to think of bones as endocrine organs. reply almost_usual 3 hours agoprevTwo things that will improve mental clarity and sleep. Not drinking alcohol and strength training. reply bedobi 3 hours agoparentTook me three times to parse what you wrote, I thought you were saying Not strength training improves mental clarity and sleep lol reply kanbankaren 2 hours agorootparentJust one missing comma before `and` reply Aaronstotle 3 hours agoparentprevI enjoy strength training and drinking alcohol. I think if I had issues with either mental clarity or sleep I'd cut back more, I do practice dry January and have been surprised and how I don't really feel all that different. Maybe 30 days isn't long enough reply chasebank 3 hours agorootparentI too enjoy drinking alcohol and a few years back went dry for 90 days. I was disappointed. If anything, I felt worse. A clean diet and exercise has much more of an impact on how I feel/sleep than abstaining from alcohol. Eat less, move more, drink in moderation. reply kanbankaren 2 hours agorootparentSeveral studies have shown that exercising improves cognition better than brain training games and activities. Alcohol does impact cognition if it is binge drinking, or you exceed 2+ drinks/day. Though it does take years of drinking for it to be visible. reply charliebwrites 3 hours agoparentprevAnd good sleep will increase mental clarity and strength training And not drinking alcohol will improve good sleep and strength training They all impact each other! reply yazzku 3 hours agorootparentIt's a small town shop. reply lemonberry 3 hours agoparentprevI agree with this, however, the best sleep of my life was when I was doing Ashtanga yoga regular. It's very physical, but I think it also takes care of a lot of muscle tension - notably in the shoulders, hips, and hamstrings - that are an often unnoticed cause of sleep issues. Not only did I sleep better while doing Ashtanga, I felt better with less sleep. It was amazing. It's something I've struggled incorporating into my current lifestyle for a few reasons. reply mtalantikite 27 minutes agorootparentAgreed. When I was practicing 5-6 times per week my sleep was a lot better. Unfortunately my yoga school closed during the pandemic and I started training Muay Thai in my neighborhood. Sometimes I'm so tired from training it's actually difficult to sleep. With only doing asana practice I can sleep 7 hours and be fine, with Muay Thai I need 8-9 hours to recover. reply never_inline 3 hours agorootparentprevAshtanga means lot of things apart from Asana and Pranayama. How strict was your lifestyle? reply kombine 3 hours agoparentprevI've had a lot of fights about this with my girlfriend. We both work in academia and regularly go to the gym, but she insists to have a drink every now and then, which she says helps her take an edge off work stress. She also scolds me some times when I want to go to bed before 10pm, saying this is too restrictive and less fun. We ended up breaking up last week - not exclusively because of this, but these incompatibilities definitely contributed to the decision. reply the8thbit 3 hours agorootparentHer approach might not be the literal peak healthiest, but that doesn't mean its wrong. If she's only having a drink every once in a while and is getting 7+ hours of sleep most nights then the negative effects are probably negligible anyway. To a certain extent, most people need to sacrifice some amount of health and performance to live the fullest life they can. If you don't feel that you benefit from that, though, and its important for either of you that you share your lifestyle, then perhaps you just weren't that compatible. reply kombine 3 hours agorootparent> To a certain extent, most people need to sacrifice some amount of health and performance to live the fullest life they can. I agree 100%. I did not post to complain about her, but more to note about incompatibilities in things like sleep schedule. I do believe though she should drink a bit less, but as long as it makes her enjoy life, why not. reply zukzuk 3 hours agorootparentprevIn this scenario, I am your girlfriend, and you are my boyfriend (or from my perspective you are my wife ). For what it’s worth, I’ve found that if I try to go to bed too early — as my wife often insists — I wake up in the middle of the night. This happens constantly enough that I really try to avoid being in bed before 11pm. reply kombine 3 hours agorootparentEverybody is different. The reason I need to go to bed early is that I wake up before 7am every day, regardless of when I go to bed. So the only way for me to get 8-9 hours of sleep is to go to bed early. Your body is different from mine so you need a different routine. My point was that it's important for me to maintain a certain schedule which was incompatible with my partner - which is fair enough. reply fsckboy 3 hours agorootparentprevsounds like she likes a drink every now and then, and you insist that it, like fun after 10pm, is against your principles reply cdrini 3 hours agorootparentprevSorry to hear about your break up, hope you're doing ok. reply kombine 2 hours agorootparentThanks, we are both doing fine! I've had really good sleep since then actually. reply artemonster 3 hours agorootparentprevGlad for your ex gf, tbh :) reply NetOpWibby 3 hours agorootparentprevI'm assuming y'all voted differently reply pelagicAustral 3 hours agoparentprevI haven't had a drink, or smoked for two months and my sleeping has improved so much it is crazy, absolutely crazy... I do need to get back to the gym, it is just so hard to muscle the strength to go when I'm not feeling particularly good about myself, which is dumb, since that is the reason I want to get back into it... reply mtalantikite 3 hours agorootparentMaybe get yourself a couple kettlebells and do some kb swings at home? You can build a lot of baseline strength with a kb or two. Even just doing 100 single arm swings per day is enough at the beginning, and it takes no more than 15 minutes or so. Set yourself a goal of doing it consistently for a while and I'm sure you'll feel pretty confident walking into a gym again after 45 or 100 days. Rogue is actually doing a 5-items ship for $5 promo for the month, kettlebells included. reply smm11 2 hours agorootparentKettlebells are half that price at Walmart. They work just as well. reply mtalantikite 1 hour agorootparentOh for sure, I just am very happy with my Rogue equipment and am wiling to spend a little more for it. It's easy to get damaged equipment in the mail with something so heavy, and Rogue is good about reshipping things. I've never purchased anything from Walmart (I live in NYC, we don't really have them), so I'm not sure what they're like. But yeah, get whatever works for you to start training! reply Workaccount2 3 hours agorootparentprevI never associated alcohol with poor sleep (it makes me fall asleep!) until I got a garmin watch and could see whenever I went to bed after drinking, my rest was absolutely awful. reply cdrini 3 hours agoparentprevNote this study provides no evidence in support of this statement; strength training caused motor neurons to grow -- the neurons between your spinal chord and the muscles -- not neurons in your brain. Your statement is likely true, but just not because of this study. reply evnp 3 hours agoparentprevJust going to leave this here as a counterpoint, since sibling comments feel one-sided on the question: https://pmc.ncbi.nlm.nih.gov/articles/PMC6957093/#:~:text=In... reply voxic11 3 hours agorootparentThat doesn't really say anything about alcohol's effect on (non-dementia related) mental clarity and sleep. Also if you continue to read that meta-analysis beyond the sentence you linked to it seems that much larger studies did not find a correlation between reduced dementia risk and moderate alcohol consumption. In fact they found that high alcohol consumption was associated with significantly higher risk of dementia. The overall conclusion of the analysis was \"Available epidemiological studies are not sufficient to verify a protective effect of alcohol on dementia development.\" reply evnp 2 hours agorootparentDementia seems highly related, if not inversely synonymous, with mental clarity? I think your comment is a bit misleading - while it does seem clearer that _high_ alcohol consumption and alcohol \"use-disorders\" are correlated with elevated risk of dementia, results pertaining to light-to-moderate consumption are \"heterogeneous\" - I read 4 studies or meta-studies with results showing _decreased_ risk of dementia (Rotterdam, Whitehall-II, Anstey, Xhu), 2 showing no correlation (California, HUNT), and zero showing increased risk when it comes to light-to-moderate consumption. Anyone interested should of course read the linked text in full and draw their own conclusions. reply BiteCode_dev 3 hours agorootparentprevThanks for reminding me of :~:text=. reply tsunamifury 3 hours agoprevA brisk one our walk or hill climb of a few lifts of a 10-15lb weight weight set does wonders for reducing anxiety, stopping stiffness and soreness, getting the brain thinking. The whole body is a thinking system with nerves and muscles that need feedback to work as well. reply myth_drannon 3 hours agoparentHow much of it is just reduced CO2 from being in the open air vs sitting in a stuffy office? reply tsunamifury 9 minutes agorootparentMore the deep breathing triggered by a hill climb or brisk walk than the actual atmosphere. reply tpm 3 hours agorootparentprevNot much I would think - there is a clear difference between just being outside and being outside while expending lots of energy, at least for me. reply blastonico 3 hours agoprevOk, I'm almost convinced to start lifting weights... if they release a study showing hair growing I'll be 100% in. reply neom 3 hours agoparentCan relate to the hair growth thing, I've started to enter my \"balding\" era and I've been having a nervous breakdown. I never really cared about my looks before but the balding thing is really getting to me. Finasteride makes me depressed and minoxidil is so annoying, makes me feel less alone when I read a comment like yours, ha. reply csa 3 hours agorootparentHighly recommend just shaving it all off. If that doesn’t work for whatever reason, then cutting it very short (a few mm) is the second best alternative. Trying to hide it is the worst. Stressing about it is a waste. I started shaving my head when I was about 25. I wish I had done it sooner. No haircuts, no hairstyling, no “bed hair”. I just shave my head when I shave my face, usually in the shower. reply busterarm 3 hours agorootparentprevI lost all of my hair at 19 years old inside of about 3 high-stress months. From long hair to Stage 7 MPB. Too poor to medicate so I just had to deal with the new me. I don't even remember the experience of getting a haircut and what that's like. I encourage you to embrace it. Go skin bald. There's a lot of hidden benefits and really it's no big deal. All of the treatment options have huge downsides or look like shit. reply boredemployee 3 hours agoparentprevif you can, start right away. i've always been known among my friends as the most sedentary, lazy, and effort-averse person in the world. but five months ago, that changed, and I regret not starting sooner. it seems like you develop a self-challenge component that you'll only understand once you start reply busterarm 3 hours agorootparentDitto on regretting not starting sooner. I've done varying amount of exercise throughout life, but really dedicating myself to whole body weight-training/yoga/core-and-balance over a period of about a year has fundamentally changed my life in countless ways. I wouldn't even say you understand it once you start. I think understanding requires going for a while without injury, passing your noob gains phase, hitting a plateau and seeing results again. Especially for someone like me into \"depth\" in strategy games... you realize that the only limits are genetic & mental and the \"skill curve\" is infinite. Putting effort into training, eating or resting has largely supplanted my desire to play video games. NB: I had previously done a Starting Strength program a decade ago with a not-so-great coach. Coach was a dickhead and didn't discourage me from some really bad training habits that led me to get injured. Injury led to depression, weight gain and not getting back to training for a decade. Maybe that's on me but it's a serious regret and the approach I took to training this time around made all of the difference. reply maxilevi 3 hours agoparentprevThere is no negative effect to doing so, why would you not? reply the__alchemist 3 hours agorootparentTime, and it may be desirable to avoid things you find uncomfortable. reply swat535 0 minutes agorootparentThe time commitment is vastly over stated. It takes an hour at most and you can go twice a week, working different muscle groups. Your muscles need 3-4 days of rest especially as you increase intensity. So you can only do bicep workouts once a week for example. Even then, any exercise is better than none. You can even just start at home with adjustable dumbbells and go to the gym when you hit those limits.. ssl-3 3 hours agorootparentprevThere's all kinds of potential negative effects. 1. It generally comes at non-zero financial expense. 2. I might not know what I'm doing. 3. I might get hurt. 4. I might cause someone else to get hurt. Or, perhaps most-tortuously: 5. They're all going to laugh at me. reply kayge 1 hour agorootparentYou can avoid all 5 almost* entirely and make amazing progress by doing bodyweight exercises at home, 2-3 times a week :) There are plenty of free guides out there where you can start at almost any level. E.g. can't do a pushup? put your knees down. Still can't? Do it at a head-up incline. Still can't? Push against a wall. Keep track and make progress until you can move to the next harder exercise. And always remember it's a marathon, not a sprint, so be patient with yourself. * Can't make any promises. You might get hurt. You might need to pay for some kind of pull up system. But generally speaking: the sooner you stop looking for the perfect time/situation and just start, the easier it all becomes. reply phil21 42 minutes agorootparentprev> 5. They're all going to laugh at me. I thought this, and nothing could be further from the truth. The gym (and gymbros) have been one of the most positive uplifting experiences of my life so far. I had a BMI of over 35 when I stepped into a gym for the first time ever at 41 years old. The non-zero financial expense is really the only issue I can see as \"real\" on your list. You can avoid #3 by spending money on a personal trainer to learn. Gym memberships are also not cheap. The long-term costs of not doing so I would argue are far greater. reply zackmorris 2 hours agorootparentprevI know that feeling, I was nervous about the risks you listed when I was broke and started lifting around 2000/2001 anyway. Trust me, the expense of losing one's health due to inactivity is higher than any financial cost. I trained intuitively, which mostly means going it alone at the school of hard knocks by trying everything and keeping what sticks. I got hurt countless times from ego lifting too much weight in my 20s, not going through the full range of motion, etc, but nobody else got hurt on my watch. But athletes pretty much always recover anyway. That's the important part - learning that proper exercise, nutrition and supplementation makes the body fungible, so there's really no limit to what it's capable of. Now I'm one of the biggest guys at the gym as a lifelong natty and nobody's laughed at me since I got the eye of the tiger about 3 months in. reply SirMaster 3 hours agorootparentprevYeah, I wish more emphasis was put on #3. I keep getting hurt via various forms of exercise. My last injury was a herniated disc which has cost me so much time and money for surgery and PT and missed work time and such. So a big #1 and #3 for me... Maybe they were because of #2, but I tried to learn as best as I could. I couldn't care less about #5. A lot of time, money, and effort and I still have pretty much nothing to show for it. I am still quite thin and weak. I wont give up, but it's definitely not as simple as some people make it seem. reply Etheryte 3 hours agoprevI'm not sure which part they're claiming here is novel? Myokines' effect on neuron growth and wellbeing is a well known phenomenon, no? Or is this another instance of MIT press overstating their work? reply benbojangles 3 hours agoprevThen why do sci injury patients need to remain still? reply devmor 3 hours agoparentProbably because the risk of catastrophic damage from moving far outweighs the benefits in that situation. reply ggu7hgfk8j 3 hours agoprevMotor neurons reply TeeMassive 3 hours agoprevEveryone who starts working out notice this. Very fast gains in strength and resistance the first weeks due to neuronal signals improvement. And then a slow down where muscle gains take over. reply SirMaster 16 minutes agoparentThis frustrates me because I see this said often, but I have never experienced it myself. It makes me feel like I am doing something wrong that somehow else else is doing right. reply barrenko 3 hours agoparentprevMuscles are lazy, CNS is necessarily much much lazier. reply kleiba 4 hours agoprevnext [19 more] [flagged] high_na_euv 4 hours agoparentWhy so snarky? Those two do not contradict eachother reply easythrees 3 hours agorootparentThere’s this remarkably stupid stereotype that muscles equates to stupidity. If you look at some of the champions, they all have degrees in fields like Accounting (Ronnie Coleman, Phil Heath) or Chemistry (Frank Zane). Schwarzenegger famously did business school at night while a bodybuilder. reply kossae 4 hours agorootparentprevProbably not the best delivery, but perhaps use of anabolic steroids in bodybuilding could have a counteracting detrimental effect to the brain (https://www.sciencedirect.com/science/article/pii/S000632231...). reply lm28469 4 hours agorootparentWhat percentage of people going to the gym takes steroids ? reply evilduck 3 hours agorootparentI don’t agree about bodybuilders being stupid, but going to the gym and being a bodybuilder are not one and the same. They just happen to occupy the same spaces. And in bodybuilding, unless someone is specifically a natty/natural bodybuilding competitor the answer is pretty much “all of them have been on gear at some point in time”. For other gym-goers, the answer is, nobody knows unless they tell you and since steroids are very illegal, people don’t tend to shout it from the rooftops. reply huehehue 3 hours agorootparentprevIn the US, between 15% - 30% according to https://pmc.ncbi.nlm.nih.gov/articles/PMC1484557/ I would guess this number is higher today reply tayo42 3 hours agorootparentIf testerone counts then probably. Feels like everyone wants to be on trt in my hobby circle (bjj) reply mp05 4 hours agorootparentprevDo these studies control for the fact that only dumbasses take anabolic steroids? :) reply alexander2002 4 hours agorootparentprevPerhaps building/having neurons and utlizing nerurons are two different things? You can have a very good gaming pc but if you are only using it to play solitaire then you are under utilizing the capacity/power. I am not a neuro expert so take this with a grain of salt. reply stronglikedan 4 hours agorootparentprevDolph Lundgren, for example. reply mp05 4 hours agorootparentprevIt's a lazy and dated stereotype. I know a lot of very intelligent people who spend a great deal of time lifting heavy things. In fact, there's a joke around our campus that the engineering school needs its own fitness center due to the overall buffness of the students. reply dartos 4 hours agorootparentIt’s almost like people are different, right? lol In my experience, a lot of really fit engineers see it as another optimization problem, which is an interesting way to look at working out. I’ve been trying to adopt that mindset. reply mp05 3 hours agorootparentCareful, you'll get scorn from those who think you should be spending that time doing leetcode. How could you be any good at your job when you're flexing and sweating all the time? reply evilduck 3 hours agorootparentGrit is grit. If you can do one you can probably do the other. reply mp05 2 hours agorootparentI'm doing wavelet transforms while riding the bike trainer, what did you do with your morning??! reply HPsquared 4 hours agorootparentprevCan call it the \"character creation points limit fallacy\". reply giuliomagnifico 4 hours agoparentprevHaha, we should coding with one hand and lift weights with the other :) reply snarg 3 hours agorootparentYou jest, but when i was in school, i used to do pushups, situps, planks, curls, etc. while studying. It helped quite a lot with data retention. reply 1GZ0 3 hours agoprev [–] Well dad, turns out you were right.. reply Consider applying for YC's W25 batch! Applications are open till Nov 12. GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "MIT engineers found that exercise aids nerve healing by releasing myokines during muscle contractions, which significantly promote neuron growth.- Neurons exposed to myokines grew four times farther than those not exposed, and physical stretching of neurons also stimulated growth, mimicking muscle contractions.- The study suggests exercise-related therapies could be crucial for nerve repair, potentially leading to treatments for nerve injuries and neurodegenerative diseases."
    ],
    "commentSummary": [
      "A recent study reveals that exercising muscles promotes the growth of motor neurons, which are crucial for transmitting signals from the brain to muscles, potentially aiding recovery from nerve damage or spinal cord injuries.- The research underscores the significance of exercise for overall health, contributing to mental clarity and improved sleep quality.- The study also discusses lifestyle factors such as alcohol consumption and sleep, highlighting the interconnected nature of physical and mental well-being."
    ],
    "points": 191,
    "commentCount": 81,
    "retryCount": 0,
    "time": 1731420110
  },
  {
    "id": 42111896,
    "title": "What I wish someone told me about Postgres",
    "originLink": "https://challahscript.com/what_i_wish_someone_told_me_about_postgres",
    "originBody": "What I Wish Someone Told Me About Postgres Nov 11, 2024 I’ve been working professionally for the better part of a decade on web apps and, in that time, I’ve had to learn how to use a lot of different systems and tools. During that education, I found that the official documentation typically proved to be the most helpful. Except…Postgres. It’s not because the official docs aren’t stellar (they are!)–they’re just massive. For the current version (17 at the time of writing), if printed as a standard PDF on US letter-sized paper, it’s 3,200 pages long.1 It’s not something any junior engineer can just sit down and read start to finish. So I want to try to catalog the bits that I wish someone had just told me before working with a Postgres database. Hopefully, this makes things easier for the next person going on a journey similar to mine. Note that many of these things may also apply to other SQL database management systems (DBMSs) or other databases more generally, but I’m not as familiar with others so I’m not sure what does and does not apply. Normalize your data unless you have a good reason not to Database normalization is the process of removing duplicate or redundant data from a database schema. For example, say you have a site where users can upload documents and users can subscribe to email notifications when folks view their documents. If you have a documents table, you shouldn’t have a user_email column on said table: When a user wants to change their email, you shouldn’t have to update the hundreds of rows for all the documents they’ve uploaded. Instead, you can have each row in documents represent a row in another table (e.g. users) with a foreign key (e.g. user_id). If you search for “database normalization” online, you’ll find a bunch of results about “1st normal form” and the like. You definitely don’t need to know what each of those “normal forms” are, but the general process is good to be familiar with as it can lead you to a more maintainable database schema. There are occasions when having redundant data (that is, denormalizing your schema) can make sense: this is typically to make reading certain data faster so it doesn’t have to be recomputed every time it’s requested. E.g. you have an application that manages employee shifts at a bakery. A user might want to see how many hours they’ve worked so far this year. To calculate that, you would need to do something like determine the duration of each of their shifts and then sum all of them together. It might make sense to instead calculate this amount on a regular interval or whenever the number of hours worked changes. This data can be denormalized within the Postgres database or outside of it (e.g. in a caching layer like Redis). Note that there is almost always a cost to denormalized data, whether that’s possible data inconsistency or increased write complexity. Follow all the advice from the folks that make Postgres There’s a big list aptly titled “Don’t do this” on the official Postgres wiki. You may not understand all of the things listed. That’s fine! If you don’t understand, then you probably won’t make the mistake. Some suggestions worth highlighting: Just use the text type for all text storage Just use the timestampz/time with time zone type for all timestamp storage Name your tables in snake_case Note some general SQL eccentricities Saving your pinkies: you don’t have to write SQL in all caps In most documentation and tutorials, you’ll see SQL written like so: SELECT * FROM my_table WHERE x = 1 AND y > 2 LIMIT 10; The case for SQL keywords does not matter. That means the snippet above is the same as this: select * from my_table where x = 1 and y > 2 limit 10; or this: SELECT * from my_table WHERE x = 1 and y > 2 LIMIT 10; As far as I know, this is not specific to Postgres. Your pinkies will thank you. NULL is weird You’re probably familiar with null or nil values from other programming languages. SQL’s NULL is not like that. NULL is really more accurately an “unknown”. E.g. NULL = NULL returns NULL (because it’s unknown if one unknown equals another unknown!) This is true for almost any operator, not just =(we’ll go through some of the exceptions in a moment): if one side of the comparison is NULL, the result will be NULL. There are a few operators that you can use to compare against NULL which don’t result in NULL: Operation Description x IS NULL returns true if x evaluates to NULL, false otherwise x IS NOT NULL returns true if x does not evaluate to NULL, false otherwise x IS NOT DISTINCT FROM y the same as x = y but NULL is treated as a normal value x IS DISTINCT FROM y the same as x != y/xy but NULL is treated as a normal value WHERE clauses only match if the condition evaluates to true. This means that a query like SELECT * FROM users WHERE title != 'manager' won’t return rows where title is NULL because NULL != 'manager' is NULL. Another useful function when attempting to wrangle NULL is COALESCE: COALESCE will take any number of arguments and return the first one that is not NULL: COALESCE(NULL, 5, 10) = 5 COALESCE(2, NULL, 9) = 2 COALESCE(NULL, NULL) IS NULL You can make psql more useful Fix your unreadable output Have you ever done a query on a table with many columns or long values in those columns and the output is basically unreadable? It’s probably because you don’t have the pager enabled. A terminal pager allows you to view a file (or table, in the case of psql) of text by scrolling a viewport around some larger canvas. Without a pager, it just dumps the text in your terminal, wrapping to a new line wherever it runs out of space. less is a decent pager available on any Unix-like system. You can set it as your pager by setting the environment variable in your ~/.bashrc/~/.zshrc/etc.: # Use the `-S` option so it truncates long lines for scrolling instead of wrapping them export PAGER='less -S' Sometimes, even viewing things as a properly formatted table isn’t particularly useful, especially with tables with many columns. For this, you can switch to “expanded” mode with \\pset expanded (or the shortcut \\x) in your psql session. If you want to have this as the default, you can add a file called .psqlrc to your home directory (i.e. ~/.psqlrc) and add \\x to it. Any time you start up a psql session, it’ll run all the commands in that file first. Clarify ambiguous nulls It’s very important to know when a value is NULL in an output, but the default settings don’t make that particularly clear. You can give psql a string to output when it’s referring to NULL. I have it set to [NULL] by running \\pset null '[NULL]' Any Unicode string is fine! It’s a bit past spooky season, but you can be like my friend Steven Harman and set it to “👻”. Once again, if you want to have this as the default, you can add a file called .psqlrc to your home directory (i.e. ~/.psqlrc) and add \\pset null '[NULL]' to it. Any time you start up a psql session, it’ll run all the commands in that file first. Use auto-completion psql, like many interactive consoles, will allow for auto-completion. It helps that SQL is a fairly rigid and fairly structured language. You can just start typing most keywords or table names and hit Tab and let psql fill out the rest: -- start typing \"SEL\" SEL -- ^ hit `Tab` SELECT Lean on backslash shortcuts There are a whole bunch of useful shortcut commands in psql for looking up stuff, command line editing, and more. Command What it does \\? List all of the shortcuts \\d Shows list of relations (tables and sequences) as well as said relation’s owner \\d+ Same as \\d but also includes the size and some other metadata \\d table_name Shows the schema of a table (list of columns, including said column’s type, nullability, and default) as well as any indexes or foreign key constraints on said table \\e Opens your default editor (set as the $EDITOR environment variable) to edit your query there \\h SQL_KEYWORD Get syntax and link to docs for SQL_KEYWORD There are a ton of these and the table above only scratches the surface. Copy to a CSV Sometimes, you just want to share the output of a command with someone who wants to put it in Excel or something. In Postgres, it’s actually really easy to copy the output of any query to a CSV on your local machine2: \\copy (select * from some_table) to 'my_file.csv' CSV If you want it to include an initial line with all the column names, you can add the HEADER option: \\copy (select * from some_table) to 'my_file.csv' CSV HEADER For way more information (including how to get it to do the reverse: insert rows from data in a CSV!), check out the docs on this command. Use column shorthands and aliases When doing a SELECT statement in psql, you can re-title each of the output columns to whatever you want (an “alias”) with the AS keyword: SELECT vendor, COUNT(*) AS number_of_backpacks FROM backpacks GROUP BY vendor ORDER BY number_of_backpacks DESC; This will also rename the column in the output. What’s more is that GROUP BY and ORDER BY have their own nice shorthand as well: you can reference output columns by the number they appear after SELECT. Therefore, you can write the previous query as SELECT vendor, COUNT(*) AS number_of_backpacks FROM backpacks GROUP BY 1 ORDER BY 2 DESC; While useful, don’t put this in any queries that you ship to production–your future self will thank you! It’s possible that adding an index will do nothing (particularly if it’s misconfigured) What is an index? An index is a data structure intended to help with looking up data–giving Postgres the responsibility of maintaining a “shortcut directory” to a table’s rows by various fields. By far the most common kind is a B-tree index, which is a kind of search tree that work for both exact equality conditions (e.g. WHERE a = 3) as well as range conditions (e.g. WHERE a > 5). But you can’t tell Postgres to use a specific index. It needs to predict (using statistics it maintains for each table) that it’ll be faster than just reading the table from top to bottom to find the relevant data (known as a “sequential scan” or “seq. scan”–pronounced “seek scan”–for short). You can see how Postgres is planning on executing a query by adding EXPLAIN before your SELECT ... FROM .... This will give you a “query plan”: a plan for how Postgres is going to find the data and its estimate for how much work each task will take. There are many good guides for reading the output of these query plans like this one from thoughtbot or this one from pganalyze. The official docs are also a good reference (albeit a bit overwhelming for a newbie). For analyzing query plans, I’ve found this tool to often be very helpful An index isn’t much use for a table with barely any rows in it This is particularly important when doing development on your local database. Chances are, you don’t have millions of rows in your local database. Postgres may find that it’s faster just to do a seq. scan rather than use the index at all if it’s just dealing with 100 rows. When indexing multiple columns, the order matters Postgres supports multicolumn indexes which do what you might expect: if you create an index on columns a and b like so: CREATE INDEX CONCURRENTLY ON tbl (a, b); then a WHERE clause like SELECT * FROM tbl WHERE a = 1 AND b = 2; will be faster than if two separate indexes were created for a and b respectively. This is because in one multicolumn index, Postgres just needs to traverse one B-tree which is able to efficiently combine the constraints of the search query. This index speeds up queries filtering against just a just as much as an index against a alone. But what about a query like SELECT * FROM tbl WHERE b = 5;? Is that faster too? Possibly, but not as fast as it could be. It turns out the above index does not obviate the need for an index on b alone. That’s because the B-tree in the index is first keyed on a and secondarily keyed on b. So it will need to traverse all of the a values in the index to find all of the b values in the index. Often if you need to use any combination of columns for you queries, you’ll want to have indexes for both (a, b) as well as b alone. That said, you may be able to rely on indexes on a and b separately, depending on your needs. If doing prefix matches, use text_pattern_ops Let’s say you’re storing a hierarchical system of directories in your database using a materialized path approach (where you store a list of all of a row’s ancestors’ ids in each row) and for some part of your application you need to get all descendant directories. So you need to query a table to find all rows where a column matches some common prefix: -- % is a wildcard: the `WHERE` clause here is asking for `directories` where `path` starts with '/1/2/3/' SELECT * FROM directories WHERE path LIKE '/1/2/3/%' To keep things speedy, you add an index to the path column of directories: CREATE INDEX CONCURRENTLY ON directories (path); Unfortunately, this may not be used: Most kinds of indexes (including the default B-tree index implicitly created in the CREATE INDEX statement above) depend on the ordering of values to work. To make Postgres able to do the basic character-by-character sorting that you need for this sort of prefix matching or pattern matching in general, you need to give it a different “operator class” when defining the index: CREATE INDEX CONCURRENTLY ON directories (path text_pattern_ops); Long-held locks can break your app (even ACCESS SHARE) What is a lock? A “lock” or “mutex” (short for “mutual exclusion”) ensures only one client can do something dangerous at a time. This is a concept you’ll see in a lot of places but they’re particularly important in Postgres, as in any database, because updating an individual entity (whether that’s a row, table, view, etc.) must entirely succeed or entirely fail. One way that operations could only partially succeed is if two different clients/processes were attempting to perform them at the same time. As a result, any operation will need to acquire a “lock” on the relevant entity. How locks work in Postgres In Postgres, there are several different locking levels for tables which are more or less restrictive. Here’s just a few in order of less to more restrictive: Lock Mode Example Statements ACCESS SHARE SELECT ROW SHARE SELECT ... FOR UPDATE ROW EXCLUSIVE UPDATE, DELETE, INSERT SHARE UPDATE EXCLUSIVE CREATE INDEX CONCURRENTLY SHARE CREATE INDEX (not CONCURRENTLY) ACCESS EXCLUSIVE Many forms of ALTER TABLE and ALTER INDEX And here’s how they conflict (X means they are conflicting): Requested Lock Mode Existing Lock Mode ACCESS SHARE ROW SHARE ROW EXCL. SHARE UPDATE EXCL. SHARE ACCESS EXCL. ACCESS SHARE X ROW SHARE X ROW EXCL. X X SHARE UPDATE EXCL. X X X SHARE X X X ACCESS EXCL. X X X X X X For example consider the following for a single table: Client 1 is doing… Client 2 wants to do a … Can Client 2 start? UPDATE SELECT ✅ Yes UPDATE CREATE INDEX CONCURRENTLY 🚫 No, must wait SELECT CREATE INDEX ✅ Yes SELECT ALTER TABLE 🚫 No, must wait3 ALTER TABLE SELECT 🚫 No, must wait3 For a full list of all of this information, look at the official documentation. This guide is also a great reference to see what conflicts with what on an operation-by-operation basis (which is typically what you’re thinking about, instead of lock levels). How this can cause problems In the previous section, we noted that an if one client is performing an ALTER TABLE statement, that can block a SELECT from running. This can be just as bad as it sounds if the ALTER TABLE statement takes a long time. If you’re updating a core table (e.g. users, one that all requests for your web app may need to reference) all SELECTs reading from that table will just be waiting. Before timing out, of course, causing your app to return 503s. Common recipes for slow ALTER TABLE statements include Adding a column with a non-constant default4 In my experience this is by far the most common cause of slowness Changing a column’s type Adding a uniqueness constraint So, let’s say you’re adding a new column to a heavily used table. You aren’t doing anything silly with your ALTER TABLE statements. Sure, you’re adding a new column, but it doesn’t have a variable default. This can still break your app. See, that ALTER TABLE statement will be fast…once it acquires the lock. But say that, years ago, you made some internal dashboard that does periodic queries against that table. Over time, that query got slower and slower. What once took milliseconds now takes minutes. Which is normally fine–it’s just a SELECT statement after all. But if your ALTER TABLE statement gets executed while one of those is running, it will have to wait. That all probably isn’t too surprising. But you might find this a bit surprising: Any subsequent statements querying that table will have to wait, too. That’s because Postgres locks form a queue: For a great article on this exact scenario happening, see here. Long-running transactions can be just as bad If you’re not familiar with transactions, they’re a way of grouping together a series of database statements so they act as all-or-nothing (in fancy lingo, they’re “atomic”). Once you begin a transaction (with BEGIN, of course), you’re hiding away. No other clients can see any changes you’re making. You can finish the transaction (with COMMIT) which then “publishes” them to the rest of the database. Transactions are, in an abstract way, similar to locks: they allow you avoid issues with other clients messing up what you’re trying to do. A classic example of a task begging for transactions is transferring money from one bank account to another. You would want to decrement the balance of one account and increment the balance of the other. If the database goes down or the originating account balance goes negative midway, you want to cancel the whole operation. Transactions can make that possible. However, you can easily shoot yourself in the foot when writing transactions if you keep them running too long. That’s because once a transaction acquires a lock, it holds onto it until the transaction commits. For example, let’s say Client 1 opened up psql and wrote the following: BEGIN; SELECT * FROM backpacks WHERE id = 2; UPDATE backpacks SET content_count = 3 WHERE id = 2; SELECT count(*) FROM backpacks; -- ... Oops! Client 1 has stepped away from their desk: Someone just brought home some cupcakes! Even though Client 1 is effectively “done” updating the row with id = 2, they still have the lock.5 If another client wanted to delete this row, they would run this: DELETE FROM backpacks WHERE id = 2; -- ... -- ? But it would just hang. It wouldn’t actually delete anything until Client 1 came back and committed the transaction. You can imagine how this can lead to all kinds of scenarios where clients are holding onto locks for much longer than they need, preventing others from successfully making queries against or updates to the database. JSONB is a sharp knife Postgres has a remarkably powerful feature: you can store queryable and efficiently serialized JSON as a value in a row.6 In many ways, it makes Postgres have all the strengths of a document-oriented database (like MongoDB, for example) without having to spin up a new service or coordinate between two different data stores. However, it has its downsides if used improperly. JSONB can be slower than normal columns While JSONB is quite flexible, Postgres doesn’t keep track of statistics which can mean that an equivalent query against a set of “normal” columns can be significantly slower than against a single JSONB column. Here’s a great blog post with someone demonstrating it making things 2000x slower! JSONB is not as self-documenting as a standard table schema A JSONB column can have basically anything in it–that’s one of the main reasons it’s so powerful! But it also means you have few guarantees about how it’s structured. With a normal table, you can look up the schema and see what a query will return. Will a key be written in camelCase? snake_case? Will states be described with boolean true/false? Or with enums like yes/maybe/no? You have no idea with JSONB as it doesn’t have the same static typing that Postgres data normally has. JSONB Postgres types are a bit awkward to work with Let’s say you have a table called backpacks with a JSONB column data where you have a brand field. You want to find the JanSport backpacks because you love the early 90s aesthetic. So you write the query:7 -- WARNING: Does not work! select * from backpacks where data['brand'] = 'JanSport'; and you get the error back ERROR: invalid input syntax for type json LINE 1: select * from backpacks where data['brand'] = 'JanSport';^ DETAIL: Token \"JanSport\" is invalid. CONTEXT: JSON data, line 1: JanSport What gives? Postgres is expecting the right-hand side type of the comparison to match the left-hand side type; that is, for it to be a correctly formatted JSON document–therefore, it needs to be a JSON object, array, string, number, boolean, or null. Keep in mind that none of these types have anything to do with Postgres types like boolean or integer. And NULL in SQL works very differently from JSONB’s null, which acts more just like a normal type.8 To correctly write this query, you need to enable Postgres to be able to do some coercion. select * from backpacks where data['brand'] = '\"JanSport\"'; -- ^ This is really equivalent to the following (because Postgres knows the left-hand side is `jsonb`) select * from backpacks where data['brand'] = '\"JanSport\"'::jsonb; -- Alternatively, you could convert the left-hand side to Postgres `text`: select * from backpacks where data->>'brand' = 'JanSport'; Note the double quotes inside the single quotes. JanSport on its own isn’t valid JSON. What’s more is there are a bunch more operators and functions that are specific to JSONB and are hard to remember all at once. Anyway… Hope you found this useful. Thank you to Lillie Chilen, Monica Cowan, Steven Harman, and KWu for encouragement and feedback on this post. If you have any corrections, feedback, or comments, you can find me on basically all sites as hibachrach. If you print it on A4 paper, it’s 3,024 pages; just another reason that standard is better, I guess. ↩ This avoids having to use the more standard COPY statement which unfortunately often requires escalated privileges which you may or may not have access to. ↩ That is…typically. Some ALTER TABLE forms (like adding constraints) require a less restrictive lock. See its page in the docs for more info. ↩ ↩2 It used to be that any default could make adding a column slow, but this was fixed in Postgres 11, which feels recent to me but of course was released 6 years ago. ↩ In this case, the lock at issue is a row lock, which (as you might guess) is a lock that is on the row. Row locks work fairly similarly to the table-level locks we were discussing earlier, but are a bit simpler and only have 4 levels. ↩ Postgres has both JSON values (where the text is stored as text) and JSONB where the JSON is converted to an efficient binary format. JSONB has a number of advantages (e.g. you can index it!) to the point where one can consider the JSON format to just be for special cases (in my experience, anyway). ↩ This is leveraging the relatively new subscripting syntax introduced in Postgres 14 (in my opinion, better than the original -> syntax which feels less familiar compared with how JSON is traversed elsewhere). ↩ Most notably, 'null'::jsonb = 'null'::jsonb is true whereas NULL = NULL is NULL ↩",
    "commentLink": "https://news.ycombinator.com/item?id=42111896",
    "commentBody": "What I wish someone told me about Postgres (challahscript.com)177 points by todsacerdoti 18 hours agohidepastfavorite69 comments munk-a 4 hours agoWhile postgres is indeed case sensitive usually writing queries with keywords in all caps is an effort to increase legibility for visual pattern matching. It absolutely isn't needed but if I'm debugging a query of yours I will send it through my prettifier so that I can breeze through your definitions without getting hung up on minor weird syntax things. It's like prettification in any other language - visual structures that we can quickly recognize (like consistent indentation levels) make us waste less time on comprehension of the obvious so we can focus on what's important. The only thing I really object to is \"actuallyUsingCaseInIdentifiers\" I never want to see columns that require double quotes for me to inspect on cli. reply o11c 50 minutes agoparentNote that case handling is a place where postgres (which folds to lowercase) violates the standard (which folds to uppercase). This is mostly irrelevant since you really shouldn't be mixing quoted with unquoted identifiers, and introspection largely isn't standardized. reply wiredfool 3 hours agoparentprevI find all caps identifiers wind up just looking like interchangeable blocks, where lowercase have word shapes. So all caps just slows down my reading. reply archsurface 4 hours agoparentprevMy understanding is that the caps were syntax highlighting on monochrome screens; no longer needed with colour. Can't provide a reference, it's an old memory. reply _Wintermute 3 hours agorootparentMost of the SQL I write is within a string of another programming language, so it's essentially monochrome unless there's some really fancy syntax highlighting going on. reply jaredklewis 2 hours agorootparentAside, but jetbrains IDEs seem to have some way to detect embedded sql and highlight it. I don’t remember configuring anything to get this feature. reply wmfiv 1 hour agorootparentMore than highlight they'll do schema validation against inline SQL strings also. reply formerly_proven 39 minutes agorootparentprevIf you're working with some established framework and project structure their IDEs pull that information out of that, otherwise you'll need to at least tell it the dialect, but if you e.g. configure the database as a data source in the IDE you'll get full schema xref. reply vundercind 37 minutes agorootparentprevLike sigils in that regard. Perl-type sigils are extremely nice... if you're editing in Notepad or some ancient vi without syntax highlighting and the ability to ID references on request. Little point to them, if you've got more-capable tools. reply CoastalCoder 3 hours agorootparentprevI think the \"color is all we need\" idea makes sense in proportion to how many of our tools actually support colorization. E.g., the last time I used the psql program, I don't think it had colorization of the SQL, despite running in a color-capable terminal emulator. It probably doesn't help that terminal colors are a bit of mess. E.g., piping colored output through 'less' can result in some messy control-character rendering rather than having the desired effect. reply dllthomas 2 hours agorootparent> piping colored output through 'less' can result in some messy control-character rendering rather than having the desired effect. It can, but -G or -R can fix that. reply mixmastamyk 2 hours agorootparentprevTry pgcli for color and completion. reply renewiltord 1 hour agorootparentGood tip, thank you. reply emmanuel_1234 3 hours agoparentprevAny recommendation for a prettifier / SQL linter? reply gnulinux 3 hours agorootparentI'm curious about this for DuckDB [1]. In the last couple months or so I've been using DuckDB as a one-step solution to all problems I solve. In fact my development environment rarely requires anything other than Python and DuckDB (and some Rust if native code is necessary). DuckDB is an insanely fast and featureful analytic db. It'd be nice to have a linter, formatter etc specifically for DuckDB. There is sqlfluff etc but I'm curious what people use. [1] DuckDB SQL dialect is very close to Postgres, it's compatible in many ways but has some extra QOL features related to analytics, and lacks a few features like `vacuum full`; reply avg_dev 4 hours agoparentprevi agree; but i use caps in my codebase, and lowercase when testing things out manually, just for ease of typing. reply munk-a 3 hours agorootparentDitto - if I'm throwing out an inspection query just to get a sense of what kind of data is in a column I won't bother with proper readable syntax (i.e. a `select distinct status from widgets`). I only really care about code I'll need to reread. reply marcosdumay 3 hours agoparentprevWell, as long as you aren't imposing the noisy syntax into everybody by pushing the case-change back into the code... But getting some editor that highlights the SQL will completely solve your issue. reply christophilus 29 minutes agoprevI’d never stumbled across the “don’t do this” wiki entry[0] before. Very handy. [0] https://wiki.postgresql.org/wiki/Don%27t_Do_This reply pavel_lishin 2 hours agoprevA lot of these aren't postgres-specific. (null weirdness, index column order, etc.) For example, how nulls work - especially how interact with indexes and unique constraints - is also non-intuitive in mysql. If you have a user table with a non-nullable email column and a nullable username column, and a uniqueness constraint on something like (email, username), you'll be able to insert multiple identical emails with a null username into that table - because a null isn't equivalent to another null. reply anarazel 2 hours agoparent> If you have a user table with a non-nullable email column and a nullable username column, and a uniqueness constraint on something like (email, username), you'll be able to insert multiple identical emails with a null username into that table - because a null isn't equivalent to another null. FWIW, since 15 postgres you can influence that behaviour with NULLS [NOT] DISTINCT for constraints and unique indexes. https://www.postgresql.org/docs/devel/sql-createtable.html#S... EDIT: Added link reply bpicolo 7 minutes agoparentprevI think this is a good pragmatic default. The use case for the alternative is much more rare. reply marcosdumay 3 hours agoprev> Normalize your data unless you have a good reason not to Ouch. You don't want to just say that and move on. The author even linked to a page citing 10 different kinds of normalization (11 with the \"non-normalized\"). Most people don't even know what those are, and have no use for 7 of those. Do not send people on wild-goose chases after those higher normal forms. reply pavel_lishin 2 hours agoparentBut the author did have a paragraph explaining, in general, what they mean. And they're right! I've had to fix a few issues of this in a project I recently got moved to. There's almost never a reason to duplicate data. reply cryptonector 53 minutes agoparentprevThe general rule is to normalize to the max, then denormalize till you get the performance that you need. reply DanHulton 4 minutes agorootparentThe one exception I'll make from the very start is \"add tenant identifier to every row, yes, even if it's linked to another table that has tenant identifiers.\" Sure, this means you will have some \"unnecessary\" `tenant_id` columns in some tables that you could get through a relation, but it saves you from _having_ to include that relation just to limit by tenant, which you will some day almost be guaranteed to want. (Especially if you want to enable row-level security¹ someday.) ¹ - https://www.postgresql.org/docs/current/ddl-rowsecurity.html reply jayknight 7 minutes agorootparentprevAnyone here use 6NF to avoid nulls? See https://36chambers.wordpress.com/2021/10/22/avoiding-null-wi... reply hobs 1 hour agoparentprevI guess this is targeted towards noobs, but the answer is pretty much always 3rd normal form if you are clicking this and are not sure. reply ellisv 3 hours agoprevI really wish developers cared more about normalization and stop shoving everything into a JSON(b) column. reply abraae 1 hour agoparentLong before databases could even store structured JSON data, junior developers used to bikeshed viciously over the correct degree of normalization. More experienced developers knew that the correct answer was to duplicate nothing (except for keys obviously) and then to denormalize only with extreme reluctance. Then databases like mongo came along and encouraged those juniors by giving them something like a database, but where normalization was difficult/irrelevant. The result was a brief flowering of horrible database designs and unmaintainable crap towers. Now the pendulum has swing back and people have rediscovered the virtues of a normalized database, but JSON columns provide an escape hatch where those bad practices can still flower. reply christophilus 1 hour agorootparentEh. JSON has its place. I have some stateful data that is fairly transient in nature and which doesn’t really matter all that much if it gets lost / corrupted. It’s the sort of thing I’d throw into Redis if we had Redis in our stack. But the only storage in my project is S3 and Postgres. Postgres allows me to trivially query, update, analyze the usage of the feature, etc. Normalization wouldn’t buy me much, if anything, for my use case, but it would make “save this stuff for later” more of a nuisance (a sync across a bunch of rows vs a single upsert). That said, I’ve worked on projects that had almost no normalization, and it was pure hell. I’m certainly not arguing against normalizing; just saying that data blobs are useful sometimes. reply codr7 1 hour agorootparentprevYeah, I'm def not taking a any more mongodb jobs if I can avoid it. I'm fine with using it for simple throw away stuff, but deciphering someone else's ball of json is soul killing. reply theamk 1 hour agoparentprevThis needs working schema migration process, including ability to undo schema change if the new column tanks the performance or breaks stuff. If there are CLI tools involved, you also need to ensure you can handle some downtime, or do synchronized version update across company, or support both old and new schemas for a while. If a database is not part of team's primary product all of this could be missing. reply randomdata 2 hours agoparentprevMost developers using these kinds of tools these days are actually building their own database management systems, just outsourcing the persistence to another DMBS, so there isn't a strong imperative to think about good design so long as it successfully satisfies the persistence need. Whether we actually should be building DMBSes on top of DMBSes is questionable, but is the current state of affairs regardless. reply tightbookkeeper 2 hours agorootparentA previous employer thought that sql databases didn’t understand graphs. So they made their own system for serializing/deserializing graphs of objects into Postgres . They never used queries and instead had their own in-memory operators for traversing the graph, had to solve problems like deleting an entry and removing all references, partial graph updates. And I still don’t think it works. reply devin 2 hours agoparentprevEven if you care about it, you will still often wind up with a junk drawer of JSONB. I don't really see it as a problem unless people are writing bad queries against it instead of lifting values out of the JSONB into their own columns, etc. reply vivzkestrel 1 hour agoprevsince we are on the topic and since your article clearly mentions \"Normalize your data unless you have a good reason not to\" I had to ask. I am trying to build a news aggregator and I have many websites. Each of them has slightly different format. Even though I use feedparser in python, it still doesn't change how some of them put html text inside content and some of them break it down into a separate media xml attribute while retaining only basic textual summary inside a summary attribute. Do you think it makes more sense to store a single rss item as a column inside postgres or should it be stored after parsing it? I can see upsides and downsides to both approaches. Store it as XML and you have the ability to change your processing logic down the line for each stored item but you lose the flexibility of querying metadata and you also have to parse it on the fly every single time. Store it in multiple columns after processing it and it may require different logic for different websites + changing your overall python processing logic requires a lot of thinking on how it might affect some source. What do you guys recommend? reply cryptonector 54 minutes agoparentWith all RDBMSes the rule is \"normalize to the max, then denormalize till you get the performance that you need\". reply nasretdinov 4 hours agoprevNice article! One thing I'd add is that almost all of it applies to other MVCC databases like MySQL too. While some details might be different, it too suffers from lon transactions, holds metadata locks during ALTERs, etc, all the good stuff :). reply cryptonector 55 minutes agoprevWatch out, for row/record values, if a column in the row/record is NULL then IS NULL will be true! You want to use IS [NOT] DISTINCT FROM NULL, full stop. reply the5avage 1 hour agoprevFrom my experience with a lot of hilarious SQL stuff I have seen in the wild. It would be a good start to read the paper of codd and trying to understand what the relational model is. It's only 11 pages long and doing that would reduce the suffering in this world. reply avg_dev 4 hours agoprevthis is really nice. i am glad the author put it together. i didn't know the pg docs were 3200 pages long! i have been using it for a while and try to learn as i go. i really do like the docs. and i also like to read articles on various particular subjects as i find a need to. i think the author might find it helpful to readers to add a note to https://challahscript.com/what_i_wish_someone_told_me_about_... that if someone is selecting for b alone, then an index on columns (b, a) would work fine. i think this is kind of implied when they talk about selecting on a alone, but maybe it wouldn't hurt to be extra explicit. (i didn't spend much time on the json/jsonb part since i rarely use that stuff) reply tomcam 5 hours agoprevI wrote this to help beginners: https://tomcam.github.io/postgres/ reply samsartor 1 hour agoprevInstead of psql, I really like https://github.com/dbcli/pgcli reply nodakai 5 hours agoprevThat nested JSON query operator chains such as json_col->'foo'->'bar'->>'baz' internally return (copy) entire sub-objects at each level and can be much slower than jsonb_path_query(json_col, '$.foo.bar.baz') for large JSONB data ... although I haven't had the chance to verify this myself reply mdaniel 1 hour agoparentI got nerd-sniped on this, because I actually hadn't heard that before and would be horrified if it were true. It took some non-trivial digging to even get down into the \"well, what does foo->>'bar' even map to in C?\" level. I for sure am not claiming certainty, but based merely on \"getIthJsonbValueFromContainer\"it does seem that they do palloc copies for at least some of the JSONB calls reply anarazel 1 hour agorootparentPostgres does have infrastructure to avoid this in cases where the result is reused, and that's used in other places, e.g. array constructors / accessors. But not for jsonb at the moment. reply hans_castorp 5 hours agoparentprevYou can also use #>> operator for that: json_col #>> '{foo,bar,baz}' reply whiskey-one 10 hours agoprevReally great post! It belongs on a reading list somewhere for everyone who is using Postgres independently or as a part of their stack. reply deadbabe 45 minutes agoprevDon’t create views that reference other views. reply cyanydeez 6 hours agoprevI'd say I tend to ignore the standard docs because they rarely have examples and rely on the arcane procedure of trying to decipher the super command options with all it's \"[OR THIS|THAT]\". I assume _someone_ can read this pseudo programming, but it's not me. reply PhilippGille 5 hours agoparentI love the diagrams from the SQLite documentation: https://www.sqlite.org/syntaxdiagrams.html reply o11c 55 minutes agorootparentI've been bitten by those before because they are not generated from the actual syntax-parsing code, and thus are sometimes out of sync and wrong (or at least misleading). reply christophilus 1 hour agorootparentprevSQLite diagrams plus examples are pretty much the way I wish all of my documentation worked. reply smartbit 3 hours agoparentprevPostgreSQL Administration Cookbook series served me well https://www.oreilly.com/library/view/postgresql-16-administr... reply paulryanrogers 6 hours agoparentprevSometimes I find it annoying but mostly it works well for me. I've come to embrace the find feature and visually scanning over any parenthetical stuff. The alternative is they have to break it up into several quasi examples, each with their own optional modifiers. reply assbuttbuttass 5 hours agoparentprevI'm looking at the postgres docs now, and they certainly have the arcane formal syntax definitions, but they also have plenty of useful examples https://www.postgresql.org/docs/current/sql-altertable.html#... reply Clubber 6 hours agoparentprevFWIW square brackets indicate an optional parameter and the pipe inside indicates all the parameters available; but I agree, I don't particularly care for that notation and prefer actual running SQL examples. reply hobs 1 hour agorootparentRailroad-esque diagrams can be weird but they say a lot in a very short space, I would highly recommend spending a little extra time working on thinking through them, they are everywhere! reply onoke 17 hours agoprevHaha, good job. :) reply andrewstuart 7 hours agoprev [–] Dump your schema, drop the entire thing into ChatGPT or Claude and ask it to write your Postgres query. Then ask it to rewrite the query three different ways and explain the pros and cons of each. Do the same for any existing queries in your system … drop in the schema then the query and ask for an analysis and suggested improvements. reply cpursley 47 minutes agoparentThis is similar to what I’ve done with my sass where most of the logic lives in Postgres. I went through much of the logic and refactored it with GPT a while back and improved it significantly. It’s soooo good with SQL. Like insanely good. And these days I'm using Claude for all things code, which is significantly better than GPT. reply bilekas 2 hours agoparentprevPeople have too much faith in LLM's at the moment. This might be able to give some insights, but if you're trying to LEARN something in detail, such as the pros and cons on a particular custom query on your unuiqe-ish schema.. The LLM will be prone to making stuff up by design, it wasn't trained on YOUR data.. It will give some good basic results and probably some functional queries, but it misses the mark with the finer points of optimization etc. If you don't know how to properly build the queries, go learn it properly with confidence that what you're learning is actually reliable. reply cyanydeez 6 hours agoparentprev [–] then have corporate knock on your teams window asking why all it's IP ended up in a Chinese competitor? reply junaru 5 hours agorootparent [–] Schema != data. reply jrpelkonen 4 hours agorootparent“Show me your flowcharts and conceal your tables, and I shall continue to be mystified. Show me your tables, and I won't usually need your flowcharts; they'll be obvious.” - Fred Brooks reply josephg 3 hours agorootparentYep, but if you think your database schema is \"secret sauce\", you're fooling yourself. You can almost always guess the database schema if you're given 10 minutes to play with the application. reply hobs 1 hour agorootparentprevGenerally your schema is your code, which IS your IP - your data is often NOT your IP (and often might just be a list of facts, a thing which is not copyrightable) reply PittleyDunkin 5 hours agorootparentprev [–] It's certainly data to the extent that it's copyrightable. I doubt this sentiment would stand up in court. reply Consider applying for YC's W25 batch! Applications are open till Nov 12. GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author shares insights on working with PostgreSQL, emphasizing the importance of data normalization, using foreign keys, and following PostgreSQL's best practices for data types and naming conventions.",
      "Key SQL and psql tips include understanding that SQL is not case-sensitive, handling NULL values as \"unknown,\" and using tools like pagers and expanded views for better readability.",
      "The author highlights the significance of indexes, the impact of long-held locks on applications, and the careful use of JSONB due to its potential performance drawbacks compared to standard columns."
    ],
    "commentSummary": [
      "The discussion emphasizes the importance of query legibility in Postgres, with some users preferring all caps for keywords, although syntax highlighting tools have reduced this necessity.- There is a consensus on normalizing data in Postgres unless performance issues necessitate denormalization, and there is debate over the use of JSON columns for structured data storage.- The use of Large Language Models (LLMs) like ChatGPT for query optimization is suggested, but users are cautioned about potential data privacy and accuracy concerns."
    ],
    "points": 178,
    "commentCount": 69,
    "retryCount": 0,
    "time": 1731373184
  },
  {
    "id": 42112005,
    "title": "This morning for no obvious reason, I remembered the Fuel Rats",
    "originLink": "https://hachyderm.io/@danderson/113465421567555186",
    "originBody": "Create accountLogin Recent searches No recent searches Search options Only available when logged in. hachyderm.io is one of the many independent Mastodon servers you can use to participate in the fediverse. Administered by: Server stats: hachyderm.io: About · Status · Profiles directory · Privacy policy Mastodon: About · Get the app · Keyboard shortcuts · View source code · v4.3.1 ExploreLive feeds Mastodon is the best way to keep up with what's happening. Follow anyone across the fediverse and see it all in chronological order. No algorithms, ads, or clickbait in sight. Create accountLogin About",
    "commentLink": "https://news.ycombinator.com/item?id=42112005",
    "commentBody": "This morning for no obvious reason, I remembered the Fuel Rats (hachyderm.io)172 points by panic 17 hours agohidepastfavorite20 comments ilc 14 hours agoInactive Fuel Rat here. What they are saying is dead on. We will do what we can to rescue you, and the skill of some of the Rat's pilots is second to none. (I won't claim that of myself. But one of The Rats usually holds the Bubble -> Colonia speed record.) The number of stories you end up with ratting is amazing... it is a wonderful thing to do. Especially when you have it all in Elite. Why not help others. Rescue can pretty challenging. And losing a rescue... really sucks :( (Code Reds - They are out of fuel, and on O2.) \"We've got fuel, you don't. Any questions?\" - The Fuel Rats. reply Numerlor 10 hours agoparentShameless plug for my Python app that automates pasting routes with neutron stars, that boost your jump range, from https://spansh.co.uk/ into the game, which is used for some of those records to my knowledge. It was one of my first \"real\" project and it shows, at least I now know that Qt is pretty great in Python for cobbling something together. https://github.com/Numerlor/Auto_Neutron reply teh_klev 15 hours agoprevYears ago I ended up in a system with a star I couldn't refuel from and was S.O.L. I had vaguely heard of the Fuel Rats[0] and did a google to see if they were real and contactable. I put in a call to them and about an hour later a kindly pilot turned up, refuelled me and off I went with a warm fuzzy feeling. I was very grateful. It reminded me of happy times being in a corp in Eve with your comrades helping each other out. Being reminded of this might make me give Elite another go. [0]: https://fuelrats.com/ reply tjwds 49 minutes agoparentThanks for posting a link to the site; their Grafana dashboard was cool to see. reply moribvndvs 16 hours agoprevI wish I had known about this when I gave up on the game. After a really frustrating time trying to figure out how to progress in the game, I was given bad advice to buy some contraband alcohol in one system with the last of my money and try to sell it in another. It was advertised as a sure thing. It was not, as the contraband was confiscated (I should have seen this coming). I couldn’t find anything to do or any way to make money, so I tried to make it to the next closest station. Ran out of fuel in the middle of literally nowhere, shut down the game and uninstalled. reply Titan2189 15 hours agoparentGreat lesson for life if anyone ever gives you \"sure thing\" financial advice :) reply lmm 14 hours agoprevReminds me of EVE, which similarly had a libertarian dystopia design but evolved into something a bit more civilised through the efforts of players. One of the most well-known and successful diplomats was an actual US state department guy (who was sadly killed on his day job doing diplomacy in warzones). reply mcmcmc 12 hours agoparentEve similarly has Signal Cartel (and possibly some other corps too), who offer free assistance to pilots trapped in wormhole space without a way to scan down an exit hole. reply simonvc 8 hours agoparentprevHis name was Vile Rat. That was a weird, sad time. reply dec0dedab0de 11 hours agoparentprevI’m not really into politics, but I always thought one of the main arguments of libertarians was that you don’t need government mandated social programs because people would help each other out on their own. So maybe it still is a libertarian design? reply Cthulhu_ 10 hours agorootparentIn that respect, sure; however, there's also a lot of lawlessness without repercussions there, like year(s)-long long-cons where people climb up the corporate ladder to eventually empty out said corporate's wallets and assets. Sure, the player character involved will be marked for life, but they can just move the assets to a new character and nobody will be the wiser. That said, the game was (or seemed to be designed) that the bigger alliances should be fighting for terrain all the time, but as it turns out they recognize it's mutually beneficial to not wage war. I remember reading about when they introduced titans, and that they were stupid expensive and involved to make (took like a month or so? plus all the raw materials). But the alliances scaled up, stocked up, and now there's hundreds if not thousands of the things and they rarely, if at all get used and lost in combat. So there's no \"sink\" of those things. I haven't heard of any major conflict involving titans since B-R5RB [0], but looking at that article there was another one in 2020 apparently that was a bit more costly ($378K in real money). The problem that Eve has is also its unique selling point, it's all one big universe, so there can be battles involving over 6000 people in one system. But the game's internal clock slows way down, meaning that inside one system time moves at 1/10th of what is out there, also meaning that it feels like reinforcements can arrive within seconds or minutes instead of how long it should usually take. And they still do a once per day server shutdown for maintenance, but idk if these battles continue after that, or if they suspend shutdown during these big fights nowadays. [0] https://en.wikipedia.org/wiki/Battle_of_B-R5RB reply lmm 11 hours agorootparentprevThe ingame groups ended up creating structures that look quite like governments. It felt almost like a recapitulation of real frontier history. Which is something that always felt self-defeating about libertarian ideology to me - like, we know what happens when there are no rules and governments, people make them, and without a government you can't stop that. reply notpushkin 11 hours agorootparentI’m not sure these structures are exactly like governments, in the libertarian sense. Do they demand taxes from people in their area? Do they set arbitrary laws? reply frontalier 10 hours agorootparentyes reply mindslight 2 hours agorootparentprevIt's a self defeating aspect of the specific rightist-style framing of libertarianism that many people end up buying into, including the drafters of the Bill of Rights. IMO this was Gödel's loophole he referenced but never elaborated upon, as it's right in line with his work in logical contradictions. Defining freedoms as a bunch of basic primitives that merely \"the government\" is prevented from infringing, and narrowly defining coercion as something that only the government is capable of (legally) doing is a broken framing. Layered complexity will make it so that other entities apart from the bona fide \"government\" are able to exercise significant actual coercion, and then infringe upon individual freedoms. And then using the broken definitions you will be told you are not actually being coerced, but rather choosing to \"voluntarily\" interact, and so your rights aren't actually be infringed. The only way libertarianism makes sense is to define rights in terms of ability to exercise individual freedoms with respect to coercion by anyone else. This looks messier, but only because it puts the inevitable conflict front and center to be immediately resolved by equitable judgement about the amounts of coercion. The broken framework just pushes this logical conflict into the background, leaving it to continue growing as societal complexity does. reply philwelch 13 hours agoparentprevSpecifically, he was killed in the Benghazi debacle. reply notpushkin 11 hours agoprevThis is so wholesome. Really a testament to people’s ability to self-organize. I do wish they accepted (in-game) tips/donations though. reply Titan2189 16 hours agoprevI had never heard of them. What a great re-telling. reply verisimi 9 hours agoprev [–] This is actually a lovely story. And not surprising. People are naturally cooperative. Yes there are crap people in the world, but mostly not. Left to their own devices, people are kind. Sadly, institutions such as government, religion, etc also exist, that seek to exercise control over individuals. \"For good people to do evil things, that takes religion\" or other overt control systems. Nice to see an example of the opposite. reply CaptainFever 8 hours agoparent [–] It's really interesting to see your comment in the context of another thread in this topic: https://news.ycombinator.com/item?id=42113511 reply Consider applying for YC's W25 batch! Applications are open till Nov 12. GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [],
    "commentSummary": [
      "The Fuel Rats are a group in the game Elite: Dangerous known for rescuing stranded players, showcasing high skill and engaging rescue stories.",
      "Their motto, \"We've got fuel, you don't. Any questions?\" highlights their mission and dedication to helping others in the game.",
      "The discussion emphasizes the self-organizing nature and cooperative spirit of gaming communities, drawing parallels to similar camaraderie in games like EVE Online."
    ],
    "points": 172,
    "commentCount": 20,
    "retryCount": 0,
    "time": 1731374471
  }
]
