[
  {
    "id": 42141587,
    "title": "Visual Basic 6 IDE recreated in C#",
    "originLink": "https://github.com/BAndysc/AvaloniaVisualBasic6",
    "originBody": "Avalonia Visual Basic 6 A recreation of the classic Visual Basic 6 IDE and language in C# using Avalonia. This is a fun, toy project with no commercial intent. All rights to the Visual Basic name, icons, and graphics belong to Microsoft Corporation. >> Open the web version in your browser! << Features Visual Designer Save and load projects in VB6-compatible format Run projects VB6 language support (limited) Building the Desktop Version You'll generally need .NET 9.0, though you can modify Directory.Build.props to use .NET 8.0 if preferred (version 9.0 is required for the browser version). To build, simply run: dotnet build AvaloniaVisualBasic/AvaloniaVisualBasic.Desktop.csproj If you encounter Antlr4 errors, this likely means the Antlr4BuildTasks library couldn't automatically download Java. Installing Java manually should resolve the issue. Publishing the Desktop Version and Making Make Publish Work Publish both IDE project (AvaloniaVisualBasic.Desktop) and runtime (AvaloniaVisualBasic.Standalone): dotnet publish AvaloniaVisualBasic.Desktop -f net9.0 -o bin/ dotnet publish AvaloniaVisualBasic.Standalone -f net9.0 -o bin/standalone/ Now you can run ./bin/AvaloniaVisualBasic.Desktop. Thanks to Avalonia Dock by Wiesław Šoltés Font by lou",
    "commentLink": "https://news.ycombinator.com/item?id=42141587",
    "commentBody": "Visual Basic 6 IDE recreated in C# (github.com/bandysc)357 points by porterde 21 hours agohidepastfavorite136 comments Jtsummers 19 hours agohttps://news.ycombinator.com/item?id=42105869 - from 3 days ago, 224 comments dang 15 hours agoparentThanks! Since that thread only spent 2 hours on the frontpage and there's clearly appetite to discuss this, I guess we can let the current thread run. makmanalp 19 hours agoprevOh my GOD I have to comment. This is how I learned to program as a kid. I found a copy of \"Write Your Own Adventure Programs\" (1983 - Usborne: https://colorcomputerarchive.com/repo/Documents/Books/Write%...) as a kid in my primary school's bookshelf. I remember the code was written in BASIC and my family didn't really own a computer back then. Fast forward a few years later I saw this \"Visual Basic\" thing and thought it would be similar ... it was, but only sort of. I had no book to learn from at first so I remember clicking through every single menu and button available to see what it did. Then I remember using our dialup to download every possible 3rd party VB form control and throwing them in a Form to see what they did. I don't know why I found this entertaining enough to keep doing it. Eventually by copy pasting and changing stuff I was able to write some basic \"homework helper\" programs: calculate the area of a circle and stuff like that. Soon after I tried to look up tutorials which taught me basic win32 programming to do things like have an icon in the status area next to the clock, and then hiding my window to run in the background and make annoying sounds so I could build a silly little prank program to install on my friend's computers which was fun but often would fail because they were missing some .dll file which wouldn't fit on the same floppy. It could be frustrating at times but also I feel so blessed to have lucked myself into learning programming this way and my parents pretty much just letting me do whatever I wanted to this expensive device that probably was not a small thing for us to afford at the time. Even tutorials felt more fun at the time, it'd be \"hypnoMan37's windows registry tutorial!!! HEyyeyeyy Guuyzs :-)))) gzgzgz to my irc channel #blabla on EFNet! so first you call RegistryCreateNewKey32(....\" because god knows I did not have an MSDN CD either. Learning via a code camp feels way more efficient but also so much more dry in comparison. I wonder if there isn't a substantial cost to boring the newbies to death. reply rd07 13 hours agoparentWe have similar experience with VB6, though I was the opposite. Instead of reading a book about BASIC, I was reading a book about VB.NET. My first interaction with Visual Basic was through VBA in MS Word. The first time I opened it, I know that it was a place to code, but I don't know what kind of code I have to type. I don't know any programming language at that time. And then sometimes later, I found a VB.NET book at a bookstore. I was overjoyed at that time, and immediately tried it on VBA to be dejected because the code didn't run at all. I still remember how I several times, until I swear that if the last trial I do also didn't run, I will give up. Fortunately, it does run!!! Turns out, I didn't know that the VBA on MS Word in my computer is based on VB 6 while my book is about VB.NET. The code is a little different, and that's why my code didn't run. After that, I bought every book I can find about VB 6. I also somehow stumble upon a VB 6 IDE installation on my relatives CD stash, and installed it on my computer. And till today, I still think that VB 6 GUI Builder is the best I have ever tried. reply mmerlin 7 hours agorootparenttwinBasic.com is a revamp of VB6 using current tech reply 1oooqooq 6 hours agorootparentwhy all those products keep backwards compatibility with vb6?!? it's this a niche for some industry? or all those products are aimed at people's nostalgia of running their old programs? reply wvenable 2 hours agorootparentVB6 is arguably the most popular and influential version of Basic it only makes sense to keep backwards compatibility with it. Why would anyone not want that from their Visual Basic clone? reply sigzero 2 hours agorootparentprevMaybe. I have a friend that only does VB6 programming support even today. He seems to be doing okay with it. reply jonah-archive 18 hours agoparentprev> Then I remember using our dialup to download every possible 3rd party VB form control and throwing them in a Form to see what they did. I don't know why I found this entertaining enough to keep doing it. Wow, that takes me back. My local library also had a copy of \"Visual Basic How-To: The Definitive Vb3 Problem Solver\" and at some point I'd renewed my loan of it so many times they told me I couldn't anymore. I remember building a working interface based on the \"Peanut Computer\" interface from the beginning of _Out of this World_. reply pshc 15 hours agoparentprevMine was \"How to Create Adventure Games\" by Christopher Lampton (1986) at my municipal library. BASIC code that I entered into my dad's computer, which had QBASIC pre-installed. reply makmanalp 13 hours agorootparentLook! https://ia902300.us.archive.org/view_archive.php?archive=/4/... reply calimoro78 18 hours agoparentprevThis! I want my kids to do the same but are really unclear as to how this is done today without BASIC. I am not psyched about tools that help you merely build platformers with WYSIWYG. Any ideas? reply pmarreck 3 hours agorootparenthttps://crystal-lang.org/ Ruby syntax is very nice (I personally prefer it 100x to Python's), and Crystal makes it fast AND adds some typing. There are GUI libraries for it for things like GTK or LibUI https://github.com/Fusion/libui.cr The V language also looked ideal for this as it has a built-in GUI but upon investigation I found its internals are... not really fleshed-out or thought-out well, and its main maintainer likes to delete and ban any criticisms regardless of validity on its official forums, so that was out, maybe revisit it in a few years reply philiplu 14 hours agorootparentprevMy kid (15 yo) keeps producing games in Python on his iPhone using Pythonista. Latest one is a Tetris clone with load/save game, music, animations on removing a line. I offer to help if he runs into problems but he prefers to hack away and learn on his own. Proud dad here :-) reply makmanalp 13 hours agorootparentprev_why the lucky stiff (also known for https://poignant.guide/ and a bunch of other things) had written something called \"hackety hack\" for kind of these purposes I think, but it may be abandonware at this point: https://github.com/hacketyhack/hacketyhack But I'm not sure it was anything particular about the environment per se. Like, visual basic was written to do business software, truly the most boring thing imaginable. I think it's more about being left to your own devices with something that intrigues you for hours on end without an adult trying to control or direct what you're doing. Maybe. I'm not sure :-) reply magospietato 18 hours agorootparentprevThis is the smartest intentioned educational device I've found. https://microbit.org/ It's rough around the edges, but what it does well is offer a wide array of sensor inputs, and very simple text output. And wraps it in a simple API. You can compute temperature, direction, orientation, do GPIO, network via Bluetooth or direct radio, and drive it with a simple two button and marquee text UI. reply recursive 16 hours agorootparentprevA text editor and index.html withYou can get everything you need without paying any money or even driving to Circuit City. reply poulpy123 7 hours agorootparentprevpython, godot, gambas, processing, p5js... there are many languages or tools that can be used reply cruffle_duffle 17 hours agorootparentprevEsp32 with micropython? reply rescbr 3 hours agoparentprevI had the EXACT same experience as a kid. Found a GW-BASIC book on my parent's bookshelf, found out that QBASIC was bundled with Windows and it ran most sample code that were in that book and it went downhill from there. When I was bored I loved reading the MS-DOS 6 manual cover to cover. Back when Internet access wasn't readily available the quality of documentation and sample codes were impressive. reply galkk 16 hours agoparentprevSame thing was with random turbopascal libraries and, later, Delphi’s vcl controls. Damn Borland with their in-between library version incompatibilities. To this day I think it was the reason of their downfall. > which taught me basic win32 programming to do things like have an icon in the status area next to the clock, On one of programming Fido groups one guy literally had tagline “to put an icon in the area where the clock is you should use ShellNotifyIcon” reply makmanalp 13 hours agorootparentI remember Delphi being the one that people lamented the loss of when VB was gaining in popularity. And ShellNotifyIcon - how could I forget? :D reply memsom 6 hours agorootparentVB beat Delphi to market by a number of years. I remember Delphi 1 arriving in about 95. VB was on version 3 (though I honestly don't remember the prior 2 versions.) I do remember a lecturer in University saying that he was excited for Delphi, because it was going to shift the dominance of VB in the RAD programming arena. reply sixothree 2 hours agoparentprevI've literally never seen this book before. This would have been a really good one to have when I was younger. Thank you for sharing! reply cruffle_duffle 17 hours agoparentprevAh those custom controls. Everything I wrote as a kid was beveled to the max. Good times. reply rkagerer 19 hours agoprevIt's an awesomely inspirational vision, but within 2 minutes of trying it out I found it's lacking a lot of little features (at least on the web build)... e.g: Ampersands in button labels don't create an accelerator (e.g. &Go does not underline the G). In true VB6 you could plop down a Label control and just start typing to change it's contents. Here you have to focus on the input field first (and you can't just click the \"Caption\" heading, you have to click within the input column). To maintain fidelity, one of the rows in the Properties grid should always be highlighted when a control is selected on the GUI designer (for Labels this defaulted to Caption, and I believe for controls without a specified default it defaulted to Name). When switching to a different control with a property matching the name of the currently selected one, VB6 would maintain the selection on that property. This made it quick and easy to update for example the Tag property a bunch of controls in sequence with minimal clicks. Obviously the menus for Debugging, Save, Help, Add-ins, etc. are missing implementation. A working Build button that spits out an \"exectuable\" that runs in the browser would be killer! My nitpicks are born out of love ;-). reply bandysc 9 hours agoparentActually, in Avalonia accelerator char is an underscore _, but I just pushed an update to support & as well :) Save actually works! On Desktop tho, what is more it is format compatible with VB6! Of course since the support in general is limited, compatibility is limited as well, but I actually plan to improve it a bit. Build also works, but only on desktop ;) reply magicalhippo 18 hours agoparentprev> Ampersands in button labels don't create an accelerator This is a feature of the Windows common controls, not anything VB specific, so perhaps why it was missed. reply ygra 12 hours agorootparentWell, VB subclassed the Windows common controls for the most part (and their class names all's contained Thunder, so when I wanted to know whether an application was made in VB, I looked at a button with Spy++). That being said, technically the controls and VB of course don't have to be linked that closely. In this case they're Avalonia controls anyway that just expose different properties. reply runjake 18 hours agorootparentprevNonetheless, a critical part of mimicking the VB6 developer experience. reply magicalhippo 18 hours agorootparentCertainly, not going to argue that. reply wiseowise 20 hours agoprevStill don't understand how we went from this to modern GUI toolkits. It looks and works so intuitively. reply swatcoder 19 hours agoparentTaste moved towards elaborate, deeply styled designs that communicated branding and away from familiar widgets that didn't call attention to themselves as all. It turned out that focusing on a splashy and idiosyncratic brand not only excited prospective new users but inhibited them from going elsewhere since it made transitions more awkward and frustrating. That made more money, more easily, than focusing on user efficiency and feature distinctions as had been the trend before then. The technology then trailed behind this fashion and invested its complexity budget in style customizability, animations and type rendering enhancements, etc and gave up on trying to encourage a standard design language that publishers and users could both build fluency in. reply qingcharles 19 hours agoparentprevEvery version of Visual Studio since this has the same builder. I use this builder every day to build little apps for myself. It is practically 100% identical in the new version of Visual Studio 2022 that came out yesterday. In fact, it's better now because it's easier to line things up and change their properties etc, but the interface is the same. It has literally not changed in 25 years. Here, I booted VS2022 and made this app in under 60 seconds: https://imgur.com/a/qHOCasJ reply pests 17 hours agorootparentThe tools haven't changed, we have. reply wiseowise 10 hours agorootparentprevThat’s Windows only. reply jeroenhd 10 hours agorootparentQt has a very powerful GUI editor that also works quite well. Using QML and Python it's not hard to create a cross platform app. Distributing may be a pain though. Then there's Gambas on Linux (though tbat requires WSL2 or Cygwin to work on Windows). Gambas does almost everything VB6 does using an obviously copued GUI and language. reply wiseowise 8 hours agorootparentThat’s not available on Web. Also relying on anything C++ is huge PITA (I’m aware of JS and QML). reply shortrounddev2 3 hours agorootparentprevI thought vs2022 deprecated the visual builder for some ui frameworks reply analog31 17 hours agoparentprevTwo things initially drew me to VB. Being able to draw the GUI was certainly a very cool and empowering thing. I could make software that \"looked like software\" by the standards of the day, with minimal effort. The other was that the alternative to VB for GUI creation was wrestling with class libraries, at a point when OOP was utterly baffling to many casual programmers like myself. Just the bare minimum \"hello world\" kind of app on either Windows or a Mac was page after page of instructions. I suspect that over the span of subsequent decades, demands on high quality GUIs have increased -- as mentioned by others. But also, the programming skills needed to build a small GUI using code have become more mainstream, maybe because the languages have gradually made it easier. Today, for the quality of GUIs that I need, I'm actually happier to just code them, and let (in my case) Tkinter lay them out in an acceptable default arrangement. My victims, er, users haven't asked for anything better. reply anthk 10 hours agorootparentDitto with Motif under Unix, a Hello World was crazily verbose (even more with Xaw), while something in TCL/Tk was about two or three brief lines. reply pjmlp 9 hours agorootparentOne of the reasons I hardly bothered with Motif back on its heyday, was that it was much worse than Win32. reply RandallBrown 19 hours agoparentprevThis is fairly similar to how Interface Builder in Xcode works for macOS and iOS apps. Like others have said, it works well until you need to support different screen sizes, layouts, animations, touch interaction, etc. reply runjake 18 hours agorootparent> This is fairly similar to how Interface Builder in Xcode works for macOS and iOS apps. Having extensive experience with both: Hard, hard disagree. They might look similar in static screenshots but work completely differently. Totally agree with your second point and I wish Microsoft would have addressed that. Maybe they have. The last time I messed with their stuff I was writing XAML. Anyone know if they brought RAD back? Edit: apparently they had/have layout managers. reply memsom 6 hours agorootparentSo - to answer you two points: Interface Builder was a lot more like VB and Delphi in the past, but around the time of iOS 3, Apple completely broke the UI programming metaphor in it. It used to be all drag and drop (with quirks) but actions were like event handlers and outlets like events. Before it was \"code first\" you could do it all in the UI. I used it quite a bit before XCode existed (XCode used to be ProjectBuilder, even on like Jaguar/Panther IIRC) and it was very close to the version of the same on OpenStep. Xaml designer - well, the designer is not really a thing because Xaml is usually not created as an absolute layout. There was a version of the Xaml designer early on that would attempt to build a UI that looked absolute, but it did a lot of horrible Xaml markup in the background and made maintaining the UI way harder than it should have been. We (Xaml users) all migrated to using it as pure markup and mos of us now use hot-reload over a designer. reply ericb 19 hours agorootparentprevI can't speak to Interface Builder, but in VB 6 Hooking resize was SO easy, and the math you do inside it was so easy, too. It took maybe 5 minutes to do almost any layout. It was frankly, a shock to see how easy this model was and then see the monstrosity that came to pass for HTML and CSS positioning. Baffling. Everything you just listed was easy in VB 6 IMHO (well, touch wasn't a thing exactly). reply ygra 12 hours agorootparentHaving done a few such forms in the past, it was easy enough for a simple dialog with a list, two buttons and a text field, but it quickly got unwieldy. Which was okay back in the day. Everyone had low display resolutions, so simply scaling a window's controls when resizing was okay. No need for responsive layout and even too fancy layouts, I guess. But what we got later with anchor in WinForms, layout panels in WinForms or WPF, layout managers in Swing, and CSS layout die help reduce the math you'd have to do yourself, especially for more complex layouts or even when the layouts change due to different requirements. reply pjmlp 9 hours agorootparentprevMost of those builders, including VB, have the option to support dynamic layouts, it is up to devs to actually learn to use them, instead of the default approach. reply mixmastamyk 18 hours agorootparentprev90s toolkits had \"layout managers\" to avoid hardcoding widget locations and sizes. Might need to extend a feature or two but probably could have been done without starting from scratch. reply alkonaut 9 hours agoparentprevAt the same time it's common to hear \"how does this not support high DPI?\" or \"How does this app not have a dark mode, it's 2024!\" etc. Modern toolkits just do a lot of stuff that older toolkits didn't. Some times at the expense of not being as quick to get off the ground as VB was. The original winforms implementation in the early 2000's was pretty close to VB in terms of efficiency but its warts were numerous, e.g. the DPI used in the designer view (when writing the code) affected what happens when you run it, and so on. reply liontwist 4 hours agorootparentDark mode would have been trivial with old toolkits because they used standardize look and feel. In fact motif lets you customize the color scheme through a text file. Which can make each app fit the appearance of the given desktop. Old guis also had more accssibility features. The only thing modern ones have going for them is animation and visual customization. reply Kwpolska 2 hours agorootparentOld toolkits make it much easier to set the text color of some label to #444, which looks fine on a light background, but is very hard to read on a black background. Setting it to some well-defined MutedText color requires more effort, and it requires the toolkit vendor to have thought about named colors in the first place (and if there are named colors, they might not be meaningful like Muted or Success, but instead ButtonBackground or TooltipText). reply Grumbledour 8 hours agorootparentprevIt used to have darkmode++ back in the day, because windows allowed you to just choose all the controls colors in any way you wanted. Of course it lacks features we want today, especially things we are used to from the web, like highlighting fields with errors in them etc., but I often think new features can't entirely explain why the newer toolkits are so much less ergonomically useable. reply Kwpolska 2 hours agorootparentChanging control colors tends to break, since developers may set the text color to \"really dark grey\" without changing the background, so you get black on black. reply peutetre 5 hours agoparentprevUno Platform will release a new visual editor soon: https://platform.uno/blog/uno-platform-studio-featuring-hot-... reply ibejoeb 2 hours agoparentprevThey really got it right the first(ish) time. The notion that you can examine a visual component and jump directly to the code is perfect. No files. Just the logical things that you're actually dealing with. Keeping a mental map of a filesystem and code is such an annoying mental burden. reply signaru 16 hours agoparentprevHaving built both desktop-native and browser-based apps, I think there is an efficiency in doing the widget layouts textually via code/markup once you get over the learning curve. I believe Qt and wxWidgets also have automatic layout features, but doing this on top of C++ maybe makes the experience less smooth. So far form designers in Visual Studio require manual pixel layouting, which becomes tedious as the GUI evolves to be more complex. This is great for beginners as dragging and dropping controls is so easy to learn. But as soon as you have a dozen or so controls, you start to notice the time spent manually dragging/aligning/sizing that is absent in markup-based or procedurally generated GUIs that do the layout calculations for you. reply happyweasel 13 hours agorootparentmfc has resizable ui layouts called Dynamic layouts (since the 2015 update?), and for wxwidgets there is wxformbuilder. Most stuff for mfc can be set in the dialog builder wrt to resizing, or in code. I cant remember doing manual pixel layouting ever, there are dialog base units or sth like this. People have been setting the ui to 120dpi from the 96dpi standard already decades ago. And the dialogs automatically readjusted without recompiling. I also recently found out my mfc tools are per monitor high dpi aware without any interference from my side. reply throwaway2037 2 hours agorootparentI had no idea about Dynamic Layouts for MFC. Check it out! https://learn.microsoft.com/en-us/cpp/mfc/dynamic-layout?vie... reply xmstr 18 hours agoparentprevMicrosoft carried this style of layout builder into the original asp.net web-forms in the first couple versions of Visual Studio.NET. If I remember correctly it worked just like the form builder for VB6/MFC-C++, but it's been a while. reply liontwist 4 hours agoparentprevMotif is another great example where every component is focused on functionality. Everything can be driven by a keyboard, there is accessibility features, etc. reply xandrius 8 hours agoparentprevIt's that when we were kids we didn't really care about whether was free, open source, made by M$ or not, we didn't care about politics or how things should be (tm). We were just amazed things existed at all. Now, people shame people using WYSIWYG or VSCode or whatever else makes the life of people easier, other than top hard-core users. And that's why even placing a centred text in the middle of a web page requires to know a whole stack of tech, and no step is you actually placing it there directly. reply Pxtl 3 hours agoparentprevBecause web. That said, the VB6 drag-and-drop interface was always flawed. 90% of the time you want to lay out controls in some kind of nest of layouts with clearly-defined resize and reflow behavior instead of \"drag and drop wherever and YOLO if something changes size\". A good GUI framework would nudge you towards that instead of free-form drag-and-drop wherever. reply lelanthran 2 hours agorootparent> Because web. Which is a pity; I was watching a client do some crud work in a webapp. Web - 1 form per page: Click \"back\". Copy some text. Click forward. Paste it. Repeat for 3 different fields. Click submit. Native apps (VB/Delphi/etc) used to be: Open both forms. Copy and paste from one to the other. Open another one on the side to lookup some information, etc. Webapps, even moreso with MPA, force a wizard-style interface - you only go forward through the form. This is not how people used to work; they would frequently have multiple forms in the same app open at the same time. With SPA and html \"windows\" made out of movable divs you can probably support multiple forms open at the same time, but who does that? reply Onavo 20 hours agoparentprevThe answer is simple, mobile and relative layouts. GUI builders are easy when you can just use absolute positioning for everything (see Retool and the dozens of Retool clones). They become insanely complex when you can't. reply rkagerer 19 hours agorootparentI did extensive work in Visual Basic 6. Nearly all of the GUI's I created had resizeable windows that scaled gracefully. It was really straightforward to hook the Resize event. I considered this table stakes for any thoughtfully-written piece of software. There were of course exceptions for fixed dialogs that weren't interacted with for long and comfortably fit any small screen. The page or two of hand-crafted code tended to be at least as readable, and often moreso, than the declarative HTML and CSS gooblygook that's common today. And in practice as a user I found the result tended to be more useful than many of the so-called \"responsive\" websites I see today - which tend to hide content in annoying ways, ignore opportunities to compact whitespace, plaster the screen with outsized ads, etc. - to the point I sometimes request the \"desktop\" site in my mobile browser in an effort to chase down a more humane experience. reply ok123456 19 hours agorootparentprevWindows Forms didn't use absolute positioning for everything. You could anchor things relatively to other controls or components. You would test how things behave when you maximize and resize windows, similar to how Devtools tests reactive designs now. If it were a very simple window or dialog that always showed the same amount of information, you would disable maximize, resize, and position it absolutely. This allowed you to add \"reactivity\" incrementally instead of forcing everything to be reactive up front. reply epcoa 16 hours agorootparent> You could anchor things relatively to other controls or components. I don’t believe this was a feature that came out of the box in VB6. There is Control.Anchor in WinForms that is post VB6. reply wiseowise 19 hours agorootparentprevI don’t buy it. Android has amazing Constraint/Motion layout that adapts on screen size. Instead of improving XML tooling they’ve decided to follow latest fad and created Compose. reply pjmlp 9 hours agorootparentThank the Kotlin crowd at Mountain View. reply mattmanser 19 hours agorootparentprevJust want to add to what other people are saying, not only did VB6 support relative positioning, but the history of responsive sizing in applications wasn't because of mobiles. It was when monitors started changing sizes. Everyone used to have 800 x 600. Then the market exploded. And different monitor resolutions appeared and became divergent way before the iPhone came out. There was a period in desktop applications where some apps were absolutely positioned and didn't support anything apart from the 800 x 600 layout. You'd get this huge gutter on the right and bottom of the application window. It was fairly brief, as changing forms from absolute positioning to relative positioning in VB6 was pretty easy. reply epcoa 16 hours agorootparent> Just want to add to what other people are saying, not only did VB6 support relative positioning Did it? I know .NET WinForms does with Control.Anchor, but that is VB.NET, not VB6. It’s been many years but I don’t recall any method for that in VB6. As someone else noted you could handle the resize handler and move things around yourself. reply pjmlp 9 hours agorootparentprevLayout managers are supported for decades now. reply bluedino 17 hours agoprevMan, that 1995-2001 era Windows UI was like, peak Windows. It was so crisp and clean. Visual C++ and Visual Basic of the time were far from perfect, but they let you just get things done(tm) XP was right around the corner and it's been downhill from there. reply twism 17 hours agoparentNothing beats a clean windows 2000 install reply girvo 16 hours agorootparentGosh it was so fast. And only the drivers I needed (which was a bit of a pain but half the fun). And it was tiny on the HDD. I played so much Half-Life, Unreal Tournament, CS1.5 and more on 2000. I miss it daily. reply jeroenhd 10 hours agorootparentI visit https://bellard.org/jslinux/vm.html?url=win2k.cfg&mem=192&gr... every now and then for nostalgia. It's unfortunate that virtualising win2k with decent video drivers is such a pain. reply Lammy 16 hours agorootparentprevAlmost clean. One trip to Start Menu settings to disable the awful “Personalized Menus”. One more trip to Folder Options to disable “Hide file extensions for known file types” and to enable “launch folder windows in a separate process”. reply codeonline 17 hours agorootparentprevDo you remember how snappy it was! im using an i9 with 32gb on win11 right now and there is noticable lag opening paint and notepad, typically 2 seconds. reply personalityson 13 hours agorootparentprevWindows NT 4.0 reply Kwpolska 2 hours agorootparentNT4 isn't as nice, polished, and stable. reply kevin_thibedeau 13 hours agoparentprevYou can have that in XP, Vista, and 7 with classic mode. reply Stratoscope 16 hours agoprevSo nice to see this! I was one of the original developers of the \"visual\" side of Visual Basic. It was called Ruby at the time (no relation to the programming language) and was going to be a customizable shell for Windows 3.0. The idea was that individual Windows users would create their own personal desktop using our visual editor and \"gizmos\" (later called by the much more boring name \"controls\") to make their own personal environment. Microsoft, probably wisely, realized that this was more suited as a developer tool rather than an end user tool. They combined Ruby with Basic to create Visual Basic. If anyone here ever created VBX custom controls, you can blame me for that terrible API! And if anyone wonders where the phrase \"fire an event\" came from, you can find the answer in Retool's article about VB: https://retool.com/visual-basic (Content warning: drug reference) As they say, \"AMA\". If I may indulge in a bit of shameless self-promotion, I am looking for work. My team at IBM was hit pretty hard in their recent round of layoffs, as we lost our one exclusive customer, McDonald's. I know a lot about a lot of languages and frameworks, but I don't know everything. Does anyone? I love working with customers to understand their needs. Like every programmer, I enjoy coding, but it is just a way to make my customers happy. If anyone is curious, you can find me here: http://linkedin.geary.com/ http://resume.geary.com/ reply mysterydip 14 hours agoparentThank you for empowering my first foray into professional software development! It just made making small utilities to get things done so easy. reply Dwedit 11 hours agoparentprevAny relation to the MS Dialog Editor? reply abrookewood 17 hours agoprevSlightly off topic, but this was built using Avalonia, which I have never heard of. Has anyone used it? The promise sounds impressive (beautiful, cross-platform applications from a single .NET codebase), just wondering whether it actually delivers? https://avaloniaui.net/ reply kosolam 11 hours agoparentYes. This is the most interesting part for me here.. check out the web version https://bandysc.github.io/AvaloniaVisualBasic6/ reply jftuga 19 hours agoprevOpen the web version in your browser: https://bandysc.github.io/AvaloniaVisualBasic6/ reply sedatk 19 hours agoparentThat's extremely fast on Firefox and Chrome while it comes to a crawl on Microsoft Edge (Chromium) for some reason. EDIT: Found it. \"Enhance your security on the web\" option in Edge makes it significantly slower. Disabling the option fixes the performance issues. reply bpye 19 hours agorootparentThat setting disables JIT - on some or all sites depending on the value. https://support.microsoft.com/en-us/microsoft-edge/enhance-y... reply wolpoli 19 hours agoprevHow I missed the frame component in modern day applications. They all seem to think that a bold heading and some extra whitespace at the end is sufficient to group things together. reply rietta 18 hours agoparentHTML has a fieldset that looks like that. But too many CSS frameworks wreck it. I actually like the look. To prove it to yourself, place the following in a empty HTML file and see how it renders.Frame1HTMLCSSJavaScriptreply jay_kyburz 17 hours agorootparentor see here for the lazy https://www.w3schools.com/tags/tryit.asp?filename=tryhtml_fi... reply lukan 16 hours agorootparentAnd here for the w3 haters (if that is still a thing): https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fi... reply DidYaWipe 18 hours agoparentprevAbsolutely. The GroupBox is an essential UI decoration that I create manually now that it's not available in toolkits. I put a checkbox on the outline with a label too, when the entire group of controls is related to a function that can be turned on & off... as used to be standard in many UIs, and very clear. A related missing-but-important one is a proper TabView. I don't know who first passed off a row of plain buttons as a TabView (probably Apple), but it's trash because (like the lack of GroupBox) it does not demarcate what controls below it are ON the selected tab's view! I mean... duh. reply 0xmarcin 11 hours agoprevWhen you dig into the code you can see that the author did the bare minimum to have a nice demo. For example only 2 functions are supported: MsgBox and InputBox: https://github.com/BAndysc/AvaloniaVisualBasic6/blob/383a005... Still it is impressive to create something complex like this in a matter of 4 days (looking at the commit history). And it is a good start to develop a full fledged IDE. The more advanced features like syntax highlighting & autocomplete unfortunately are missing. I did not run it (I am on macOS) but I also expect there is no debugger. Now I also want to share my childhood story: I started my dev journey first by using Turbo Pascal and then by switching to Delphi 7. Delphi was pretty much like VB6, you designed an app by dragging and dropping components on a form. My first app that I have created was a Notepad++ clone, I still keep the code for it but it is so awful that I cringe every time I try to look at it. reply bandysc 9 hours agoparentSyntax Highlighting actually is there, it was added after the gif was recorded (you can see that on the web version), autocomplete, hmm, maybe later? :) VB6 language is limited as well, it was more a toy/proof of concept, but given the positive feedback I am tempted to implement more functionality. Especially since the save format is compatible with VB6. It is still gonna be a toy, but actually working toy? reply 0xmarcin 2 hours agorootparentIndeed you are right, there is syntax highlighting. Also my last comment sounds a bit harsh. That wasn't my intention. It is a great project. reply sn0n 10 hours agoprevAnyone else use rapidq (https://rapidq.phatcode.net/) or what it became, realbasic (now xojo)? Another fun one was gambus ( Linux, https://gambas.sourceforge.net/ ). reply rcshubhadeep 2 hours agoprevI love this. Have so many memories with vb. When I was going through my graduation back in 2003/4 I took some classes on developing application using vb6. Some of the most fun things I had ever done. reply waldrews 18 hours agoprevThe Property Grid control was the greatest general purpose UI ever created. Using it (in the .Net, Windows Forms incarnation) for custom types in non-VS application was a tremendous productivity shortcut for LOB apps. Put attributes on your user exposed objects, done. To this day, we don't have anything equivalent for web or mobile. Dynamic form generation from JSON schema gets part of the way there, but not quite. reply flog 19 hours agoprevAs a kid I spent summers working in the schools IT department in order to save up to buy VB6 (with a staff discount). This was not cheap back in the day! reply kristianp 18 hours agoprevI appreciate the amount of work that might have gone into this, but a small annoyance: > Antlr4BuildTasks library couldn't automatically download Java. It would be nice if more effort was put into avoiding large dependencies, like a java runtime for a .net product. Edit: It's not just the size of the dependency, it's the complexity this adds to the deployment and development. reply bandysc 9 hours agoparentI don't know any better alternative than ANTLR for grammar generation, this is unfortunately written in Java, so there is not a good way to avoid it. I mean, I could manually generate .cs files and commit them to the repo. Antlr4BuildTasks at least automates this step (both downloading java and building antlr4). Long story short, I don't see a better alternative for grammar generation now. reply neonsunset 18 hours agoparentprevIt would be nice if more effort was put into avoiding large dependencies for slow languages, like Python. Edit: It's not just the size of the dependency, it's the complexity this adds to the deployment and development. (these dependencies are for building the project, not for deploying it) reply DidYaWipe 18 hours agoprevI worked for a company that was prototyping a ground-up rewrite of their flagship product in VB, while a team of Visual C++ programmers was building the \"real\" version. It was basically an industry-specific CRUD application. I probably don't even need to finish this story, because you know what happened: We knocked out a fully functional application in VB while the C++ programmers struggled to replicate it with a less-rich environment. Back then VC++ lacked numerous controls that were available in VB. The app connected to the database with ODBC and it was easy. Management saw that and said WTF are we building this other thing for, and asked the C++ to join the VB effort and finish the product. They turned their noses up at it, and were all summarily fired. I was put in charge of design and continued working with a team of contractors to finish the app. I was pretty young and learned a couple of obvious lessons there. And oh yeah, I actually started my professional programming career writing complicated macros in Word. If I ever meet the guy who approved WordBasic, I will buy him a drink. A word processor with a freaking GUI builder in it! I wrote a macro that could parse and rewrite thousands of SQL modules when a bunch of table structures changed. I lived in Word. What a great product it was, and what a sorry state it's in now. reply jchw 18 hours agoparentOn one hand, assuming no embellishments are made: Clearly a triumph for the simplicity and effectiveness of VB. On the other hand: A pretty good illustration of why every modern app is now a webview. reply DidYaWipe 10 hours agorootparentNo embellishments at all, and none needed; it was an ideal app for VB. Speaking of webviews... the next place I worked decided that an entire CRM system should be a 300 MB ActiveX control that clients would download and run in IE. Why? Absolutely no reason other than it was trendy and they thought it would seem impressive to the client. This was in the '90s, and a 300 MB plug-in was outrageous. To top it off, I and another new hire found that they were storing all kinds of state in the UI controls. The manager was agog when we told him that the entire thing had to be rewritten. It's incredible what goes on at... I was going to say small firms, but we all know there's crazy-bad code at firms of all sizes. Today, of course, it would be suspect if such a system weren't browser-based. reply ChrisArchitect 19 hours agoprev[dupe] https://news.ycombinator.com/item?id=42105869 reply peutetre 7 hours agoprevThe thing I like about WebAssembly is that it brings all languages to web. Writing Visual Basic on the web in a C# application compiled to WebAssembly is Inception levels of great. reply pjmlp 9 hours agoprevVB 6, back when doing COM was still easy, then the macho team took over, and COM development experience has been a mess ever since, even though it is the main API surface since Windows Vista. reply jakebasile 16 hours agoprevWarms my heart to see this. VB6 was how I first made serious forays into making software. Really cool recreation to boot. reply todd3834 17 hours agoprevGiving me flashbacks to the AOL punters and proggies scene. <3 reply rcarmo 11 hours agoprevI’m going to say this again: this UX but using Lua (or Python) instead would be a killer app. reply mkl 10 hours agoparentNot enough people agreed. It seems long-abandoned now, but Boa Constructor was it for Python: https://boa-constructor.sourceforge.net/. Lazarus (quite active) is an open source Delphi clone that I would have been all over in 1996: https://www.lazarus-ide.org/. I haven't been keen on Pascal for a long time though. Coming from Visual Basic 6 and Delphi, I was awfully disappointed in \"Visual\" C++. reply squarefoot 4 hours agorootparentTotally agree on Lazarus: it inherited the \"Delphi way\" of doing thins, and is a joy to use. For those who never used it, it produces native compiled high performance code (on par with C) and the IDE itself can run for example also on ARM boards, no cross compiling needed. Still dreaming to see it support other languages, but I guess adapting all libraries to them would be a nightmare of a task for a Open Source and Free as in beer project. reply teo_zero 12 hours agoprevContrary to the original one, this editor doesn't automatically capitalize keywords. It was a sort of syntax highlighting that I haven't seen on contemporary editors and IDEs. Does anybody know of a plugin to do that for common editors? reply wkirby 14 hours agoprevThat screenshot takes me waaaay back. Wrote my very first code in that IDE sitting in my dad’s living room, copying examples from a letter my mom’s cousin sent us in the mail. Made a choose your own adventure game about a squirrel climbing a tree. Just if statement after if statement after if statement… reply orphea 8 hours agoprevIf I'm not mistaken, ComboBox is supposed to have a mode in which it allows typing in it, in addition to choosing items from the dropdown. reply yarone 19 hours agoprevI absolutely loved VB3 thru VB6! reply transcriptase 19 hours agoparentThe joy of installing VB4 from something like 20-30 numbered 3.5in floppy disks. Now a patch for a modern game that fixes a typo is 2 gigs. reply abhiyerra 19 hours agorootparentThat one of the floppy disks I had for installing VB4 got corrupted due to my idiocy was what got me into Linux and Java, perl, and PHP at the time. Still nothing as good as original VB for GUI stuff. reply rietta 18 hours agoparentprevMe too! I have VB3 opened right now in Windows 3.1 on qemu. I have not done anything serious with it in a long time though. reply moribvndvs 7 hours agoprevThis is giving me a lot of nostalgia but also a lot of PTSD. reply larodi 19 hours agoprevInterestingly it also downloads Java for the antlr grammar support. reply bandysc 9 hours agoparentAntlr is build with Java so in order to build the grammar, it needs to either use system java or download one. I don't know any better alternative to Antlr. Of course I could manually generate .cs files and commit them to the repo, but Antlr4BuildTasks automates everything which is very convenient. reply rivetsec 19 hours agoprevMy first programming environment as well. Love it. I once used multiple iomega zip drives to smuggle a copy of this out from my school so I could make things at home. reply mentos 19 hours agoparentIomega zip and the 1Gb jazz drive I got for my birthday. Downloaded vb3 from an AOL warez chat room, received hundreds of emails each with a fraction of the zip. reply CaesarA 9 hours agoprevThis absolutely amazing. reply psawaya 19 hours agoprevMy first programming environment. Pure nostalgia. Love it!! reply firebot 2 hours agoprevNot really though. ScaleWidth and ScaleHeight and innumerable other properties and functions don't exist. I can't even get a for next loop working to paint the canvas. reply thr0waway1812 17 hours agoprevfdaf reply ranger_danger 18 hours agoprev [–] How is this legal? reply peutetre 7 hours agoparentI don't think Microsoft will care. Visual Basic has been relegated to second tier status: https://visualstudiomagazine.com/articles/2023/02/08/languag... VBScript is to be axed: https://www.bleepingcomputer.com/news/microsoft/microsoft-to... reply reaperman 15 hours agoparentprevIt isn't, but the rights-holder (MSFT) is very unlikely to care. VB6 is 26-33 years old, so this doesn't threaten any of their profits in any way. reply Dwedit 10 hours agoparentprev [–] I think the only parts actually infringed are the icons. (Not a lawyer) reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Avalonia Visual Basic 6 is a C# recreation of the classic Visual Basic 6 Integrated Development Environment (IDE) using Avalonia, intended as a fun, non-commercial project.- The project includes features like a visual designer, compatibility with VB6 project saving/loading, and limited support for the VB6 language.- Building the desktop version typically requires .NET 9.0, but .NET 8.0 can be used with modifications; compilation is done using `dotnet build`, and publishing with `dotnet publish` for both the IDE and runtime."
    ],
    "commentSummary": [
      "A Visual Basic 6 Integrated Development Environment (IDE) has been recreated using C# and is accessible on GitHub, generating nostalgia among developers who started with VB6.",
      "The project employs Avalonia, a cross-platform UI framework, and supports basic VB6 features, though it remains a work in progress.",
      "The initiative has received positive feedback, sparking interest in further development and discussions on the evolution of graphical user interface (GUI) toolkits and the simplicity of VB6 compared to contemporary tools."
    ],
    "points": 357,
    "commentCount": 136,
    "retryCount": 0,
    "time": 1731620874
  },
  {
    "id": 42141843,
    "title": "Analysis of economic and productivity losses caused by cookie banners in Europe",
    "originLink": "https://legiscope.com/blog/hidden-productivity-drain-cookie-banners.html",
    "originBody": "Partager Europeans Spend 575 Million Hours Clicking Cookie Banners Every Year Analysis of the economic and productivity losses caused by cookie banners in Europe, including country-specific estimates and legal insights into the outdated EU Directive 2002/58. Cookie banners have become a pervasive feature of the modern web, frustrating users who seek a seamless browsing experience. In Europe, consent banners are mandated by an old directive from 2002, the ePrivacy Directive 2002/58, which requires websites to obtain informed consent before storing or accessing information on users’ devices. While the intention behind these regulations is to enhance privacy protection, the actual impact on user privacy is insignificant, as most cookie banners are used to facilitate web analytics, understand user behavior, manage ad efficiency, or keyword traffic. Moreover, actively tracking a user beyond their visit to a website is difficult or borderline impossible for website owners, as it would require a court order. Understanding the true cost of these consent prompts in the European economy is therefore necessary. Our calculations reveal that collectively, Europeans spend over 575 million hours annually on consent prompts. At a time when the European economy faces significant challenges in competitiveness compared to the US and China as recently highlighted by President Macron, it is crucial to examine the data and the legal framework that underpins these requirements. The Productivity Cost of Cookie Banners To grasp the profound impact of cookie banners on European productivity and the economy, we need to break down the calculations. Starting with the total population of the European Union in 2024, which is approximately 449.2 million people, we assume an internet penetration rate of around 90%, resulting in 404.28 million internet users. On average, a user visits about 100 websites per month, totaling 1,200 websites per year. With about 85% of these websites displaying a cookie banner, a user will encounter about 1,020 cookie banners every year. Assuming it takes an average of 5 seconds per interaction with a cookie banner, this amounts to 5,100 seconds per year per user, or roughly 1.42 hours per year. Multiplying this by the total number of internet users in the EU, we reach the following total time: 404.28 million users × 1.42 hours/year ≈ 575 million hours/year. Below is an estimated distribution based on population and internet usage rates: Country Population (millions) Internet Users (millions) Annual Hours Spent (millions) Total Cost (€ Billion) Germany 84 75.6 107.35 2.68 France 68 61.2 86.85 2.17 Italy 59 53.1 75.37 1.88 Spain 47 42.3 60.04 1.50 Poland 38 34.2 48.57 1.21 Netherlands 17 15.3 21.73 0.54 Belgium 12 10.8 15.34 0.38 Sweden 11 9.9 14.07 0.35 Austria 9 8.1 11.50 0.29 Other Countries 104.2 93.78 134.18 3.35 Total 449.2 404.28 575.0 14.35 Note: “Other Countries” encompass the remaining European Union nations. To translate the lost time into economic terms, we can assign a monetary value to the hours spent on cookie banners. With an average hourly wage in Europe of €25, the total economic cost can be calculated as 575,000,000 hours × €25/hour = €14.375 billion. Considering the EU Annual GDP (2024) of approximately €15 trillion, the economic cost of cookie banners represents: (€14.375 billion ÷ €15 trillion) × 100 ≈ 0.10% of total EU GDP. To grasp the scale of the productivity loss, we can consider the number of full-time employees (FTEs) that represent the lost hours. Assuming a full-time worker dedicates approximately 2,000 hours annually, 575,000,000 hours ÷ 2,000 hours/FTE = 287,500 FTEs. This means the overall cost of clicking on cookie banners is equivalent to a company of 287,500 employees spending an 8-hour workday clicking on cookie banners. Do Cookie Banners Really Improve Privacy? Contrary to popular belief, cookie banners were not introduced by the GDPR but by the ePrivacy Directive 2002/58, at a time when cookies were just becoming known to the public. In response to fears of global surveillance, regulators imposed a general principle of consent before any data could be stored on a user’s communication devices: “Art. 5.3: Member States shall ensure that the use of electronic communications networks to store information or to gain access to information stored in the terminal equipment of a subscriber or user is only allowed on condition that the subscriber or user concerned is provided with clear and comprehensive information in accordance with Directive 95/46/EC, inter alia about the purposes of the processing, and is offered the right to refuse such processing by the data controller.” The ePrivacy Directive was intended to be updated, but the project never materialized. Today, most cookie banners are used by organizations to: Facilitate web analytics and understand user interactions with their websites. Improve user experience by analyzing what content performs well or poorly. Manage the performance of advertisements. For the most part, small businesses use cookies efficiently without precise user identification. Identifying users typically requires a court order to process IP addresses, which is rarely pursued. Therefore, cookie banners primarily serve to mitigate theoretical legal risks rather than enforce extensive user tracking. It is not to say that some businesses do not use cookies to operate user tracking on a massive scale. Some companies relying exclusively on advertising do share user data with very large pools of partners—sometimes hundreds of ad partners. In that case, cookie banners do offer privacy protections for users. However, looking at the general scale of the internet, only a very small fraction of websites use mass-scale partnerships as their main economic model. For users, repeated interactions with cookie banners lead to significant frustration and complete loss of vigilance. The consent fatigue results in users mindlessly accepting terms without proper consideration, thereby undermining the very intent of the regulations. The constant barrage of consent prompts not only reduces productivity but diminishes user satisfaction and erodes trust in online platforms. Conclusion The realization that Europeans spend 575 million hours annually clicking on cookie banners highlights a significant, yet often overlooked, economic and productivity drain. These processes deliver minimal privacy benefits and little enhancement to business performance. In contrast, regulations like the GDPR impose IT security obligations that, while seen as burdensome, contribute to long-term business robustness by ensuring the security of IT systems. This situation calls for an urgent revision of the ePrivacy Directive—potentially transforming it into a regulation to ensure swift adoption. Exemptions from cookie banners for small and medium-sized businesses (SMBs) using analytics, tracking user interactions on their websites, and managing basic advertising are imperative to mitigate unnecessary economic and productivity losses. Témoignages \"Legiscope nous permet d'économiser plus de 500 heures de travail de conformité par an ! C'est plus de 3 mois temps plein !\" — Sylvain Graveron The Purposes of Processing under the GDPR GDPR and Outbound sales : €500,000 fines for non-compliance DPO or compliance officer ? How to Create a GDPR Compliant Questionnaire (Surveys, Satisfaction Inquiries, etc.) What is a Supervisory Authority under the GDPR? The Role of the European Data Protection Board (EDPB) Tutorial: how to get a valid GDPR consent Doing the triple test to evaluate the legitimate interests under the GDPR Role and missions of the Data Privacy Officer (GDPR) Position of the data protection officer (DPO) in the GDPR Implementing Privacy By Design (GDPR) GDPR Information notices, a few things you need to know A step by step guide to e-commerce compliance under the GDPR Does GDPR Apply to Companies Outside of the European Union? What is a Data Processor?",
    "commentLink": "https://news.ycombinator.com/item?id=42141843",
    "commentBody": "Analysis of economic and productivity losses caused by cookie banners in Europe (legiscope.com)319 points by vegasbrianc 20 hours agohidepastfavorite352 comments uniqueuid 10 hours agoI am kind of frustrated by the widespread misunderstandings in this thread. Laws are best when they are abstract, so that there is no need for frequent updates and they adapt to changing realities. The European \"cookie law\" does not mandate cookie banners, it mandates informed consent. Companies choose to implement that as a banner. There is no doubt that the goals set by the law are sensible. It is also not evident that losing time over privacy is so horrible. In fact, when designing a law that enhances consumer rights through informed consent, it is inevitable that this imposes additional time spent on thinking, considering and acting. It's the whole point, folks! You cannot have an informed case-by-case decision without spending time. reply mpeg 10 hours agoparentWhat I find funny about the whole thing is that the grand majority of companies with cookie banners are not implementing them correctly, and therefore are still in breach of the law. I see constantly banners on sites that set tracking cookies by default, and delete them if you reject them in the banner (or even worse, not delete them at all!) – this is not compliant as the cookies were set before consent was given Also see banners where there is only a big \"OK\" button, with no visible option to reject, this is also not compliant! reply zelphirkalt 7 hours agorootparentAnd not to forget: Giving consent and rejecting to give consent must take equal effort, otherwise you are not compliant. This is veeeery easy to do. Literally just place 2 equal buttons next to each other ... Basically, all you need to do is not to spend additional effort to F things up. But surprise surprise! Most companies act as too incapable to implement it correctly. I _wonder_ what the reason could be ... reply Cthulhu_ 4 hours agorootparentprevYou'd think that the $160+ million fine given to Google for incorrectly implementing their consent thingy would be a deterrent, but clearly not. While the OP of this comment chain stated that laws are best if they are abstract, I think in this case the EU should have mandated an implementation as well, for example a browser based consent setting. Can be global, can be per-website. But the (ad)tech companies wouldn't like that, because as it turns out if given a fair choice, the majority of people would not opt-in, and they don't like that. Even though a small percentage of visitors that do opt in would already generate statistically significant results. It's the same with the alternative, e.g. US sites simply not allowing access from the EU. They could just not have tracking. Advertisers could serve non-tracking ads, based on e.g. IP geolocation. But they don't like that because it's not as targeted as before the EU laws. reply sourcecodeplz 4 hours agorootparentprevLook at how Google does it for Blogger. There is an OK button and a \"Learn more\" one. There is no reject. Are you saying they are breaking the law? EU would love nothing more than to levy more fines. reply MagnumOpus 1 hour agorootparentThey are breaking the law. But enforcement lies with national agencies (unlike antitrust where the EU commission itself enforces). Most national agencies don’t bother, only the French CNIL had levied penalties - pretty much on every one of the big ad tech companies in the Faamgs, Bytedance and Twitter… reply actionfromafar 4 hours agorootparentprevI always assumed they were and are breaking the law. reply weinzierl 8 hours agorootparentprevOne way to see it is that it's their way of passive-aggressive protest against a law they don't want. Maybe the aim was never to abide by the law, just to pretend and annoy people enough to draw them on your side. reply dspillett 7 hours agorootparentI take an even more cynical view: their intent is far from passive. They want the end user to be irritated in the extreme. When users complain they'll say “we have to do this, the law says so, look, everyone else is doing the same thing” in the hope that people will support later action to have the privacy protections wound back. reply ryandrake 3 hours agorootparentThe message from these antagonistic companies is clearly: \"Look at what they made me do to you!\" And users (even here in the HN comment section) fall for it. Like a beaten spouse. Yessssssss, it's the evil EU.... Why do they force you to beat me up? reply ragnese 5 hours agorootparentprevOh, it's definitely malicious compliance. I have no doubt. reply dominicrose 8 hours agorootparentprevA clear example of passive-aggressive protest was from Google, the removal of links to Google maps from the search results. Instead of providing a choice of multiple map providers, they just completely removed the links. To clarify: I'm in Europe (France). reply dspillett 7 hours agorootparentOr Apple's childish hissy-fit, deliberately breaking offline app support in response to an edict about app stores. reply GJim 9 hours agoparentprev> I am kind of frustrated by the widespread misunderstandings in this thread. SV and the advertising industry thrives on those misunderstandings. Put simply, there is no need for \"cookie banners\" unless those cookies are being used to track or personally identify me (hello advertisers!), in which case, I need to give my opt-in informed consent to allow this; and so I should. Hardly surprising SV and the advertising industry campaigns against \"cookie banners\", rather than their own unethical trading in personal data without consent. reply ryandrake 3 hours agorootparentSilicon Valley in general has a huge problem understanding consent. If the world was a night club, \"Silicon Valley\" would be that creepy guy who goes up to everyone saying \"You're dancing with me now, unless you opt out [YesAsk again later].\" reply ApolloFortyNine 4 hours agoparentprev>Laws are best when they are abstract, so that there is no need for frequent updates and they adapt to changing realities. Couldn't disagree more, people (and even companies) have a right to know if they're breaking the law. Broad laws just make everyone (potentially) guilty. It's ripe for abuse and corruption. reply uniqueuid 2 hours agorootparentThis is not what I meant. Laws are made concrete and understandable through either case law (harder for citizens to anticipate IMO) or through statutory interpretation in civic law traditions. Both (eventually) offer a clear understanding of the meaning and scope of a law. reply weberer 9 hours agoparentprevI am informed and chose \"No\" each time. Why do EU lawmakers not allow me to automatically say no? All they have to do is add a line to the law enforcing companies to respect the DNT or GPC header. https://en.wikipedia.org/wiki/Do_Not_Track reply crote 8 hours agorootparent> Why do EU lawmakers not allow me to automatically say no? What do you mean? There is no law banning companies from honoring a DNT header, companies just choose not to do so. The law already allows it, it just doesn't mandate it. reply weberer 7 hours agorootparent>What do you mean? ... The law already allows it, it just doesn't mandate it. That's exactly what I meant by: >All they have to do is add a line to the law enforcing companies to respect the DNT or GPC header. reply daveoc64 8 hours agorootparentprevTracking isn't the only thing that the law covers. reply pickledoyster 9 hours agoparentprevYes. It's not the regulation but the misguided implementation that's to blame. Sites and cookie banner plugins could just accept DNT signals from browsers and no productivity would be lost. reply randomdata 8 hours agorootparentDNT does not provide informed consent. It may, if set to not track, imply denial, but the reverse is not true. If DNT is accepting or unset, the site needs to fall back to the banner to get consent. And at that point you may as well prompt everyone with the banner instead of complicating the codebase with extra logic for a DNT edge case. reply ben_w 8 hours agorootparentMm. For existing privacy options — location, microphone, camera — Safari on iOS has the options of \"ask\"/\"deny\"/\"allow\". I wouldn't be surprised by legislation for a Do Not Track option in DMA designed Gatekeepers' browsers, defaulting to \"ask\", where all three options must be handled accordingly by websites. \"Ask\" would also have to be the default behaviour when no preference is transmitted. reply randomdata 8 hours agorootparentAgain, as the law in question requires informed consent, \"allow\" and \"ask\" end up being the same thing. A new DNT law as you propose would contradict the other law of which we speak. reply Ntrails 6 hours agorootparentInformed generalised denial could be accepted and no cookie banner shown surely? In much the same way no banner is required if no cookie is being set. reply account42 6 hours agorootparentprevI doubt there would be any concerns with \"complicating the codebase\" (really?) if there was a Yes-Track header that gave consent but no negative signal. reply randomdata 3 hours agorootparentThere is a \"Yes-Track\" header – DNT: 0 Granted, you can't legally use it like that where EU laws apply, per the GDPR. Hence the complaints about the GDPR you see in other comments. reply smolder 1 hour agorootparentIt's not really a Yes Track if it's simply absent. The user hasn't requested to be tracked. I'm not even sure with it set to 0 that you can assume that intent. I guess it would depend on the browsers behavior, but as you say the law is not compatible with that use. reply randomdata 22 minutes agorootparentAccording to the specification, DNT: 0 = Track me. DNT: 1 = Do not track me. > I'm not even sure with it set to 0 that you can assume that intent. That's the problem. Someone not paying attention might inadvertently set DNT: 0, which is why the law is written the way it is. But at the same time we have techies who carefully and knowingly set such values and want the service to acknowledge it, contrary to the law. Hence the contention. reply secondcoming 6 hours agorootparentprevThere is a new signal, GPC, that does the same thing and has been blessed by the advertising industry. [0] https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Se... reply JimDabell 5 hours agorootparent> Non-standard: This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future. I tried looking at the various browser standards positions, and as far as I can see, nobody has even asked Blink or WebKit if they are interested in supporting it. Is there any movement on this at all? The official website says that it’s part of “several major browsers”, but this seems dishonest when the biggest browser that supports it is Firefox with ~2.5% market share and no actual major browser seems to be aware of its existence. reply secondcoming 1 hour agorootparentThere's movement from the Internet Advertising Bureau, they explicitly say that this signal must be adhered to if the header is present, and this signal must be forwarded to Demand Side Platforms. reply JimDabell 49 minutes agorootparentI mean is there any movement in getting major browsers to adopt this? Normally when a spec. like this is written that needs adoption from web browsers, an explainer is written and then the major rendering engines are asked for their feedback. For instance, here’s an explainer: https://github.com/krgovind/first-party-sets Here’s where WebKit was asked for their position on it: https://github.com/WebKit/standards-positions/issues/93 Here’s where Mozilla was asked for their position on it: https://github.com/mozilla/standards-positions/issues/350 Here’s the process Blink goes through to get a new feature like this going: https://www.chromium.org/blink/launching-features/ I tried to find where this was done for GPC and couldn’t find anything. Did they just write a spec. and not bother doing any of the work involved in getting it adopted? Or is there progress being made that I didn’t see? Hence my question: Is there any movement on this at all? Or is the process of getting it adopted by Blink and WebKit at absolute zero? reply brookst 5 hours agoparentprevI partly agree but feel you’ve conflated a few things: - Laws are best when abstract. This is true. Laws work best when they cover a class of behavior, not specific behaviors. - Requiring informed consent is good. This I disagree with with because it is a hard to measure outcome. Abstract, yes, but to the point where nobody knows what it means. The only way to meet this in spirit is to go so far overboard that nobody can ever say you didn’t try hard enough. - Mandating that huge populations spend time to make informed case by case decisions. This is like mandating pi=3. As soon as this became the goal the whole enterprise was doomed. The only way this happens is with notaries and witnesses , which is far too heavy a burden for visiting a website. The whole thing is noble intent, but disproportionate to the problem and not aligned with the putative goals. Regulation can be good, and it should be abstract, but it cannot mandate abstract outcomes. Imagine if speed limit signs said “speed limit: optimized balance of reduced time to destination and net cost of carbon emissions and amortized risk of accidents” reply skydhash 5 hours agorootparentI’d say the ability to have speed limits is the regulation. How it’s implemented vary depending on the road. Regulations should be abstract so that the implementation can be sensible and adaptive to the context. And everyone knows what “informed consent to tracking”. If you’re building something, you know when you intrude on your users’ privacy. But everyone chose forgiveness instead of permission, and now I throwing a fit when the latter is required. reply uniqueuid 2 hours agorootparentprevSure I find it reasonable to disagree on these points. I personally find informed consent to be a very desirable thing, because it aims at the goal of legislation, not at the means. If you think that citizens cannot, should not, or should not be required to profoundly understand what is happening to them in digital contexts, that's a specific point of view. From this you evaluate the trade-offs. My personal (humanistic) perspective is that a profound understanding and practical control over our digital lives are the prerequisite for dignity, which is the ultimate goal of a state. reply close04 3 hours agorootparentprev> nobody knows what it means The definition of consent is provided here. [0] There are clear application guidelines. To me it takes being intentionally obtuse or malicious in the interpretation when reading the text to come to the conclusion \"I don't know what it means so I'll do the thing that benefits me\". Imagine blowing through a stop sign and trying to explain that you don't know what it means, the Earth is moving so you could never really be in compliance. You're not wrong but it's clear that your incompliance doesn't come from a place of honest misunderstanding. > Mandating that huge populations spend time to make informed case by case decisions It's mandating that the user is given the tools to provide informed consent, not that they must use them properly. If you need to know what it means, the text is clear. If not and never needed to read it, it's easy to conclude it's hard, impossible even. [0] https://gdpr.eu/article-4-definitions/#:~:text=%E2%80%98-,co... reply Rattled 3 hours agoparentprevSome of the most intrusive cookie banners I've seen are on EU institutional websites. If they can't find a way to provide access to information without pages of consent boxes what hope have the rest of us. The law came ten years too late and focused on a narrow technical step rather than the privacy goals directly. reply GardenLetter27 3 hours agoparentprevBut you're the one saving and sending the cookies anyway - not the website. If you don't want to send some of them, then just configure your client not to do that. It's bizarre that the onus is put on the websites themselves to request consent before requesting that the client sets the cookies. reply TheCoelacanth 2 hours agorootparentThe law isn't about cookies; it's about tracking regardless of the technical means used to implement it. reply scotty79 7 hours agoparentprev> Laws are best when they are abstract ... Laws are only as good as their real world consequences. reply zelphirkalt 5 hours agorootparentThere is a kernel of truth in that, but lets not forget, that laws alone don't have any consequences. It is the willingness to force people to comply with the law, that has the actual consequences. If our judges and governments and forces in general are not willing to pursue violations of the law, then we can have any law we want, it still won't matter. We do need more law enforcement on GDPR! A lot more. reply scotty79 2 hours agorootparent> laws alone don't have any consequences That's a very weird claim about something that the whole purpose of is to have at least some consequences. reply bawolff 9 hours agoparentprev> The European \"cookie law\" does not mandate cookie banners, it mandates informed consent. Companies choose to implement that as a banner. Would there exist any other method of implementing it that would be substantially different? Its hard to imagine. I suppose they could implement it by not having tracking cookies. I think the ideal situation is that people could just set it as a browser preference and be done with it. Oh wait they already can. reply GJim 9 hours agorootparentSetting a browser preference is not giving explicit opt-in informed consent to handle my personal data (for that is what this is about) on a case by case basis. That is what the law requires. Blame the unnecessary gathering of personal data (and think about why they want it!), not the 'cookie law'. reply dspillett 6 hours agorootparentprevIt is more than about using cookies, despite the regulations being informally called cookie laws, any tracking and storage of PII is covered. > Would there exist any other method of implementing it that would be substantially different? A checkbox or button, anywhere on the page, that you can click to opt-in or ignore to not op-in. Once clicked the site/app has consent to track that consent, so the box can stay ticked (or be moved out of the way entirely as long as a way to retract consent is easily available, perhaps via an obvious link in page footers). Done. Informed consent implemented in a way that doesn't irritate any user (those that care either way, and those that don't care at all). They could even include a short bit of text begging people to opt in because it helps their site/app make more money from advertisers, without going as far as a pop-over or otherwise wasting a large portion of screen space. > Its hard to imagine. For those with very little imagination, perhaps. > … ideal situation is that people … set … a browser preference …. Oh wait they already can. Only with regard to cookies, and perhaps other local storage, which as I stated at the top is not at all the whole matter. And even within those limitations those options are rather ineffective against the experienced stalkers that the advertising industry consists of, because they can and will simply ignore things like DNT and will work around cookie/localstorage/other blocks using various other fingerprinting tricks. reply Ylpertnodi 3 hours agorootparent>A checkbox or button, anywhere on the page, that you can click to opt-in or ignore to not op-in. How about no click to opt out, and a click to opt in? reply marcosdumay 3 hours agoparentprev> You cannot have an informed case-by-case decision without spending time. No, that's bullshit. Nobody is after case-by-case decisions. People are under DoS attacks from corporations throwing single-sided contracts into them until they make a mistake and accept something. Those boxes are just that, harassment, done in the hope people will pay them to go away. reply shadowgovt 6 hours agoparentprevWhich is fine, but as an individual I'd just rather auto-click \"accept all\" and go on with my life. Be nice if that could be done without the button. If I don't want to be informed, there should be a way for me to signal my willingness to participate in uninformed consent. reply scotty79 7 hours agoparentprev> You cannot have an informed case-by-case decision without spending time. Forcing me to make an informed decision where I don't care about the result is the one of the major ways of wasting my time. If you wanted to create a good law about this you should make it so I only have to make a case-by-case decision if I care about my privacy (as it's currently exploited) and do nothing if I don't. reply GJim 7 hours agorootparent> Forcing me to make an informed decision where I don't care about the result The UK and EU have decided _society_ cares, about the dangers due to unregulated sharing of personal data; hence the law requires informed consent to do this. If _you_ don't care, then that is your prerogative. reply dspillett 7 hours agorootparentprev> Forcing me to make an informed decision where I don't care The laws do not force that. Informed consent before tracking could be implemented other ways, perhaps even more easily. The companies choose to force you to make the decision, rather than making it something you could choose to click or choose to ignore, because forcing that increases the chance that people who do care will accidentally opt-in and people who don't care will get irritated and (as is evident in places in this thread) incorrectly blame the law. The companies make a point of inconveniencing people like you who don't care, so they can weaponise you against those of us who do. The companies are doing this to you, not the law. reply scotty79 2 hours agorootparentCompanies want to track me. I want companies to track me. So what's the source of the friction if not law itself or its direct consequences? I think other parties try to force me to care when I don't by introducing all that friction. There's a talk about DNT. What's the reason no browser has \"Please do track me and do whatever you wish with the data you manage to gather.\"? I think it would be quite popular. So it's probably prevented by the law itself. reply egorfine 8 hours agoparentprev> does not mandate cookie banners, it mandates informed consent. Companies choose to implement that as a banner. Good luck explaining alternative technology to the lawyers and then to the lawyers of the other party in court should the need arise, and then to the judge. While you are technically 100% right, I believe you will have a truly hard time implementing anything other than the cookie banners. reply GardenLetter27 4 hours agoparentprevSuch basic functionality as cookies shouldn't need explicit consent. The consent is you navigated to the webpage, if you don't like it you can use a browser that doesn't set cookies. reply vundercind 3 hours agorootparentTracking people with cookies is the part that requires consent. Setting cookies that aren’t used to track people, doesn’t require consent. The consent is for tracking that happens to use cookies, not for cookies themselves. reply GardenLetter27 3 hours agorootparentBut you can configure all that client-side anyway. You choose what you save on your computer and send in responses, not the server sending you the HTML. The current situation is absurd, the EU just doesn't understand technology. reply TheCoelacanth 2 hours agorootparentTracking is not configurable client-side. Blocking cookies is not sufficient to prevent tracking. Is it the EU that doesn't understand technology or you? reply happymellon 3 hours agorootparentprevMe navigating to a webpage is far from consent. How do I even know that you want to try and farm my personal data until I go there? Perhaps you should put a click through gateway that states that \"proceeding on to this website will sell your personal information to spammy, scummy advertising\". reply GardenLetter27 3 hours agorootparentSetting a cookie isn't farming personal data. You can configure your web browser to only send first-party cookies back and never set others. Or configure a subset of domains. If you're worried about it you should be doing that anyway, since the cookies could be set despite the pop-up (or some websites might ignore the consent pop-up requirement entirely). reply diffeomorphism 4 hours agoprevShort reality check. Browsers support default \"no\" since forever. The websites just refuse to accept it and insist on wasting your time out of spite. So modest proposal: Make these websites pay 575€ million/year for wasting citizens' time or have them accept that \"no\" means \"no\". reply coldpie 20 hours agoprevHop into your uBlock Origin settings and enable the Cookie Banner filters. Fixed. Enable the Annoyances filters too, while you're in there. If you're on iOS, the Kill Sticky bookmarklet does a decent job of cleaning these up without breaking most sites: https://www.smokingonabike.com/2024/01/20/take-back-your-web... reply serial_dev 19 hours agoparentWhile I appreciate your workarounds, the issue is not fixed. Almost everyone is going to keep clicking these stupid banners. It’s not okay, it’s not fixed until the rules are adjusted and we have less tracking and’s less pointless banners. reply seeknotfind 19 hours agorootparentSo many pop-ups these days, for every little thing. Tracking. OS permissions. Browser permissions. Take a survey. Speak to our AI assistant. Do you agree to this. Donate. Sign up. Pay. So many clicks. Used to be viruses, but we have the same result with our complexity. reply Gud 12 hours agorootparentMost of them I don’t get because I don’t use a user hostile operating system. And it’s not really complexity, it’s deliberate choices being made. The internet used to be run by technologists. Now it’s run by project managers and web monkeys reply deprecative 19 hours agorootparentprevIt's not complex. It's simple. It's greed. It's absolutely ridiculous that we as a species put up with all of this nonsense because we have a faulty foundational understanding of what is and should be normal. The brain rot that we've subjected ourselves to is absolutely ludicrous. reply coldpie 19 hours agorootparentprevYou're right, but I can't fix that. What I can do is help HN readers who didn't know about that filter list. Maybe they can help the people they know. reply Gud 12 hours agorootparentI’m happy! I didn’t know about it! Thx reply freeone3000 19 hours agorootparentprevSo remove the consent exception against tracking? Simply make it illegal, banner or no? reply ikekkdcjkfke 11 hours agorootparentDo Not Track header? It's the silver bullet but the stakeholders will argue it is invalid and cannot possibly be used to inform the server that the client wishes not to be tracked reply Earw0rm 11 hours agorootparentSomeone needs to put a stake in those stakeholders. reply account42 6 hours agorootparentThe only way to permanently rid yourself of information vampires. reply serial_dev 13 hours agorootparentprevI don’t know how to fix it, but I know it isn’t fixed now. We have both tracking and cookie banners. reply aziaziazi 16 hours agorootparentprevIt’s not a tracking banner but a cookie banner and some applications have a legitimate need for cookies. They abuse what is legitimate, but you can’t ask regulators to check every site without a national (European?) white liste firewall (shouldn’t give them ideas…). Also, most tracking used to use cookies but if that becomes illegal there’s others ways. reply idle_zealot 15 hours agorootparentCookies necessary to function properly don't require consent. It's only optional ones (ones that benefit the site, not the user). reply creer 14 hours agorootparentAnd these (optional ones) don't require a banner. reply PittleyDunkin 13 hours agorootparentHow do you figure? How does the user opt in or out without an option to opt in or out? reply creer 13 hours agorootparentthe same way that they interact with any other web page? which never need banners? You don't need a banner to opt in or out (or ignore). By this I mean the law is what it is but the implementation is deliberately hurting the visitors in the hope that they will click \"yeah sure whatever\" to be let through to the content. The harm does not come from the legislation but is deliberately anti-user by the web site owner. (Fine, in some cases it might be out of the box and merely lazy.) reply PittleyDunkin 6 hours agorootparentRight but that's not optional cookies functioning at all, that's simply rejecting them altogether. Why not just say that? It's also a much easier sentiment to agree with than these confusing semantics about optional cookies working fine if you just ignore the banner. reply diggan 20 hours agoparentprev> Hop into your uBlock Origin settings and enable the Cookie Banner filters (and enable the Annoyances filters too, while you're in there). Fixed. Except for the pesky sites that somehow disable (or rather \"not enable\") certain things until you've \"answered\" the banner. Can't remember what site I hit that on most recently, but I had to disable uBlock, reload the page, click \"Deny\", and then the video/element worked. reply cluckindan 20 hours agorootparentAnd by hitting that ”deny” button, you have ”consented” to hundreds if not thousands of data brokers around the world processing all your personal data gathered throughout your life across all your devices. They can now freely buy your data from other brokers to enrich their profile of you. Should have unchecked those 973 legitimate interest checkboxes they hid under the ”affiliates” or ”vendors” or ”providers” or whatever. Next, they will resell that profile to political campaigns, advertisers, law enforcement, private dicks and security providers, the military, foreign intelligence services and drug cartel hit squads, to name a few. You could buy it too! Or your friends, enemies, neighbors, colleagues, bosses… reply immibis 19 hours agorootparentIf they're doing that after you clicked Deny, the government can come down hard on them. Sadly, only the government - individuals can't sue companies for GDPR violations. reply cluckindan 19 hours agorootparentLegitimate interest checkboxes are technically not asking for consent, they are considered informational. OneTrust popups are especially inflammatory in this regard. reply robin_reala 12 hours agorootparentLegitimate interest can absolutely be opted-out of: (f) processing is necessary for the purposes of the legitimate interests pursued by the controller or by a third party, except where such interests are overridden by the interests or fundamental rights and freedoms of the data subject which require protection of personal data, in particular where the data subject is a child. https://eur-lex.europa.eu/eli/reg/2016/679/oj#006.001 reply cluckindan 11 hours agorootparentYes, by unchecking the 973 hidden checkboxes. reply immibis 3 hours agorootparentprevThat doesn't say you can opt out. It says sometimes legitimate interests aren't enough. For example, as a hypothetical service provider I have a legitimate interest in tracking your GPS location everywhere you go, because it helps me predict what kind of service my customers like based on where they live and work. However, your right to not be tracked is more important, so I can't use my legitimate interest to justify the tracking in this case. reply tzs 17 hours agorootparentprevArticle 79 [1] gives individuals a right to sue for GDPR violations. [1] https://gdpr-info.eu/art-79-gdpr/ reply aziaziazi 15 hours agorootparentThat’s inspiring. Let’s team up the pissed off individuals and raid-sue one of the obviously abusing. One is nothing, but that could at least make more visibility of the borderline legality. And at best we win and go to the next one. Any law-worker? reply robin_reala 12 hours agorootparentprevOne of my favourite HN threads is Confiks exercising his GDPR rights under the threat of litigation against Spotify: https://news.ycombinator.com/item?id=24764371 reply dietr1ch 19 hours agorootparentprevYeah right, legalized bribery means the elected leaders have priorities other than citizens. reply whazor 18 hours agoparentprevFilters are unreliable, it is better to have the cookies banners automatically filled out via Consent-O-Matic: https://consentomatic.au.dk/ Which works on Chrome, Firefox and iOS. The best part is that you can actually specify your preferences, but globally for all websites. I actually prefer to have the functionality cookies enabled. reply jtbayly 20 hours agoparentprevThe most recent iOS (18) introduced a feature that lets you hide distracting things on the page. (Tap left side of the url field and select “Hide distracting items.” Then just tap what you want to remove and hit done.) I believe that they will stay hidden next time you visit the site. Regardless, I use Hush and another blocker and it has still come in very handy several times already, so I thought others would want to know about it. reply al_borland 20 hours agoparentprevI use Hush on iOS. reply coldpie 20 hours agorootparentOh nice, thanks. I'll give that a shot. reply chatmasta 16 hours agoparentprevSince when do bookmarklets work on iOS? How exactly do I use that? reply xk_id 16 hours agorootparentI just figured it out. You bookmark a normal website. Then you go to your bookmarks and edit the new entry you created; you can then change the URL to the javascript code. Finally, to activate the bookmarklet you have to tap on the address bar and then manually browse to the bookmark entry (it doesn’t work if you just type its name in the address bar and press Go, or if you select it from the suggestions list). reply tonymet 20 hours agoparentprevcontent-based adblocking requires tremendous resources, and no longer works in Chrome, which is the primary browser. reply elashri 20 hours agorootparent> content-based adblocking requires tremendous resources That's not true. On average any overhead in browsing performance introduced by ad blocking is compensated by the elimination of tracking and ads elements of the pages. It saves bandwidth and are better for UX. We can argue about business models but claiming it requires tremendous resources is not true. And content-based ad blocking still works in chrome but in much more limited capability compared to superior browser like Firefox. reply coldpie 20 hours agorootparentprevSo use Firefox. reply tonymet 20 hours agorootparenttell that to the billion internet users who suffer from cookie banners. I'm talking about the network effect. reply coldpie 19 hours agorootparentI do tell them that. I can't help everyone, but I can help some. reply wtetzner 19 hours agorootparentprevI'd think anyone capable of installing an adblocker in Chrome would be able to install Firefox + an adblocker. Obviously it would be better if adblocking wasn't required in the first place. reply barryrandall 4 hours agorootparentprevBut it's not the only browser. The popularity of a particular form of foolishness does not diminish its foolishness. reply ravenstine 20 hours agorootparentprevThose resources are well spent. reply tonymet 20 hours agorootparentmy point is that it's not \"fixed\". The issue plagues 99.9% of internet users. reply wil421 20 hours agorootparentprevSwitched to edge at work and Safari at home/mobile hasn't been a huge issue. Firefox is my secondary. Although I no longer do much web debugging, the switch from edge to chrome wasn't too painful. reply ayaros 19 hours agoprevWhy should websites even be trusted with implementing these banners in the first place? Browser vendors should be responsible for implementing these controls per-origin. Give a little banner pop-up built into Chrome, Firefox, Safari, and the rest. Have it display every time a new site sets a cookie for the first time. Or have it reject every cookie by default, unless I whitelist a site. This would result in a consistent user-experience across the board, and I'd actually be able to trust that I'm not being tracked. Instead, we are trusting the very websites we are blaming on tracking us in the most decietful, malicious ways possible to self-regulate and implement these controls. So now every website gets a shitty banner - on top of all the other annoying in-page banners and popups which are a staple of 2020s web design - that asks us if we want cookies. All these banners look different, are positioned differently on the page, appear at different times after the page is loaded, and function differently. So there's no consistency. And 90% of the time you can't disable all the cookies anyway, because there's that little grayed out toggle control for \"strictly necessary cookies.\" How do I know one of those cookies you consider \"strictly-necessary\" or \"crucial for site functionality\" doesn't connect back to some evil tracking algorithm, the blocking of which was the whole point of this banner debacle in the first place? So we have essentially asked websites to self-regulate the way the US's vitamin/supplement industury does, except its worse because I don't have to click a fucking banner before I take a capsule of what may or may not be vitamin C. So again, why isn't this the responsibility of browser vendors? Am I taking crazy pills? Am I going insane or is the world going insane? /rant reply daveoc64 8 hours agoparentThe law isn't about cookies - it's about obtaining consent to process personal data. You need to ask permission to track people and to do other things with their personal data. Cookies are one method to do that, but any other method (like local storage or storing session state in a URL parameter) also counts. Hence, it is not possible to have a system where a browser can tell a site what kinds of processing the user thinks are OK, as it would be too complicated. reply maxwell 4 hours agorootparentDoesn't the Global Privacy Control header/property solve for this? reply elric 7 hours agoparentprevCouldn't agree more. A browser used to be known as a User Agent [1], but most browsers no longer act in the user's best interest, but rather pander to adtech enablers. It is a sad state of affairs. [1] Shameless plug to my rant on the subject https://blog.melnib.one/2024/05/19/death-of-the-user-agent/ reply shiroiushi 13 hours agoparentprev>Am I going insane or is the world going insane? You haven't been reading the news lately, have you? reply self_awareness 11 hours agorootparent> You haven't been reading the news lately, have you? If you're referring to the US elections, then you might be interested in the fact that not everyone on HN is from US, and not everyone cares. reply smolder 1 hour agorootparentThere is plenty going on in global news apart from US elections to be concerned about. Even apart from the wars, I think we've been acting insane for a few decades at least w.r.t. emissions and pollution. One person has intelligence, many, not so much. reply shiroiushi 11 hours agorootparentprevYou think the wars in Ukraine or the middle east only affect Americans? You think the change of administration in the US isn't going to affect the global economy? reply self_awareness 7 hours agorootparentYou Americans are the last people who will be affected by whatever will happen to Ukraine. Even if Putin will punch through the whole EU up to Spain, you are still safe behind the great ocean, don't worry. Well, maybe he'll take Alaska. ;P reply Earw0rm 11 hours agoparentprevEssentially because the people drafting the laws are ignorant about technology, and have a kind of weird snobbery towards it. They like the shiny, but don't try and engage them in a conversation about what actually makes it tick. Knowing and caring how the plumbing actually works marks you out as a plumber, and sophisticated people don't concern themselves with those kind of details. (Also various corruptions in the drafting process itself, of the sort which tend to arise when you have a mega-nation with competing interests and power blocs, but in this case it's mostly just ignorance.) reply tbrownaw 14 hours agoparentprev> So again, why isn't this the responsibility of browser vendors? It should be, but then legislators don't get to brag about having Done Something and enforcers don't get to brag about punishing Bad People. reply hnbad 9 hours agoparentprev> Why should websites even be trusted with implementing these banners in the first place? Because these \"banners\" are not just about cookies but about data processing and storage. Cookies are just the most obvious and immediate aspect because they're browser-facing and thus consent needs to be obtained early on. But there's nothing special about cookies when it comes to the need to obtain consent (even the ePrivacy directive which singles them out only does so to explain what information needs to be disclosed in order for consent to be possible). > Instead, we are trusting the very websites we are blaming on tracking us in the most decietful, malicious ways possible to self-regulate and implement these controls. Yes. Because they break the law if they don't comply or try to trick you to \"opt in\". > So there's no consistency. Yes. Most consent dialogs are breaking the law by being intentionally non-compliant to mislead visitors into opting in. The ePrivacy directive makes it pretty clear what a compliant dialog would look like. For example if you have a big \"accept all\" CTA you need to have an equally prominent \"reject all and proceed\" CTA. > And 90% of the time you can't disable all the cookies anyway, because there's that little grayed out toggle control for \"strictly necessary cookies.\" If they're strictly necessary, they are required for the site to function. Disabling them would make the site not work. > How do I know one of those cookies you consider \"strictly-necessary\" or \"crucial for site functionality\" doesn't connect back to some evil tracking algorithm, the blocking of which was the whole point of this banner debacle in the first place? Because that would break the law. > So we have essentially asked websites to self-regulate the way the US's vitamin/supplement industury does, except its worse because I don't have to click a fucking banner before I take a capsule of what may or may not be vitamin C. No, we have created a law they have to follow and which they can be fined for violating. We have also established privacy and the right to your personal data as a universal right because everything else in the GDPR and ePrivacy directive follows downhill from that. They're not self-regulating, they're regulated. This is literally how regulation works: they have to follow the law or they risk a fine. The problem right now is some DPAs dragging their heels, most being underfunded and foreign companies getting special \"One Stop Shop\" deals where a ridiculously corrupt DPA (hello Ireland) gets to be the single DPA in charge of handling complaints about them. reply Y_Y 20 hours agoprevIf websites respected Do Not Track then things would be a lot easier. I think we need a right to be listened to. Right now it's enough online to insist on only accepting information in one particular way, like having a noreply email and making people login and submit since shitty web form to respond. Putting your hands over your ears and tape over your mail slot doesn't work in real life, it shouldn't work on the web either. reply chatmasta 16 hours agoparentI agree with you 100%, but to be ideologically consistent, we should admit that websites have as much of a right to ignore Do Not Track as we have to ignore their tracking scripts. reply Terr_ 14 hours agorootparent> but to be ideologically consistent, we should Not if it comes from \"consumer protection\", as opposed to \"your computer, your rules.\" Treading down the latter too far leads into weird realms like \"Hacking? I didn't make your computer do X, I simply sent it messages, it's your fault for not controlling its behavior.\" reply AyyEye 16 hours agorootparentprevWebsites aren't human. reply chatmasta 16 hours agorootparentNeither are browsers. reply PittleyDunkin 13 hours agorootparentprev\"Rights\" are sort of a hollow concept compared to how society ought to function and are just a crappy workaround our society's inability to resolve basic conflict. reply satokausi 8 hours agoprevThis calculation somehow assumes that clicking banners on your free time equals lost money in terms of production. If the average time for toilet visits per day is 12 minutes, we are losing 89.8 million hours a day collectively across Europe, and continuing the same logic in as in the article, with 25€/h this sums to 5% of EU GDP being spent down the drain. Maybe we should focus efforts on a productivity programme to ban bathroom visits? reply hmmm-i-wonder 6 hours agoparentThere are a few assumptions there that make me scratch my head 1. the general 'utility' of informing users about cookies (or giving them the opportunity) and getting 'consent' is completely ignored. 2. The time spent is assumed to be 'working' productive time, not leisure time 3. They ignore the existence of tools that automate these (auto accept/reject) At this point, why not calculate the 'economic costs' of every activity we do outside of work? I imagine reading and watching TV and movies would have massive productivity hits... reply elric 8 hours agoparentprevThat's very much apples and oranges. One is a biological necessity, while the other is a consequence of surveillance capitalism. reply snehk 11 hours agoprevThe whole law should have been forcing sites to not ignore DoNotTrack bworser settings. It's a prime example of the EU being utterly useless because they don't understand the underlying issue and then choose a \"solution\" that's as much in your face as possible but doesn't change anything about the original problem. It's the whole plastic straw thing in digital form. reply randunel 10 hours agoparentNo, it's not a prime example of the EU being utterly useless. It's a prime example of companies engaging in shady practises. This is what all the websites should have done: https://github.blog/news-insights/company-news/no-cookie-for... Quote from the blog post: > Well, EU law requires you to use cookie banners if your website contains cookies that are not required for it to work. reply Kubuxu 9 hours agorootparentIt is quite ironic to get a cookie banner on tat page. reply ben_w 8 hours agorootparentAnd disappointing. Hopefully that doesn't mean my blog, currently hosted on github, is getting them again — those popups were one reason I moved away from Wordpress (well before the latest drama). reply cenamus 10 hours agoparentprevIf only those websites just didn't use cookies when 99% of them don't need them. Easy to display the cookie terror banner and blame the EU while you're using it for \"analytics\". And the majority isn't even compliant, without a big disable button, instead hiding it through 10 different dark patterns in the cookie setting, where every misclick leads to accepting the whole array of spyware. reply Earw0rm 11 hours agoparentprevThis, exactly. And possibly requiring browser vendors to implement Do Not Track in an accessible and user-friendly way. (Those whose business models are reliant on ads might need a firm nudge there.) reply mpeg 10 hours agoparentprevI don't think DNT settings were not considered – they were probably discarded as they hurt user privacy. Fingerprinting tools use the DNT setting as an extra flag to identify the user, so having it set to a non-default means you actually get tracked more, not less. reply bawolff 9 hours agorootparentThe cookie banners still have to be implemented somehow. I dont think there is a difference in the amount of tracking here. reply mpeg 9 hours agorootparentMy point is that if the tracking settings came from the browser whether it was DNT or another one, they would actually be used to track people more effectively by bad actors reply jajko 10 hours agoparentprevIts lazy engineering. Most sites dont need such functionality, but devs are either incompetent to rip it out of libraries they use, are stuck in web design patterns from 20 years ago themselves or its a simple business decision to trade user data. When was the last time you really needed cookies for your business and couldnt get around it with (usually better) tech? Dont blame the system (nonideal but darn good to be in place, compared to literally rest of the world where humans have simply less rights), when its companies failing knowingly basic rules. reply libertine 8 hours agoparentprev> It's a prime example of the EU being utterly useless That's a bold statement to claim that the largest trade block in the world is utterly useless, but I'll bite it. What was the underlying issue they didn't understand? reply anonymousab 4 hours agorootparentThat companies will go with malicious compliance 9999 times out of 10,000. So ensuring compliance would require immense enforcement efforts from the get-go that still haven't really surfaced. reply class4behavior 15 hours agoprevMisleading headline: It's productivity loss caused by non-essential data collection. The EU does not mandate banners, it's the businesses choosing to bully their customers into accepting all tracking and profiling. reply GJim 10 hours agoparentIs the right answer. It's stunning the number of people on HN (a tech news site!) who don't realise there is simply no requirement for \"cookie banners\" UNLESS you are using those cookies to track me or personally identify me (advertisers take a bow)..... In which case you need to ask my explicit permission to do so. And so you should. reply devilmoon 9 hours agoprevSo, about 1 and a half hours per European every year? That's pretty good to avoid gifting my data to adtech shitheads reply ryandrake 20 hours agoprevPeople blame the cookie banners themselves or the legislation that \"made them necessary\" but somehow never seem to blame the web companies for doing the naughty things on their websites that make them subject to the law. The \"cookie banner problem\" exists because it's primarily end users that are shouldering the burden of them, and not the companies. For the company, it's a one time JIRA ticket for a junior software engineer to code up a banner. For everyone else, it's thousands of wasted seconds per year. Make the law hit companies where it hurts: their balance sheets. reply Cthulhu_ 19 hours agoparentThey don't technically even need a banner per se, just respect the user's \"do not track\" browser setting, or put it in a settings screen, or don't use any 3rd party trackers. But a lot of businesses assume they need to ask permission for placing any cookies, which is simply not correct. Local analytics tracking is fine, it's only when the user can be tracked across multiple separate websites that they need explicit permissions. And the user should not be annoyed into making that decision. reply ryandrake 19 hours agorootparentThis seems like the best way to go. Companies should have to respect \"do not track\" and browsers should have to enforce it to the extent that it is technically possible. And \"do not track\" should be per-domain at least. reply NL807 19 hours agorootparentprev>But a lot of businesses assume they need to ask permission for placing any cookies, which is simply not correct. Partly because of laziness, partly because of pessimistic legal compliance. reply AndroTux 19 hours agorootparentprevAnd I blame the EU for not making this the law. Just force everyone to adhere to the setting and be done with it. But no, instead we got this bullshit. reply deprecative 19 hours agorootparentprevBusinesses are stupid. More at 11. Yay capitalism. reply legitster 19 hours agoparentprev> never seem to blame the web companies for doing the naughty things on their websites Part of the problem is that the law didn't seek to distinguish between tame first-party cookies and the really naughty third-party cookies so the burden is equal regardless of how malicious the service is. > For the company, it's a one time JIRA ticket for a junior software engineer to code up a banner. This is actually not true. There's a lot more that goes into a cookie banner than you might realize, and there's now an industry dominated by a small handful of players (Osano vs OneTrust) reply ffsm8 19 hours agorootparentIt did though? You don't need a banner for actually legitimate use (session Cookie, settings, etc) The things they're calling legitimate use just isn't, which is why they need banners. reply legitster 19 hours agorootparentThe elephant in the room is that almost no one wants to host website without at least some sort of website analytics service, which does not fall under legitimate use. So that's why even a small blog is going to have a cookie banner. There are some analytics companies out there that advertise cookieless analytics, but they are either a) too simple for enterprise or b) a much, much worse privacy and compliance risk. reply Earw0rm 11 hours agorootparentThe other elephant is that while everyone has analytics, only one in five companies pays someone with an actual clue how to interpret them to look at them regularly, and only one in five of those companies has a decision making structure that allows them to act meaningfully in response to insights gained. reply ffsm8 18 hours agorootparentprevEven this can be done without a banner, as long as these analytics do not contain any way to link them to individuals/specific users It's admittedly sound advice to create a banner for such a usecase however, as sanitizing all user data from these events is hard to guarantee, and you'd have to do just that to keep it legal reply XCSme 6 hours agorootparentI think it's impossible to be 100% legal. Many times, the user IP, which is considered PII, is stored in various servers/routers log that you have no access to... reply ffsm8 1 hour agorootparentLots of misinformation on the internet wrt this, and I am not a lawyer either. It's especially tragic because Google serves you countless factually incorrect articles if you search for gdpr, which doesn't help with this endless amount of confusion. You might be interested to know that an IP address isn't actually PII, because that's a concept of California privacy regulation and they don't care about them https://techgdpr.com/blog/difference-between-pii-and-persona... It's a different story for gdprs personal data however. Because there are individuals with static IPs - which makes it possible to link these IP addresses to individuals. If you could only omit these, you could technically use ipadresses however you want too. But I admit that that's kinda unrealistic ( • ‿ • ) reply account42 6 hours agorootparentprevWell, too bad. When it comes to processing other people's data you don't get to do whatever you want. Maybe try running a website without analytics before throwing a tantrum. reply ryandrake 2 hours agorootparentYea, companies are so used to laissez faire that when they're finally told \"too bad, so sad\" they throw a tantrum, sue, cry, and eventually comply as maliciously as the possibly can, to show the world how upset they are that they can't simply do whatever they want. reply diggan 19 hours agorootparentprevI keep seeing this misinformation going around, and it has been going around since almost day 1 of when the directive became known. I'm not sure where it's coming from, or who initially thought it worked like that, but judging by the comments in this submission it seems like a ton of people are very misinformed about how these things actually work. reply azinman2 19 hours agorootparentSo how to these things actually work? reply 6510 19 hours agorootparentAnything goes as long as it is useful for the user. Funny example: If they chose not to accept your spying cookies you get to set a cookie to store that choice. reply dkarras 16 hours agorootparentSomeone might think: surely seeing ads targeted for them instead of random ads must be useful / beneficial for the user! reply hnbad 9 hours agorootparentThe first step is data minimization. The second step is informed and revokable consent. Everything else follows from there. Do targeted ads increase the amount of personal data that needs to be stored and processed and the number of entities that will access it? Yes they do. Are they required for the site to serve its stated purpose? No, unless the site is marketing itself as literally a curated stream of targeted ads. So they require informed and revokable consent (i.e. opt-in). Even if you think they're beneficial to the user. It's not about what's beneficial. It's about what's required. That's why most sites try to group services by categories like \"functional\", \"analytics\", etc. If you want to embed a Google Maps view to help people find your physical store, that's beneficial but still requires consent because it shares their data with a third party (i.e. Google) when the browser loads that map. Of course in this case you don't even need a banner, you could just have a placeholder (often called \"content blocker\") instead of the map with the option to consent to loading the map and storing that decision so the user doesn't have to see the placeholder again. reply 6510 5 hours agorootparentI think you could also link to google maps. reply pessimizer 19 hours agorootparentprevIf this is true, you have not helped them to understand in any way. reply nicce 19 hours agorootparentprev> There's a lot more that goes into a cookie banner than you might realize, and there's now an industry dominated by a small handful of players (Osano vs OneTrust) Isn't this industry for those, who want to share their website data automatically with 100+ partners? For others, who don't really share that much data with others, less relevant. reply legitster 19 hours agorootparentIf you are just running a static websites, maybe. But if you are going to run a website with any services on it (video content, eCommerce, member management, etc) you are going to have partners. Establishing a browser session with every single one would be pretty onerous (and honestly much worse for privacy) so a first-party cookie is a pretty good compromise. reply hnbad 9 hours agorootparent> But if you are going to run a website with any services on it (video content, eCommerce, member management, etc) you are going to have partners. No? At least not in the scale that would require these consent services. Services like member management are literally required to operate the website so those can go into the privacy policy (as would e.g. hosting on AWS or using a CDN). The reason these consent services exist is that a lot of websites are just content mills that operate entire on behavioral advertising, whether it's the web version of a newspaper or just SEO blog spam. These often use hundreds of \"partners\" for analytics, ads, targeting, re-targeting, etc. And they desperately try to trick visitors into opting into those. For your run of the mill Wordpress website you can just get a plugin like https://devowl.io/wordpress-real-cookie-banner/ - and in many cases the free version is good enough. reply ryandrake 19 hours agorootparentprev> Part of the problem is that the law didn't seek to distinguish between tame first-party tokens and the really naughty third-party tokens Maybe I'm an outlier, but ideally I don't want them collecting any \"tokens\" without my consent. I don't care if they're first party or third party or birthday party. I should be able to browse web sites in peace without some company collecting anything. If the web site doesn't work exactly the way I'd expect because I did not provide that consent, then that's on me. reply smolder 52 minutes agorootparentThere is basic non-identifying logging that is almost entirely necessary to operate a website. I assume you're okay with that much? reply self_awareness 11 hours agorootparentprevWell that's a thought everyone can identify with, but objectively speaking, they're paying with their energy to build the website, and paying their money to host it. Yet you would want to browse it for no cost at all. How to resolve this? reply hnbad 9 hours agorootparentYou're framing website use as transactional but for financial transactions we literally require informed consent. Also you seem to be operating under the assumption that your personal data is something that can be used as payment. The GDPR literally does not allow that just as human rights don't allow committing yourself to indentured servitude. You can't sign away your rights. If you share personal data you continue to have rights to that data and can revoke your consent. It doesn't stop being your data just because you handed it over, even if you did so willingly. If your business model can't work without exploiting your users' personal data, your business model no longer works and it's your job to find a new business model that does. There are plenty of business models that only worked when indentured servitude was legal (let's not have the debate about prison labor in the US) and I'm sure you would agree that it's fine for those business models to no longer work. It's part of the risk of doing business. Innovate. Disrupt. Or perish. reply BiteCode_dev 19 hours agorootparentprevIt totally does make the distinction. If you use cookies for auth, no need to disclail it. Better, you don't need a banner even of you do track users for anybody with DNT. So you can offer a seamless experience. They just don't care. reply legitster 19 hours agorootparent> you don't need a banner even of you do track users for anybody with DNT This is not true. The specific text of the law requires that websites have to provide details about their cookies, and then document and store user preferences. If you just honored the DNT, you would still be out of compliance. reply Rygian 19 hours agorootparentprevThe cookie banner has nothing to do with first -party vs third-party. The cookie banner is required depending on the purpose of the cookies, not the party setting them. reply jorvi 19 hours agorootparentprev> and there's now an industry dominated by a small handful of players (Osano vs OneTrust) Because of that there are now neat categories of cookies / cookie purposes. Would be nice if we could select one time in our browser “necessary cookies only”, and that would be communicated to every website visited, without the need for a banner. But that’s user friendly and that’s anathema to the modern web :) reply Apreche 19 hours agoparentprevThe problem is the law didn't go far enough. Instead of requiring companies to put up a banner if they did certain tracking activities via cookies the law should have simply outright banned the tracking activities entirely. reply Sakos 12 hours agoparentprevThis is it. This isn't the EU's fault and the post isn't quantifying the benefit of requiring explicit consent in these banners. It's all about efficiency and productivity as if it's all that matters in the world. It doesn't care about users' right to privacy or their right to control their own data. reply tbrownaw 14 hours agoparentprev> somehow never seem to blame the web companies for doing the naughty things on their websites that make them subject to the law. If I do not want a website to set any cookies, the correct course of action is to tell my user-agent to not keep any cookies from it. reply self_awareness 11 hours agorootparentAll you can get this way is that you'll still have temporary cookies, removed after closing the tab, you will still have the banner, but this time the banner will popup each time you'll enter the website, because there's no cookie that will tell the banner that it has already been displayed. I have it like this. But with that, I'm using a banner autoclicker. So the company gets my data, although different each time I enter the website, and I don't see any banners. Win/win? reply drdaeman 19 hours agoparentprevScummy companies won't magically disappear or stop scummy practices. We can and should blame them, but it's pretty much obvious that the legislation (despite good intents!) resulted in a de-facto shitshow that failed to recognize basic social/behavior sciences, technical details, or anything else. It should've been an user-agent centered feature rather than individual website gimmick - that's the only way it could've possibly worked. After that, companies can try to continue doing whatever shit they want to try, but none of their identifiers would be persisted unless user agent allows it. (This does not account for fingerprinting, but that's a whole other story.) Instead, legislators made some weird decisions that failed to account for human and corporate nature (greed), and we ended up with more popups and banners than ever. reply account42 5 hours agorootparent> none of their identifiers would be persisted unless user agent allows it. Wrong. And the GDPR is not just for the web. reply drdaeman 59 minutes agorootparent> Wrong How? I fail to understand why if a browser, configured to not persist anything by default (without a consent) would persist anything. Save for a bug, of course. reply IshKebab 19 hours agoparentprevWell yeah because the \"naughty things\" are totally allowed. Can you blame them for trying to make money legally, and most people would say fairly morally (most people in the real world; not on HN). I think 90% of the blame lies with the EU. They had experience from the cookie law that this would happen. It like... say you would rather people didn't drink alcohol in pubs (because of all the scary violence it leads to). You can 1. Ban alcohol in pubs. 2. Allow alcohol in pubs. 3. Allow alcohol in pubs but only if people recite the lord's prayer before every purchase. 3. is obviously a dumb choice, yet it's the one they chose. reply doublerabbit 19 hours agorootparentD: Drink in pubs till 10pm including no alcohol purchases after 10. That's the law here in Scotland. As annoying as it is, the same law doesn't apply in the rest of the UK but it's reasonable. reply IshKebab 11 hours agorootparentSure, and that's a perfectly reasonable law. There's no \"oh you actually can sell alcohol after 10pm as long as your customers fill in a 5 page form, which is what the EU has caused. reply doublerabbit 8 hours agorootparentIf you're using third party cookies you have to display a \"please consent\" button. If you're not, then all you need is a privacy policy somewhere stating that you use cookies and that they are all first party. That seems fair to me. I like to know if cookies are used or not regardless if they are site or third party only. reply imgabe 19 hours agoparentprevHow can the banners be necessary because of “naughty things” when the banners do absolutely nothing to mitigate those things in any way? All those things are still happening AND people have to waste time clicking useless banners. reply dmix 19 hours agoparentprevThe second cookies are blocked the industry moved to fingerprinting and other methods It's like piracy, there's only so much you can do plugging holes Cookie banners always felt like a feel-good solution. Made worse by inconsistent UIs, differing button texts, long explanations, etc. reply ryandrake 19 hours agorootparent> It's like piracy, there's only so much you can do plugging holes I say keep on plugging. When you make a law and bad actors find loopholes, the solution isn't to throw up your hands and say \"Well, we tried!\" The solution is to continuously refine the law as loopholes are found. Laws should get regular patch releases. reply dmix 19 hours agorootparentYes that seems to standard practice in modern government. Impose a series of ineffective rules that do more harm on the public than helps them, and when it fails just invent new ones without considering why the last one failed. And most importantly don't get rid of the previous rules, just let them stick around a decade after it's been apparent they were ineffective. reply amadeuspagel 17 hours agoparentprevI hope you'll be glad to know that this law already hits companies where it hurts, because many people will close the tab after the slightest annoyance. I hope you're happy that this law already encourages people to stay within a few big websites (where they've already clicked away the cookie banner) and not explore anything new (where they'd have to click away a cookie banner every time). reply sensanaty 10 hours agorootparentOr, crazy idea, don't have invasive user-tracking cookies? Github doesn't even have a cookie banner and they're one of the largest websites on the planet. After seeing websites pull shit like \"legitimate interest\" where they share data with 9 trillion of their \"partners\", they can all rot for all I care. reply amadeuspagel 8 hours agorootparentYeah, you're probably right. If Github, where most users are logged in, can do without a cookie banner, some random blog probably can do as well. reply alpaca128 19 hours agoprevCorrect headline: User-hostile websites waste 575M hours of Europeans' time every year. reply guywithahat 20 hours agoprevThe whole thing is a colossal waste too, it was a law written by people who don't understand tech for special interest groups who don't want to actually make things better. If you don't want a website doing something on your computer, you start with the browser, not the website. reply RejectedChin 19 hours agoparentThat's why they created DoNotTrack initially. Then browsers turned that on by default, ad revenue lowered, and sites/adcompanies decided to ignore it because it was turned on by default. reply wtetzner 19 hours agorootparentMaybe the legislation simply should have required DoNotTrack to be honored. reply tbrownaw 14 hours agorootparentprev1. Do not track was not the browser deciding what to do (that would be a similar shape as Firefox multi-account containers and incognito mode). It was a machine-readable way to tell the site what to do; ie the same incorrect model as the click-through banners we have now, just non-interactive. 2. It was intended to be a way to communicate an actual intent from the user. Once it was set by default, it ceased to be an indicator of user intent. reply roughly 13 hours agorootparent> Once it was set by default, it ceased to be an indicator of user intent. This presumes that it isn’t the default user position. There are three people on the planet who actually want ad tracking, and they’re welcome to go change the setting, but default off was the correct setting. reply calibas 19 hours agoparentprevThe company that dominates the browser market also makes billions off of tracking people. That might be part of the problem. reply tchalla 20 hours agoparentprevFuture headlines after a browser compliance law made - “EU is destroying innovation!” reply guywithahat 18 hours agorootparentYou shouldn't need any kind of law here. Consumers have 100% of the power as it stands in regards to browser tracking. The innovation should be in browsers and plugins, not donottrack flags or compliance laws. reply throwaway346434 19 hours agoparentprevEnforced by companies who are doing shady things with data in the most inconvenient way, rather than listening to DoNotTrack or https://globalprivacycontrol.org/ Because if they can say \"hey look over there, regulation bad\"; they can escape regulation if it is repealed reply GJim 5 hours agoparentprev> it was a law written by people who don't understand tech On the contrary; data protection law was written precisely by those who understand tech and the dangers of companies using it to gather and share your personal data. It's utterly bizarre people get annoyed for being asked explicit, opt-in consent to gather and share personal data on a case by case basis (as the law demands!), rather than get annoyed at the scummy SV adtech surveillance capitalists for seeking to share your data without consent. (Once again, \"cookie banners\" are not required if you aren't tracking me or gathering personal data. Case in point, Hacker News sets cookies and is entirely compliant with no need to ask any permissions from me) reply anonzzzies 4 hours agorootparentMaybe the parent of your comment works in adtech or has shares google? reply hnbad 9 hours agoparentprevIt's not about your computer, it's about your data. Tracking cookies are just one aspect. The GDPR is about consent and ownership of your personal data. It literally defines your rights with regard to your pesonal data. The GDPR and ePrivacy directive aren't just about cookies. They limit what a company can do with your data in general, who can access it and how long. Cookie banners are just a downstream consequence of it and the reason they're bad is that most companies try to be clever and design them maliciously in ways to coerce you into \"opting in\" even though this makes them non-compliant. If DPAs were serious about enforcing the law, every single website not giving at least equal visual weight to the \"refuse all and continue\" button (or hiding it behind other options or using individual \"legitimate interest\" toggle buttons to sneak in their partners despite the existence of the toggle button invalidating the claim of \"legitimate interest\") would be punished with the maximum fine because they have purposefully and maliciously violated the law. reply cameldrv 9 hours agoprevThink about this: Cookie banners are only a small part of how bad UI wastes people's time. Computers could be so much more useful if more care was put into UI for widely used applications and OSes. reply Darkskiez 20 hours agoprevhttps://www.amazingcto.com/cookie-banners-are-not-needed/ reply IshKebab 19 hours agoparentThat is dumb. The EU already knew this was the likely outcome because we already had stupid cookie warnings from the previous law. Regulation exists in the real world, not in some fantasy land where companies do what you want. reply foxglacier 12 hours agoprevAround the time this started, Google was going to penalize sites in its search ranking if they greeted users with an obtrusive popup. I thought that would strongly discourage cookie banners but then suddenly there was an explosion of stupid popups everywhere - newsletter signups, cookie banners, \"special offers\", overlaid ads, etc. I guess Google never did that thing? reply elashri 19 hours agoprevI would like to present my opinion that this amount of time is spent dealing with website malicious compliance with EU rules. And it is in general asking people to get tracked and present them with personalized track or share/sell the data to their partners. All of these does not happen and you don't have to do that if you don't track and collect information about your users. Well there are some genuine websites that needs that but I am talking about the general case. reply Gys 9 hours agoprevThe numbers are much lower I think, at least nowadays. > On average, a user visits about 100 websites per month, totaling 1,200 websites per year. The number of 100 websites per month is pulled out of thin air. Following the links it seems to be based on the number of web PAGES visited DAILY by Americans in 2007. In my anecdata most people are online a lot but mostly in just a few apps and websites. So I guess all numbers in the article should be much much lower. reply ordu 5 hours agoprevI'm not sure I can accept their calculations. For example, I use \"I do not care about cookies\" + \"Cookie AutoDelete\". The first one claims it accepts only necessary cookies, closing or hiding all banners, while the second deletes all cookies when I leave the site. I spend ~0sec on these banners. How many are there people like me? The authors say nothing about this solution and it seems to me that they are not aware of the possibility of the automation. They just assume that each banner costs 5 seconds. Why 5 seconds? It is an eternity, to pick \"reject\" and click on it would take 0.5 seconds or so, wouldn't it? Yeah, I know, there are sites that do not allow just reject all and force you to uncheck a several dozen of checkboxes one by one, but these sites eat much more time than 5 seconds, it is more like 50 seconds. Maybe 5 seconds is an average value across all sites? But how it was calculated? But I agree, that the situation is stupid. It would be better to have a standard API common for all sites, that will allow addons to accept and reject cookies based on the user settings. reply teruakohatu 20 hours agoprevI am about as far from Europe as you can get, and I think my fellow kiwis also spent an inordinate about of time clicking EU mandated cookie banners. Cookies should be enforced in the browser. I think all the major browsers block third party cookies now. Bad actors can use other fingerprints to do tracking. reply GJim 9 hours agoparentYouThe Point No \"cookie banner\" is required UNLESS you are using cookies to track me or personally idetify me.... in which case, you must ask my explicit consent to do so. Blame the parasitic adtech industry wanting trade your personal data. Not the EU for providing you with consumer protection. reply randomdata 8 hours agorootparent> Blame the parasitic adtech industry wanting trade your personal data. Blame them for what? We all understand that personal information is the currency that pays for these services. While we may not love that we have to pay (who does?), we accept it as a fair trade. Until governments get their ass in gear to make paying with more favourable currencies viable, that is going to remain, now just with extra clicks. > Not the EU for providing you with consumer protection. I guess a bandaid is better than nothing, but we'd be better off if the EU would tackle the real issue. Going there would ruffle some real feathers, though, so good luck. But if there is blame to go around, it is on the EU for being too afraid to ruffle them. reply card_zero 4 hours agorootparent> these services What are the services? Leave out sites where you pay for something with money, or banks, or subscription sites. Those often have tracking too, but they could exist without it. What services are the free ones providing? News is a special case, paying for journalism is a problem. Other than that: * Videos and images * Forums and blogs * Databases like IMDB * Random bits of information you want once in your life I'm struck by how the presence of any amount of website design makes all these things worse. It's not only too easy for them to get our data, it's too hard for us to get their data, because the presentation and theatrical impression of being a service is all self-aggrandizing and works to delay and capture users for more tracking and ads. All we really want is servers, not services. If somehow storage and processing was paid for by magical pixies, and available as a utilitarian series of gray bulletin boards with identical design, that would be much better than all the bloated sites that track visitors. It's wrong to portray this as a bargain in which we respect and appreciate some sort of service, and therefore ought to pay for it, because there is no service. They're not being paid for providing something wonderful, they're being paid for having got there first and for being well-known, or promoting themselves. reply kalaksi 7 hours agorootparentprevNo, everyone does not understand that and companies were not transparent with what they do with the data, what data they collected and who they shared it with. Not to mention, if you consider it a payment-like transaction, surely you'll want to give consent instead of blindly trusting random websites? These are some of the problems GDPR solves. reply GJim 7 hours agorootparentprev> we accept it as a fair trade. For it to be a fair trade, you must fairly ask permission for my personal data! That is the very essence of the GDPR! reply randomdata 4 hours agorootparentAnd the problem with the GDPR. In a typical market situation the onus is on the buyer to first offer payment. The beggar on the street saying \"Sir, can you spare some personal information?\" is not how anyone likes to do business. But that's where the GDPR has left things, thinking the problem is with the vendor, when in reality the problem is with the consumer spending beyond their means. Fair enough that the consumer needs protection from themselves, but, when it is a spending problem, why does that not come in the form of legal mandates over how one's wallet is used? Of course, this would be improved in a much better way if, again, governments would actually tackle the real problem. reply Rygian 19 hours agoparentprev\"cookie\" banners are required for any tracking, not just teaching based specifically on technical cookies. Blocking 3rd party cookies has no impact. Everyone and their cousin can technically track you with first party cookies. reply nicce 19 hours agoparentprev> I think all the major browsers block third party cookies now. Bad actors can use other fingerprints to do tracking. One would hope so. Google cancelled the plans https://www.reuters.com/technology/google-scraps-plan-remove... reply taosx 20 hours agoprevThe internet is broken and I don't think it's only in the EU. In the last years I found myself just avoiding using websites I'm not familiar with or confident they're not filled with ads and trackers, I've set-up some aggregators and custom readers to find and get the information I'm interested in. If I open a page that has the cookie banner that blocks me from reading the content or forces me to agree I just close it, it wouldn't have been that important anyway. reply sccomps 19 hours agoprevA lot of those hours might be saved if they mandate a “reject all cookies” button on the cookie banner. reply Cthulhu_ 19 hours agoparentThey do already, and big companies have already been fined for not offering them, which led to some smaller parties adding them. See here [0] for a list, amongst which was Microsoft getting a $65 million fine for not having an easy opt-out on Bing, or $162 million to Google for the same thing. Noncompliance should be reported. [0] https://www.cookieyes.com/blog/cookie-consent-fines/ reply sccomps 5 hours agorootparentmajority of sites don't have a clear \"reject/decline all\" button. I think they deliberately make it complicated. reply what 15 hours agorootparentprevEveryone should just geo block EU visitors instead. reply taosx 14 hours agorootparentI know a lot of people that wouldn't mind that. 1. There are ways to bypass geo-block. 2. People would build alternatives specifically for EU (with few exceptions). 3. They could even offer those alternatives to US, but with better privacy out of the box. reply marcosdumay 3 hours agorootparentOn #1, yeah, you can. But don't expect the site to respect the EU laws. I'm all for the hostile corporation to hostilize themselves into complete inaccessibility too. Let them build their castle, with a moat, and not let anyone near them. But unfortunately, they are still smarter than that. (But anyway, they seem to be getting dumber by the minute, so there's still hope.) reply Sakos 12 hours agorootparentprevYeah, fuck everybody else's privacy. /s Why are you like this? reply yakcyll 10 hours agoprevThe title originally claimed 575M hours spent every year by Europeans on cookie banners. That's 12 seconds on average a day per person. Hardly anything to complain about. reply oasisaimlessly 10 hours agoparentAn alternative interpretation: \"575M hours spent every year by Europeans\" = 850 average human lifespans per year Cookie banners in Europe have an effect vaguely comparable to \"wasting\" 850 human lives per year. reply kalaksi 7 hours agorootparentYou can use similar big scary numbers and words for a lot of much worse and more time consuming things. reply pmg101 10 hours agoprevAm I literally the only person who this doesn't bother? When I go to a site I click all the xs and buttons until I can see content, without any conscious engagement at all really. Sometimes when you go for a walk in the country there are stiles or gates to climb over and that is also fine. I feel like there's some kind of implied belief here that all interactions with the world should be perfectly frictionless which I think may be more of a niche view than is realised? reply sureglymop 10 hours agoparentNo. Same here and I agree with you. I think websites having to disclose what third party cookies they save is worth the small inconvenience. And if they maliciously comply, that hopefully leads to further regulations. reply illiac786 4 hours agoprevTo the companies out there with shitty cookie banners: just stop tracking. No more banner, no annoyed users, better engagement of your end users. reply ApolloFortyNine 4 hours agoprevLots of people here saying the banners are simply unnecessary, but with untargeted advertising paying over 90% less, it simply is necessary for any website with ads. If you got told tomorrow you had to start every conversation with \"are you okay if I remember this\" or you lose 90% of your salary, guess what you'd do. reply Vagantem 19 hours agoprevCan recommend consent-o-matic Chrome extension which automatically selects \"no\" to everything! https://chromewebstore.google.com/detail/consent-o-matic/mdj... reply amadeuspagel 17 hours agoprevThere's a more insidious effect of cookie banners, which is that they make it annoying to follow external links, especially to websites that you haven't visited before. This disadvantages websites built for external links, like HN. reply sensanaty 9 hours agoprevAnd how much time is wasted clicking away mailing list banners, popup ads, trying to parse the real download button on a page, watching through unskippable video ads, trying to decipher which part of a website is the article vs an ad etc? reply diggan 20 hours agoprevCorrect URL: https://legiscope.com/blog/hidden-productivity-drain-cookie-... > This situation calls for an urgent revision of the ePrivacy Directive Shame companies cannot live without tracking cookies, and shame that the blame somehow end up on the regulation, rather than the companies who are the ones who introduce this cookie banner and \"massive productivity loss\". You know the best way of not having to put up cookie banners on your website? Don't store PII in cookies. You know the best way of not having to care about GDPR? Don't store PII. reply vegasbrianc 20 hours agoparentThanks, somehow the URL was truncated :( reply r3trohack3r 20 hours agoparentprev> You know the best way of not having to care about GDPR? Don't store PII. I hear this a lot. As an American that hosts casual personal websites, I can't help but worry that I'm in violation of the GDPR. For example, my router logs connections for debugging. And my NGinx server maintains server logs for debugging. These contain IP addresses. I'm pretty sure those are considered PII under GDPR. And there are a lot of things I think that follow from that, things I haven't bothered to look into or implement. Like whatever policies, disclaimers, notifications, request handling processes, etc. that need to be in place to gather those logs. Whether or not I need a registered agent in the EU to host my website seems to be rather fuzzy too. It seems to come down to how \"sensitive\" the data I store in my logs are? Its also not clear to me whether my home router is subject to GDPR if it receives and logs a packet that was sent to it by an EU citizen, regardless of whether there was a public internet service hosted on that router or not. I mostly choose to not think about these things - but that nagging concern that my entire self-hosted digital presence violates European law does linger. reply etaweb 19 hours agorootparentActually, all the cases you mentioned does not necessitate any consent from European users as long as you don't send these data to any third party. The only thing is, if you plan to store logs over time, it should be anonymized after 25 months. It's not that bad. reply r3trohack3r 19 hours agorootparent> it should be anonymized after 25 months Unless traffic volume causes truncation, turns out I’m not compliant! reply dijit 20 hours agorootparentprevI get it, but you’re not in violation if you never pass those logs to anyone. GDPR is intentionally obfuscated and made scary by people who have an interest in others thinking the regulation is onerous and silly (so that it is eventually changed/removed). The regulation is not very hard to read, I would recommend you do it if you haven’t and boils down to: “don’t pass on (process) information without informed consent, if someone requests that you remove their account you should do so- and also don’t keep records around, and do your best not to let anyone access personal information”, the last one is technically unenforceable, but exists to prevent people leaving open access to data processors and bypassing consent more than anything else. A secondary benefit is that people take access controls a little more seriously by forcing breach disclosures. Even the cookie banners are not needed unless you’re setting cookies for data collection, especially for third-parties! There is a distinct irony in that all the online simplifications (“gdpr for dummies”, “the 7 things to comply with for gdpr”) are misleading and harder to read than the actual text of the regulation. EDIT; I was foolish to post this during the peak time for US people. It feels like the Americans want the GDPR to be perceived as a pain. reply porker 11 hours agorootparentAgree with you. My only addition is to remember to read PECR (https://ico.org.uk/for-organisations/direct-marketing-and-pr...) alongside GDPR. reply chris_pie 19 hours agorootparentprevHuh? You're still a personal data processor. reply dijit 19 hours agorootparentFor a start: Section 18 directly indemnifies the GP because they’re not a commercial entity. Section 49 gives, additionally, specific carve outs for logging even if they were a commercial entity. Consent is needed to pass logging data to third parties or to process it beyond end user functionality. Its easier to just read the regulation: https://eur-lex.europa.eu/eli/reg/2016/679/oj reply BlackFly 8 hours agorootparentprevYou are not EU based, you are not a processor/controller operating in the union, public international law doesn't grant EU law jurisdiction: the GDPR has no direct effect on you. It could be that you are running ads and your ad provider is a processor in the EU and because they cannot handle jurisdictional consent well they attempt to pawn that off onto you in your terms and conditions. EU law has already decided that they cannot turn a blind eye however, if you aren't collecting consent then your processor has to assume that consent isn't given. So yeah, worry about your contracts with third parties that might try to sneak in liability transfers and how your own jurisdiction would deal with that. If your provider is transferring that kind of liability maybe they are trying to also make you liable in the case that their ad installs a virus, so I hope you are already aware of such third party liability transfers in your contracts if your jurisdiction allows for such things. reply GJim 7 hours agorootparentprevOP should not be downvoted for asking genuine questions and concerns. This type of downvoting on HN is getting silly and needs to stop. (And a thanks to those who did respond to OP with the advice he is not in GDPR violation. Frankly, a worrying number of HN readers are clueless about legislation that directly affects them, whether they like it or not.) reply dmafreezone 20 hours agoparentprevYou know the best way to protect your PII from websites? Don’t use the internet. reply Alupis 20 hours agoparentprev> Shame companies cannot live without tracking cookies Most cookies are entirely benign. Many cookies (or something like a cookie) are required for a website to operate normally. The EU law, while good intentioned, was/is too broad and failed to understand the realities of operating websites. This regulation has caused the entire world to be annoyed with useless cookie banners that 99% of people just reflexively click through - just like all of California's Prop65 warnings are ignored today. > Don't store PII. These hard-line statements defy reality. Many websites have legitimate need to store PII. > You know the best way of not having to care about GDPR? Don't be in the EU? Just ignore it. There are no consequences. If you don't have physical presence within the EU - there's little-to-zero the EU can do about it. The EU can think it's laws apply to the world all it wants - but the world disagrees. reply whstl 20 hours agorootparent> Many cookies (or something like a cookie) are required for a website to operate normally \"Essential Cookies\" do not need a consent banner. Case in point: Hacker News is 100% compliant AFAIK and has no banner. > Many websites have legitimate need to store PII. If there is actual legitimate interest or legal requirements, such as collecting an address for delivering a package or performing fraud-prevention, there is also no need for cookie banners. reply Alupis 19 hours agorootparentAnd if that data is \"transferred\" to a 3rd party for that analysis (aka. a REST call into their API) then you are back to requiring these annoying banners. Or, more common for ecommerce, \"transferred\" into an advertising algorithm so the business can gain more similar customers. Oh the horror! reply whstl 19 hours agorootparentWhat does \"for that analysis\" refers to? Fraud prevention? If so, it is legitimate interest to do fraud prevention, so there's no need for a consent banner, first or third-party. Naturally you can't go and use this data for a purpose that has no basis under legitimate interest. Another example: Cloudflare is running DDoS prevention under our noses here at HN, for example, but there's no need to ask for consent, even though Cloudflare is a third-party. Why? Because this is considered legitimate interest. > Or, more common for ecommerce, \"transferred\" into an advertising algorithm so the business can gain more similar customers For this you do need consent, if you transfer PII. If you don't want a banner you can replace it with a simple checkbox during the checkout process. Not only less hostile, but also more transparent than a banner. reply Alupis 19 hours agorootparent> What does \"for that analysis\" To understand how customer's shop on my website. Heatmaps, view port, device type, screen resolution, frequency of browsing, where their mouse hovers the most, page dwell time, etc. These are impossible tasks for most website operators to do themselves. > For this you do need consent, if you transfer PII. If you don't want a banner you can replace it with a simple checkbox during the checkout process. Not only less hostile, but also more transparent than a banner. Or... you can just ignore the EU because the EU doesn't matter. You know, like I originally asserted? > If you don't want a banner you can replace it with a simple checkbox during the checkout process This is the sort of mindset that crafted this poorly designed regulation in the first place. Most website operators are not going to willingly add a barrier at the final step of a conversion. If you are going to use my property and resources - it's my rules or don't come. Pretty simple... reply whstl 18 hours agorootparentYou don't need banners just because something is third-party. If there is no PII and/or legitimate consent, you don't need a banner. There are GDPR compliant analytics platforms, fraud prevention, third-party payment gateways, for example. They don't need banners. As for the rest, it's quite inflammatory and I don't know how it relates to my comment, so I'll refrain from answering. reply what 15 hours agorootparentYou don’t need banners period. The EU doesn’t get to tell people how to operate their web properties. If EU citizens don’t like it, they can stop visiting those properties. Even simpler. reply tbrownaw 14 hours agorootparent> The EU doesn’t get to tell people how to operate their web properties. Well, except for all the people in the eu. I'm pretty sure the eu does get to tell those people to do or not do things, online or not. reply immibis 2 hours agorootparentprev> Heatmaps, view port, device type, screen resolution, frequency of browsing, where their mouse hovers the most, page dwell time, etc. Sounds like information that is not personally identifying - if handled well. reply diggan 20 hours agorootparentprev> Most cookies are entirely benign. Many cookies (or something like a cookie) are required for a website to operate normally. The EU law was/is too broad - and has caused the entire world to be annoyed with useless cookie banners. Give reading the actual implementations a try. You'll quickly notice they actually thought of this. I wouldn't say it's \"expertly crafted\" by any means, but the banner is for a specific \"class\" of cookies, not just \"abc=123\" as you seem to think. reply Alupis 20 hours agorootparentYou might try to argue many types of cookies are non-essential - but that would be because you lack experience in this domain. Website operators have a right to study how people use their website just the same as a brick-and-mortar operator has the right to study how customers navigate their store isles. The EU law compels a popup for these types of services/scripts and 99% of people just click through them because they are noise. Lastly - the EU and it's laws don't matter. What are they going to do about non-compliant foreign websites? Nothing. reply ryandrake 19 hours agorootparent> Website operators have a right to study how people use their website just the same as a brick-and-mortar operator has the right to study how customers navigate their store isles. I think reasonable people can disagree about this, and if enough reasonable people think that a web site operator should not have that \"right\" then they should be able to pass legislation to curtail it. As a user, I say I should have the right to control what data is collected by what company, and what they should be allowed to do with it. I should be empowered to decide what kind of data is \"essential\" for a company to collect about me, not the company. Reasonable people could disagree with me, too. These are not laws of physics. reply Alupis 19 hours agorootparentWhy is this different than a brick-and-mortar to you? Do people feel they are \"private\" when shopping in a retail store with AI cameras tracking patterns and behavior, names and purchases collected at checkout, loyalty \"discount\" cards to get even more data, etc? Even without your name, they can identify you by recognition alone, aka. an anonymized cookie used to track a specific user's behavior. Somehow people think visiting someone else's private website grants them privileges to be entirely anonymous - it does not anymore so than shopping in a physical retail store. If we keep going down this path, websites will require a full ToS/EULA just to access the site... reply ryandrake 19 hours agorootparentFor the record, I don't think brick and mortar stores should have an automatic right to surveil and study the personal information of in-person customers without their consent but I agree that ship has largely sailed. reply what 15 hours agorootparentprevYou have a right to not visit websites that you think are collecting to much information about you. That’s about it. reply BlackFly 8 hours agorootparentprev> how customer",
    "originSummary": [
      "Europeans collectively spend 575 million hours each year interacting with cookie consent banners, a requirement of the EU Directive 2002/58, which aims to protect user privacy.- The economic impact of this time spent is substantial, costing €14.375 billion annually, equivalent to 0.10% of the EU's GDP, and represents a productivity loss akin to 287,500 full-time jobs.- There is a call for urgent revision of the directive to alleviate economic and productivity burdens, particularly affecting small and medium-sized enterprises."
    ],
    "commentSummary": [
      "The European \"cookie law\" requires informed consent for tracking, but does not specifically mandate the use of cookie banners; companies opt for banners to comply.",
      "A common issue is companies incorrectly implementing consent by setting tracking cookies by default and providing banners without a clear reject option, which is non-compliant.",
      "The law's intent is to protect consumer rights, but companies often engage in \"malicious compliance\" to frustrate users, suggesting stricter enforcement and potential browser-based consent settings as solutions."
    ],
    "points": 319,
    "commentCount": 352,
    "retryCount": 0,
    "time": 1731622989
  },
  {
    "id": 42143269,
    "title": "Relativty: An open-source VR headset for $200",
    "originLink": "https://www.relativty.com/",
    "originBody": "Relativty an open-source VR headset I’m Maxim Perumal (Maxim xyz) and when my best friend Gabriel Combe and I were 15 years old we built our own VR headset because we couldn't afford to buy one. It became Relativty, one of the most popular open-source VR headset. Make it for $200 Relativty is not a consumer product. We made Relativty in my bedroom with a soldering iron and a 3D printer and we expect you to do the same: build it yourself. Software Full Steam VR support We started Relativty because after watching Sword Art Online we wanted to make our own VR games. Thus Relativty supports SteamVR games and can be modified to add support for any DIY or off-the-shelf VR device. Experimental positional-scaling The room-scaling AI can be used with any camera, it tracks your body based on video input. Precision and freedom of movement are still very far from dedicated sensors, however, we believe that the model can be trained and improved by orders of magnitude. Motherboard We designed an affordable motherboard that runs the Relativty Firmware, it is based on the Atmel SAM3X8E ARM Cortex-M3 processor and uses an MPU-6050 as it’s IMU. The naked PCB and the components to solder on, cost in total about 25 dollars. Firmware & Display Relativty Firmware runs on any ARM sam The Relativty firmware, which powers the actual physical device, is based on ArduinoCore-sam. So in addition to the Relativty Motherboard, it is compatible with Arduino Due or any other board equipped with a processor that supports the ArduinoCore. 120FPS at 2K or any display you want Relativty headset runs a 2K dual-display at 120FPS. However, because of the open nature of Relativty you can use any display as long as your computer is able to handle it. From more affordable 90Hz 1080p screen to 4K panels. Getting started Relativty is entirely Open-source; we made it to be a testing ground for hackers and developer rather than a product. You can find the source code as well as the source for the electronics, hardware, and mechanical parts on our Github. The guide on how to build Relativty is available on our Github. You can download the latest release here. How to build Download Join our Discord server To talk to other VR enthusiast, ask for help building the headset or provide experience to others! Join server We are hiring We are starting a new company called Unai, building a new standalone VR headset from the ground-up and, alongside, the OS and Virtual World powering it. Our end goal is to solve immersiveness. This poses challenges in fields ranging from optics, computer vision, electrical design, low-level OS, game engine and many more. We are currently hiring people willing to help solve those challenges. If you are one of those people, please reach out at maxim@unai.one. Please visit unai.one to learn more and jobs see available positions.with love by Maxim Perumal (Maxim xyz), maxim@unai.one Copyright © 2020 Relativty, Maxim Perumal, Gabriel Combe. All rights reserved.",
    "commentLink": "https://news.ycombinator.com/item?id=42143269",
    "commentBody": "Relativty: An open-source VR headset for $200 (relativty.com)295 points by LorenDB 17 hours agohidepastfavorite108 comments jsheard 16 hours agoFrom the GitHub this is only capable of 3DoF tracking, which puts it in the same category as the defunct Oculus Go headset, or Google Cardboard. 6DoF is really the bare minimum to qualify as proper VR nowadays. For the uninitiated 3DoF means the headset only tracks the rotation of your head, not your heads absolute position as you move around, while 6DoF tracking does both. 6DoF is also much harder to implement. reply RF_Savage 12 hours agoparentHadesVR is the 6DoF capable low cost open source VR headset project with an active community. https://github.com/HadesVR/HadesVR It is derived from Relativty and the communities overlap. reply chii 16 hours agoparentprev3dof is sufficient, imho, for a large number of VR use cases, because most people don't have a full room dedicated to it, but is at a desk. Sitdown VR setups would be more common, if the equipment was cheaper. reply LorenDB 16 hours agorootparentHaving experienced both 6DOF and 3DOF on my Quest 3, I can confidently say that 6DOF is leagues ahead even if you are sitting in a chair. Unless you are watching a 180° stereoscopic video, you'll want to look around to get the full experience, and even the small translation movements that result when you turn around can make the experience nauseating. Besides, VR is already cheap. A new Quest 3S is just $300 and can do pretty much all of what the $3500 Vision Pro can do (just worse); if you just want VR games you can get used 6DOF-capable PCVR or PSVR headsets on eBay for closer to $100. reply jachee 14 hours agorootparent> Quest3S … pretty much all of what the … VisionPro can do It can’t do that “protecting your privacy” thing. And that’s a dealbreaker for many, many people. reply anonzzzies 7 hours agorootparent> It can’t do that “protecting your privacy” thing Besides 'it's Meta' ; what is it doing with my privacy? I mean actually proven things, not 'probably it is'. (I am not saying it isn't, but I haven't heard anything in this regard, so it would be interesting to know) reply PaulHoule 5 hours agorootparentAs a dev I see Meta made many decisions to respect privacy that constrain the kind of app I make although I've heard these will be somewhat relaxed. I'd like to place a picture with a QR code in it, have somebody scan the code, then have the option of jumping into a world. Apps can't access the cameras so you can't write a QR scanner. The Quest has a decent web browser but you can't access the cameras and make a web based QR scanner. Without access to the cameras apps cannot at all understand the environment and enable you to interact with it. AR apps now have a special module that identifies a physical volume inside your space on a session by session but that's a pale shadow of the SLAM tracking of the Microsoft Hololens and Apple Vision that let you stick a \"hologram\" into the corner of your office and have it stay there. Quest 3 devs need more access to make more interesting apps. reply wlesieutre 3 hours agorootparentVision Pro doesn't let you access the cameras either, being able to stick an app in the corner of your office is handled by the OS. I'd rather not hand out camera access, the problem that needs fixing is the \"session by session\" part where Meta's OS doesn't maintain permanent app-volumes. reply alias_neo 9 hours agorootparentprevExactly this. I'd like to go for something like the 3S but anything Meta is a hard no from me. I deleted my Oculus account when they took over, and yet somehow I still get Oculus emails from Meta. reply snvzz 12 hours agorootparentprev>And that’s a dealbreaker for many, many people. Yup. The sole reason I haven't bought any of these meta headsets. They come with strings attached. Or more like, they're fetters and chains. reply TiredOfLife 8 hours agorootparentprevQuest is “protecting your privacy” the same amount as VisionPro does. reply 1oooqooq 6 hours agorootparentwhy i don't have either. this line of argument don't help the discussion. both companies report millions from selling your information, so assume they are always amassing loads of it, to sell when the price is convenient for them. reply criddell 6 hours agorootparent> both companies report millions from selling your information Where can I buy it? reply exe34 5 hours agorootparentThis might help start looking: https://www.forbes.com/sites/metabrown/2015/09/30/when-and-w... reply criddell 5 hours agorootparentDoesn’t help at all. I’m looking to buy data collected and sold by Meta and Apple. reply 1oooqooq 3 hours agorootparentyou're either too poor or not well connected. the \"accessible\" way is to enter a real time \"header\" biding agreement. but chances are you don't know about it either and is just making noise. reply criddell 2 hours agorootparentOkay, well then let me ask you a question that should be easier to answer: where does Apple report that they make millions from selling user data? reply exe34 5 hours agorootparentprevI doubt they sell it to individuals. Data brokers is the easiest way. You could always write to them directly and ask. reply Mindwipe 3 hours agorootparentYou absolutely can't because neither company does it. reply bornfreddy 3 hours agorootparentThis is just a profit calculation though. Do they earn more by keeping and mining this information or by selling it, or both? For now they might not be selling it (I don't know), but that can change before you say \"but GDPR...\". reply Tarks 14 hours agorootparentprevAlso have to hard disagree. I remember going from the Oculus DevKit2 to the Vive, seeing the change in people we'd invite over for \"I'm done trying to convince you with words just Come over and try out VR\" evenings. 6DOF, even when sitting, is a significant difference. Your brain immediately feels far more at home with good 6DOF. Fun fact : one week I spent about 5-6 hours every evening playing Elite Dangerous in VR. Mining asteroids while listening to lofi cyberpunk and pretending that mining was my whole life, it was great. Until my partner would bop me on the back of the head ^_^ reply atrus 16 hours agorootparentprevI very much disagree, your view in vr tracking your head as it does small movements in xyz significantly increases immersion, and more importantly, significantly decreases motion sickness and fatigue. reply dmarcos 14 hours agorootparentprev6DOf not only necessary for room scale. Lack of parallax of 3DOF a common cause of discomfort for many. I’ve been in the space for a decade and given hundreds of demos to people. reply a2128 7 hours agorootparentprev3DoF without tracked controllers is not VR IMO, it's just a head mounted display. It's not sufficient for any VR use case other than like watching a movie. You won't be able to play any modern VR games. Maybe you'd be able to play old Google Cardboard or Oculus Gear games since those were made with no controllers in mind. reply SirMaster 3 hours agorootparentAm I the only one who just wants a great super high res OLED headset just for watching movies? I want super high res so the quality is comparable to a TV or projector setup, and I want OLED because of contrast performance for dark scenes. reply int_19h 11 minutes agorootparentYou're not the only one, and there's a separate market for such things, but it's mostly Chinese brands. I've had pretty good experience with https://goovis.net/products/g3max specifically for movie watching. It has 2560x1440 (per eye) OLED, so not quite 4K; I do hope to see a proper 4K headset like that some day for a reasonable price. reply freeopinion 5 hours agorootparentprevSo, a $200 display? With how many pixels? Is it better than a 29\" curved monitor? reply zombiwoof 14 hours agorootparentprevThey also said their mission is for creators. Seems to me 3D is fine for that reply andybak 8 hours agorootparentI don't understand what the word \"creator\" means in this context or how that's relevant to 3DOF vs 6DOF reply koolala 13 hours agorootparentprevClose one eye and those sound like TV use cases. reply makomk 2 hours agoparentprevHomebrew 6DoF tracking is definitely possible. I've had a janky and undocumented setup for a while that uses a standard smartphone as a display, paper and cardboard AprilTag markers with a computer and webcam for outside-in tracking, and homebuilt controllers. It requires a lot of improvement and is very sensitive to lighting conditions though. reply aziaziazi 16 hours agoparentprevNever understood why my GCardboard couldn’t do that, my phone sure has a bunch of accelerometers and giros. Sure higher and other techs can track better but isn’t it enough for a basic sense of mouvement? For most of the applications I won’t more than a few meter anyway. Probably some have tried and I’ll be curious to know what prevent it. reply grumbel 7 minutes agorootparentSee \"Pure IMU-based Positional Tracking is a No-go\"[1], a position from an IMU starts to drift in a fraction of a second and than shoots off into infinity. Without an absolute reference there is nothing you can do to stop it and the errors will accumulate. It's not just a little bad, it's completely unusable. A further complication is that the IMUs you find in phones, especially back when all this was new, weren't very good. So even a plain 3DoF experience would suffer from slow response and yaw-drift from lack of magnetometer, which is why GearVR had an extra IMU in the headset and why Daydream required new certified phones with better IMUs. 3DoF can still be good enough for VR180/360 movies, which don't allow movement to begin with. But as far as gaming is concerned, you really do need 6DoF, as even a bit of leaning forward in a chair will make it instantly obvious that the headset motion and the headset visuals are out of sync. [1] https://www.youtube.com/watch?v=_q_8d0E3tDk reply jsheard 16 hours agorootparentprevThe problem with accelerometers and gyros is they drift badly if you try to derive absolute positioning from them alone. They need to be fused with some other form of tracking to anchor them in absolute space, which in the case of the Quest and Vision Pro is done with multiple outward-facing cameras fed into a SLAM algorithm. Maybe Cardboard could have attempted to use the phones camera for SLAM, but a single lens would only have got them so far. Dedicated VR headsets have at least four cameras pointing in different directions, which are sometimes augmented by IR projectors and/or LiDAR. reply needle0 10 hours agorootparentTo be pedantic, two cameras were enough for the headset to track itself (eg. Lenovo Mirage Solo). The reason that headsets nowadays have 4 cameras is for it to also track the hand controllers that are being held by the user and being flung around nearby...which this also seems to lack. reply bee_rider 15 hours agorootparentprevMost phones have a couple cameras nowadays… I think the Pro iPhones (some, at least) even have some sort of lidar system that seems like it ought to be helpful? Anyway, it is a shame, I guess the market must not have been there. reply Joel_Mckay 14 hours agorootparentMost phones use a rolling shutter, so doing machine vision for low-latency motion/pose is difficult or unfeasible on a mobile cpu. Best regards =3 reply ben_w 8 hours agorootparentSurely use the accelerometers for real-time/low latency, only use the cameras to correct for drift? Not that I've tried for VR, but I did already create AR demos 5-6 years ago. reply Joel_Mckay 44 minutes agorootparentIn general VR is easier for sure, as in AR the latency issues manifest quicker. The sensor fusion of IMUs is usually not stable very long, but it does mitigate a few of the very noticeable problems with camera trackers. Still, it always boils down to the power budget... having a 2.6 kg head mounted unit is ludicrous. lol =) reply bigiain 13 hours agorootparentprevLots of quadcopter flight controllers use 9DOF IMUs , with 3 gyros, 3 accelerometers, and 3 compasses. The absolute directional data from the compasses solves (at least most of) the angular/gyro drift. The translational drift is harder for VR/AR headsets indoors. Drones can do sensor fusion with GPS and the accelerometers to solve translational drift from the accelerometers (or, for FPV drones, they just let the meatware compensate). reply RF_Savage 12 hours agorootparentThe \"9DoF\" in IMU datasheets is a marketing term, they just add up all the sensor dimensions they have. Some IMU modules talk about \"10DoF\" , because they have added a barometer to it. So even a good \"9DoF\" IMU is not usable for 6DoF VR, as it still drifts way too much. Sadly the magnetometer in the IMUs suffers from all the magnetic fields generated by the rest of the electronics around it. This might also be one of the reasons why 9DoF IMUs are increasingly rare on the market. reply Joel_Mckay 14 hours agorootparentprevLADAR/3D-cameras or LIDAR are both expensive parts with limited capabilities. Note rapid pose-recovery using cameras and or SLAM has been tried, but again people end up pooching the CPU/power budget.. and rolling camera shutters are useless... difficult to deploy as a wearable tech. A few years back, we did design a set of 24Hz withI think \"addicted computers/the internet/phones\" would be a more apt phrasing I mean yeah, I totally agree with \"addicted to computers/the internet/phones\" as a problem facing a lot of people and should probably be the proper term instead of \"internet native\". They were born in meatspace not in VR. Somoene who spends the majority of their waking hours in Call of Duty or World of Warcraft to the detriment of their real lives aren't CoD or WoW natives; they have a videogame addiction. reply plagiarist 4 hours agoparentprevI would like to try the Bigscreen but I am far too much of a curmudgeon to send them a scan of my face. reply Zamiel_Snawley 16 hours agoprevEdit: I now realize that it is actually relativty, without the second ‘I’ The relativity.com domain could not have been cheap, even if leased. I’m surprised they are making a new brand, “Unai”/unison.co, instead of continuing with Relativity. reply lastdong 10 hours agoprevThis project is an awesome way to dive into building your very own VR headset! While it's not the cheapest option out there, it's definitely not too pricey, and the hands-on learning experience you'll gain makes it totally worth it. I can totally see high school or college classes, as well as hardware clubs, taking this on as a fun side project that will really engage students. Any other websites with open source hardware projects out there? reply interstice 15 hours agoprevClicking through the parts list, somewhat wildlyHaving no way to look away is visual prison to me. This makes the advertisers happy. reply accrual 15 hours agoprevDefeat the Index in some metric and get support from VRChat and I'm in 8) reply a2128 7 hours agoparentWell it has no controllers nor any controller tracking hardware, so you won't be playing much VRChat with it... reply bastloing 5 hours agoprevThese things make me sick. Can't wait for that to get solved. reply DarkmSparks 16 hours agoprevprobably better buying a psvr for $150... Great quality headset with solid linux support. love to see more quest 3s hacking tho ($270) reply PaulHoule 6 hours agoprev\"We started Relativty because after watching Sword Art Online we wanted to make our own VR games.\" reply jckahn 16 hours agoprevThe name of this product is infuriating. reply pteraspidomorph 16 hours agoparentOh boy, I didn't even notice until I read your comment! reply Kototama 8 hours agoparentprevIt's even more confusing for non native speakers. reply garyfirestorm 16 hours agoparentprevNvm I see it now Why is that? I don’t see any problems with this particular name. Valve index and oculus rift aren’t that amazing either. reply LorenDB 16 hours agorootparentThe name is Relativty, which is one 'i' off from the normal spelling of relativity. reply esafak 16 hours agoparentprevIt's more searchable? reply internet101010 16 hours agorootparentNo, it will just get auto-corrected. Removing a letter from a word as a brand name is dumb; it is no different than parents naming their kid a normal name with stupid spelling and thinking they are original/creative. reply datashaman 15 hours agorootparentPut quotes around brand names. https://www.google.com/search?q=%22Relativty%22 reply alluro2 14 hours agoparentprev\"RelativityVR\" or similar would arguably be equally good for search, clearer purpose/context from the get-go, and much easier to communicate, vs \" 'Relativity', but without second 'I' \" ... reply andrewmcwatters 16 hours agoprev [–] It's too expensive. The Meta Quest 3S is $300. reply nicce 16 hours agoparent [–] Is it possible to use it these days without Facebook account. reply TiredOfLife 8 hours agorootparentHas been possible for years. reply paxys 16 hours agorootparentprevCan you use any device these days without creating an online account? reply nicce 16 hours agorootparentMy monitor does not require online account yet - I don’t see why my VR classes should either. reply paxys 15 hours agorootparentQuest headsets aren't monitors and don't get their input from a computer. They are standalone devices with a consumer OS and app store, much like your PC or smartphone. reply cesarb 1 hour agorootparent> > My monitor does not require online account yet - I don’t see why my VR classes should either. > They are standalone devices with a consumer OS and app store, much like your PC or smartphone. My PC does not require online account yet - I don't see why my VR glasses should either. reply nicce 15 hours agorootparentprevI wonder how it is then mentioned in this context. It is not comparable at all. reply procone 15 hours agorootparentprev [–] Yes, you use a meta account that has no ties to Facebook. Mine is under an alias with absolutely no connection to any social feeds or network. Unless you count Meta Horizon Worlds which is kind of a joke. reply tonyoconnell 1 hour agorootparent [–] Do you leave your phone outside when you use it? Do you use the same wifi? I would find it hard to believe that Meta can't predict who you are. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Relativty is an open-source virtual reality (VR) headset developed by teenagers Maxim Perumal and Gabriel Combe, designed as a DIY project rather than a consumer product, costing approximately $200.- The headset supports SteamVR games and features experimental positional-scaling using any camera, with a motherboard based on the Atmel SAM3X8E ARM Cortex-M3 processor.- The creators are launching a new company, Unai, to develop a standalone VR headset, and they are currently hiring, with more information available on their website."
    ],
    "commentSummary": [
      "Relativty is a $200 open-source VR headset with 3DoF (three degrees of freedom) tracking, similar to older models like Oculus Go, but lacks the more immersive 6DoF (six degrees of freedom) tracking.- HadesVR is a 6DoF open-source project developed from Relativty, offering enhanced immersion and reduced motion sickness compared to 3DoF systems.- Privacy concerns with Meta's Quest headsets are prompting some users to consider alternatives, and there is potential for educational projects using Relativty despite its limitations."
    ],
    "points": 295,
    "commentCount": 108,
    "retryCount": 0,
    "time": 1731635729
  },
  {
    "id": 42143265,
    "title": "New Apple security feature reboots iPhones after 3 days, researchers confirm",
    "originLink": "https://techcrunch.com/2024/11/14/new-apple-security-feature-reboots-iphones-after-3-days-researchers-confirm/",
    "originBody": "Apple’s new iPhone software comes with a novel security feature that reboots the phone if it’s not unlocked for 72 hours, according to security researchers. Last week, 404 Media reported that law enforcement officers and forensic experts were concerned that some iPhones were rebooting themselves under mysterious circumstances, which made it harder for them to get access to the devices and extract data. Citing security researchers, 404 Media later reported that iOS 18 had a new “inactivity reboot” feature that forced the devices to restart. Now we know exactly how long it takes for this feature to kick in. On Wednesday, Jiska Classen, a researcher at the Hasso Plattner Institute and one of the first security experts to spot this new feature, published a video demonstrating the “inactivity reboot” feature. The video shows that an iPhone left alone without being unlocked reboots itself after 72 hours. See the latest iOS inactivity reboot in action! iOS 18 comes with improved anti-theft measures. Three days w/o unlock, the iPhone will reboot, preventing thieves from getting your data. (1/4) pic.twitter.com/H24Tfo1cSr — Jiska (@naehrdine) November 13, 2024 Magnet Forensics, a company that provides digital forensic products including the iPhone and Android data extraction tool Graykey, also confirmed that the timer for the feature is 72 hours. “Inactivity reboot” effectively puts iPhones in a more secure state by locking the user’s encryption keys in the iPhone’s secure enclave chip. “Even if thieves leave your iPhone powered on for a long time, they won’t be able to unlock it with cheaper, outdated forensic tooling,” Classen wrote on X. “While inactivity reboot makes it more challenging for law enforcement to get data from devices of criminals, this won’t lock them out completely. Three days is still plenty of time when coordinating steps with professional analysts.” Contact Us Do you work for a mobile forensics company or law enforcement? We’d love to hear from you. From a non-work device, you can contact Lorenzo Franceschi-Bicchierai securely on Signal at +1 917 257 1382, or via Telegram and Keybase @lorenzofb, or email. You also can contact TechCrunch via SecureDrop. iPhones have two different states that can affect the ability of law enforcement, forensic experts, or hackers, to unlock them by brute-forcing the user’s passcode, or extracting data by exploiting security flaws in the iPhone software. These two states are “Before First Unlock,” or BFU, and “After First Unlock,” or AFU. When the iPhone is in BFU state, the user’s data on their iPhone is fully encrypted and near-impossible to access, unless the person trying to get in knows the user’s passcode. In AFU state, on the other hand, certain data is unencrypted and may be easier to extract by some device forensic tools — even if the phone is locked. An iPhone security researcher who goes by Tihmstar told TechCrunch that the iPhones in those two states are also referred to as “hot” or “cold” devices. Tihmstar said that many forensic companies focus on “hot” devices in an AFU state, because at some point the user entered their correct passcode, which is stored in the memory of the iPhone’s secure enclave. By contrast, “cold” devices are far more difficult to compromise because their memory cannot be easily extracted once the phone restarts. For years, Apple has added new security features that law enforcement have opposed and spoken out against, arguing that they are making their job harder. In 2016, the FBI took Apple to court in an effort to force the company to build a backdoor to unlock the iPhone of a mass-shooter. Eventually, the Australian startup Azimuth Security helped the FBI hack into the phone. Apple did not respond to a request for comment. Topics Apple, cybersecurity, forensics, iOS, ios 18, iPhone, law enforcement, privacy, Security Most Popular Musk’s amended lawsuit against OpenAI names Microsoft as defendant Kyle Wiggers Bluesky says 1 million people signed up for the platform in last 24 hours Ivan Mehta ‘Hawk Tuah’ girl launches Pookie Tools, an AI-powered dating advice app, and it’s fine? Lauren Forristal ChatGPT can now read some of your Mac’s desktop apps Maxwell Zeff New Apple security feature reboots iPhones after 3 days, researchers confirm Lorenzo Franceschi-Bicchierai AI pioneer François Chollet leaves Google Kyle Wiggers Amazon takes on Temu and Shein with discount ‘Amazon Haul’ store Amanda Silberling Lorenzo Franceschi-Bicchierai Senior Reporter, Cybersecurity @lorenzofb Lorenzo Franceschi-Bicchierai is a Senior Writer at TechCrunch, where he covers hacking, cybersecurity, surveillance, and privacy. You can contact Lorenzo securely on Signal at +1 917 257 1382, on Keybase/Telegram @lorenzofb, or via email at lorenzo@techcrunch.com. View Bio Newsletters See More Subscribe for the industry’s biggest tech news TechCrunch Daily News Every weekday and Sunday, you can get the best of TechCrunch’s coverage. Add TechCrunch Daily News to your subscription choices TechCrunch AI TechCrunch's AI experts cover the latest news in the fast-moving field. Add TechCrunch AI to your subscription choices TechCrunch Space Every Monday, gets you up to speed on the latest advances in aerospace. Add TechCrunch Space to your subscription choices Startups Weekly Startups are the core of TechCrunch, so get our best coverage delivered weekly. Add Startups Weekly to your subscription choices No newsletters selected. Subscribe By submitting your email, you agree to our Terms and Privacy Notice. Related Security FBI confirms China-backed hackers breached US telecom giants to steal wiretap data Carly Page 1 day ago Apps Apple now lets app developers apply to be featured on the App Store Sarah Perez 2 days ago In Brief Apple reportedly releasing a wall-mounted smart home tablet in 2025 — and yes, it does AI Maxwell Zeff 3 days ago Latest in Security See More Security New Apple security feature reboots iPhones after 3 days, researchers confirm Lorenzo Franceschi-Bicchierai 1 day ago Security Bitsight buys dark web security specialist Cybersixgill for $115M Ingrid Lunden 1 day ago Security FBI confirms China-backed hackers breached US telecom giants to steal wiretap data Carly Page 1 day ago",
    "commentLink": "https://news.ycombinator.com/item?id=42143265",
    "commentBody": "New Apple security feature reboots iPhones after 3 days, researchers confirm (techcrunch.com)270 points by joegibbs 17 hours agohidepastfavorite201 comments arcticbull 15 hours agoPeriodic reboots are actually a PCI requirement for payment terminals heh, basically every point of sale on the market reboots every 24h. reply Gigachad 15 hours agoparentSeems like a good defence in depth strategy. These days most systems have a pretty good boot chain security, so after a reboot you know the system is in a valid state and any potential malicious changes have been flushed out. reply DaiPlusPlus 12 hours agorootparentProbably also helps with other kinds of transient hardware faults (and cosmic-rays) that can cause bitflips. That said, on principle, there is no reason why ECC RAM should not be the standard (c.f. Linus Torvald’s ire at Intel using ECC as a market-segmentation ploy) reply close04 10 hours agorootparent> reboots the phone if it’s not unlocked for 72 hours Scheduled reboots would help more with clearing malware or transient errors. But for now, for anyone periodically using the phone, which I bet is most users, the phone will never reboot automatically. reply TeMPOraL 9 hours agorootparent> But for now, for anyone periodically using the phone, which I bet is most users, the phone will never reboot automatically. Samsung has an auto-reboot daily feature and has been pushing it a lot (in form of annoying notifications and settings suggestions). In principle, it may not even be a bad idea - but for one fact: Rebooting the phone effectively turns it off. Until the user unlocks the phone, it won't connect to phone network. AFAIK it also won't start any of the usual background processes that listen to notifications, and it might not even connect to Wi-Fi. Those \"security\" measures make automated reboots an useless feature. There really is only one good time to auto-reboot, and that's when the user is sleeping. But no way anyone's doing that when it means their phone won't be able to receive calls. Even during the day, the phone randomly rebooting and remaining disconnected until the user notices - it's probably even worse, and I imagine anyone would disable this feature after first time it activated. reply gambiting 8 hours agorootparent>>Rebooting the phone effectively turns it off. Until the user unlocks the phone, it won't connect to phone network. AFAIK it also won't start any of the usual background processes that listen to notifications, Well yes, because the storage and all the apps are encrypted until you unlock your phone. So you could have all the apps boot up and start listening for events, but it would be at the cost of reduced security elsewhere. Not sure what the right solution is tbh, I think personally I'd rather have all of my data encrypted even if it means my phone isn't actually \"active\" after a reboot. reply BrandoElFollito 8 hours agorootparentprev> Until the user unlocks the phone, it won't connect to phone network. This is not true in my case (Samsung Galaxy S22+). The phone is fully operational after a reboot, connected to GSM, 5G and Wi-Fi reply nyargh 8 hours agorootparentprevI'm not sure this is true. I have a Samsung with this feature. It rebooted overnight and this morning it was in BFU state with several mail and sms notifications. It was also connected to wifi and the cellular network. reply TeMPOraL 8 hours agorootparentIt was true for my Galaxy S22, and is currently true with reboots after update. And yes, early on I had a situation where the phone rebooted overnight and remained stuck on the lock screen while disconnected from networks, until I woke up and noticed. Fortunately I didn't miss anything important, but after that I immediately reviewed all settings and disabled anything that could reboot the device automatically (including updates, which are set for manual installation now). reply derefr 10 hours agorootparentprevNot never; phones also reboot when there are critical OS updates to apply — and that happens as long as the phone is both charging and locked at any time during a vendor-defined daily maintenance window (usually something like 2AM-4AM in the user's local time.) This happens even if the user just put the phone to sleep a moment ago. The only way to prevent it is to never leave your phone locked and charging at the same time. reply close04 9 hours agorootparent> phones also reboot when there are critical OS updates to apply Of course, or when they run out of battery, or you drop them too hard, etc. But realistically you could go for weeks or months without a reboot. From a transient fault or malware perspective, that might as well be never. reply derefr 9 hours agorootparent\"Critical security updates\" for iOS come ~weekly. reply saagarjha 8 hours agorootparentThis is definitely not true. Apple releases security updates about once a month. reply eleveriven 11 hours agorootparentprevExactly! Especially in a world where systems are under constant attack reply bean-weevil 4 hours agorootparentprevTrue, although for a remote attack there's no reason it can't just be reinfected after the reboot. reply raverbashing 12 hours agorootparentprevBut wait for security cargo-culters call it \"security by obscurity\" reply ip26 12 hours agorootparentAll that private key nonsense falls in this bucket as well. What else is a private key than an attempt to guard your system behind a thin veil of \"an obscure number I know and you don't\"? Classic security by obscurity. reply portaouflop 10 hours agorootparentSo everything is security by obscurity? reply rikkert 9 hours agorootparentalways has been... reply raverbashing 10 hours agorootparentprevOfficially no, as one (or more secrets) are allowed But given how some \"security specialists\" behave, I wouldn't put it past them reply mmcnl 9 hours agorootparentprevNothing wrong with security by obscurity. It's widely used and it is effective. Security is security. Usually there are easier and more effective methods though, so if it's your only security layer then you might have missed a few things. reply rileymat2 7 hours agorootparentThe main reasonable criticism would be that it obscures the things you missed from naive audits while still being accessible by an attacker. So you hide the issue from the \"good guys\" while not baring much entry by the \"bad guys\". I have seen this pattern emerge many times, because what is obscure to you may not be obscure to someone else. So it /causes/ you to miss things. reply saagarjha 8 hours agorootparentprevSounds like that's just you. reply bugtodiffer 10 hours agorootparentprevThis is so damn sad. I don't fully get why I have to reboot after kernel updates but accept it, but just every 3 days? Why? reply teekert 9 hours agorootparentRead. It's only when you don't touch it for 3 days. And I bet if you didn't even touch it for 3 days you won't even notice if it has rebooted or not. reply TeMPOraL 9 hours agorootparentSure they would. If the system was for interactive use, it likely requires some login or unlock password. If the system is supposed to respond to external events - such as receiving phone calls when the system in question is a phone - then a reboot will effectively disable it until the user notices. reply 42lux 8 hours agorootparentOnly if you still use a sim pin otherwise the phone would only be unavailable for the duration of the reboot. reply BrandoElFollito 8 hours agorootparentprevNo it won't. My phone is completely operational after a reboot. reply ben_w 4 hours agorootparentYours might. My SIM, however, automatically locks on reboot. It came like that. reply BrandoElFollito 4 hours agorootparentAll the phones I have used were like this (Samsung, Google, Xiaomi, Redmi, Oppo - across years and years of models). I am surprised you write that the SIM is locked upon reboot. What does this mean in technical terms? Do you mean that you have to enter the SIM PIN when your phone reboots? reply ben_w 3 hours agorootparent> Do you mean that you have to enter the SIM PIN when your phone reboots? Yes. I can cancel the popup and then still use the rest of the phone, but when I do that I have no cellular network access until I unlock the SIM itself. For the avoidance of confusion, the SIM PIN is independent of the phone PIN. reply BrandoElFollito 3 hours agorootparentAh, this is the normal behaviour of a SIM card. You can disable this PIN at startup (a setting in the phone). This is not recommendable, though, because if your phone gets lost or stolen your SIM may be used in a \"layer\" (a device that will make premium calls or SMS, the name is derived from a hen (that lays eggs)). The solution is to use an eSIM - you can disable the PIN at bootup because it is protected by the phone lock anyway and will be operational immediately. reply exe34 8 hours agorootparentprev> receiving phone calls don't be ridiculous, it's a _smart_ phone. reply saagarjha 8 hours agorootparentprevHow do you expect to swap out your kernel without restarting your machine? reply sintax 8 hours agorootparentDon't know about apple, but on linux you can live patch a running kernel with security updates (kpatch/ksplice/...). reply saagarjha 8 hours agorootparentRight, which means that an attacker can trick your kernel into patching itself to do something malicious. reply dizhn 8 hours agorootparentAnd automatic periodical reboots give hackers the piece they were missing. :) reply eleveriven 11 hours agoparentprevThe fact that Apple is adopting a similar approach for iPhones, is pretty much in line with that idea, just applied to personal data protection, isn't it? reply create-username 10 hours agorootparentIsn’t Apple planning on turning iPhones into POS (point of sale) terminals? reply savoytruffle 9 hours agorootparentWhat do you mean \"planning\"? They already are in some places, including Apple Stores themselves. But more often you see iPads in that role with a bigger screen for customers. Are they doing the same behavior? (I don't see why not). reply Cthulhu_ 8 hours agorootparentFor the moment they have an external payment / card terminal; other than the card reader itself, I don't see why an iphone wouldn't work as a formal payment terminal. reply rswail 7 hours agorootparentIt already does. Part of the new PCI standard called \"Software based PIN entry on COTS\" [1] which is also known generically as \"PIN on glass\". Banks are now offering it to one-person trade companies etc [2]. [1] https://blog.pcisecuritystandards.org/new-faqs-on-software-b... [2] https://www.westpac.com.au/business-banking/merchants-and-pa... reply paxys 15 hours agoparentprevAnd Boeing 787 airplanes reply dymk 10 hours agorootparentShouldn’t happen mid-flight though reply blitzar 7 hours agorootparentWould interrupt my movie. reply EasyMark 14 hours agoparentprevYeah I reboot my iPhone every weekend whether it needs it or not. reply hackernewds 14 hours agoparentprevalso, pretty necessary for the Prism program at the NSA to reinstall and update their firmware reply jsjohnst 16 hours agoprevWish this could be reduced lower. If I don’t unlock my phone in a day, something is up and extra paranoia is warranted. reply jalk 11 hours agoparentHow about a system for rebooting if the phone is not close to a specific Airtag or similar device. Ofc. with the possibility to override by unlocking. reply zanoab 5 hours agorootparentFind My already gives notifications when a device gets separated from your other mobile devices including Airtags. Apple could add extra actions on top of that to automatically mark as lost, reboot, or erase. reply astrea 14 hours agoparentprevAfter reading your comment, I was interested in whether or not I could achieve this through the built-in Shortcuts app. Unfortunately, \"Restart\" is not an available action. Edit: Actually, I was looking in the wrong place. It’s an option for the \"Shut Down” action. Thanks, @jwond! reply godelski 10 hours agorootparentWhile we're on the topic of Shortcuts, does anyone know how to do decent data transfer? I've been wracking my head to figure out how to replace my termux script on Android that would sync photos to my home computer whenever I was on my local wifi (or wifi and tailscale). I know shortcuts has an ssh action but it appears quite buggy and if I try to do any real bash scripting or wanting to not overwrite existing backups it hangs. It doesn't handle [[ ! -a \"$FILE\" ]] && cat /dev/stdin \"$FILE\" Even with more formal if statement notation. Best I have come up with is a very painful shortcut that repeats this for each thing I want to sync if [[ ! -a \"$FILE\" ]]; then cat /dev/stdin \"$FILE\" else cat /dev/stdin /dev/null fi Seems to hate functions. iSH and others can't seem to access the photos library. There's got to be some way I can get those out of the sandbox. (God damn is the app buggy. This is worse than programming in brainfuck) reply giamma 10 hours agorootparentI am using an app for this. It's called WebDavNav+ and there is a free version WebDavNav for evaluation. You can create sync configurations and switch on auto sync. I have an Odroid HC4 with Open Media Vault and docker which is my personal NAS. It runs a WebDav container and so on a daily basis my iPhone is backing up photos to my NAS using WebDavNav+. reply godelski 9 hours agorootparentThanks! I mean I don't need anything fancy and honestly, I don't want to run a web server (I will if that's what's needed, it's better than this Shortcuts hell). I feel I shouldn't need fancy tools to do some pretty basic things, you know? I'll be honest, I'm just a bit pissed Apple intentionally handicaps powerusers, and pushes people into their paid solutions. It's one thing to offer a paid solution, it's another thing to create a problem and then sell the solution. I mean just an iCloud backup isn't even good enough. Don't they know 3-2-1? reply giamma 8 hours agorootparentI see your point. I already had the NAS in place so it was a nobrainer for me, but if you just want to backup to computer you can still run a light webdav server on your computer. For example, I am using dufs [0], which is very easy to deploy and configure. [0] https://github.com/sigoden/dufs reply elboru 14 hours agorootparentprevIt’s so frustrating having a nice Shortcut idea just to hit a limitation right away. reply __m 12 hours agorootparentYeah shortcuts could be much more useful. I wanted to make a post request when I arrive at some place with some additional javascript logic to update an authentication token. It just doesn’t work when running in the background, I have to manually trigger it reply bobbylarrybobby 14 hours agorootparentprevBut can you have it run a fixed period of time after last using your phone? reply johnfernow 11 hours agorootparentUnfortunately not. Looks like you can set the time (or choose sunrise or sunset), and then you can set it to repeat daily, weekly, or monthly. No option based on inactivity. However, you can set it to shutdown or reboot if it receives an email that contains a specific string in the subject line. So you could have a computer that sends it a shutdown email. You could base it off of inactivity of that computer, or you could have it listen for a cancel-shutdown email, which could be sent by the iPhone when it connects to WiFi (assuming you don't live someplace like a university campus where you're always connected to WiFi even when you leave home.) If the computer doesn't receive the cancel-shutdown email within the set period of time, the computer would send the shutdown/reboot email to the iPhone. However, like another commenter pointed out [1], the action doesn't even seem to work currently as of iOS 18.0.1. If you set it to \"Run Immediately\" with \"Notify When Run\" to off, it just doesn't run. If you turn \"Notify When Run\" on, the action runs, but still requires you to confirm it manually with a tap, which defeats the purpose of the automation. Who knows, maybe a future update will fix it. 1. https://news.ycombinator.com/item?id=42144044 reply jwond 14 hours agorootparentprevThere is a restart action. You need to first add the Shut Down action, then you can change it to Restart. reply designed 14 hours agorootparentJust tried it. Unfortunately, even when you choose \"Run Immediately\", it still asks for user input when the time comes (\"Are you sure you want to restart this iPhone?\") reply mike_d 9 hours agorootparentI have had my phone set to reboot every day at sunrise and have had no issues with it prompting for input in weeks. reply RulerOf 14 hours agorootparentprevThank you very much. I've wanted to have a weekly reboot of my phone for years now, and it drove me nuts that I couldn't create a shortcuts automation for it. reply buzzerbetrayed 14 hours agorootparentprevNice! Just created an automation to restart daily at 4:00am. Hopefully it works without user input. reply astrea 14 hours agorootparentprevI'm so dumb. I didn't even click into the \"Blank Actions\" tile. reply create-username 10 hours agorootparentprevI created a shortcut to turn off my iPad every night. It’s useless reply wiredbox 9 hours agoparentprevCreate an automation shortcut that reboots your phone every day and you're set. reply petesergeant 16 hours agoparentprevAnd for minimal hassle if you just hadn’t touched your phone. 12 hours would work great for me. reply rcMgD2BwE72F 15 hours agorootparent18h is the default on GrapheneOS IIRC. Got my phone stolen abroad days ago with tones of sensitive data and that features was a big reassurance. I set it to 6h I believe. reply yonatan8070 11 hours agorootparentI tried to do it using Tasker on my crDroid device, but it requires the phone to be rooted, which mine isn't since some apps detect it and throw a fit. reply aaomidi 15 hours agorootparentprevI think you may be able to do something like this with a shortcut. reply HnUser12 15 hours agorootparentIirc reboot requires user input so you can’t automate. reply itake 15 hours agorootparentYep. I tried to do it with a shortcut and it was basically a reminder to reboot that could be ignored. reply throawayonthe 10 hours agoparentprevGrapheneOS has this feature but with a configurable time :p reply hulitu 11 hours agoparentprevYou can always install Croudstrike. They will take care of reboots. /s reply Hamuko 13 hours agoparentprevMy guess would be that the three-day timer is the first version to test the waters. Put it out there to see if there are any unexpected problems. And if everything's peachy, lower it in some future release to make it more secure. reply eleveriven 11 hours agorootparentIf they went with something more aggressive (like 24 hours) it might annoy more users, especially those who keep their phones locked for a while but don't use them constantly reply Washuu 11 hours agorootparentI'm one of those people. I charge my phone once a week. Most of my interaction with it is notifications on the lock screen. reply Hamuko 11 hours agorootparentprevI imagine the number of people who don't unlock their iPhones in ≥24 hours is a vanishingly small percentage of the userbase. Especially since with new iPhones, just looking at the lockscreen with your face unobscured is enough to unlock it. reply oarsinsync 11 hours agorootparentI imagine a vanishingly small percentage of the user base is still a very large number of people, that as an absolute number, would make up a significant percentage of the users of any other product. Apple’s scale is so large, it’s easy to forget even tiny percentages are still actually really significant in absolute terms. reply carstenhag 4 hours agorootparentprevUsers that have an iPhone just for work would be affected with a 24h check. Even with 72h they might be affected, but it would be fewer (if you assume they work Fridays and Mondays) reply tlb 9 hours agorootparentprevYour phone knows how often you normally use it. It could do something intelligent based on a usage pattern to restart when there’s an unusually long gap. I can see this being too hard to explain compared to “reboots after 72 hours.” reply elzbardico 13 hours agoparentprevI am almost never use my phone at home anymore. And even when I leave home for gym or stuff like that, I will have my phone with me, but will interact most of the time with the apple watch. The only few times I will actually use the phone is to answer some urgent message. For lazy reading and media consumption I will use the ipad. I really enjoy apple ecosystem. reply noident 16 hours agoprevThis \"novel\" feature is already supported by GrapheneOS and set to trigger after 18 hours by default, with the option for the user to adjust it to their preference. There is no good reason to force the choice of 72 hours on everybody. That's a user-hostile design decision. reply karlgkk 15 hours agoparent> There is no good reason to force the choice of 72 hours on everybody. That's a user-hostile design decision. It apparently only triggers if the phone hasn't been successfully unlocked for three days. So, it really isn't something most users will notice. reply summermusic 14 hours agoparentprevThis is an essential feature for my personal GrapheneOS phone. I only tend to use it once or twice a day most days, which means it is usually freshly rebooted every time I go to use it. I remember reading somewhere that many new exploits in the mobile space only exist in memory and are thwarted by a simple reboot, including the infamous Pegasus spyware. reply saagarjha 8 hours agorootparentI am curious why you feel this is an \"essential\" feature. If you only use your phone once or twice a day, why would a hypothetical attacker bother targeting it? reply ruthmarx 11 hours agorootparentprevGraphene might be great, but the Google specific hardware that is the only thing it will run on might not be as trustworthy. reply bohdanqq 9 hours agorootparentGraphene is not limited to Google hardware, it's just that Google hardware meets their hardware requirements... (https://grapheneos.org/faq#future-devices). AFAIK (from observing GOS comm channels) verified boot (alternative OSes but even the mechanism itself since some OEMs customize quite a bit), hardware rate limiting and timely security patches (which include modem firmware, preloaders - i.e. hardware) are the main reasons other devices are not supported. reply Malidir 9 hours agorootparentIt is limited at moment to just pixel! reply Twisell 15 hours agoparentprevIt's probably more of a tradeoff. This longer delay won't prompt hectic headlines about users angry about random reboot, it is long enought so federal agencies won't publicly react and plea Trump for their backdoor again, and it is a low profile update that won't necessarily be noticed beside tech circles thus \"small fry\" bad actors won't know how to correctly cover their back. A user hostile design would have been to never implement it in the first place. It's basically Apple's signature to choose generic default value and don't bother the user (for the better and sometimes the worse). reply mouse_ 15 hours agoparentprevI remember the first time I ever saw the camera flash used as a flashlight was a feature in Cyanogenmod 7. Wifi hotspot from your phone started as a Cydia app, when legitimate apps weren't particularly useful yet. Hacks have always brought the coolest features to phones, but OEMs have made them less accessible than ever :( reply casper14 15 hours agoparentprevHow is Graphene working for you? reply AlgebraFox 13 hours agorootparentNot OP. But I am using GrapheneOS for almost 4 months now. It is a breath of fresh air. Network Permission, Contact Scope, Duress PIN, Hardened Malloc, JIT tuning, Sandboxed Google Play etc.. are some key privacy and security features in Graphene. Will never go back to Apple's or Google's surveillance platforms. reply checkyoursudo 11 hours agorootparentI have been meaning to try it. Is it best to get a new phone, or will any old model work fine? reply switch007 10 hours agorootparentYou absolutely want a somewhat modern Pixel https://grapheneos.org/faq#device-support reply switch007 10 hours agorootparentprevNot OP either. It's quite \"buggy\" (honestly too many to list, mostly UI issues, app issues that can either be attributed to the OS or the app)...but overall I'm happy because of all the great features. reply rcMgD2BwE72F 15 hours agorootparentprevGrapheneOS is great. I’m on iOS 18 for now (until I get a new Pixel after I got one stolen days ago) and I can’t wait to go back to GrapheneOS. reply AzzyHN 15 hours agorootparentprevNot OP, but very well!! The only things that don't work for me are Google Pay and Android Auto, which is a shame but I can live without both of those. reply cubesnooper 15 hours agorootparentGrapheneOS supports Android Auto now! I use it every day. reply jacoblambda 13 hours agorootparentprevAndroid Auto works well for me on Graphene (Pixel 9 Pro) but I obv can't make GPay work given that it relies on the OS having Google's blessing and they are actively hostile to GOS as a project. reply switch007 10 hours agorootparentprevAuto absolutely works these days but Google Pay definitely doesn't and probably won't ever reply hmottestad 15 hours agorootparentprevThat kinda sucks. I don’t carry cash or a credit card anymore. I just pay with my phone. reply rcMgD2BwE72F 15 hours agorootparentprevUpgrade. Auto is supported now. reply chatmasta 15 hours agoparentprevBack in my day, this was a non-issue because our phone batteries didn't last more than 6 hours. (Although I guess this change applies also to powered-on phones? Which is cool... this is why I choose Apple products.) reply noyesno 10 hours agoprevThis seems to break SMS-forwarding between iDevices. Found out the hard way when some package delivery notifications only arrived once I unlocked my secondary iPhone and opened the Messaging-app. reply SoftTalker 16 hours agoprevIf this is true, then it's a trivial enhancement to make that a configurable setting. 72 hours could be the default, if your security needs are higher, you could turn that down to 12 hours, or even less. reply chatmasta 15 hours agoparentIf this were configurable, I would make it 30 minutes and increase it if I noticed any inconvenience. But I doubt that I would. I already have my phone in permanent do-not-disturb (so a reboot causing delayed notifications wouldn't be an issue), and it's not like I mind entering my passcode instead of FaceID every 30 minutes. reply karlgkk 15 hours agorootparentI don't know where you live, but in the US it's basically understood by the courts that FaceID is not protected, but PIN is. So if your threat model includes the sort of attacker that has a phone exploit or the ability to confiscate it, you should not be using FaceID. Instead, consider using six digit PIN with auto-delete after 10 attempts. Also enable Lockdown Mode And if you use iCloud, enable Advanced Data Protection. reply chatmasta 15 hours agorootparentYeah, I consider FaceID to be basically a time-limited vulnerability akin to \"remember me,\" because unlocking is a matter of just showing your face. It's convenient and I like it, but I don't get too upset when it asks me to enter a PIN (although I am annoyed when it doesn't respond well to the \"swipe up to enter passcode\"). reply babyent 11 hours agorootparentprevSpeaking of Face ID, I still use the iPhone SE (latest edition). I like Touch ID and I like the small form factor. reply bigiain 13 hours agorootparentprevI don't trust FaceID (technically, I don' trust the cops with FaceID), so I'm entering my (6 digit) PIN every time I take my phone out of my pocket anyway. The only thing that'd make me hesitate to set this down to single digit minutes would be the risk of missed calls/notifications while the phone reboots. reply astrange 11 hours agorootparentIf you're outside the house that's less secure, because a security camera or a shoulder surfer can see your PIN. reply layman51 11 hours agorootparentAgreed. I don’t understand how someone would be careful to not use biometrics and yet use a six digit passcode instead of an alphanumeric password. reply curious_ralts 10 hours agorootparentprevGraphene has a feature exactly for this which shows a shuffled unlock screen reply saagarjha 8 hours agorootparentThis sounds like an excellent way to make it even easier for people to watch you enter your PIN. reply cubesnooper 2 hours agorootparentOnce you’ve had the PIN scramble turned on for a while, it becomes second nature. I enter my GrapheneOS scrambled PIN about as quickly as the unscrambled PIN on my non‐GrapheneOS work phone. But it’s more of a defense against figuring out my PIN from the finger marks on my screen. In environments where shoulder surfing is a concern, I prefer to use the multiple profiles feature: log out of my main profile (which is actually a secondary profile) to completely evict its keys from memory, and switch to a burner secondary profile containing no personal data, which unlocks with my fingerprint for convenience. reply duskwuff 15 hours agorootparentprev30 minutes would be excessive. Keep in mind that the phone is unusable while it's rebooting, and that rebooting uses a nontrivial amount of power. reply karel-3d 11 hours agorootparentAlso you cannot read your notifications, if I am not wrong. I think 3 days is actually perfect reply chatmasta 14 hours agorootparentprevRebooting takes ~7 seconds and ideally only happens when I attempt to use it. But regardless of that.... why does it take a nontrivial amount of power? reply klausa 14 hours agorootparentBecause booting is relatively CPU-intensive, compared to being at idle. But iPhones do not boot in 7 seconds either — it's closer to 40. At least that's what it took on my 16 Pro Max right now when I tested it. reply fnueiwfg923 11 hours agorootparentMy iphone 15 just rebooted in 12 seconds. reply oarsinsync 11 hours agorootparentRebooted or turned on? I had to create a shortcut to actually trigger a reboot, as I couldn’t find a reboot option in settings. My iPhone 13 mini on iOS 17.7.1 took 29 seconds. reply forgotoldacc 12 hours agorootparentprevI'd love to know what model of iPhone you have a see a video of it shutting down and starting back up in 7 seconds. Sounds like an incredible piece of hardware. reply asadotzler 13 hours agorootparentprevwow. that's quick. my two year old galaxy takes ~37 seconds. reply itake 16 hours agoparentprevI agree, but it sounds like apple is choosing 72 hours to give time for the cops, because cops are more coordinated than criminals? reply xethos 15 hours agorootparentI wouldn't assume this is explicitely to help LEO, but more because this is (AFAIK) the first time this is being trialed by Apple. 72 hours is a touch long, IMO (and based on some comments, it's not just me), but when your update touches millions of devices, it's also best to test thoroughly and have the first iteration be too long rather than too short. It's easy to drop the 72 hours in a future update, or tie a shorter delay to (as I believe Apple calls it) Lockdown Mode - the more important thing might be to keep the \"It just works\" assumption most people (myself not included) seem to have vis-a-vis Apple products. Notably, I assume it will never be user-configurable directly. Possibly through Lockdown Mode (\"If enabled then shorter delay\"), but I wouldn't count on Apple adding an explicit setting. reply alwillis 12 hours agorootparentI’m assuming the ability to configure this will be added to Apple Configurator at some point. Any savvy user can download it for free. I used it recently to create a profile for a friend I’m working with to configure their email account. If you’re the tech person for your friends and family, Apple Configurator is quite handy: https://support.apple.com/guide/apple-configurator-mac/intro... reply macintux 14 hours agorootparentprevI’m betting it’ll be configurable via MDM. reply siva7 8 hours agorootparentprevNo because 3 days is about the timeframe a phone would survive without recharging and without confusing the masses why things stopped working reply threeseed 14 hours agorootparentprevIt could just be for the user experience. There are people I know especially older who don't use their phone every day. reply eleveriven 11 hours agorootparentprevA balance between security and giving law enforcement a reasonable window to act reply threeseed 14 hours agoparentprev> If this is true, then it's a trivial enhancement to make that a configurable setting It could be hard-coded into the Secure Enclave so it can't be disabled if the phone is jailbroken. reply saagarjha 8 hours agorootparentA sufficiently powerful jailbreak would be able to override that. reply threeseed 6 hours agorootparentNot aware of anyone being able to patch the Secure Enclave code to date. reply benmmurphy 4 hours agorootparentthere are public exploits to patch secure enclave code for some of the checkra1n devices. pongoOS uses the blackbird exploit on some models to remove a check that disables access to user data if the SEPOS boot code determines the phone has been DFU booted by checking the hardware TRNG state. https://github.com/checkra1n/PongoOS/blob/master/src/drivers... reply eleveriven 11 hours agoparentprevMaking it configurable would be a logical next step reply tlyleung 15 hours agoprevI get that a locked phone needs to have everything already in memory, but what technical hurdles are stopping Apple from making a locked phone as secure as a rebooted phone? reply Shank 14 hours agoparentIn the BFU state, notification previews, contact information for incoming calls, and other user-specific data is locked because it’s not decrypted. These things would also change the user experience dramatically, so that’s why Apple doesn’t do it. reply ghostpepper 14 hours agoparentprevThere's a good discussion of how this is implemented cryptographically https://www.youtube.com/watch?v=BLGFriOKz6U reply oarsinsync 11 hours agoparentprev> what technical hurdles are stopping Apple from making a locked phone as secure as a rebooted phone I think the hurdles are not technical, but based around user experience. reply alsetmusic 13 hours agoprevI think 404Media was first to confirm this (I could be wrong). It’s a subscriber article and I couldn’t find an archive link with the full story, but they do good work and I encourage people to support their work. https://www.404media.co/apple-quietly-introduced-iphone-rebo... reply dcow 14 hours agoprevWhy not just go all the way and separate the program instruction memory from the data memory, physically? I know there’s an approximation of this at the page level, but why even let the kernel modify its own memory in the first place? Memory unit that only loads signed pages. etc. reply pdpi 14 hours agoparentWhat you're asking for is a Harvard architecture computer (as opposed to a von Neumann architecture). There's tradeoffs involved. Two things to keep in mind are that JITs are damn useful pieces of tech, so losing them is a pretty damn heft price to pay for that separation, and interpreters will still treat your data memory as program instruction memory, which limits the benefit. reply astrange 11 hours agoparentprevWhat is this a response to? This already happens though - the kernel can't modify its own code pages. But there are plenty remaining attacks like overwriting function pointers or other data. reply saagarjha 8 hours agoparentprevThis is how iOS works already. reply iszomer 9 hours agoprevAnd here I thought setting up a cronjob to reboot my home AIO router nightly was a good thing, back in the days when I was rocking a WRT54G running OpenWRT; just to clear any lingering socket connections from excessive bittorrent usage. reply firen777 10 hours agoprevThe young me would sing praise to this feature unconditionally. The current me can only think how this feature affects countries with proper due process a lot more than countries with easy access to rubber hose decryption. That being said, the selfish me will adopt this feature either way. reply fatcow 16 hours agoprevQuestion: is the apple reboot seriously displaying a dmesg log? reply wmf 15 hours agoparentI assume that's a Security Research Device. https://security.apple.com/research-device/ reply duskwuff 15 hours agorootparentIt is. You can see a SRD screen pop up briefly before the boot messages. reply Twisell 15 hours agoparentprevI guess not in final release, but security researchers used the developer beta, probably with some verbose mode enabled. reply ryandrake 16 hours agoprevWonder how they've determined it's a deliberate feature and not some memory leak or something that takes 72 hours to manifest. reply RockRobotRock 16 hours agoparent\"inactivity reboot\" is in the device logs. https://www.magnetforensics.com/blog/understanding-the-secur... reply saagarjha 8 hours agorootparent> While Apple has a great set of documentation around their security features lol I wish reply saagarjha 8 hours agoparentprevReverse engineering. reply astrea 15 hours agoparentprevA memory leak that causes a full-system reboot after exactly 72 hours? reply stavros 11 hours agorootparentA very finely tuned memory leak. reply Jiahang 14 hours agoprevSometimes when I turn off my iPhone for a while, it turns on by itself. reply switch007 10 hours agoparentIt's quite clear Apple wants /their/ devices connected regularly and you don't have a choice. - iPhones powering themselves on - the various defaults on MacOS to connect while sleeping - the \"bugs\" in Sequoia on desktop (it refuses to sleep. Tries for a few seconds then turns on the display again, not even locked!) - the subtle removal of the pulsating light while sleeping to an always on light while sleeping (subtle nudging) Now with the low power consumption of apple silicon they will easily convince people there is no need to sleep I fully expect my powered off Mac to turn itself on if it doesn't already do that. I should check that actually... reply saagarjha 8 hours agoparentprev…are you somehow pressing the power button? reply hulitu 10 hours agoparentprevThis is a feature. For your security. Also Bluetooth is on when the phone is turned off, for FindMy and remote exploits. /s reply philipov 15 hours agoprev> law enforcement officers and forensic experts were concerned that some iPhones were rebooting themselves under mysterious circumstances, which made it harder for them to get access to the devices and extract data. > iOS 18 comes with improved anti-theft measures. Three days w/o unlock, the iPhone will reboot, preventing thieves from getting your data. It's poetic, isn't it? reply justahuman74 14 hours agoparentI'd like to be able to specify much shorter times than 3 days, I could have my phone reboot every night while sleeping if possible reply scojjac 14 hours agorootparentOn iPhone, you can use the Shortcuts app to do this. Create a new shortcut with the Restart action and save it. Then go to the Automations tab, set the schedule, and select your new shortcut. Make sure it's set to Run immediately. reply lxgr 13 hours agorootparentWoah, I never cease to be surprised by the unexpected kinds of things that Shortcuts allows (given all the obvious ones it does not). Thank you! Out of curiosity (and because I'm not going to try that for tomorrow morning) – does that kill my alarms, or does iOS schedule/store these somewhere accessible before first unlock? reply happyopossum 13 hours agorootparentiOS alarms continue to work after overnight upgrades which involve a reboot, and also work when you plug in a dead phone before bed, so they’ve apparently figured this out. reply kmeisthax 12 hours agorootparentAFAIK there's (private?) API surface to request a container that isn't encrypted to your PIN specifically for the lock screen to work. reply refurb 12 hours agorootparentprevIt’s actually pretty powerful and you can have automation tigger based on all sorts of things. I travel a lot so have it turn on specific data SIMs when GPS detects I’m in that country. reply turbojet1321 13 hours agorootparentprevThis leads to a confirmation prompt, and unless you select \"Restart\" it does nothing. Do you know a way around that? reply rpicard 13 hours agorootparentThe “run immediately” setting mentioned in the parent comments prevents this. I did this recently on my phone and can confirm it works. reply turbojet1321 13 hours agorootparentNot for me, unfortunately. reply ruthmarx 11 hours agorootparentWhy could this be? latest iOS? Regional difference? reply phr4ts 12 hours agorootparentprevI set my work android phone to go off 10pm and come on by 7am everyday. It's under settings -> system. It also has the ability to restart on any day/time you want. reply aryan14 14 hours agorootparentprevVery good suggestion, however I’m not sure if it’s healthy for a phone to reboot 365d/year? reply dcow 14 hours agorootparentWhy not? reply readyplayernull 14 hours agorootparentBecause it's healthy to take some days off reply MR4D 14 hours agorootparentMaybe it should reboot every day for 5 days and then not reboot for 2 days. Of course, that would be week security. /ducks reply erikerikson 13 hours agorootparentEh hem... 4 day work weeks are more productive so not rebooting for 3 days should be even weeker. reply hulitu 10 hours agorootparentprev> Very good suggestion, however I’m not sure if it’s healthy for a phone to reboot 365d/year? There is no (Windows) problem that a reboot cannot fix. /s reply Refusing23 13 hours agorootparentprevmy 2021 samsung can do that but my new pixel cannot reply frankacter 13 hours agorootparentJust tested on my pixel: Go to Settings Tap on System Select \"Advanced.\" Tap on \"Scheduled restart.\" Toggle the switch to enable it. Choose the day and time you want your device to restart automatically. reply 7734128 12 hours agorootparentSuppose all police would just undo that setting as soon as they got the phone. reply Someone 12 hours agorootparentCan’t do that when the phone is locked. If they can do that, they’re “in” and it will take them less than a day to take all data from the phone. reply ThePowerOfFuet 12 hours agorootparentprevThe point is that they don't have the passcode so they couldn't. reply derbOac 10 hours agorootparentprevI have no \"Advanced\". reply zackify 13 hours agorootparentprevThat’s why you gotta run graphene reply starfezzy 14 hours agoparentprevI would be ok with 8 hours during daytime, and some smart functionality for sleepy time. After all it’s just a reboot. I can’t remember the last decade I didn’t unlock my phone during the daytime. reply latchkey 14 hours agoprevwhat about my Apple Watch? reply gnabgib 16 hours agoprevPreviously (36 points, 6 days ago, 24 comments) https://news.ycombinator.com/item?id=42090636 Related Cops suspect iOS 18 iPhones are communicating to force reboots (234 points, 7 days ago, 288 comments) https://news.ycombinator.com/item?id=42081874 reply xk_id 12 hours agoparentI just want to point and shame this top-voted comment [0] that dismissed with the characteristic self-assurance of the armchair specialist the very possibility of it; and all the users who upvoted it, purely because it sounded like a “rational opinion”; and all the users who impulsively downvoted my post which provided partial evidence to the contrary. [0] https://news.ycombinator.com/item?id=42083555 reply LegionMammal978 12 hours agorootparentThey are forcing reboots, but they aren't communicating with each other to force reboots, as the article was speculating, and as the commenter was arguing against. Instead, it's just a 72-hour clock. Also, they were calling the networking hypothesis \"far fetched\" and \"pretty unlikely\", not \"impossible\". I had also considered that hypothesis far-fetched, because it wouldn't just need the existence of local communication, it would also need a special protocol, trigger conditions, false-positive prevention, etc., all for that one feature. reply Etheryte 10 hours agorootparentprevDon't be petty, it's not good for you. Besides, as is, their comment is still accurate and a great addition to the discussion. reply xk_id 10 hours agorootparentThe vehement tone was unwarranted and encouraging an attitude of self-assured “common sense” is very problematic, when there are many agents, both commercial and political, who can use it to avoid suspicion about their closed source ecosystems. reply Etheryte 8 hours agorootparentFrom the HN guidelines [0]: > Please don't post insinuations about astroturfing, shilling, brigading, foreign agents, and the like. It degrades discussion and is usually mistaken. [0] https://news.ycombinator.com/newsguidelines.html reply BenFranklin100 15 hours agoprevIt annoys me to no end to listen to the Android/Google apologists claim that Apple does not care about security and privacy. reply xethos 15 hours agoparentPresumably because they disagree about what should be kept private from whom, and whether the user should be allowed to be in control of the security of the hardware. Apple will vouch for applications running on, for example, MacOS. They'll check the developer's account is still in good standing, and will prevent apps from launching without this check. Sometimes this (arguably) helps. Other times it hurts [0]. And while I disagree with the choices made, these are valid trade-offs. Apple will tie things like the hardware for FaceID, to a specific phone, and require it be re-paired by an Apple authorized technician. Sometimes this is bad - just look at any Right to Repair thread. Sometimes this is good - Evil Maid attacks don't occur often, but it's easy enough (from Apple's POV) to block them that it would almost be irresponsible not to. There is room for these discussions, but it's geared more towards how one views general-purpose computing devices, IMO, and can't really be answered in a flamewar-style \"Apple is evil\" type of environment. [0] https://www.theverge.com/2020/11/12/21563092/apple-mac-apps-... reply hulitu 10 hours agoparentprevThey do care. Read carefully the TOS. /s reply EVa5I7bHFq9mnYK 13 hours agoprev [4 more] [flagged] future10se 11 hours agoparent [–] It doesn't do the same thing security-wise, though. It's more of a \"performance manager\" (i.e. the same reason you'd reboot an old Windows PC). BFU (Before First Unlock, as described in the article) on an Android is pretty similar to an iPhone (data still locked down, notifs don't come in, apps not running). Only after you unlock the first time can apps start running and notifs come in. This is also the state where it's more vulnerable to attackers (cops or criminals). I have both an iPhone and an Android (currently a Z Fold 5, so a recent model). My Fold 5 does this auto-reboot every week. When it does reboot, my usual background apps come up, and notifs work as usual. This means that Android (or perhaps more accurately, OneUI — Samsung's custom stuff on top of Android) is not doing a \"full\" reboot, and thus isn't providing the same security benefits as Apple is by putting the phone in a \"BFU\" or \"cold\" state. reply realusername 11 hours agorootparent [–] I just tried on my S23+ and no, I don't get any app notification, I need to enter the pin code for that. reply themaninthedark 5 hours agorootparent [–] My S22 Ultra also does not display notifications after reboot until after login with pin. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Apple's iOS 18 introduces an \"inactivity reboot\" feature that automatically restarts iPhones if they remain unlocked for 72 hours, enhancing security by securing encryption keys in the secure enclave chip.",
      "This feature increases data protection against theft and outdated forensic tools but presents challenges for law enforcement in data extraction from devices.",
      "Security researchers and companies like Magnet Forensics have confirmed the feature, highlighting the ongoing tension between Apple's security measures and law enforcement's data access needs."
    ],
    "commentSummary": [
      "Apple's new security feature automatically reboots iPhones after 72 hours of inactivity, aiming to maintain security by clearing potential malware or errors.- This feature is akin to the security protocols of payment terminals, which reboot every 24 hours to ensure a secure state.- While some users express concerns about potential connectivity disruptions, the feature is generally viewed as a positive step towards enhanced security, with suggestions to make the reboot interval configurable."
    ],
    "points": 270,
    "commentCount": 201,
    "retryCount": 0,
    "time": 1731635711
  },
  {
    "id": 42141761,
    "title": "Thomas E. Kurtz has died",
    "originLink": "https://computerhistory.org/blog/in-memoriam-thomas-e-kurtz-1928-2024/",
    "originBody": "Donate Tickets Menu Explore Overview Collections Timelines Blogs Stories Playlists Activities & Resources Visit Overview Plan Your Visit Exhibits Tours Group Visits Events Venue About Overview This Is CHM Awards Programs News Leadership Join & Give Overview Membership Ways to Give Donor Recognition Institutional Supporters Volunteers Search Donate Tickets Hours & Admission Subscribe Upcoming CHM Events Search for: Or search the collection catalog Home CHM BLOG Remarkable People In Memoriam: Thomas E. Kurtz, 1928–2024 By Dag SpicerNovember 14, 2024 Share 2023 CHM Fellow With deep sadness, we say goodbye to computer pioneer Thomas Kurtz. Thomas Eugene Kurtz (Feb. 22 1928–Nov. 12, 2024) was an American mathematician, computer scientist and co-inventor, with John Kemeny, of the BASIC programming language and Dartmouth Timesharing System. In the early days of academic computing in the 1960s, there were no simple non-professional programming languages available for undergraduates. BASIC was aimed at this audience. To realize their vision, Kurtz and Kemeny concurrently developed the Dartmouth Timesharing System, allowing BASIC to be accessed by students around campus using Teletype terminals. Finding a Calling Born in Oak Park Illinois, Kurtz graduated from Knox College in 1950, and received his PhD in mathematics from Princeton University in 1956. In 1951, Kurtz was fortunate in obtaining rare experience on a computer—the pioneering SWAC machine created by the National Bureau of Standards and housed at UCLA. SWAC, the Standards Western Automatic Computer, was among the earliest electronic computers in the United States and was supervised by legendary computer pioneer and 2013 CHM Fellow Harry Huskey. Kurtz began teaching at Dartmouth upon receiving his PhD. After a few years, he and fellow professor John Kemeny developed the original version of the Dartmouth Timesharing System (DTSS), a method of sharing computer access across a network and a requirement for allowing multiple students access to BASIC. John Kemeny (left) and Thomas Kurtz (right), ca. 1964. Courtesy of the Darmouth College Library DTSS was the earliest successful, large-scale timesharing system, a remarkable achievement. General Electric, which had donated computers to Dartmouth, extended DTSS into the kernel of their online services, such as Genie. DTSS was unveiled on May 1, 1964, along with BASIC. By that fall, hundreds of students were exploring BASIC on the 20 terminals around campus. General Electric GE-225 mainframe computer, home to the Dartmouth Timesharing System, ca. 1967. Courtesy of the Dartmouth College Library Making an Impact Since its inception, the BASIC language has flourished across multiple generations of computers—from mainframes and minicomputers in the 1960s, to microcomputers in the 1970s and ‘80s to the credit-card sized Raspberry Pi computer of today. In 1978, Harvard students Bill Gates and Paul Allen wrote their first version of BASIC for a new hobbyist-oriented microcomputer, the MITS Altair 8800. Their version of BASIC turned the Altair from a blinking box with few capabilities into a useful computer, and BASIC’s popularity skyrocketed again during the personal computer era. A Storied Career From 1966 to 1975, Kurtz served as the director of the Kiewit Computation Center at Dartmouth and as director of the Office of Academic Computing from 1975 to 1978. In 1979, he and Stephen J. Garland organized a professional master's program in Computer and Information Systems, funded in part with a grant from IBM. In 1983, Kurtz joined Kemeny and three former Dartmouth students in forming True BASIC, Inc., whose purpose was to develop quality educational software and a platform-independent BASIC compiler. Upon termination of the CIS program in 1988, Kurtz returned to teaching and retired from Dartmouth in 1993. Kurtz served as council chairman and trustee of EDUCOM and on the so-called Pierce Panel of the President's Advisory Committee. He also served on the steering committee for two NSF- and ARPA-supported activities and was the chair of the first CCUC conference on instructional computing. He helped form American National Standards committee X3J2, which developed the ANSI standard for BASIC, serving as chair from 1974 to 1985. Kurtz was a member of the ISO committee SC22/WG8, concerned with the international standard for BASIC, and served as its convener from 1987 to 1993. In 1994, he was inducted as a Fellow of the ACM. Learn More 2023 Fellow Award Ceremony The development of the Dartmouth time-sharing system video. Thomas Kurtz's granddaughters shares his thoughts on developing the time-sharing system in this video. About The Author Dag Spicer oversees the Museum’s permanent historical collection, the most comprehensive repository of computers, software, media, oral histories, and ephemera relating to computing in the world. He also helps shape the Museum’s exhibitions, marketing, and education programs, responds to research inquiries, and has given hundreds of interviews on computer history and related topics to major print and electronic news outlets such as NPR, the New York Times, The Economist, and CBS News. A native Canadian, Dag most recently attended Stanford University before joining the Museum in 1996. Join the Discussion Related Articles View all articles CHM BLOG In Memoriam: Lillian Schwartz, 1927–2024 October 16, 2024 CHM BLOG Narinder Kapany: Hidden Figure of Fiber Optics July 01, 2024 CHM BLOG In Memoriam: Lynn Conway (1938–2024) June 14, 2024 View all articles Share CHM is a registered 501(c)3 organization. Your donation is tax-deductible to the extent permitted by law. Tax ID 77-0507525. Terms of Use Privacy © 2024 Computer History Museum Press Careers Venue Events Stories Donate Hours and Directions Hours & Directions 1401 N. Shoreline Blvd. Mountain View, CA 94043 (650) 810-1010 More Contact Info ×",
    "commentLink": "https://news.ycombinator.com/item?id=42141761",
    "commentBody": "Thomas E. Kurtz has died (computerhistory.org)242 points by 1986 20 hours agohidepastfavorite66 comments dxbydt 15 hours ago96! Lived a full life. RIP. I wrote a lot of QBASIC. 1986-90ish, old Bangalore. I was 12. There was no Mac or Unix or Windows in India those days. Only MSDOS. I had a 386 box. I would insert a 5.25\" floppy, boot into command.com, then CD to GWBASIC.EXE and enter GWBASIC. Wrote a lot of GWBASIC to annoy friends and family by emitting high pitched sounds. You could do SOUND 2000+i, j, where i is the frequency & j was duration. You could even control volume from BASIC. I would put that in a WHILE WEND loop and make it go crazy. People didn't know how to turn it off once it got going. Then suddenly one day DOS went away and we had something called MS WINDOWS 3.1 and you had to insert a white round ball into a mouse and click on icons, no more command line, and even GWBASIC was gone, they put QBASIC and it came with snake program. Then I got into the graphics craze. We had a CGA & so I did SCREEN 2, then used LINE and CIRCLE to my heart's content. Few colors only. Then we upgraded to VGA monitor then SCREEN 12 was a full 640x480, I wrote QBASIC to make annoying sounds while drawing. It was an amazing childhood, thanks to this miracle language. BASIC led to something called CLIPPER, then I did some FOXPRO, got paid actual rupees to write an inventory control system in FOXPRO, then MFC, Borland C++...all the way upto today. But it all started with BASIC. Amazing language. Thank you, Dr. Kurtz. reply cfmcdonald 4 hours agoprevI interviewed Thomas Kurtz at his home in 2010 for my dissertation on the \"computer utility\" vision of the 60s and 70s (which foresaw a world of large computer utilities that would function like AT&T or an electrical power company, but for electronic services). He was long-since retired, but still living in the hills of New Hampshire near Dartmouth. Unfortunately I can't find my interview notes right now, but I do remember that he was very kind and welcoming. What he and John Kemeny did at Dartmouth was truly remarkable. For them the technology (time-sharing and BASIC) was a means to an end of educating and empowering students, and ultimately society as a whole. reply oliviersca 6 hours agoprevI wrote my first line of BASIC in 1976, if I remember correctly! I was 15 years old, and my dad and I went to a trade fair. There was an IBM booth there. A man invited me to try a moon-landing game. It was on an IBM 5100. I asked my dad what happened to the characters that scrolled off the top of the screen! Since he wasn’t at all into tech, he asked the IBM engineer to explain it to me. And that’s when I knew it was my thing! I wrote my first few lines of BASIC right there! The following year, there was a Hewlett Packard booth where an HP-9825A (I think?) was drawing Lissajous figures on a plotter. I was mesmerized! The next year, I start working during my holidays to buy an HP-25. The year after that, I got a TRS-80 Model 1 Level II and started programming it in BASIC. I didn’t know much at the time. I even bought the Editor/Assembler, thinking it would increase the screen resolution! After that, it was an Atari ST (with Megamax C and GFA BASIC), and then PCs with a whole variety of languages ... What has always impressed me is that some people managed, in just a few days, weeks, or months, to invent languages used by millions of people, sometimes for their entire lives! What an impact! Mr. Kurtz, you may not have created the best language, but what you did create brought joy and inspired a whole generation of young programmers. Joy that, I feel, has somewhat faded today. Unless you’re coding in Rust! Thank you, Mr. Kurtz! reply EvanAnderson 20 hours agoprevCould we get a black bar for Dr. Kurtz, please? The legacy of BASIC on our industry can hardly be understated. The language and its mission at Dartmouth was innovative. BASIC had immeasurable secondary effects simply by being the first programming language so many new computer users were exposed to (particularly near the dawn of personal computers). Edit: I got sucked into some nostalgia. Here's the 1964 edition of the Dartmouth BASIC reference: http://web.archive.org/web/20120716185629/http://www.bitsave... It's really charming, and I think it gives you a bit of the feel for the time. (I also particularly like, on page 21, the statement \"TYPING IS NO SUBSTITUTE FOR THINKING\".) reply marsten 15 hours agoparentThat manual is a great find! Dr. Kurtz was surely way ahead of his time in aiming to bring computing to the masses, well before the microcomputer revolution. BASIC was an easy onramp to programming that hooked a ton of people on computing, especially kids of the 70s/80s like me. He shaped the future as much as anyone. reply ghaff 14 hours agorootparentThe funny thing is that I went undergrad to some big name tech school in the late 70s and you barely had access to computers without a specific need or for specific coursework. (I took FORTRAN using punch cards and a mainframe.) At Dartmouth for grad school, access to computing resources was much more democratized, even though I was working in material science. reply pasc1878 5 hours agorootparentThe reason for that is simple. money. In my first year FORTRAN or cards as you say then the University department bought a mini and used BASIC. reply ghaff 5 hours agorootparentAbout the next year the joint computer facility (i.e. non-EE/CS) got a VAX but I never had a particular reason to get an account. Looking back, the EECS department was actually a pretty active center for computer-related research. But computers weren't widely-used elsewhere at the time. reply dlachausse 19 hours agoprevLike most of the programmers of my generation, BASIC was the first language I learned. BASIC was so pervasive in the 80s and 90s. Nearly every computer came with a copy of some flavor of BASIC. Even my 6th grade math textbook had an appendix with educational math games in the form of BASIC source code listings. So long and thanks for all the fish Dr. Kurtz! reply runevault 17 hours agoparentI ended up using multiple versions of basic because the various boot discs we had came with different versions. Off the top of my head I remember BASIC, BASICA, and QBASIC. Not that I remember the differences between the flavors any more. reply fuzztester 18 hours agoparentprevnext [12 more] Why \"thanks.*fish\"? (regex, chill ;) I know it is a saying, have read it before, but would prefer to hear the explanation from a person rather than Google. reply jpc0 18 hours agorootparentHitchhiker's guide to the galaxy reply fuzztester 15 hours agorootparentHeard of the book, but have not read it, 41 times so far. Next time ;) https://en.m.wikipedia.org/wiki/42_(number) reply mmcdermott 18 hours agorootparentprevTo add to this, it is revealed in Hitchhikers that dolphins are super intelligent extraterrestrials. \"So long and thanks for all the fish\" is the superintelligent dolphins farewell to the last of earth/hummanity. reply rswail 7 hours agorootparentI thought it was the mice that were the super intelligent extraterrestrials? reply markedathome 5 hours agorootparentThe mice were the mechanism by which the hyper-intelligent, pan-dimensional beings observed their experiment. The experiment being \"what is the Ultimate Question?\" by running a 10 million year simulation. reply kaba0 5 hours agorootparentprevI believe we were only the 3rd most intelligent on Earth, or something like that? Both dolphins and mouse being more intelligent. reply fuzztester 14 hours agorootparentprevif they are extraterrestrials, wtf are they doing on terra, or rather, in / under oceania? /jk also, no way they can be superintelligent, if they came here, even once. bcoz, u no, shipz propellers, orcas, etc. reply schoen 10 hours agorootparentI'd say Douglas Adams novels are full of superintelligent and/or superpowered entities that don't always think things through properly. There's a serious Murphy's Law flavor to his scenarios, even if you're the President of the Galaxy or the Man Who Rules the Universe or a planetary engineer or the most intelligent robot ever built or whatever. You're still going to trip and fall, or experience unrequited love, or get stranded on a boring planet, or have an embarrassing misunderstanding, or concoct a wacky scheme that goes wrong somehow. reply kaba0 5 hours agorootparentGiven human events, he was not wrong in that conclusion. (If we even consider ourselves super intelligent) reply fuzztester 5 hours agorootparentastute - you and gp both. reply fuzztester 14 hours agorootparentprevthat's rather finny :) or fishy. reply linsomniac 17 hours agoprevI also cut my teeth with BASIC. First was on the Apple ][s at school, then I got a Vic-20 at home. A lot of the cooler games for the Vic-20 were just a boatload of integer data you had to type in from magazines, not a very educational experience. Then I got access to an HP system with Rocky Mountain BASIC, which was a pretty sweet system. A few years later I got my first professional experience by working on the RM BASIC port to HP/UX as a tester. ~5 years later I came back to RMB working on a production test management system called Functional Test Manager, and I just had lunch with a guy I worked with on that a couple days ago. BASIC was, I'm realizing as I write this, an integral part of my career. RIP Thomas. reply whartung 2 hours agoprevWhat’s curious is how one of the reasons Pascal was derided was due to the limitations of the original system followed by the incompatibilities of the implementations that reached the market. Meanwhile, BASIC, which I think it could be argued was the backbone of the mini and micro computing industry for 20 years, was all over the map in terms of implementation and features. None of the BASICs I used were compatible outside the fundamentals of expressions and the core data types, and even then they all handled strings differently. reply smarks 18 hours agoprevLike several others here, my first programming language was BASIC. For this we owe Kurtz a debt of gratitude. I know Dijkstra is famous for having said that we're mentally mutilated beyond hope of regeneration, but you know, I kinda think we didn't turn out half bad. reply microtherion 17 hours agoparentI know literally zero working programmers who learned programming the way Dijkstra thought it should be taught — not even Dijkstra himself, as Donald Knuth once gently pointed out. Practically everybody in my generation started off with BASIC. On the other hand, at some point (when?), this practice stopped, and the newer generations turned out fine starting out with more civilized languages. reply niteshpant 17 hours agorootparentConsider me naive, but what way did Dijkstra thought it should be taught? Someone who first learned to code in QBASIC reply schoen 14 hours agorootparentOther commenters are completely right to mention his concern for proofs and the \"Cruelty of Really Teaching Computer Science\", but the most BASIC-specific thing that he was associated with was criticism of the GOTO statement. https://homepages.cwi.nl/~storm/teaching/reader/Dijkstra68.p... In original BASIC, the GOTO is a foundational mechanism and a majority of programs would have used it, sometimes extensively. Dijkstra thought for many reasons that this wasn't good style and didn't promote clear thinking. And yes, one consequence of that is that it would be harder to prove programs correct or just to reason about whether they were correct. Programs that overuse GOTOs (or from the point of view of later structured programming and functional programming advocates, perhaps programs that use GOTOs at all) were stigmatized as \"spaghetti code\". https://en.wikipedia.org/wiki/Spaghetti_code By the way, this concern is not just about aesthetics: some of the ideas that Dijkstra was advocating are arguably those that newer programming languages like Haskell and Rust can use to find bugs in code automatically at compile-time, or to make it harder to write certain bugs at all. The line between Dijkstra's advocacy and these techniques is complicated but I think there is a connection. So partly we might say that Dijkstra was not just concerned with how to make it easier for humans to think clearly about program correctness, but ultimately also about how to make it easier for computers to help humans automatically determine (parts of) program correctness. And it's true that the GOTO style complicates that task. reply tinco 7 hours agorootparentKind of ironic that nowadays many people in our generation consider the newer generations to be lacking fundamental education because they never used GOTO based programming languages. I've talked to multiple people who lamented that young programmers have never done assembly or BASIC. reply numbsafari 6 hours agorootparentIt’s helpful to have a mental model of how the computer works. I don’t know if it’s necessary that one have spent mountains of time building real software using a GOTO/jmp style, but having exposure to it would be nice, rather than hiding it away. Jeff Dunteman’s assembly programming books included a “chapter 0” that I always loved, and which really stuck with me for how creatively they taught those topics. reply kaba0 5 hours agorootparentI mean, CPUs do a bunch of work to make us believe they still operate just as a fast PDP-11, and I would wager that besides compiler experts that work on the backend parts of compilers, not many people have a real feel for modern hardware (obviously besides those that actually work on that given hardware). So I'm not convinced that even those who think they know how it works know it actually. reply shermantanktop 3 hours agorootparentprevAssembly? Sure, that has some educational value. BASIC? That’s just nostalgia for poverty. reply microtherion 15 hours agorootparentprevDijkstra thought of computer science as a subdomain of mathematics, and thought that hands-on experimentation with actual computers would mostly lead students astray. A program should all be worked out and proven correct before (optionally) feeding it to a computer, and testing and even more so debugging were abhorrent practices. BASIC, on the other hand, is more aligned with what Seymour Papert later came to call \"Constructionism\": the student learns by experimentation. reply FuriouslyAdrift 1 hour agorootparentThat's how it was with CS at Purdue when I was there in beginning of the 1990's. It was Computational Science, not Computer Science, and was in the math department. We did everything wiht pen and paper until I got into my 300 level classes and we got access to the NeXT cubes and IBM 3090. I ended up switching to networking and the tech track, but it was definitely different... reply tasty_freeze 14 hours agorootparentprevIt is the \"correct by construction\" approach vs the \"construct by correction\" approach. reply Zamiel_Snawley 16 hours agorootparentprev“On the Cruelty of Really Teaching Computer Science”[0] [0] https://en.m.wikipedia.org/wiki/On_the_Cruelty_of_Really_Tea... reply themadturk 16 hours agorootparentprevHe probably thought programming students should be taught Pascal, the academic language he pioneered. It is quite different from BASIC. reply Jtsummers 16 hours agorootparentPascal was Wirth, not Dijkstra. reply themadturk 16 hours agorootparentSorry, misremembering my meager computing history... reply nonameiguess 9 hours agorootparentprevTo be fair to Dijkstra, he was writing about how he believed university students should be taught. Two years before that cruelty paper was published, I was getting my first exposure ever to computer programming when my parents bought a Commodore 64 that came with a BASIC manual that showed how to make a Pong clone. I was 6 years old. There's maybe an analogy to riding a bike. If you're aspiring to compete in a grand tour, you probably want power meters, lactate threshold and VO2 max tests in a lab, training that is principled and somewhat scientific in the way it builds toward a goal. If you're 6, your parents just put you on the seat and push you until your balance gets good enough that you can take the training wheels off. reply lars_francke 8 hours agorootparentTotal aside: Training wheels are a thing I remember from my youth but today (at least here) they are barely used at all anymore. I'm still used to the phrase (taking the training wheels off) but I'm fairly certain my kids will grow up not using it. reply rswail 7 hours agorootparentThe sort of pushbikes for littler kids lets them learn balance and steering before also having to learn how to pedal and brake. So half the learning happens on those pushbikes before they move to real bikes. reply lgeorget 10 hours agoparentprevMy first ever programming language was VBA for Excel because I found a magazine with a tutorial on that laying around in my father's office, no idea why. I think the second one was the Basic on my Texas Instruments calculator. reply crest 16 hours agoparentprevEnough LISP and Assembler can eventually cure the worst BASIC inflicted brain damage, but some scars remain. reply FuriouslyAdrift 1 hour agorootparentMessing with hardware and Forth... fun times reply pjmlp 6 hours agoprevLike many BASIC was my first programming language, Timex 2068 BASIC to be more exact. Followed by GW-BASIC and Turbo BASIC. Not only it was my entry path into the computing world as a kid, it also showed me how to do systems programming in a language kind of safe, alongside Z80 and 8086 Assembly. Turbo Pascal was the next in the learning path, after those BASIC variants. Many thanks to Dr. Kutz and Dr.Kemeny, and those that built upon their work, for setting me free into the computing world without being tainted C is the true and only path to systems programming. reply cobrabyte 2 hours agoprevI am eternally grateful to Dr. Kurtz for his work on BASIC. I'm sure I'm not alone in saying that BASIC was my first foray into programming as a young teen, and it sparked my love for programming. RIP reply YZF 13 hours agoprevBASIC on the Sinclair ZX-81 was how I started somewhere around 1982. A whopping 1KB of memory. 24 lines of 32 characters each. Hooked to my parent's TV with me coding on the floor. RIP reply whyage 18 hours agoprevLearning BASIC on a Commodore 64 as a teenager was a transformative experience. It allowed me to revive the excitement of playing Lego as a kid, but in a scalable way. Thank you, Dr. Kurtz. reply pico303 13 hours agoprevI first learned to program in CBASIC on an Eagle II (Z80), then later TI-BASIC, and finally MSBASIC. Thank you, Mr. Kurtz, for introducing me to a wonderful career and fond memories of hacking “BASIC Computer Games” by David Ahl into my early PCs. reply peagreen 12 hours agoprevTom Kurtz and John Kemeny and BASIC changed my life, too. I wrote my first BASIC program in 1970 [0] and starting in high school the next year spent hours with the Model 33 Teletype in our school's computer room, programming in BASIC via the school district's HP-2000 time-sharing system. Ultimately I decided to go to Dartmouth because of their undergraduate computer philosophy. Any kind of computer access was a big deal back then, and being able to program really distinguished you compared to the rest of one's age cohort when it came to applying for grad. schools, jobs, etc. So I feel like I've been riding the crest of that early 1970s wave ever since, despite the explosion of skilled people in younger cohorts. It was a remarkable and fleeting time. If I were 13 years old now, I don't know of a comparable skill that could so effortlessly propel a person forward. [0] Here it is: 10 LET N=5^2.5 20 PRINT N 30 END The answer (55 and something) was a revelation. I didn't know about logarithms then, so the meaning of fractional exponents was a complete mystery. I had to ask my math teacher to make sense of the answer. reply senderista 19 hours agoprevFor better or worse, I wouldn't be where I am without this guy. reply RcouF1uZ4gsC 19 hours agoprev10 PRINT “WE REMEMBER KURTZ” 20 GOTO 10 reply nurettin 13 hours agoparentin commodore if you put a comma at the end of the string, it will put a space and continue on the same line, providing more amusement as it scrolls less regularly. 10 PRINT \"WE REMEMBER KURTZ\", 20 GOTO 10 reply toomuchtodo 20 hours agoprevhttps://en.wikipedia.org/wiki/Thomas_E._Kurtz reply vincent-manis 17 hours agoprevI was 13 when DTSS was introduced, so never had an opportunity to learn programming with Basic. Fortunately, that didn't harm me, and I've managed to compensate for this disadvantage. I don't want in any way to minimize the impact of a language designed for non-experts. But, while Basic, and its many limitations, was the best that could be done with the relatively limited systems it was first implemented on, it doesn't scale. I recall, around 1970, building an interactive front end for an inventory system, using a commercial company's version of Dartmouth (or GE) Basic. It came to about 900 lines, and even I couldn't make sense of it. It's a mistake to believe that non-experts write 20-line mortgage programs, or 50-line dice games. If what you're teaching them has any value, they will naturally want to write programs that grow organically as they understand the problem better. Dartmouth Basic is a language in amber, best understood as what could be done given the equipment of the 1960s, and the understanding of programming development at the time. It was neither better nor worse than other interactive languages of the time, for example, JOSS (which begat PIL, DEC's FOCAL, and even the horrific MUMPS, closer to our time). I think that the true value of Kemeny and Kurtz's contribution was encouraging programming as a thing for “ordinary” people, rather than a priesthood. The language they invented was developed prior to clear understandings of structured, object-oriented, and functional programming, all of which have something to say even to non-experts. (And, yes, Microsoft continued to produce products with “Basic” in their names, but they have little to do with anything that was developed at Dartmouth.) So, kudos to all the folks who learned their programming with Dartmouth-style Basic. But I think there are a lot of modern tools that not only help non-experts write short programs, but scale well as their knowledge and skill grows. Smalltalk was one system that demonstrated that, but in more recent memory, Python and Racket are also good examples. By comparison with film, Georges Méliès did some amazing work in 1900, but nobody would confuse that with the work of modern directors. (I don't want to get into a discussion of What Is The One True Introductory Language; I have my opinions on that, but they are not relevant here. Instead, I am trying to put the very significant contribution of Kemeny and Kurtz—democratizing computing—into what I see as a better perspective.) reply SoftTalker 16 hours agoparentI mean, I don't disagree, but you might be surprised at the scale of systems that were written in BASIC, well into the 1990s and probably beyond that. And not the modern Microsoft Visual incarnation of it but the old, line-numbered, GOTO/GOSUB and everything-is-global classic style. For a while I worked at a financial company and all their internal systems were in BASIC. They had dozens if not hundreds of internal users, all running on dumb terminals connected to a couple of servers that ran those BASIC programs. This was online transactional systems as well as nightly batch jobs. The programmers were mostly not computer science people but ordinary, smart people who understood the business and did a good job with the tools they had. It wasn't all a mountain of spaghetti, they had put a lot of thought into their standards and practices and documentation and it was pretty easy to work on. It was used for far more than short programs and teaching. reply vincent-manis 14 hours agorootparentI am not surprised that large-scale programs were written in Dartmouth Basic, or that those programs satisfied the needs of their users. Some program libraries include programs in unstructured Fortran IV, which have been running satisfactorily for 60 years. Similarly, some very complex hospital systems were written in Mumps (aka M), in which, due to both the language and the programming style used, programs looked more or less like line noise. I once consulted for a company that had a product written in Pick Basic. This product had been sold around the world, and was very successful in their market. They wanted to modernize the product, so they went to a big DBMS vendor with a target business problem; the vendor said it would take several months to produce a sample solution. The company gave me the problem description. The next day I went back with a PoC program, 50 or so lines of C++. I emphasized that I had used C++ just because it was convenient (and that really any standard language would do), explained what parts of the problem were not addressed, and estimated that the entire program would take about a week's work to do. The client agreed on this, but said (a) that they needed a solution that was compatible with Pick Basic, and (b) their programmers only knew Pick Basic and wouldn't be any good at learning anything else. I don't know what became of the client and their product. (The Pick system was a combination of a variant of Dartmouth Basic and a DBMS.) I'm not in any way saying that Dartmouth Basic is useless. I am saying that creating this language was NOT the flash of genius Kemeny and Kurtz actually had, but that making computing accessible to non-experts was the actual point. reply anta40 16 hours agoprevBASIC (QB, and VB6) were my earliest exposures to programming. As a high schooler in 2001, only a very few were interested in learning programming (yes the geeks). Good old times. Eventually I switched to Java because of mobile apps (J2ME), and still make a living from it. RIP Thomas Kurtz. reply gip 17 hours agoprevAs a teenager I went to a science fair organized by the Communist party (true story and obviously it wasn't in the US). A guy there was explaining how computers works and he took the time to show me BASIC. I wrote my first program that day and found it fascinating. I was enthusiastic about learning more so I asked my Dad for a computer. Said he \"Study Math, it's exactly the same\". My next real contact with computers was 15 years later. reply rswail 7 hours agoprev1977 I typed my first program into an ASR33 (connected by serial to a PDP-11/10): 10 PRINT \"HELLO\" 20 END RUN I was hooked. reply zabzonk 20 hours agoprevAs someone who learned most pf what I know about programming in BASIC back in the very early 1980s, this is sad news. We seem to be losing good people all the time these days. However reply _sys49152 18 hours agoprevbasic gang stand up reply bastloing 17 hours agoprevSo sad, he helped lots of us kids learn something that would later turn into a productive career. reply grahamj 19 hours agoprevDamn, learning BASIC was one of the first things I did after my dad put together an Apple ][ clone. It paved the way for my lifelong technology enthusiasm. pours one out reply rswail 7 hours agoprev [–] How do we get a black bar for this? reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Thomas E. Kurtz, co-inventor of the BASIC programming language, passed away on November 12, 2024, leaving a significant legacy in computing.",
      "Kurtz played a crucial role in developing the Dartmouth Timesharing System, enabling widespread access to BASIC and influencing generations of computing and software development.",
      "He held leadership roles at Dartmouth, contributed to BASIC standards, retired in 1993, and was honored as a Fellow of the Association for Computing Machinery (ACM) in 1994."
    ],
    "commentSummary": [
      "Thomas E. Kurtz, co-creator of the BASIC programming language, has passed away, prompting many to share memories and gratitude for his contributions.- BASIC played a crucial role in democratizing computing, making programming accessible to non-experts and inspiring a generation of programmers.- Kurtz's work at Dartmouth, alongside John Kemeny, was significant in the development of time-sharing systems and educational computing, leaving a lasting impact on the tech industry."
    ],
    "points": 244,
    "commentCount": 68,
    "retryCount": 0,
    "time": 1731622329
  },
  {
    "id": 42146338,
    "title": "Seer: A GUI front end to GDB for Linux",
    "originLink": "https://github.com/epasveer/seer",
    "originBody": "Introduction Seer - a gui frontend to gdb for Linux. (Ernie Pasveer epasveer@att.net) This project is actively worked on. The aim is a simple, yet pleasing gui to gdb. Please report any bugs or desired features to my email or create a task in my GitHub project page. Installation Seer can be installed either from a package manager or from source. Note Make sure the requirements are met before installing. Requirements Linux C++17 gdb with \"mi\" interpreter (check by running: gdb --interpreter=mi) CMake (3.1.0 or newer) QT6 When building Seer from source, you will need the QT6 \"devel\" packages installed on your system for your distribution. Core Gui Widgets PrintSupport Charts Svg Qt6 build instructions are here: https://github.com/epasveer/seer/wiki/Building-Seer---Qt6 QT5 Seer no longer compiles with Qt5. The 2.3 source tree is the last one that does. Qt5 build instructions are here: https://github.com/epasveer/seer/wiki/Building-Seer---Qt5 Install from package Available through the following package managers: Pamac (Manjaro) pamac install seer zypper (openSUSE Tumbleweed) zypper install seergdb Install from source (Recommended) Seer can be built with Qt6 by following the instructions below. https://github.com/epasveer/seer/wiki/Building-Seer---Qt6 It can still be built with Qt5, for the time being by following the instructions below. https://github.com/epasveer/seer/wiki/Building-Seer---Qt5 NEWS Check out Seer's Wiki page on github. Version v1.17 will be the last Qt5 release. The next release will be v2.0 and will be Qt6 based. However, for the time being, it's still able to be compiled with Qt5. If you want the latest stable Qt5 source, grab v1.17 from here: https://github.com/epasveer/seer/releases/tag/v1.17 GUI overview Examples of the various Seer views and dialogs. Main View The main view for Seer looks like this: Source/Function/Types/Variables/Libraries The list of source/header files that were used in the program. Search for Functions, Types, and Static Variables. Dobule clicking will open the source file. The list of shared libraries referenced by the program. The list of source/header files can be searched. This will \"shrink\" the list of files shown. Double clicking on a file will open it in the Code Manager. Variable/Register Info Show variable and register values. \"Logger\" - log the value of a variable. Manually enter it or double click on the variable in the file that is opened in the code manager. \"Tracker\" - create a list of variables to show the value for whenever gdb reaches a stopping point (step, next, finish, etc.). When the stopping point is reached, all variables in the list will show their potentially new value. \"Registers\" - show the values of all cpu registers. Code Manager. The large area of the middle part of the Seer gui. Source files are opened in this view. Text in a file can be seached for with ^F. Variables can be added to the \"Logger\" by double clicking the variable name. Double click with CTLR key pressed will prepend variable with \"\". Double click with SHIFT key pressed will prepend variable with \"&\". Double click with CTRL+SHIFT key pressed will prepend variable with \"&\". Variables can be added to the \"Tracker\" by selecting the variable name and RMB and select \"Add variable to Tracker\". Variables can be added to the \"Memory Visualizer\" by selecting the variable name and RMB and select \"Add variable to Memory Visualizer\". A breakpoint/printpoint can be created by RMB on a specific line. Can execute to a specific line by RMB on a specific line. Tabs in this view can be detached by double-clicking a tab. Breakpoints, Watchpoints, Catchpoints, Printpoints, manual gdb commands, and logs. The area below the Code Manager. Manual commands. Manually enter a gdb or gdbmi command. The commands are remembered for the next Seer use. Breakpoint manager. Create and manage breakpoints. Watchpoint manager. Create and manage watchpoints. A watchpoint monitors when a variable is accessed (read, write, read/write). Catchpoint manager. Create and manage catchpoints. A catchpoint stops execution on a C++ throw/rethrow/catch call. Printpoint manager. Create and manage printpoints. A printpoint is like a breakpoint but it allows you to print variables at that printpoint. See gdb's 'dprintf' call. GDB output. A log of any output from the gdb program itself. Seer output. A log of any output from the Seer program itself. As diagnostics. Tabs in this view can be detached by double-clicking a tab. Stack frame information. Stack frame list. A frame can be double clicked to change the scope (the current function). Stack frame arguments. For each frame, print the arguments passed to each function. Stack locals. For the current function, print the values of the local variables. Thread information. Thread ids. A list of all threads. Double click on a thread id to change the scope (the current thread). Thread frames. For each thread, list its stack frames. Supports Gdb's Reverse Debugging mode. Turn instruction recording on or off. Set playback direction to forward or reverse. Open Dialog When the open executable dialog is invoked, it looks like this: Seer Console All text output from the executable will go to the Seer console. Text input for the executable can be entered via the console too. Assembly View Normally Seer will just show the source code as tabs in the Code Manager. The program's assembly can also be show as a tab. Select \"View->Assembly View\" and an extra tab will be shown alongside the source code tabs that shows the current assembly being executed. Here is an example. Like the source code tabs, breakpoints can be set in the assembly tab. The current instruction is highlighted. Double-clicking on entries in the \"Breakpoints\" tab and the \"Stack frames\" tab will show the assembly for those addresses. There are \"Nexti\" and \"Stepi\" hot-keys, as defined by your config settings. Normally \"Ctrl+F5\" and \"CTRL+F6\". Using \"^F\" in the assembly tab will show a powerful search bar. The assembly feature in Seer is new. Feel free to suggest changes/features. Memory Visualizer When looking at the contents of raw memory in the Memory Visualizer, it looks like this : Memory Disassembly Array Visualizer When looking at the contents of arrays in the Array Visualizer, it looks like this : Normal Spline ScatterTwo arrays can be used as an X-Y plot. For example, this simple 'points' array forms the X-Y outline of a shape. int main() { int points[] = {50,1,20,91,97,35,2,35,79,91,50,1}; return 0; } X values Y values XY ValuesStruct Visualizer When looking at the contents of a C/C++ struct or a C++ class in the Struct Visualizer, it looks like this. This example shows the contents of \"*this\" for the current C++ class that Seer is in. All structure members that are basic types can be edited. There is also a Basic Struct Visualizer that is more light weight, but can not follow pointers and can not be edited. Image Visualizer When looking at the contents of raw memory that is an image, the Image Visualizer can be used. Starting Seer Seer is meant to easily start the program to debug from the command line. gdb has multiple methods for debugging a program. So Seer naturally does too. Go to the Wiki to see all the ways to run Seer. https://github.com/epasveer/seer/wiki/Starting-Seer Support/Contact Send an email to epasveer@att.net for any bugs or features. Or create a task in my GitHub project page.",
    "commentLink": "https://news.ycombinator.com/item?id=42146338",
    "commentBody": "Seer: A GUI front end to GDB for Linux (github.com/epasveer)203 points by turrini 6 hours agohidepastfavorite129 comments badsectoracula 5 hours agoI built it and tried it out a bit with Godot on Linux. It seems OK (the UI is a bit on the \"- how many widgets do you want? - yes\" side), but also a bit janky. Trying to change the font for the editor didn't work, hovering over a variable to see its value either does nothing (but there is a sub-second cursor change that indicates something is supposed to happen) or it shows an error from GDB about trying to use an expression with a type or keyword (so there was an intent to show a value on a tooltip, it is just broken) - doubleclicking on a variable does add it in some panel with its current value and a timestamp, so the functionality for reading values/expressions from the UI is there too, just not done in the same way as the tooltips. If polished a bit it could be useful, though from all the frontends i've tried the one i disliked the least (none are great) is Gede[0] (which i just noticed had a new release a few hours ago) as it has a very simple and straightforward UI and while it doesn't expose much functionality, what exposes seem to work fine without bugs. [0] https://gede.dexar.se/ reply jwrallie 3 hours agoparent> it has a very simple and straightforward UI and while it doesn't expose much functionality, what exposes seem to work fine without bugs. Nice one, I will add it to my notes to use it next time I need debugging. The least thing I want when looking for a bug in my own code is to have to deal with bugs in the debugging tools. reply alexhutcheson 5 hours agoprevGDB also has a built-in text user interface (TUI) that is surprisingly easy to use[1]. It even supports mouse interaction. [1] https://sourceware.org/gdb/current/onlinedocs/gdb.html/TUI.h... reply genpfault 5 hours agoparentOnly works if GDB has been built with TUI support, sadly :( reply shortrounddev2 3 hours agorootparentIs it not usually? I've never had to compile gdb myself to get TUI reply sakras 1 hour agorootparentThis has definitely been an issue for me before, I think at least for a while Ubuntu/Debian didn't ship gdb with tui enabled, you had to build it yourself. reply cyberpunk 4 hours agorootparentprev… If you are debugging c code surely you’re able to compile a debugger with whatever options you want? reply shmerl 34 minutes agoparentprevNeovim + nvim-dap + nvim-dap-ui + gdb works much nicer than that. reply cassepipe 4 hours agoprevAfter trying many frontends for gdb I find that the TUI is the best. You just need to know about Ctrl + L to redraw if your program is printing stuff because the interface then become garbled. I just put : layout src set confirm off in my $XDG_CONFIG_HOME/gdb/gdbinit reply DSMan195276 3 hours agoparentI've used \"gdb-dashboard\" a lot, would recommend it. It's similar to the TUI (though I haven't used the TUI much), but you can pick and choose to display a large variety of information and the colors make the output much easier to read. You can also make the dashboard display on another or across multiple terminals, letting you create a much nicer window layout. I've scripted this up with tmux before to have it automatically create the terminal layout and connect them to gdb, you can create really nice layouts that way (though it can be a lot of effort). reply CarpaDorada 4 hours agoparentprevI like a colored prompt with set prompt \\001\\033[01;36m\\002(gdb)\\001\\033[0m\\002 and I save history with set history save on set history size 500000 set history filename ~/.cache/gdb/history reply cassepipe 3 hours agorootparentI like to do that as well. Just want to keep it short :) Also I use vim mode for bash and since it's in .inputrc I also have a vim mode in gdb which I like a lot even though it's as good as zsh's reply malkia 1 hour agoprevIn case you are in Windows, and connected to Linux and/or using WSL, you can also use WinDBG/VisualStudio to debug (remotely) Linux processes! reply pvg 6 hours agoprevA mediumish discussion 2 years ago https://news.ycombinator.com/item?id=33044885 reply j1elo 5 hours agoprevThis is a Qt UI for GDB. There's also gdbgui that I know of, a web-based UI for GDB: https://www.gdbgui.com/ Always good to see more movement in the debug tooling reply hulitu 11 minutes agoparentAnd DDD. A Motif front end. reply dzaima 5 hours agoparentprevTo add on to the pile of more GDB GUIs, here's one I've made: https://github.com/dzaima/grr. Though it's still got a fair bit of missing features that may be essential for some uses (due to my usage being largely assembly-level, which doesn't need too many fancy features). reply halb 5 hours agoparentprevSpeaking of web-based debuggers, I recenty created a similar project but focused on x86-64 assembly debugging: https://github.com/robalb/x86-64-playground reply lacedeconstruct 5 hours agoparentprevVscode also has an ok gdb frontend, very nice when you are debugging embedded microcontrollers reply mech422 6 hours agoprevoh nice - reminds me of DDD(1) DDD was like magic first time I saw it. Oh wow - DDD is still maintained ?? :-D 1 https://en.wikipedia.org/wiki/Data_Display_Debugger 2 https://www.gnu.org/software/ddd/ reply j1elo 6 hours agoparentDDD was taught to me when in University, 20 years ago, and it already felt clunky, my views are now much more moderate but Motif still feels like an eyesore. Conversations over the years have shown me that DDD was a great inverse marketing tool, ironically pushing developers towards the embedded debugger UI in their favorite IDEs... despite DDD itself being indeed very powerful. But even \"usefulness over aesthetics\" has its limits! reply dirkf 4 hours agorootparentThere's one DDD feature that I haven't found elsewhere: its graphical representation of a struct and its contents. You can double-click on a pointer field and then it draws whatever that field pointed to, with a nice arrow connecting the two. I've found it a very powerful yet compact way to visualize the state of a program when debugging. reply jlintz 3 hours agorootparentyes! this was so great in college to learn pointers and visualize linked lists reply anthk 4 hours agorootparentprevCurrent DDD under the updated OpenMotif with TTF fonts can look much better than it did in the 90's and 00's, miles ahead than LessTif/former propietary Motif. It blends perfectly with EMWM where I have Liberation Sans/Mono for almost everything. reply synergy20 5 hours agorootparentprevmotif does not work well with high resolution display, sadly reply hulitu 9 minutes agorootparentCitation needed. I use Motif programs without issues on high resolution displays. reply anthk 4 hours agorootparentprevMotif today supportṡ TTF and for the HD issues, you can the DPI option for X11 at ~/.Xdefaults reply donaldihunter 5 hours agorootparentprevYeah, I remember DDD being an incredible tool back in the day, but it was clunky even when it was new (1995). https://www.gnu.org/software/ddd/manual/pdf/ddd-paper.pdf reply mark_undoio 4 hours agoparentprevI love that DDD has a variety of graphical visualisations built in. I always thought the ability to data structures was particularly cool. A while ago there was a project to port it to GTK3 but I think that went away. I'm glad the mainline project is still going. reply mech422 3 hours agorootparentyeah - the 'data display' part was the real killer feature :-) reply begriffs 3 hours agoparentprev> DDD is still maintained? Absolutely. I wrote about its features here https://begriffs.com/posts/2022-07-17-debugging-gdb-ddd.html Since the article was written, the maintainers fixed the issues I pointed out. No need for many of those workarounds now. Versions 3.4.0 and 3.4.1 are substantial. reply canucker2016 22 minutes agorootparentIs there any URL that lists what's new in v3.4.0 and v3.4.1? The DDD website ( https://www.gnu.org/software/ddd/ ) points to the source tar.gz and the full manual, but nothing that says \"What's New\" in recent versions. reply anonymousiam 3 hours agoparentprevDDD is great. I still use it, but I am a fossil. I sought out DDD when I was looking for something similar to dbxtool, which I used on the early Sun Microsystems machines. Folks today are spoiled with things such as Source Level Debugging. reply jandrese 3 hours agoparentprevI always liked the concept with DDD, but I could never keep it from crashing more than the program I was trying to fix. reply ta988 3 hours agorootparentIt is much better now. reply bitwize 5 hours agoparentprevAnd it still uses Motif! Awesome! reply reacweb 4 hours agoprevI sometimes need to use gdb to investigate bugs in C or Ada, but it is not my main activity. As a result I will not invest days to setup a debugging environment that I will not remember how to use 6 month later. My solution: I use emacs and have a short note with instructions: M-x gdb -i=mi exe_full_name -p 29123 M-x gdb-many-windows set follow-fork-mode child reply kombine 4 hours agoprevWhen I used to program in C++ on Linux 10+ years ago, I used Qt Creator which has a built-in debugger (GDB frontend). It worked great and I don't see a reason to use anything else for C++ [and Qt]. reply VyseofArcadia 4 hours agoprevFor the Emacs users in the crowd, GUD is a pretty great GDB integration. reply seanw444 2 hours agoparentEver since the advent of LSP, Emacs has felt superior to everything else. I have no reason to leave it. Especially once they made it faster with native comp. Like why should I keep trying this month's new editor with a couple new gimmicky features, when I can just pop a plugin onto Emacs that adds that exact feature set, while maintaining everything else how I like it. I first really got into coding when Atom was a thing, and then that died off and became VS Code and I was pretty sad about it, because while VS Code is good, it doesn't follow the same philosophy as Atom. But then I took the time to learn Emacs ~4 years ago, and nothing new ever comes close to convincing me it's outdated tech that I need to move on from. That was a random rant, but I'm just really appreciate Emacs, and I'm glad it's stuck around. reply VyseofArcadia 2 hours agorootparentEven before the dawn of the LSP era, Emacs was pretty great with ctags. reply seanw444 2 hours agorootparentYeah I first gave it a try before LSP and I don't think I was ready to be redpilled yet, because it didn't stick. So I can't comment on the state of it before then. I kinda joined once the LSP stuff got fairly smoothed out. reply alexhutcheson 4 hours agoparentprevI prefer the GDB Graphical Interface in Emacs[1] (M-x gdb), rather than the more basic integration via GUD[2] (M-x gud-gdb). I’ve had to switch to GUD to run lldb recently, and I miss having dedicated windows that show breakpoints, threads, the current stack, etc. The one nice thing about GUD is that the interface is consistent across debuggers, so I don’t need to refresh myself on the keyboard shortcuts when switching between debugging Python with pdb and C++ with lldb. [1] https://www.gnu.org/software/emacs/manual/html_node/emacs/GD... [2] https://www.gnu.org/software/emacs/manual/html_node/emacs/St... reply cherryteastain 4 hours agoparentprevlsp-mode+dap-mode also work well but requires some manual fiddling with launch.json files reply shmerl 32 minutes agoprevThis combo works well for me: neovim + nvim-dap + nvim-dap-ui + gdb (with native DAP protocol support). reply w4rh4wk5 5 hours agoprevAnyone has experience with this and can compare it to kdbg? reply glitchc 4 hours agopreveclipse-cdt includes a GDB integrated debugger UI for C and C++ since forever. What's new here? reply einpoklum 3 hours agoparentEclipse CDT is a whole IDE; is rather complex, and one might even say convoluted; and is Java based. Seer is none of these things. Of course - it's not like a GDB GUI is a novelty in itself, there are quite a few. But a GDB-GUI-only utility is a meaningful and important niche to consider. reply alfiedotwtf 2 hours agoprevDebugger vs printf: Has anyone found a reliable way to use a debugger when you have a) multi-process b) multi-threaded c) async d) timeouts? I would love to use a debugger but printf and logs “just work” reply fisf 1 hour agoparentGDB can do a, b, c (async Code is not really special?). d is going to be tricky and really depends. reply nurettin 4 hours agoprevQt GUI itself can use gdb/ldb and display a fair amount of data structures from the standard library. Note that gdb is also scriptable with python, so you can easily register your own printers. reply tekknolagi 6 hours agoprevSee also https://github.com/nakst/gf reply rkharsan64 5 hours agoprevOn a general note, I would recommend any new (and experienced!) programmers to master the debugging tools of their ecosystem. I've seen countless experienced developers use printf-based debugging and waste hourse debugging something which could've been easily figured out by setting a breakpoint and stepping through your code. This is also a good way to understand code you're unfamiliar with. This is one area where I believe a GUI tool is so much better: I can hover over variable names to view their values, expand and collapse parts of a nested structure, edit values easily, and follow execution in the same environment I write my code in. Sure, it doesn't help much for some scenarios (one I've heard people mention is multithreaded code, where logs are better?), but for most people it's not that far from a superpower. reply mpweiher 4 hours agoparentInteresting. My experience is the opposite: I see developers waste hours stepping through their code a line at a time when a few judiciously placed logs (printfs() are fine, but we can do better) would have told them exactly what they needed in a jiffy. If you have a fairly shallow bug, that is a single point in your code that always behaves incorrectly, then I find debuggers reasonably effective. But most of the bugs that I see aren't that shallow, with code misbehaving when the context is just so and perfectly fine otherwise. In those cases, I need to see lots of different invocations and their context. The debugger is like trying to drink the information ocean I need through a straw. A mostly plugged straw. I wonder what makes our experiences so different? Do you unit test a lot? Particularly with TDD? I am guessing that this practice means I just don't get to see a lot of the bugs that a debugger would help me with. (And it doesn't mean I never fire up the debugger. But it is fairly rare). reply setopt 4 hours agorootparentI have more or less the same experience like you. Logging is a very resilient and adaptable technique – I can use it on my laptop or on remote HPC clusters, almost regardless of programming language (except maybe Haskell), it works fine on parallelized code, and so on, with very little configuration needed. It’s also important to me that it can be done “async”, since some of my larger codes can only be run on HPC clusters by putting a job in a process queue and waiting. I’ve tried debuggers and see the appeal but I find it less useful than print debugging / logging. I also rely heavily on unit tests when writing new code, so that also reduces the surface that I need to look for bugs based on the log. Moreover, most of my projects have 1-3 programmers and can largely “fit in my head” ( If you master printf The skill ceiling is low. Printf only does so much. You could rope in environmental optimization to the skill discussion -- the ability to isolate areas of functionality, replicate problems, reason about unknown state, and do the legwork so that you can quickly spin the increased amount of iteration required by a simpler debugging tool -- but by then you have thoroughly sacrificed both simplicity and portability and are far past the skill floor of a debugger. If we assess this by looking for problems created by overcommitting to one approach or another, overcommitting to a debugger looks like burning time trying to get tooling to work on a problem that doesn't really need it while overcommitting to printf looks like spending way too much time iterating on tiny steps that could have been jumped over given better visibility. I've seen both, of course, but I tend to see more of the latter and more denial about the latter. When you're burning time fighting tools it's obvious. When you're burning time because you don't know how a tool could have saved you time, it's less obvious. YMMV. reply PontifexMinimus 2 hours agorootparent> the ability to isolate areas of functionality This is the key. You need to be able to narrow down where the bug is. reply jacobyoder 4 hours agorootparentprevNot the OP but... > programmers to master the debugging tools of their ecosystem. I've seen countless experienced developers use printf-based debugging and waste hourse debugging something which could've been easily figured out by setting a breakpoint and stepping through your code. If you're wasting hours with printf-based debugging, I don't think you've 'mastered the debugging tools of the ecosystem'. There are multiple ways to debug - step debugger tools, printf, logging to a file, etc. Each have their place. If you're spending hours on any one approach, and perhaps that's the only approach you know, that's a red flag. If you've spent hours going through printf, logging and step debugging and STILL don't have a good answer... bring in external eyes. I've found/fixed bugs in a few minutes because of adding some log stuff first, because in those cases, it's the easiest approach. In other cases, running a debugger and setting a couple breakpoints is indeed the easier approach to start with, and I've done that. Sometimes you find it with the first approach, sometimes you need to try the next approach. reply canucker2016 1 hour agorootparentprevWhy must this be a mutually-exclusive situation? You can have the source code debugger log messages to the output window without having to add logging statements and recompile the affected code. This is the 21st century. see visual studio's tracepoint functionality - works in native and .Net languages, https://devblogs.microsoft.com/visualstudio/tracepoints/ sure, if you want the logging messages available for perusal when deployed in production, then this won't help. Even better - use Hot Reload and tweak your code in the debugger - https://learn.microsoft.com/en-us/visualstudio/debugger/hot-... [edit] GDB's equivalent to tracepoint is mentioned elsewhere in this thread - https://news.ycombinator.com/item?id=42147372 reply adl 3 hours agorootparentprevA good debugger can provide more than just stepping thru code. In IntelliJ with Java, you can set conditonal breakpoints with complex evaluations, you can set filters (only hit a breakpoint depending from where it is being called), use exception methods that only hit on certain exceptions instead of a specific line code, you can also use logging breakpoints, that act like printf debuging, but you don't need to scatter your code with print statements all over the place. You can group, add descripitons, disable, enable and add temporary breakpoints, they are pretty powerful! I just wish intellij had a time travel debbuger like Visual Studio Pro. https://www.jetbrains.com/help/idea/2024.3/using-breakpoints... reply mark_undoio 55 minutes agorootparent> I just wish intellij had a time travel debbuger like Visual Studio Pro. You might find our Java product interesting, it adds Time Travel Debug to IntelliJ - https://undo.io/products/java/ Undo captures everything the process does, below the JVM level, so you can reproduce / rewind any problem you record as many times as you want (and copy the recording out of production onto a dev machine to debug, etc etc). Please get in touch if you'd like a free trial. reply cjbgkagh 4 hours agorootparentprevI would guess longer compile would encourage breakpoints over printf and this would be programming language specific. Being able to change breakpoints at runtime helps a lot when tracking down something more complex. Visual Studio breakpoints are great, and they’ve added conditional breakpoints which are even better. Previously I would approximate this by having code specifically branch to hit a breakpoint, ‘if (X) { breakHere();}’ I write a fair amount of native C++ code but only call it from either Python or dotnet so when I make a mistake here it’s usually a segfault / memory access issue which kills the process. There might be a way to debug the C++ from dotnet or Python but logging to std out helps me isolate the location of the issue which is sufficient. It’s not a big enough problem and I worry that either writing tests in C++ or learning a native debugger will pay off in time saved. reply rkharsan64 1 hour agorootparentprevFrom my (super limited) experience, debuggers shine when: - You're using a dynamically typed language. Something like Rust can eliminate most bugs that come from incorrect data types. For me, a lot of bugs used to come from types that were different from what I expect. - It is super easy to run your program with a debugger attached. If your code needs to run on a K8s cluster or a dedicated test machine instead of locally, logs are much easier to get hold of than a remote debug session. Some people aren't even aware that they can attach a debugger to a computer over the network, or inside a Docker container. - Your environment. If you don't use an IDE that supports a debugger, it's another friction point. I'm not sure if Vim has something similar to, say, PyCharm's debugger. Similarly, if you're a junior, and you reach out to a senior and they tell you to debug using logs, you probably will never switch to using a debugger yourself. reply malkia 1 hour agorootparentprevI've been, and still am, at the mercy of both of printf-debugging style and real debugger. Long time ago, worked on a port of game from PC to Playstation 1. Since we had the Yaroze \"devkit\" (not really a devkit, rather amateur kit for doing games), printf debugging was the only thing available. Things kind of worked, but when we #ifdef-out the printfs it was crashing (and no debugger). We somehow discovered that one of \"printf\" side effect was clearing the math errors. reply toprerules 1 hour agorootparentprevI'm an OS developer and in my view using printf is like seeing only half the world at once. There's a whole world of platform specific decisions that are made at compile time and runtime that you can only see through the lens of a good assembly debugger. You're also talking about debugging apps running comfortably in the idillic world created by the OS. It's much harder to debug foundational pieces with printf's when the program immediately panics or early printing isn't available. In my opinion it's good to build habits that can be generalized to all sorts of software and not limit oneself to writing code in a highly structured environment where most of the work is done for you. I can trace through a program faster than someone can insert/remove printfs and recompile their program, and I don't need to think about what to print. I can look at everything at that point in time, covert data to strings, look at the stack, registers, etc. Very powerful stuff. reply agumonkey 4 hours agorootparentprevI agree with both of you. Printf is not enough, breakpoints are not enough. The solution lies between. Ability to gather rapidly relevant information to converge on wrong states. ps: I wish I could work on a porcelain layer to manage the breakpoints in a more logical manner. Considering a problem you'd like to create different sets of breakpoints, run various tests and gather results to reviews. With the ability to add or remove layers rapidly. It's probably not too hard to do. reply conradev 4 hours agorootparentI have found combining these things to be useful: breakpoints that print stuff and auto-resume the program. Allows you to attach trace points at-will without requiring a recompile or losing state. reply agumonkey 3 hours agorootparentYes losing state is a killer reply null_deref 3 hours agorootparentprevYes exactly, and I'll probably say very generally that I usually use breakpoints when I am in the exploration stage of a significant state bug, and I'll usually use logging when I generally know where the bug should be but I need to pin point the exact place reply BearOso 3 hours agorootparentprevInserting a breakpoint is just as easy as a printf, and as long as you're still using a debugging build, you don't have to recompile. With the printf you might not have considered all the variables you need, so you have to go back, insert, and recompile. With a breakpoint you can inspect the contents of anything at that scope, and even see what the code flow is with that given state. You can even save a core dump to go back to later. You can also script breakpoints to output the info you want and continue, giving you your information ocean. Basically, a debugger is a more efficient and powerful tool. In the one situation where you're not skilled with a debugger feature, a printf can be quicker than having to learn, but it's objectively worse. reply corysama 2 hours agorootparentYou can insert and remove breakpoints while running. You can inspect variables the instant you realize they might be relevant. During my long career, I’ve always been told “You should know you code well enough that a few well placed printfs is the most you’ll need to understand a bug”. But, most of my career has been spent debugging large volumes of code written by other people. Code I’ve never seen before and usually will never see again. A debugger making a 10X productivity difference for me is no joke. reply PontifexMinimus 2 hours agorootparentprev> With the printf you might not have considered all the variables you need, so you have to go back, insert, and recompile In some languages, such as Python, it's fairly easy to write a debug-print function that prints all the local variables (as well as the function name and line number it was called in). reply 9dev 1 hour agorootparentThat misses the mark. You can’t really compare a hackish ”print the world as a string“ function against a debuggers ability to stop time, walk around, pick things up, slice them open, put them somewhere else, and start time again. That’s not just not the same league, it’s playing a whole different game. reply PontifexMinimus 56 minutes agorootparentYou call it haskish but it's something I've done in the pasty and find useful. I don't find debuggers all that useful, because I often find I'm spending more time thinking about how to use the debugger rather than how to fix the bug; since debugging is hard I want tools that I don't have to think about at all, as they distract me from thinking about the bug. Maybe that's because I don't have enough experience with a particular tool. If I used a debugger more often it would come naturally to me. But I find most of my bugs are simple enough that that doesn't happen, because I write modular code and TDD. reply miningape 4 hours agorootparentprevAnother thing to consider and is important to me - logging objects and state isn't always so simple. It can often be easier for me to open the debugger to look at the state of an object which cannot easily be printed. reply mark_undoio 4 hours agorootparentOut of interest - what sort of objects are hard to print in this way but easy to view in a debugger? reply antonyt 2 hours agorootparentAn object with many fields (in a language with no conveniences for it). An object tree with multiple levels of nesting. A list or dictionary of such objects. In general, print-based debugging requires a greater degree of specificity. If you know exactly what you're looking for it's great. If you are performing a more exploratory sort of debugging, a decent graphical debugger will save you a ton of time. reply miningape 3 hours agorootparentprevIn my case it's basically everything since I work in java, jackson's object mapper can easily get stuck or deserialise something incorrectly if the class hasn't been annotated correctly. So it's simpler for me to pull up the debugger and I can see the \"actual\" data thats making up my object, it also lets me run \"queries\" against anything of interest (i.e. computed fields). The default toString method I've found to be useless almost every time I wanted to inspect an object in our codebase since it just prints the type + \"id\" for the object reply whartung 1 hour agorootparentprevI trend more towards print debugging than breakpoints. To me the beauty of print debugging is you can see the flow, and see it quickly in contrast to the debugger. Simply with the debugger, a lot of the time is spent stepping past (at the moment) superfluous breakpoints. Step, step, step, step, …, step, step, BANG! Versus a quick BANG preceded by a trail of debris I can then postmortem. I use both, naturally, but prefer the crashes with a debris field than walking on eggs to potential disaster. reply lynndotpy 1 hour agorootparentprevI think unit tests and debug/verbose print statements are useful for debugging. Even if you're firing up the debugger, these provide a lot of information up front! But more importantly, they make your project more approachable for contributors who aren't already familiar with the debugger. reply schmidtleonard 4 hours agorootparentprev> If you have a fairly shallow bug ... But most of the bugs that I see aren't that shallow Oh come off it, debuggers shine the brightest when there are lots of unknown unknowns. With printf debugging you can peel back exactly one layer at a time (oops, need to log one more thing) whereas with a debugger you can slice through the Gordian knot. reply nsteel 2 hours agorootparentI agree with this comment but you really didn't need the first 4 words. reply dingnuts 4 hours agorootparentprevTry using a debugger to debug a globally distributed system that humans aren't given access to for security reasons in a post mortem and then \"come off it\" yourself reply schmidtleonard 2 hours agorootparentIs that the only kind of difficulty you can think of? Lol. reply PontifexMinimus 2 hours agorootparentprevI've also used both GUI-based debuggers and printf, and I prefer printf. But the most important thing it to write your code so there aren't many bugs and when there are they are easy to find. I do this using modular code, unit tests and regression tests. reply cess11 2 hours agorootparentprevI use profiling tools more than step-debugging, and printf()/var_dump()/IO.inspect/System.out.println/&c. much more than both, because most of the time I just need to see what the data looks like in a few locations to have a solution. Sometimes the problem doesn't show up immediately in data and the code is too complex or uses a lot of wormhole techniques like particular forms of exception abuse, that's when I might fire up the debugger and browse frames instead. reply samatman 3 hours agorootparentprevIt depends on the code as much as anything. I wrote a regex engine in Zig, and the instant I get a bug report I set breakpoints on a failing test and step through. On the other hand, I'm working on an interactive application, and when I see a problem with it, I add more logging statements until I figure out what the problem is. Any time the logs have excessive detail as a consequence, I gate them behind an 'extra' flag on a per-unit basis, only removing the ones which amount to \"got here\". If I had to pick one technique, it would be logs. I naturally think in terms of a trace through the execution pathway, rather than a step-by-step examination of the state of a small window into the code. It clearly works the other way around for some people. One thing that makes this approach better for me is that debug logging is literally free, Zig uses a lazy compilation model so logging code which doesn't apply to a release compilation isn't even analyzed, let alone compiled, let alone included. In a language which doesn't work that way, there's motive to use printf-only debugging, and clean up after yourself afterwards, and that's extra work compared to firing up a debugger. So it shifts the balance. reply gosub100 4 hours agorootparentprevMy grief with debuggers is due to C++ and template code (usually STL) and optimizations zeroing out values. I wish it had better training wheels to say \"nope that's STL library code, you probably don't want to step any deeper\". That's largely a criticism of C++ itself, though. But yes for this reason I prefer printfs despite 20 years in the game. reply ksylvestre 3 hours agorootparentVisual Studio has natstepfilter https://github.com/ocornut/imgui/blob/master/misc/debuggers/... reply ta988 3 hours agorootparentprevgdb has a skip function and you can exclude STL headers and functions named in special ways so that reduces the noise quite a bit. reply VyseofArcadia 4 hours agoparentprevBut also, experienced programmers should never forget their printf debugging roots. I was debugging something earlier this week that was hit like a hundred times in a tight loop. After the first dozen or so times I told gdb to continue, I realized, wait, this will be faster if I just fprintf some relevant information to a file. Sure enough the file pointed me in the right direction, and I was able to go back and get fancy with \"disp\" and \"cond\" and hit that breakpoint only when I needed to. reply mark_undoio 4 hours agorootparentYou could also use GDB's Dynamic Printf (https://sourceware.org/gdb/current/onlinedocs/gdb.html/Dynam...) to do the logging directly from GDB. Essentially you set it like a breakpoint (attaching a printf style string to a code location) and then just \"continue\" until you've gathered what you want. reply VyseofArcadia 3 hours agorootparentOh sweet. I didn't know about that. I will be adding that to my toolbox. reply cevn 3 hours agorootparentprevIn Jetbrains you can also do a Conditional breakpoint to active only if i=100 or something. reply VyseofArcadia 3 hours agorootparentWell yeah, but I didn't know I wanted i = 100 until I had examined the fprintf output. reply gregthelaw 3 hours agorootparentYou need a time travelling debugger! https://undo.io/ https://rr-project.org/ https://learn.microsoft.com/en-us/windows-hardware/drivers/d... reply amlib 2 hours agorootparentWhat happens if the loop executes some non-idempotent calls? I guess printf debug still has some value :) reply mark_undoio 51 minutes agorootparent> What happens if the loop executes some non-idempotent calls? I guess printf debug still has some value :) Then they'll do the same thing when you replay. Non-idempotent system calls are tricky because they interact with the outside world - but that's still OK. In Time Travel Debug, the process you're debugging is essentially in the Matrix. When it's being recorded everything acts as normal (and it'll see the real results of those non-idempotent calls). When it's being debugged, any interaction with the outside system is prevented and replaced with the behaviour we saw at record time. It'll still think it's doing the non-idempotent calls, they just won't change (or depend upon) the state of the rest of the system. reply crossroadsguy 3 hours agoparentprevSometimes I have had much better results with adding logs especially if an issue doesn't occur always and I am not so sure about the steps either because breakpoints take a lot of time as well. Also, in some cases (esp. mobile UI) breakpoints might actually break the flow and you might not get a proper flow. But yeah mastering the debugger is indeed a must and a GUI debugger is better than a CLI debugger. It's just that at least for me personally logging is first line of debugging :| reply mark_undoio 4 hours agoparentprev> Sure, it doesn't help much for some scenarios (one I've heard people mention is multithreaded code, where logs are better?), but for most people it's not that far from a superpower. Debuggers can be great for understanding multithreaded code - and you can potentially freeze threads and continue others in order to provoke a particular race condition. However they're potentially quite weak at stepping through a concurrency bug - stopping after each line to understand the sequence of events has a good chance of making your bug go away. I'd say you want Time Travel Debugging if you need to capture and step through a rare event: you get to record the bug happening (without interrupting it) and then step through the recording. On Linux, Undo.io (disclaimer: where I work) and rr (open source) are good at this. On Windows, you have Microsoft's own Time Travel Debug solution: https://learn.microsoft.com/en-us/windows-hardware/drivers/d... (nb. there's also GDB's built-in process record technology but I'd recommend against that for any non-trivial software as the overheads are very high) reply 0xfeba 2 hours agorootparentI've had logging slow down a concurrency issue enough to cause the race condition to never appear when logged, but setting a breakpoint (and stopping all threads) prevailed. reply mbrumlow 2 hours agoparentprevIdk. I feel like the second you need to use a debugger your code and design has become too complicated and needs to be rethought. In general anything you would want to debug should probably be exposed as a unit test and the area of concern should have test cases made that trigger the behavior you are concerned about. The entire process of debugging essentially results in the same process as you would need to do to create unit test. While it is faster it is lost once done, making the entire process one shot. reply underdeserver 4 hours agoparentprevI would add to that that in most scenarios where people think debugging doesn't help or won't work - it can. Running inside Docker, multithreaded, multiprocessed, all can be debugged with a little effort. Most often much less effort that repeatedly printf debugging. reply HumblyTossed 2 hours agorootparentAnd a good debug log can help more than either of those. reply cassepipe 4 hours agorootparentprevI am not sure I understand your point. Can you be more explicit ? reply fisf 3 hours agorootparentPeople who think that case X cannot be debugged without printf often don't know the features of their debugger. I.e. look at several of the comments which seem to miss that you can: - Remote debug. - Use conditional breakpoints. - Use breakpoints to trigger commands, e.g. log values, enable other breakpoints, etc. instead of stopping. execution. - Debug multi-threaded code. - Disassemble a fragment. reply cassepipe 1 hour agorootparentOh thanks, I know about that and agree. I did not understand the point about doing debugging in containers. But I think I understand now. I guess they only debugging a program that is running in a container. reply gregthelaw 3 hours agorootparentprevI have a bunch of (36 if you're counting :) short videos and blog posts introducing the advanced features of GDB: https://undo.io/resources/gdb-watchpoint/ reply gregthelaw 3 hours agorootparentprevJust yesterday I gave a talk at MeetingC++ in Berlin on debugging multithreaded code. It's amazing how few developers know anything beyond the very basic of their debugger. If all you know is print, break, continue, next and then you dismiss the debugger as \"not very useful\" then you've not made a judgement based on information but on initial reaction. reply shortrounddev2 3 hours agorootparentprevMany people believe that a debugger won't work in their specific scenario, but often they are wrong; debugger can connect across network boundaries or into other processes that weren't launched by the IDE reply bobmcnamara 3 hours agoparentprevAt least in embedded, often the tools suck. Some ancient version of NetBeans leaking ram like a sieve until it brings down the machine, or a decade old version of Eclipse that can't pull in a newer CDT, running on a fork of OpenOCD with nothing customized for the CPU architecture running dog slow. Sadly, it can be faster to reserve a GPIO, bitbang a TX-only UART, and get on with it. reply HumblyTossed 2 hours agoparentprevI use debug logs extensively. I log a LOT. I can put the logs and code next to each other and trace through the code. So much better than a debugger. With the logs, I don't have to worry about timers or concurrency or any of that. I can take my time and read the code and reason about what's going on. Edit: Logging helps me look at what is going on in prod as well. I can trace messages/transactions completely through the path and if there's an issue, I'll see it. reply tomjen3 4 hours agoparentprevRider shows the value of assignments in your code, on the line they are assigned when you are debugging. This has saved me time when I notice that a value I didn't even think about looking into was wrong. reply shortrounddev2 3 hours agoparentprevI honestly believe it's a cultural thing. I don't think there's any rational reason to not want to use a debugger, but I've met many people who swear it's useless. I think people in web tend not to use debugger, and a lot of Linux people as well. Everybgame developer I've met and most windows programmers use them reply marssaxman 2 hours agorootparentI made heavy use of interactive debuggers earlier in my career. After several years working in environments where debuggers were broken, unhelpful, or not available, I completely lost the habit. It was not so much a cultural thing as simple practicality: logging always works. I'd rather maximize my limited brainpower by focusing on the software I'm building and thinking as little as possible about the tools I'm using. It may be somewhat cultural in that influence from functional programming eventually changed the way I think about state and state transitions, leading me to design my code differently, reducing the amount of debugging I have to do and making it easier to do via logging. reply cmrdporcupine 4 hours agoparentprevEven in multithreaded code, it's absolutely amazing to be able to pause a running program and look at the list of running threads and the values in scope and see where deadlocks might be sitting. It's immediately obvious you're deadlocked, which is actually kind of tricking to suss out with log-style debugging. Modern debuggers can do so much, being able to lay down conditions to only break when certain values are set, etc. etc. Some can even \"rewind\" programs. I'd say most people (including myself) are using only 25% of their debugger's capabilities. Aside: One the reasons I despise working with async Rust code is the mess it makes of working with a debugger. reply hexomancer 5 hours agoprev [–] Slightly off topic but I think it is a good place to ask: One of the few things from windows that I miss when using linux is the debugging experience with visual studio (not code). When debugging a medium-sized C++ project on windows, the launch of the debug build is pretty fast and stepping over lines is almost instantaneous. On linux launching the executable using gdb takes like 10 seconds loading modules and stepping over each line takes like half a second which I think is intolerable (lldb is even worse). Yet I don't see people complaining about this online very much. Am I missing something? E.g. is there a compiler flag that speeds up debug launch time and step speed that I am not using? reply wizzledonker 5 hours agoparentYea, our software stack pulls many dependencies (our software probably totals over 200k loc). We depend on Qt, OpenCASCADE, and a few other heavy C++ Libraries. Stepping over a single line of code in GDB using the TUI can take 3-5 seconds in the worst case. I’ve been meaning to investigate or profile it further when I get the time, but it functionally means I avoid using the debugger except as a “last resort”, or only using it to catch segfaults or unhandled exceptions. It’s very odd. It’s like it doesn’t cache something and ends up doing some strange expensive symbol search every time it hits a breakpoint or something. Curious if anyone has a good solution to this also reply dzaima 5 hours agoparentprevA long time ago, \"set use-deprecated-index-sections on\" improved some things; don't know if any modern compilers need that anymore. I also have a \"disable pretty-printer global builtin\" in my ~/.gdbinit, though I don't recall what that was for, or if I even determined that to improve speed. Currently it seems \"set style sources off\" reduces some startup time. Don't think I've debugged anything your scale though, and I doubt any of my suggestions will actually help. reply GuB-42 4 hours agoparentprev> I don't see people complaining about this online very much I complain about gdb all the time, speed is just one aspect. Step-by-step debugging is just terrible on Linux. Maybe that's actually the reason few people complain about it, they just don't use gdb, instead relying on other tools, especially printf(). I am not in the video game industry, but they seem to be way, way ahead of everyone else, especially Linux (non-game) developers. Maybe some collaboration is in order. As for your specific problem, I don't know. Do you have optimization turned on when debugging? gcc/gdb and the LLVM equivalents let you debug optimized builds, but it is not ideal as knowing which instruction corresponds to which line is complicated, and maybe gdb is working extra hard for it. The \"-Og\" flag is supposed to only do \"debugger friendly\" optimizations, also \"-ggdb\" or \"-ggdb3\" is supposed to be better than plain \"-g\" for use with gdb. reply jmorse3 2 hours agoparentprevEnsure you're building with DWARF5, and enable accelerator tables like .debug_names, which will allow debuggers to receive a pre-prepared index of the symbol names in the program (and thus it doesn't have to parse all the DWARF on startup). Slow stepping is a surprise; there's no OS reason for that to be slower. Possibly if your types are really large and complicated, the debugger has to fetch a lot of data to refresh its view of state each time? reply PhilipRoman 5 hours agoparentprevHaven't observed anything like that. Even with remote gdbserver on a low power embeddeded device, stepping has always been instant for me. Could be a C++ vs C thing. The only thing which takes time is debuginfod downloads. reply hexomancer 5 hours agorootparentHow large is your code base? I am talking about 100K+ LOC with many complex dependencies (mainly Qt modules). reply f1shy 5 hours agorootparent2 Mio LOC, no problem here. Sounds like maybe you have reverse-debugging enabled? I mean target record or target record-full? Anyway, I seldom do step-by-step. I typically work with dprintf. reply hexomancer 5 hours agorootparentNope, with reverse-debugging enabled it will be insanely slow, not something that you can miss. I am curious does your project have large external dependencies or is it self-contained. reply wizzledonker 5 hours agorootparentprevAre you talking heavily templated C++ code as well? I’ve got my suspicions about how much this affects things… reply 3836293648 5 hours agoparentprev [–] This is opposite the typical experience so you have some wedrd setup. Gdb is instant and VS' debugger takes forever. It's why companies like epic games have their own debuggers reply hexomancer 5 hours agorootparent [–] Have you actually compared the debug performance of a large cross-platform application on windows vs linux? I am not saying that you haven't just trying to make sure that your argument is backed by data rather than heresay. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Seer is a graphical user interface (GUI) frontend for the GNU Debugger (gdb) on Linux, designed to enhance user experience with a simple interface.- Developed by Ernie Pasveer, Seer requires Linux, C++17, gdb with \"mi\" interpreter, CMake 3.1.0+, and QT6, and it no longer supports Qt5 beyond version 2.3.- Key features include source file management, variable tracking, and breakpoint management, with support and detailed instructions available on GitHub or via email."
    ],
    "commentSummary": [
      "Seer is a graphical user interface (GUI) for the GNU Debugger (GDB) on Linux, but users report issues such as non-functional font changes and variable hover errors.",
      "Despite its current flaws, Seer has potential if further developed, with users comparing it to other tools like Gede, which is noted for its simplicity and reliability.",
      "Discussions highlight various debugging preferences, including GDB's built-in text user interface (TUI), Neovim, gdb-dashboard, and DDD, with some users favoring logging over debuggers for complex scenarios."
    ],
    "points": 203,
    "commentCount": 129,
    "retryCount": 0,
    "time": 1731674169
  }
]
