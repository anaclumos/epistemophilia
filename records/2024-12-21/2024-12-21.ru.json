[
  {
    "id": 42476828,
    "title": "Судья США признал израильскую компанию NSO Group ответственной за взлом журналистов через WhatsApp",
    "originLink": "https://www.reuters.com/technology/cybersecurity/us-judge-finds-israels-nso-group-liable-hacking-whatsapp-lawsuit-2024-12-21/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42476828",
    "commentBody": "",
    "originSummary": [],
    "commentSummary": [
      "Судья США привлек израильскую компанию NSO Group к ответственности за взлом журналистов через WhatsApp, что вызывает вопросы о ответственности компаний в деятельности по взлому и наблюдению.",
      "Дело подчеркивает этические проблемы, связанные с продажей и использованием киберинструментов, сравнивая их с продажей традиционного оружия, и вызывает обсуждения о возможных юридических последствиях для руководства.",
      "Это также привлекает внимание к более широким вопросам, таким как конфиденциальность, правительственное наблюдение и ответственность компаний социальных медиа за защиту данных пользователей."
    ],
    "points": 331,
    "commentCount": 63,
    "retryCount": 0,
    "time": 1734745103
  },
  {
    "id": 42476192,
    "title": "Компиляция C в безопасный Rust, формализованная",
    "originLink": "https://arxiv.org/abs/2412.15042",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42476192",
    "commentBody": "",
    "originSummary": [
      "Статья Аймерика Фромерца и Джонатана Протзенко обсуждает перевод кода на C в безопасный Rust, уделяя особое внимание безопасности памяти за счет избегания небезопасных функций Rust.",
      "Авторы представляют метод перевода, направленный на типы, статический анализ с использованием «разделенных деревьев» для арифметики указателей и стратегию обработки типов структур C в Rust.",
      "Их подход успешно переводит криптографическую библиотеку HACL* и бинарные парсеры EverParse в проверенную криптографическую библиотеку на 80,000 строк на чистом Rust, сохраняя производительность с минимальным количеством стратегических копий."
    ],
    "commentSummary": [
      "Преобразование кода на C в безопасный Rust сложно из-за фундаментальных различий между языками, особенно из-за модели владения Rust, которая требует значительной переработки для обеспечения безопасности. Инструменты, такие как C2Rust, помогают в переводе, но процесс сложен, и некоторые программы на C нельзя перенести без изменения их семантики из-за присущей им небезопасности. Хотя перевод C в Rust может повысить безопасность и выявить ошибки, безопасность Rust часто неправильно понимается, и формальная верификация кода на C, которая помогает в переводе, не всегда доступна."
    ],
    "points": 257,
    "commentCount": 114,
    "retryCount": 0,
    "time": 1734737403
  },
  {
    "id": 42475703,
    "title": "Рейкастер на Bash",
    "originLink": "https://github.com/izabera/pseudo3d",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42475703",
    "commentBody": "",
    "originSummary": [
      "Рейкастер, вдохновленный игрой Wolfenstein, был реализован на Bash, демонстрируя трудности использования Bash для графических приложений. Проект сталкивается с ограничениями из-за медлительности Bash, отсутствия поддержки чисел с плавающей запятой и ограничений терминала, что затрудняет поддержание состояния экрана и оптимизацию производительности. Несмотря на использование полублоков Unicode для лучшего разрешения, проект испытывает трудности с высокими требованиями к вводу-выводу и неэффективными обновлениями цвета, подчеркивая сложность использования Bash для таких задач."
    ],
    "commentSummary": [
      "Raycaster на Bash — это проект, который симулирует 3D-эффект, используя трассировку лучей один раз на столбец, эффективно визуализируя сцены с минимальным количеством команд `echo`.",
      "Проект примечателен использованием повторения строк для рисования линий неба, травы и объектов, что делает его вдохновляющим примером для создания воксельных рендер-движков в ограниченных средах.",
      "Обсуждение подчеркивает аналогичные проекты трассировки лучей в MS Batch и `awk`, демонстрируя креативность в использовании нетрадиционных языков программирования для сложных задач."
    ],
    "points": 215,
    "commentCount": 29,
    "retryCount": 0,
    "time": 1734733545
  },
  {
    "id": 42475228,
    "title": "Qualcomm выигрывает лицензионную борьбу с Arm за дизайн чипов",
    "originLink": "https://www.bloomberg.com/news/articles/2024-12-20/qualcomm-wins-licensing-fight-with-arm-over-chip-designs",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42475228",
    "commentBody": "",
    "originSummary": [],
    "commentSummary": [
      "Qualcomm одержала победу в судебном споре с Arm по поводу лицензирования дизайна чипов, в частности, касающегося приобретения Qualcomm компании Nuvia.",
      "Дело касалось того, покрывает ли существующая лицензия Qualcomm разработки Nuvia, при этом Arm утверждала, что все процессоры, совместимые с Arm, являются производными от их архитектуры набора команд (ISA).",
      "Нерешительность жюри по поводу нарушения лицензии Nuvia сыграла на руку Qualcomm, вызвав обеспокоенность по поводу лицензионных практик Arm и, возможно, побудив компании рассмотреть RISC-V, открытую альтернативу."
    ],
    "points": 196,
    "commentCount": 108,
    "retryCount": 0,
    "time": 1734730133
  },
  {
    "id": 42479233,
    "title": "Запросите сеть FindMy от Apple с помощью Python",
    "originLink": "https://github.com/malmeloo/FindMy.py",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42479233",
    "commentBody": "",
    "originSummary": [
      "FindMy.py — это обширная библиотека, предназначенная для выполнения запросов в сети FindMy от Apple, с целью объединения разрозненной «сцены Find My». В настоящее время она находится на стадии Альфа, что означает, что её дизайн API может претерпеть изменения.",
      "Библиотека поддерживает кроссплатформенную функциональность, расшифровку отчетов о местоположении, вход в учетную запись Apple и двухфакторную аутентификацию (2FA), предлагая как асинхронные (async), так и синхронные (sync) API.",
      "Установка доступна через PyPi с использованием команды `pip install findmy`, и приветствуются вклады, с предоставлением конкретных руководств по форматированию кода."
    ],
    "commentSummary": [
      "Реализация API FindMy от Apple на Python направлена на улучшение кроссплатформенного доступа, что принесет пользу пользователям Linux и Android, которым в настоящее время требуется Mac для использования функций FindMy.",
      "Этот инструмент может позволить отслеживать местоположения и AirTags без зависимости от экосистемы Apple, хотя существуют опасения по поводу возможного вмешательства Apple для остановки таких проектов.",
      "Обсуждение подчеркивает ограниченную поддержку Apple на разных платформах и трудности в управлении функциями устройства, такими как родительский контроль, за пределами ее экосистемы, с предложениями альтернатив, таких как Blue Bubbles и Firewalla."
    ],
    "points": 184,
    "commentCount": 91,
    "retryCount": 0,
    "time": 1734783295
  },
  {
    "id": 42478107,
    "title": "Наконец раскрыта уродливая правда о Spotify",
    "originLink": "https://www.honest-broker.com/p/the-ugly-truth-about-spotify-is-finally",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42478107",
    "commentBody": "",
    "originSummary": [
      "Расследование независимого журналиста Лиз Пелли выявило использование Spotify фальшивых артистов для увеличения прибыли, особенно в таких жанрах, как джаз и эмбиент. Эта практика, известная как программа \"Perfect Fit Content\", позволяет Spotify избегать выплаты роялти настоящим музыкантам, вызывая обеспокоенность по поводу прозрачности и регулирования в сфере потоковой передачи музыки. Несмотря на противоречия, прибыльность Spotify улучшилась, в то время как музыкальная индустрия и основные СМИ в значительной степени игнорировали эти проблемы, оставляя независимую журналистику для привлечения их к общественному вниманию."
    ],
    "commentSummary": [
      "Статья выражает обеспокоенность по поводу того, что Spotify якобы отдает предпочтение низкокачественной, шаблонной музыке, возможно, созданной ИИ, вместо настоящих артистов, чтобы сократить расходы. Пользователи выражают недовольство музыкальными рекомендациями Spotify, что вызывает дебаты об этике его бизнес-практик и влиянии на артистов. Обсуждение подчеркивает трудности, с которыми сталкиваются артисты на рынке, где доминируют стриминговые сервисы, и предлагает альтернативы, такие как независимое радио или другие стриминговые сервисы."
    ],
    "points": 173,
    "commentCount": 216,
    "retryCount": 0,
    "time": 1734767128
  },
  {
    "id": 42475011,
    "title": "ДОС APPEND",
    "originLink": "https://www.os2museum.com/wp/dos-append/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42475011",
    "commentBody": "",
    "originSummary": [
      "Блог OS/2 Museum исследует винтажные ПК и вычисления, с акцентом на OS/2, DOS и связанные темы. Недавний пост выделяет команду DOS APPEND, программу Terminate and Stay Resident (TSR), которая помогает старым приложениям DOS в доступе к файлам в разных директориях, впервые представленную в DOS 3.3. Пост углубляется в историю, эволюцию и реализацию APPEND, обсуждая её значимость в современных вычислительных контекстах."
    ],
    "commentSummary": [
      "Команда DOS APPEND была исторически значимой для изменения поведения ассемблера без изменения самого ассемблера, подобно современным переменным окружения и монтированию overlayfs.",
      "Команды DOS, такие как SUBST и JOIN, использовались для отображения каталогов и управления путями, помогая преодолевать ограничения длины пути.",
      "Обсуждение включает в себя историческое развитие DOS на мини-компьютерах DEC и эволюцию вычислительного оборудования от мини-компьютеров до современных систем."
    ],
    "points": 112,
    "commentCount": 53,
    "retryCount": 0,
    "time": 1734728699
  }
]
