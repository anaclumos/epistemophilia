[
  {
    "id": 42445037,
    "title": "„Az FTC betiltja a rejtett szemét díjakat a szállodai és eseményjegy árakban”",
    "originLink": "https://www.cnbc.com/2024/12/17/ftc-bans-hidden-junk-fees-in-hotel-event-ticket-prices-.html",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42445037",
    "commentBody": "",
    "originSummary": [
      "„Az FTC bevezetett egy szabályt, amely megtiltja a rejtett díjakat a szállodai és eseményjegyárakban, és előírja az eladóknak, hogy előre közöljék a teljes költségeket.”",
      "„Ez a kezdeményezés része Biden elnök szélesebb körű erőfeszítésének, amelynek célja a feleslegesen fogyasztói költségeket növelő rejtett díjak megszüntetése.”",
      "„A szabály előírja, hogy a szolgáltatási és üdülőhelyi díjakat bele kell foglalni a hirdetett árakba, ami jelentős időt takaríthat meg a fogyasztóknak, bár a jövőbeli kormányzatok és a Kongresszus részéről kihívásokkal szembesülhet.”"
    ],
    "commentSummary": [
      "„A Szövetségi Kereskedelmi Bizottság (FTC) megtiltotta a rejtett szemét díjakat a szállodai és eseményjegy árazásban, előírva, hogy minden díjat előre közöljenek a fogyasztókkal. Ez a szabályozás a ártranszparencia javítását és a fogyasztók megtévesztő kereskedői gyakorlatoktól való védelmét célozza. A döntés elindította a beszélgetéseket a szabályozások szükségességéről, amelyek elősegítik a tisztességes versenyt és megakadályozzák a fogyasztók kihasználását rejtett költségeken keresztül.”"
    ],
    "points": 490,
    "commentCount": 480,
    "retryCount": 0,
    "time": 1734467767
  },
  {
    "id": 42447071,
    "title": "„Ergo Chat – Egy modern IRC szerver, amely Go nyelven íródott”",
    "originLink": "https://github.com/ergochat/ergo",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42447071",
    "commentBody": "",
    "originSummary": [
      "„Az Ergo, korábban Oragono néven ismert, egy modern Internet Relay Chat (IRC) szerver, amelyet a Go programozási nyelven fejlesztettek ki, és könnyű beállítást és használatot kínál.”",
      "„Integrálja egy IRC démon (ircd), szolgáltatási keretrendszer és bouncer funkcióit, támogatja az IRCv3-at, és egy YAML konfigurációs fájlon keresztül testreszabható.”",
      "„Az Ergo az Ergonomadic IRC daemon egy forkja, és olyan fejlesztők hozzájárulásait tartalmazza, mint Jeremy Latt, Edmund Huber, Daniel Oaks és Shivaram Lingamneni.”"
    ],
    "commentSummary": [
      "„Az Ergo Chat egy modern IRC (Internet Relay Chat) szerver, amelyet Go nyelven fejlesztettek ki. Ismert az egyszerűségéről a hosztolásban, minimális erőforrás-felhasználásáról, valamint fejlett funkcióiról, mint például a v3 chattörténet és az állandó több kliens támogatás.”",
      "„Tartalmaz beépített websocket támogatást, amely megkönnyíti a webes kliens hozzáférést, és modern chat élményt kínál, amelyet a felhasználók lehet, hogy nem ismernek fel IRC-ként.”",
      "„A megbeszélések kiemelik az IRC nyílt protokollját és rugalmasságát a Discordhoz hasonló platformokkal szemben, valamint a vitát az IRC tartós csevegési előzmények hiányáról, amit egyesek az átmeneti beszélgetések fenntartásának jellemzőjeként látnak.”"
    ],
    "points": 248,
    "commentCount": 113,
    "retryCount": 0,
    "time": 1734482779
  },
  {
    "id": 42448939,
    "title": "„Az ezüst amulett a kereszténység legrégebbi bizonyítéka az Alpoktól északra.”",
    "originLink": "https://archaeologymag.com/2024/12/oldest-evidence-of-christianity-north-of-the-alps/",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42448939",
    "commentBody": "",
    "originSummary": [],
    "commentSummary": [
      "„Egy Frankfurtban felfedezett ezüst amulett a kereszténység legrégebbi bizonyítéka az Alpoktól északra, amely 230-270 közötti időszakra datálható.”",
      "„Az amulett egy latin feliratot tartalmaz keresztény elemekkel, beleértve az Újszövetségre és a Triszágionra, egy liturgikus himnuszra való utalást.”",
      "„Ez a felfedezés jelentős a kereszténység korai terjedésének és hatásának megértéséhez a régióban, kiemelve annak integrációját a helyi hagyományokkal.”"
    ],
    "points": 199,
    "commentCount": 175,
    "retryCount": 0,
    "time": 1734510672
  },
  {
    "id": 42447053,
    "title": "„Az XOR Textúra (2004)”",
    "originLink": "https://lodev.org/cgtutor/xortexture.html",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42447053",
    "commentBody": "",
    "originSummary": [
      "„Az XOR textúrák úgy jönnek létre, hogy egy pixel x és y koordinátáira alkalmazzák az XOR műveletet, ami egyszerűvé teszi őket a létrehozásra és hasznosak a textúra leképezők tesztelésére. Bár az XOR textúrák nem alkalmasak demókhoz vagy játékokhoz a túlzott használatuk miatt, különböző RGB értékek alkalmazásával vagy HSV-ből RGB-be való átalakítással változatos színeffektusok érhetők el. Hasonló textúrák hozhatók létre AND és OR műveletek alkalmazásával, ahol az XOR 1-et ad vissza, ha a bitek különböznek, az AND, ha mindkét bit 1, és az OR, ha bármelyik bit 1.”"
    ],
    "commentSummary": [
      "„Egy felhasználó leírta, hogyan hozott létre egy XOR textúrát x86 assembly használatával, ami egy jellegzetes vizuális hatást eredményezett, és felkeltette az érdeklődést hasonló technikák iránt.”",
      "„A megbeszélés utalt a \"munching squares\" nevű vizuális hatásra, amely a 1960-as évek PDP-1 számítógépéből származik, kiemelve az ilyen grafikák történelmi kontextusát.”",
      "„A résztvevők erőforrásokat és tapasztalatokat cseréltek, beleértve Lode Számítógépes Grafikai Útmutatóját, és felfedeztek kapcsolódó témákat, mint például a Hamming-távolság textúrák és a glitch algoritmusok kreatív projektekhez.”"
    ],
    "points": 198,
    "commentCount": 46,
    "retryCount": 0,
    "time": 1734482604
  },
  {
    "id": 42446846,
    "title": "„Ruby JSON optimalizálása, 1. rész”",
    "originLink": "https://byroot.github.io/ruby/json/2024/12/15/optimizing-ruby-json-part-1.html",
    "originBody": "",
    "commentLink": "https://news.ycombinator.com/item?id=42446846",
    "commentBody": "",
    "originSummary": [
      "„A Ruby json gem karbantartója a teljesítmény javítására összpontosított, azzal a céllal, hogy a leggyorsabb JSON elemző és generátor legyen Ruby számára. A fejlesztések célja, hogy csökkentsék az olyan alternatívákra való támaszkodást, mint az oj, amely bár gyorsabb, problémákkal küzd a monkey patching és az instabilitás terén. Az optimalizálások közé tartozik a felesleges ellenőrzések elkerülése, a valószínű feltételek előtérbe helyezése, a beállítási költségek csökkentése és a keresési táblázatok használata, ami akár 30%-os sebességnövekedést eredményez.”"
    ],
    "commentSummary": [
      "„A cikk a Ruby JSON kezelésének teljesítményjavításait vizsgálja, foglalkozva a feldolgozási időkkel és összehasonlítva más könyvtárakkal, mint például a simdjson.”",
      "„Kiemeli a JSON optimalizálásának kihívásait Ruby-ban, beleértve a keresőtáblák használatát, a SIMD (Single Instruction, Multiple Data) utasításokat, valamint a C++ helyett a C99 használatának korlátait.”",
      "„A vita kiterjed a JSON és Ruby elnevezési konvencióira is, javaslatokat kínálva a camelCase és snake_case átalakítások kezelésére, és egy sorozat része, amely további betekintéseket nyújt egy következő cikkben.”"
    ],
    "points": 196,
    "commentCount": 42,
    "retryCount": 0,
    "time": 1734480532
  }
]
