[
  {
    "id": 41713063,
    "title": "COBOL has been “dead” for so long, my grandpa wrote about it",
    "originLink": "https://wumpus-cave.net/post/2024/10/2024-10-01-death-of-cobol/index.html",
    "originBody": "Cobol Has Been \"Dead\" For So Long, My Grandpa Wrote About It 2024-10-01 In June of 1992, my grandfather had an article published in Technical Support magazine proclaiming the death of Cobol. It naturally contains some of the buzzwords of the time, such as fourth-generation programming language (4GL). If you’re not familiar with that term, suffice it to say that the Wikipedia page lists several examples, and Cobol has outlasted most of them. There’s a text version of the article available in archives of the NaSPA: http://www.naspa.net/magazine/1992/t9206003.txt The word dead would seem to have shades of meaning. Perhaps Cobol is not dead; it may be a Zombie. So, something can be dead and yet not gone? Right! Cobol is an excellent example of that phenomenon. COBOL is probably not alone; there are, I suspect, even some vestiges of Autocoder still extant. Autocoder, for those under 45 who may have never heard the term, was a precursor of COBOL. It is unlikely anyone would argue very forcefully that Autocoder is not dead, yet some remnants of it are probably still with us. As you might notice, he had a dry wit. There was one time I was able to reflect one of his retorts right back at him, and my grandma was so proud; the student had become the master. There was one thing that kept the Cobol zombie shambling along, and that’s the Y2K problem. Make no mistake: as much as it was hyped in the news at the time, and as much of a nothingburger it seemed to be, Y2K was a gigantic problem. It necessitated training up a new generation of Cobol programmers. That may have kept Cobol going for a while longer. These days, I avoid the term “dead” for programming languages at all. If they ever had a large installed base, then they never die. They have long tails where they trail off into obscurity with no junior programmers learning it. My grandpa died on Sept 1, 2024 at 91 years of age. Officially, he died of pneumonia. My grandma had died the previous April, and he had asked not to receive any treatment.",
    "commentLink": "https://news.ycombinator.com/item?id=41713063",
    "commentBody": "COBOL has been “dead” for so long, my grandpa wrote about it (wumpus-cave.net)404 points by hardburn 23 hours agohidepastfavorite396 comments flatpepsi17 21 hours agoArticle starts mentioning 4GL's - a term I have not heard in a long, long time. COBOL's promise was that it was human-like text, so we wouldn't need programmers anymore. A lot like \"low code\" platforms, and now LLM generated code. The problem is that the average person doesn't know how to explain & solve a problem in sufficient detail to get a working solution. When you get down to breaking down that problem... you become a programmer. The main lesson of COBOL is that it isn't the computer interface/language that necessitates a programmer. reply vishnugupta 12 hours agoparentI agree with you by and large except for this part. > COBOL's promise was ... we wouldn't need programmers anymore..average person doesn't know how to explain & solve a problem COBOL wasn't intended to be used by an \"average\" person but rather those with deep domain knowledge. They would know the business processes so well that they could transcribe it in COBOL with little or no need to learn how the computers worked. In some ways similar to analysts/data folks using SQL to communicate with databases. While at it let me share a few more aspects of the top of my head. COBOL and 4GLs in general were primarily intended to be used to build business applications; payroll, banking, HRMS, inventory management and so on. Even within that emphasis was more towards batch processing operations to reduce the burden on people doing routine bulk operations like reconciliation. COBOL harks back to the times when there was no dedicated DBMS software. Which is why you see so much focus on how files are organised and the extensive verbs around files which somewhat resemble SQL today. reply moomin 10 hours agorootparentIn my experience, often it’s hard to find that person with deep domain knowledge, and even when they do, it’s unstructured, they take things for granted they shouldn’t* and the have no appreciation of the demands of formalism. Getting anything you can use to construct a work plan, never mind a detailed feature list, out of clients can be a dark art. *To the point I have repeatedly experienced a point close to the end of the project where they go “What do you mean you don’t handle a case I have failed to mention for the entire duration of the project?” reply dcminter 9 hours agorootparentI recall a spec doc from a domain expert that said something like: \"The transaction consists of a credit stub and a debit stub. If the debit stub is missing and is of type X then we do A and if it is of type Y then we do B.\" How to know what flavour the missing item was? Absolutely no mention of that... reply chii 6 hours agorootparentIt's interesting that domain experts all exhibit the same cognitive issue - their assumptions are just so ingrained that they cannot articulate it at all. The fact that they \"know\" a missing stub would have a type is because they actually have some more information than they let on, and this information is only known by the expert. For example, they know if the submission was from party A, it must be type X. But that fact might not ever be recorded in the computer system, in a way that the old business process would've had a record of. And this is just one small example - imagine something more complex! So realistically, the job of a programmer is to force an expert to articulate all of their assumptions. IMHO, the best way to do it is to be sitting with the expert, and observe exactly what they do. reply eru 4 hours agorootparent> IMHO, the best way to do it is to be sitting with the expert, and observe exactly what they do. Or you give them a prototype of the program, and see what they complain about? reply discretion22 3 hours agorootparentMy experience is that invariably results in \"development by veto\". Each prototype they say that's not what I want, give me something else (that I'll fail to describe just like the last time) and I'll tell you that is wrong too after you've worked on it for a few weeks. Occasionally, you'll randomly get something they accept - but only for a few weeks until they come across some missing capability for some other thing they never told you about. reply randomdata 55 minutes agorootparentYou still have to actually listen to the complaints. \"That's not what I want\" does not mean try again, it means they have no interest in what you are trying to offer in even the most basic sense. The lesson from that type of complaint is that you are barking up the wrong tree. Time to move on to something else. When you are solving a real problem, you will still receive complaints, but they will be much more constructive. reply Seylox 3 hours agorootparentprevOh, you're onto something. May I slap a sticker on it and call it \"agile\"? reply normie3000 2 hours agorootparentHow about \"extreme programming\"? reply zknow 4 hours agorootparentprevyou might say the domain expert expects the coputer to also already be a domain expert reply nerdponx 4 hours agorootparentprev> In some ways similar to analysts/data folks using SQL to communicate with databases. But SQL has the exact same problem. Except for very trivial scenarios, you can't just be an expert and plop your expertise into a SQL query. You have to learn how to use SQL to use SQL. reply vishnugupta 1 hour agorootparent> You have to learn how to use SQL to use SQL. As with any other tool one has to learn it to effectively use it. Some find the learning curve not worth it and stick with Excel which is OK. But the thing is even Excel has to be learned to make full use of its potential. reply randomdata 30 minutes agorootparentKeep in mind that the context is around domain experts being able to transcribe their domain knowledge into a machine-understandable language without concern for the intricacies of the machine it is executed on. That is where COBOL and SQL are said to have failed to live up to the hype, of which I'd agree. SQL is not a particularly good abstraction. Even for relatively trivial tasks, you still need to understand how computers work. EXPLAIN is the bread and butter of SQL users. Ultimately every abstraction is leaky. There will never be a solution where you never need to understand how computers work under all circumstances. But my impression is that you can go a lot further in Excel before the stuff going on behind the scenes starts to get in your way? From what I have seen, Excel itself is more likely to get in your way before not knowing how computers work does. reply tannhaeuser 10 hours agorootparentprev> COBOL and 4GLs in general COBOL dates back to 1959, much earlier than 4GLs, and the cited 1992/1999 articles make the point that 4GLs were poised to replace the likes of COBOL and FORTRAN when in fact those dinosaurs, or rather nautili since still living, turned out to outlive 4GLs except SQL (when counted as 4GL). reply froh 12 hours agoparentprev> The problem is that the average person doesn't know how to explain & solve a problem in sufficient detail to get a working solution. I intuit this also is an intrinsic limit to LLM based approaches to \"you don't need them expensive programmers no more\" with LLMs magically \"generating the solution\" you move the responsibility for concise expression of the problem up the ladder. and then you \"program\" in prompts, reviewing the LLM-proposed formalization (\"code\"). I other words, the nature of \"programming\" changes to prompt engineering. alas you still have to understand formal languages (code)... so there'll always be plenty to do for humans who can \"math\" :-) reply mmcdermott 8 hours agorootparentThere is a disconnect somewhere. When I read online, I hear about how GenAI/LLMs replace programmers and office workers. When I go to work, I mostly hear the question of how we can apply GenAI/LLMs, apart from discussion of the general buzz. Maybe this is a reflection of local conditions, I'm not sure, but it doesn't seem like the truly revolutionary changes require the solution to find a problem. It was immediately clear what you could do with assembly line automation, or the motor car, or the printing press. reply eru 3 hours agorootparentElectricity famously took perhaps twenty years for people to slowly figure out how to re-organise factories around it.. Hence the delayed impact on productivity figures. To elaborate: in the bad old days of you had one big engine, eg a steam engine, that was driving shafts and belts all around the factory. There was a lot of friction, and this was dangerous. So you had to carefully design your factory around these constraints. That's the era of multi-story factories: you used the third dimension to cram more workstations closer to your prime mover. With electricity, even if you have to make your own, you just need cables and you can install small electric motors for every task on every workstation. Now your factory layout becomes a lot more flexible, and you can optimise for eg material flow through your factory and for cost. That's when factories becomes mostly sprawling one-story buildings. I simplify, but figuring all of that out took time. reply conradev 3 hours agorootparenta quote from Steve Jobs, explaining that the breakthrough invention was the fractional horsepower motor: \"Let’s look at the brief history of computers. Best way to understand it’s probably an analogy. Take the electric motor. The electric motor was first invented in the late 1800s. And when it was first invented, it was only possible to build a very, very large one, which meant that it could only be cost-justified for very large applications. And therefore electric motors did not proliferate very fast at all. But the next breakthrough was when somebody took one of these large electric motors and they ran a shaft through the middle of a factory and, through a series of belts and pulleys, brought…shared the horsepower of this one large electric motor on 15 or 20 medium-size workstations, thereby allowing one electric motor to be cost-justified on some medium-scale tasks. And electric motors proliferated even further then. But the real breakthrough was the invention of the fractional-horsepower electric motor. We could then bring the horsepower directly to where it was needed and cost-justified it on a totally individual application. And I think there’s about 55 or so fractional-horsepower motors now in every household.\" reply mmcdermott 1 hour agorootparentprevAdoption takes time, for sure, especially when dealing with fixed assets like a factory. The difference I'm poking at is that electricity had a clear value proposition and improved over time. I see people looking for the value proposition in GenAI/LLMs, which brings me to the original question. If GenAI now was like early electricity, we would know what we wanted to use it for, even if we weren't there yet. That isn't what it looks like to me, but I'd be curious to know if that's just where I'm sitting, metaphorically speaking. Every company I have worked for had more work than hands for programming and other knowledge work. Capacity is valuable. Does anyone here see GenAI teams being spun up for \"management\" by a human? Or do we see fancy Google search / code completion? reply jerf 2 hours agorootparentprevI think it's a lot of little things. There's a lot of people very motivated to keep presenting not just AI in general, but the AI we have in hand right now as the next big thing. We've got literally trillions of dollars of wealth tied up in that being maintained right now. It's a great news article to get eyeballs in an attention economy. The prospect of the monetary savings has the asset-owning class salivating. But I think a more subtle, harder-to-see aspect, that may well be bigger than all those forces, is a general underestimation of how often the problem is knowing what to do rather than how. \"How\" factors in, certainly, in various complicated ways. But \"what\" is the complicated thing. And I suspect that's what will actually gas out this current AI binge. It isn't just that they don't know \"what\"... it's that they can in many cases make it harder to learn \"what\" because the user is so busy with \"how\". That classic movie quote \"Your scientists were so preoccupied with whether they could, they didn't stop to think if they should\" may take on a new dimension of meaning in an AI era. You were so concerned with how to do the task and letting the computer do all the thinking you didn't consider whether that's what you should be doing at all. Also, I'm sure a lot of people will read this as me claiming AI can't learn what to do. Actually, no, I don't claim that. I'm talking about the humans here. Even if AI can get better at \"what\", if humans get too used to not thinking about it and don't even use the AI tool properly, AI is a long way from being able to fill in that deficit. reply adamc 5 hours agorootparentprevNot to mention someone would need to evaluate and test the proposed solution... which with today's LLMs I would not bet heavily on its correctness. This is some years ago, but a friend of mine, trained in a 4GL that was still a procedural programming language, went somewhere that was using a higher level, model-based generation of code based on that language. It turned out they still needed a few people who understood how things worked beneath the hood. I am deeply skeptical that human-language level specifications will ever capture all the things that really need to be said for programming, any more than they do for mathematics. There are reasons for formalisms. English is slippery. reply devjab 10 hours agorootparentprevThis is only true to an extend. We have a lot of digitally inclined workers who’re developing programs or scripts to handle a lot of things for them. It’s imperfect and often wildly insecure and inefficient, but unlike any previous no-code or “standard” solution it actually works. Often in conjunction with “standard” solutions. On one hand you’re correct in that there will always be a need for programmers. I really doubt there will be a great need for generalist programmers though. The one area that may survive is the people who’re capable of transforming business needs and rules into code. Which requires a social and analytical skillset for cooperating with non tech people. You’ll also see a demand for skilled programmers at scale and for embedded programming, but the giant work force of generalist developers (and probably web developers once Figma and similar lets designers generate better code) is likely going to become much smaller in the coming decades. Then is basically what the entire office workforce is facing. AI believers have been saying AI would do to the office what robots did to the assembly line for years, but now it actually seems like they’re going to be correct. reply stroupwaffle 9 hours agorootparentAnother parallel is type foundries and printing presses. At one point people operated these linotype machines which used molten lead. Of course this transitioned to photo typesetting which, to the dismay of everyone had poor results. Along came Donald Knuth and TeX to fix those deficiencies. NOTE: mechanical printing has a profoundly better result no matter what. It is the ink and the impression in paper that makes it superior (for letterforms and such). So, if AI follows suit, we will witness the dumb (but very knowledgeable) AI start to supplant workers with questionable results; and then someone (or a team) will make a discovery to take it to the limit and it’ll be game over for large swaths of jobs. https://en.m.wikipedia.org/wiki/Hot_metal_typesetting reply Animats 7 hours agorootparentTeX was predated by a family of macro-based document languages that began with RUNOFF and continued through roff, nroff, troff, ditroff, and groff. Plus tbl, eqn, and mm*. Some manual pages still use that stuff. Most Linux systems still install it by default. TeX has roughly the same concept, a macro-based layout language, but a better design with far less cruft. reply jasfi 12 hours agorootparentprevA lot of business people want to get something functional that they can sell, and hire a programmer if/when they can afford one. That niche is seeing a lot of uptake with regards to LLM based approaches. This works for them because an MVP typically isn't a lot of code for what they need, and LLMs have a limited scope within which they can generate something that works. reply immibis 7 hours agorootparentprevIn fact we've been using programming LLMs for a long time, which we call compilers. reply mannykannot 5 hours agorootparentThe acronym LLM stands for what is now a term of art for a class of information- processing systems which are produced by, and themselves produce their output by, methods very unlike those for compilers. This is just as well, considering the consequences that would follow from compilers routinely hallucinating. reply unscaled 14 hours agoparentprev4GL were supposed to be even more of that, with more \"human-language-like\" constructs added to the language to deal with things besides general logic, simple data structures and arithmetic. The author mentions \"4GLs\" were all the rage in the early 1990s, but I doubt that that was true outside of the mainframe world. The 4GL movement, as a conscious movement, seems to have always been highly mainframe oriented (the Wikipedia article mentions reducing the amount of punched cards necessary for a program as initial goals). By the 1990s you could categorize many languages as 4GL, but I doubt this term was used with any enthusiasm outside of the mainframe world. It was the opposite of a buzzword. 1992 wasn't too long ago. Linus Torvalds has already released Linux, and Guido van Rossum was already working on Python. Perl was already gaining popularity, and Haskell also saw it first versions released. The forefront of technology was already shifting from expensive workstations to consumer-grade PCs and language designers gave little thought to 4GL concepts, even when they happened to design something that could qualify as a 4GL for personal computers (e.g. dBase, HyperTalk, AppleScript). I agree that human-like text is a bad idea for most use cases of programming, but I think this is not why the 4GL movement failed, and in fact most 4GLs weren't more \"natural language-like\" than the 3GL COBOL. I think the main problem was that the 4GL movement has never really defined a new generation or anything useful at all. The previously defined generations of language introduced revolutionary changes: translation from friendlier assembly language to machine code (2GL) and compilation (3GL). The only change we can properly define from the loose definition of 4GL is \"put more features that used to be external routines or library directly into the language\". This approach worked out relatively well when the language was domain-specific. This is how we got some of the most successful 4GLs like SQL, R and MATLAB. These languages have syntax that deals directly with data tables, statistics and linear algebra directly into the language and became very useful in their own niche. The concept of a general-purpose 4GL, on the other hand, was always destined to boil down to an overly bloated language. reply int_19h 10 hours agorootparentdBase and its numerous descendants and competitors (FoxPro, Clipper etc) were extremely popular for line-of-business desktop applications in the 90s. And, yes, they are indeed traditionally categorized as 4GLs - and, given how nebulous the definition always has been anyway, I think that \"traditionally categorized\" is the most practical definition that you can use here. But, yes, I agree that aside from the generally more verbose and sometimes unwieldy syntax, there wasn't really that much to it in practice. I did work with FoxPro, and the reason why it was popular was not because you had to write things like \"ACTIVATE WINDOW\", but because it had many things baked directly into the language that nicely covered all the common tasks a pre-SQL data-centric app would need - e.g. a loop that could iterate directly over a table. reply Delphiza 6 hours agorootparentThat class of software also allowed for very efficient data capture against normalised tables. A recall as early as Paradox for DOS (something I haven't thought of for a while) in about 1990 being really simple tools for creating one-to-many database capture 'forms' (with selection boxes, date drop downs, the lot). The richness of form design and tight coupling to the database meant that the language did not need to be very powerful and could just run as a script on top of a rich database environment. The PC-based successor to mainframe 4GL concepts was late-nineties RAD (Rapid Application Development) of Delphi and VB. MS Access was the Windows successor to those tools and was wildly successful as a way for 'business people' to build apps. It took many years for windows low-level app development or the web to catch up to the richness, but they have never really achieved the same level of non-programmer usability. reply int_19h 1 hour agorootparentYep, and C# (or VB.NET) + WinForms sort of carried that torch well into the aughts. You can still see traces of that all over classic .NET - stuff like DataSet and stock widgets designed specifically for those kinds of CRUD apps such as BindingNavigator. It's interesting that we have largely abandoned this approach to software development despite its amazing productivity in that niche. I guess a large part of it is because custom-made software is much less common in general than it used to be. reply gopher_space 3 hours agorootparentprevIn my mind ‘low-code’ was perfected in FileMaker Pro and then quietly abandoned because you still needed an interest in the subject to use it. reply farrelle25 8 hours agorootparentprevGosh it's a long time since I heard 'Clipper' mentioned. I used to do 'PC' apps for Banks in the early 90s. Turbo Pascal and Clipper were popular with us. (We used PL/1 rather than COBOL for batch processing) Then VB 4.0 started to get popular around 1996 and ruled the roost... So many technologies... does anyone remember 'SUPRA' from that era! (think it was supposed to be a 4GL language/interface for mainframe databases) reply El_RIDO 6 hours agorootparentSigh I work at a company that not long ago added support for applications written to use SUPRA to their portfolio. It's not dead yet, there are companies out there still running it in production and willing to spend money to replace it, while keeping their business logic. reply adamc 5 hours agorootparentWhere I work we still use Software AG's Natural for mainframe programming. It's not really a bad language for what it is (very much focused on database programming). The main limitation is that they never created or provided great mechanisms for something like a standard library, so we do a lot in Python now, and occasionally other languages. From my perspective, the standard libraries of languages like Python and Java, as well as effective package managers such as pip or npm or cargo, have raised the bar so high that it is difficult for old, specialist languages to compete in most cases. Although the security problems of the package managers give me some pause. reply cmiles74 5 hours agorootparentprevI have to disagree that 4GL languages being aimed at the big iron, mainframe world. After browsing the Wikipedia page, there seems to be some confusion around what a 4GL would actually be... For instance, RPG is lumped into this category despite it functioning at a pretty low level and predating the idea by about 30 years. When I first started working with RPG we had worksheets from IBM that felt reminiscent of punch cards. In my experience, most 4GL languages were aimed at microcomputers and did reasonably well. Others have mention FoxPro and dBase, 4D and FileMaker also slot nicely into this category. IMHO, they had great success in the back office of small businesses. I have seen some effort to force SQL into this category, perhaps with the idea that a SQL database with stored procedures technically meets the 4GL definition. reply AdieuToLogic 19 hours agoparentprev> COBOL's promise was that it was human-like text, so we wouldn't need programmers anymore. A lot like \"low code\" platforms, and now LLM generated code. The more things change, the more they are the same. reply bloppe 14 hours agoparentprevEven LLMs have not realized the dream of a natural language computer interface. Everyone who uses them significantly has to read up on prompt engineering and add little things like \"explain your steps\" or \"describe it like I'm 5\" or other oddly specific sequences of characters to get the results they want. That's not natural language. It's a DSL. reply rbanffy 11 hours agorootparentWorse. It’s a DSL without a formal specification. You are writing prompts blindly in hopes they trigger the desired behaviour from the LLM. A bit like writing enchantments to force demons to do your bidding. reply namaria 8 hours agorootparentWorse. You're just providing tokens which will get values you don't know or can predict attached to them and trying to influence values which will produce tokens based on rules you don't know, which change all the time for reasons you also don't know. Hopefully the tokens you get are the ones you're hoping for, and if you don't have complete mastery of the subject you won't know if they are the tokens you need or can even trust their meaning. reply anthk 6 hours agorootparentZ Machine text adventures are far more predictable... reply ykonstant 8 hours agorootparentprev>A bit like writing enchantments to force demons to do your bidding. But without the cool chanting and poetic language; just like cyberpunk was realized without the vivid imagery and neon lights :( reply rbanffy 7 hours agorootparent> just like cyberpunk was realized without the vivid imagery and neon lights :( The 21st century never ceases to disappoint. It’s a cheap, low budget and dystopian version of what we imagined. reply NoGravitas 6 hours agorootparentTo be fair, what we imagined was dystopian, too. It's just that some people with a lot of ambition and not much media literacy didn't realize it was dystopian, and set about to build that future. reply rbanffy 4 hours agorootparentI am from the Thunderbirds generation. It wasn't a perfect 21st century, but at least it was cool. And the sound track was excellent. reply zknow 4 hours agorootparentprevcould have been high budget dystopian at least! reply TheOtherHobbes 3 hours agorootparentThe budget is extremely high, but very unevenly distributed. reply rbanffy 3 hours agorootparentThis is why I love Hacker News so much. reply systems_glitch 7 hours agoparentprevThis is often the exact reason I give to people when they don't understand why Amy and I don't think \"everyone should be a 'coder!'\" should be pushed in schools, heh. When you're graduating students from high school who go into college as engineering hopefuls who can't solve X - 2 = 0 for X, what hopes does the average individual have for solving programming problems? reply UniverseHacker 21 hours agoparentprev> we wouldn't need programmers anymore This blows my mind, since it seems like a fairly low level/terse language compared to more modern domain specific languages. But in some sense they were dead right... since (I assume) that what \"programming\" meant at the time was being able to write raw machine code by hand on paper, and have it work - something few people can or need to do nowadays reply AdieuToLogic 19 hours agorootparent> This blows my mind, since it seems like a fairly low level/terse language compared to more modern domain specific languages. I have heard others and myself describe COBOL in many ways, most involving creative expletive phraseology which would make a sailor blush, but \"low level/terse language\" is a new one to me. > But in some sense they were dead right... since (I assume) that what \"programming\" meant at the time was being able to write raw machine code by hand on paper ... LISP and Fortran predate COBOL IIRC. reply UniverseHacker 2 hours agorootparent> LISP and Fortran predate COBOL IIRC I didn't mean to imply COBOL was anything close to the first programming language, only that I was speculating what 'programming' generally meant within computer culture at the time. I was not around at that time- but I strongly suspect that directly writing machine code and/or assembly was still common practice throughout the entire 1950s, whereas it is far less common nowadays. I wonder what year Fortran overtook assembly and became the most popular programming language during that era? I suspect it was well after COBOL came out. Surely there is a lag time for any new programming language to become commonplace. I couldn't find any data on that, but I was able to find that C was released in 1972, but took until 1982 to overtake Fortran, and until 1985 to overtake Pascal. I often forget how slow new things propagated through the culture in pre-internet times. reply andsoitis 12 hours agorootparentprev> LISP and Fortran predate COBOL IIRC. Correct. Fortran, LISP, and COBOL were invented in ‘57, ‘58, and ‘59, respectively. reply jll29 10 hours agorootparent> Yes, but the ideas behind COBOL were older still. Flowmatic, COBOL’s predecessor, dates back to 1955, so it really just depends how you count. Yes. but the ideas behind LISP were older still: Church's typed lambda calulus was conceived in 1936. reply moomin 10 hours agorootparentprevYes, but the ideas behind COBOL were older still. Flowmatic, COBOL’s predecessor, dates back to 1955, so it really just depends how you count. reply thorin 8 hours agorootparentprevSaying we don't need \"programmers\" any more was true when a programmer was someone who used very low level languages such as Assembly and probably had used punched cards in the past etc. Languages like cobol / fortran / plsql gave analysts a chance of designing things on paper and handing off to developers or even doing the development themselves which couldn't have happened in the past. Using something like python these days feels like the kind of thing that would have been thought of as a 4gl in those days for some use cases. However, python also works as a general purpose programming language. reply UniverseHacker 5 hours agorootparentThat was exactly my point reply electroly 18 hours agorootparentprevDo you mean something other than \"terse\" here? Or are you perhaps thinking of a different language? I cannot possibly imagine that adjective being used to describe COBOL. It is the #1 textbook example of a verbose language--the opposite of terse. reply UniverseHacker 18 hours agorootparentWhat I mean is that it is an attempt to make a high level domain specific language, but is not my modern standards reply wvenable 15 hours agoparentprevMy company is finally upgrading away from a product that is written in a 4GL language. This product probably started out on a Unix but was ported to Windows decades ago. It has both a web and classic VB front ends. All the source code is available and theoretically I could make changes and compile it up. The language itself is basically just plain procedural code but with SQL mixed right in -- somewhat like DBase or Foxpro but worse. I think the compiler produces C code and is then compiled with C compiler but it's been a while since I looked into it. Requires a version of Kornshell for Windows as well. reply agumonkey 8 hours agoparentprevI spent very little time in the cobol world but what I got is that its use outgrew many times its original design (batch processing not too complex tables/rows). Whenever you start to need complicated state machines and abstractions the language will implode. reply actionfromafar 20 hours agoparentprevVision 4GL. Like VB but cross platform and with a horribly unstable IDE which would corrupt the source code. (Which was in some kind of binary format not amenable to source control.) reply norir 22 hours agoprevI think of scala in this context. I think that scala is basically dead at this point in the way that COBOL was framed in the article. Yes, there are still many businesses/services that have critical components written in scala but current mindshare has cratered for new projects. I only single out scala because I have spent a lot of time with it and have seen it go through the hype cycle (in 2012-14 it seemed like I was constantly seeing doing $X in scala pieces on HN and I almost never see it referenced here anymore). It's probably a natural and inevitable phenomenon (and a bit of a shame because scala did get some things right that other mainstream languages still have not). reply guessmyname 19 hours agoparentI know a couple of engineering teams at Apple that are working on new projects in Scala, while also maintaining some legacy systems. Some of these projects are quite critical to the company’s ecosystem, e.g. test systems. I’ve spoken with several engineers who helped create these systems years ago; they’re all now in senior management positions. Some still stand by the technology choices made back then, while others are more open when given a chance to reflect. The general consensus is that if Kotlin had been available at the time, or if Swift had been a viable option for back-end services, they definitely wouldn’t have chosen Scala for those projects. reply emmelaich 17 hours agorootparentSurprised they don't use Swift. Or is that too unstable? Or is there a on-JVM requirement? reply worthless-trash 15 hours agorootparentMy money is that they started these projects before swift was available on linux. I have no evidence to say that apple use Linux, but businesses gotta business so isnt a big bet to make. reply swiftcoder 10 hours agorootparentEven if the servers run MacOS, swift wasn't really being aimed at backend usecases for the first few years of its existence.... reply mozman 15 hours agorootparentprevApple is BSD based - not Linux. reply scottlamb 15 hours agorootparentApple is a company, not an operating system. The parent is almost certainly aware macOS is BSD-based and is suggesting Apple also uses Linux in e.g. cloud deployments. They are of course correct. reply andsoitis 11 hours agorootparentprev> The general consensus is that if Kotlin had been available at the time, or if Swift had been a viable option for back-end services, they definitely wouldn’t have chosen Scala for those projects. But they were not. reply bad_user 16 hours agoparentprevScala is very much alive and kicking. https://redmonk.com/sogrady/2024/09/12/language-rankings-6-2... The initial hype has died off and that's OK. The hype cycle is inevitable for all languages. Also, predictions rarely happen, mostly because the landscape has changed. Mainstream programming languages can no longer die like Cobol did. E.g., Java has been dying ever since 2001, surviving the dotcom bubble, .NET, the P in LAMP, Ruby, JS, or Go. Python was supposed to die on its version 3 migration, with people supposedly moving to Ruby. FWIW, Scala is the world's most popular FP language, it has good tooling, and libraries, and Scala 3 is a wonderful upgrade. reply norir 14 hours agorootparentI spent 3 years working on scala tooling in my free time. One of my libraries is used by the vast majority of scala users (it is a dependency of other widely used tools). There was growth from 2018-2023 but it has flatlined over the last year. Right when theoretically it should be getting the boost from scala 3 having now been stable for a bit. Personally I feel that scala has too much in the language and the compiler is too slow. The tooling is pretty good but it is finicky and ends up getting slow and/or unreliable with larger projects. Even if I were to restrict myself to a small subset of scala, I would still be unsatisfied with the long compile times which was the primary reason I decided to move on. I don't know if I agree with your contention that languages can't die like COBOL. I think you can relatively easily keep a legacy scala system up, put it in maintenance mode and write new features/products in something else. That is what I expect is already happening with scala and that this trend is likely to accelerate. Keep in mind also that Martin Odersky is nearing retirement age and it's really hard to imagine scala without him. He has much more power/control than the head of most languages. reply bad_user 13 hours agorootparentIMO, there's rarely such a thing as maintenance mode. Projects constantly evolve, and in turn this drives more investment in tooling and the ecosystem needed to keep those projects up. And this investment is what eventually drives more new projects and fresh blood, keeping the language fresh and in demand. Again, look at Java. Ofc, there's always the question of what happens with a market that isn't constantly growing due to zero-interest rates phenomenon. I guess we'll see, but IMO, that's problematic for newer languages, not established ones. I too am a contributor of very popular libraries and am very familiar with ecosystem. One thing to keep in mind is that the language's culture has evolved. When I picked up Scala, back in 2010, the Future pattern and Future-driven libraries were all the rage. Whereas nowadays people prefer alternatives which now includes blocking I/O (Loom), with Future-driven libs being a risk going forward. reply int_19h 10 hours agorootparentI don't think many people would describe Java as \"fresh\" these days. In demand, sure, but this is overwhelmingly driven by existing large enterprise codebases. Also, for all the talk about nifty new features, how much stuff is still on v11 even? reply bad_user 9 hours agorootparentI understand from where your reply is coming from, but again, I was reading the same opinions about Java since more than 2 decades ago. > overwhelmingly driven by existing large enterprise codebases That happens with all mainstream languages, but it's a feedback cycle. The more popular a language is (in large enterprise codebases), the more it will get used in new projects, for obvious reasons. People want to get shit done and to have good ROI and maintenance costs. Therefore, the availability of documentation, tooling, libraries, and developers helps, in large and small projects alike. And yes, Java is quite fresh, IMO. reply int_19h 1 hour agorootparentTwo decades ago was 2004; that would be when Java first shipped generics. I remember those times and I don't think the sentiment was similar then. People certainly had many complaints about Java, and more specifically about some elements of the stack such as EJB, but as a whole I don't recall it being predominantly seen as \"legacy\" back then the way it is now. reply baud147258 9 hours agorootparentprev> how much stuff is still on v11 even? We've had a potential client ask for a PoC in Java 8, to integrate with their current system... But yeah, our product is deployed with Java 11 and since some dependencies have issues with 18, we'll likely stay that way for a few more years reply surgical_fire 9 hours agorootparentprevI've been a Java developer for nearly 2 decades, in multi companies, despite being proficient with other languages. Java just happened to pay better. Nearly all companies I worked for were developing new systems, tools, etc. Rarely I was doing maintenance on \"existing larger enterprise systems\". reply bigger_cheese 17 hours agoparentprevI think Perl today is probably closer to COBOL it was massive for a time, felt like it was everywhere. Nowadays it is increasingly niche. Like COBOL there is still a lot of perl code out in the wild. reply bigiain 13 hours agorootparentPerl footgunned itself with the Perl5/Perl6/Raku and almost 2 decades between major releases debacle. I wrote a _lot_ of Perl, starting with Perl4 cgi scripts in the mid 90s, then Perl5 and FastCGI and Apache ModPerl. I loved it as a language. But by the time I left that gig in 2008, nobody wanted Perl any more. I mostly drifted around PHP, Python, Ruby, and Javascript for a few years until moving away from full time coding and up (sideways?) into leadership and mentoring roles. Interestingly I got _into_ the Perl gig when I bailed on a COBOL maintenance gig where it was clear nobody was at all interested in listening to how their 10+ year old custom COBOL warehouse management app (written by the company the boss's sister used to own) running on EOLed Wang minicomputers - was completely incapable of dealing with 4 digit dates for Y2K. I jumped ship to make that somebody else's problem. reply chihuahua 57 minutes agorootparentprevWhen I used to work for ZipRecruiter in 22-23, much of their codebase was Perl. Pretty mind-boggling. There were even people working on it who would construct arguments why it was a perfectly reasonable language for ongoing software development. But some VP put his foot down and said \"no more new projects in Perl!\" and they started using Go for new projects. reply enriquto 13 hours agorootparentprev> Nowadays it is increasingly niche. Still, if you buy a brand new mac today, most of the executable scripts in the system are written in perl. You can check it yourself by running: file -bL /bin/* /usr/bin/*cut -d' ' -f1sortuniq -csort -n As of 2024, macOS is essentially a Perl operation. reply rightbyte 9 hours agorootparentThe bad thing with using a proper language like Perl for admin scripts is that they will degenerate into programs. The good thing with Bash etc is that they are so bad you wont and when you do it anyway atleast you get some whip lashes for it. reply anthk 6 hours agorootparentThere are good programs written in Perl. PangZero, Synaptic, most of Debian config tools... reply xarope 15 hours agorootparentprevtime to brush up my perl. Requires some zen'ess and flow time to grok the #@[]{} again... reply kevindamm 14 hours agorootparentIt's been over a decade for me but I remember the # for tables and @ for arrays not being that hard to decipher, it was the \"where is this $_ referring to at this point?\" kind of puzzles that would stump me, especially when pattern matching application implicitly uses it too. reply skipkey 5 hours agorootparentA pretty good rule of thumb was always, $_ is most likely the thing you need it to be. Oh, there are exceptions, but in my experience they were generally caused by code that had been made inappropriately clever. reply mcv 19 hours agoparentprevScala can never be dead like COBOL because it has never been alive like Google. I love it too, but Scala has always been fringe. COBOL was everywhere. reply darksaints 17 hours agoparentprevIt's a shame too. Scala3 is actually an amazing language, and has the best type system out of all of the common functional languages. Part of me wonders if Scala would still have died off if Scala3 came out first. reply xiaodai 8 hours agorootparentocaml, f# and haskell reply alfalfasprout 18 hours agoparentprevWhat about spark? Given the incredible adoption of spark across the industry I don't see scala going away anytime soon. reply SOLAR_FIELDS 16 hours agorootparentProbably PySpark and similar connectors are robust enough now that they are not necessarily joined at the hip like they were 10 years ago. If you were working in Spark at the maximal of its hype cycle around then you basically had to use Scala in at least some extent - even if it was simply a core team exposing native API’s in other languages - since it was the most native approach that exposed all the apis you needed. Nowadays probably other languages and wrappers have caught up enough that using Scala is not such the absolute requirement it was before. reply tdeck 13 hours agorootparentThis is very true in my experience. I worked in Spark for 3 years and never touched Scala code. I imagine there are many people using Spark who don't even know it's written in Scala, or whose only interaction with Scala is accidentally stumbling on Scala Spark documentation when you were meaning to Google for PySpark. reply 7thaccount 20 hours agoparentprevI assume it became less popular when Java became more bearable. reply n_plus_1_acc 20 hours agorootparentAnd kotlin came around with great IDE support, and with good features without the complexity of scals reply lol768 7 hours agorootparentIt's hard to understate how much better the Kotlin IDE support is vs Scala. In terms of reliability the Scala IntelliJ plugin really seemed to go downhill for me with Scala 3, which was a real shame. reply paulddraper 20 hours agorootparentprevKotlin made Java bearable. reply Lance_ET_Compte 18 hours agoparentprevScala is the basis for Chisel HDL, which is widely used in the RISC-V design community. reply empathy_m 20 hours agoparentprevDoes Twitter still have software in Scala? reply winrid 15 hours agorootparentYes https://github.com/twitter reply xiaodai 8 hours agoparentprev> scala did get some things right that other mainstream languages still have not Examples? reply jackcviers3 17 hours agoparentprevWe use it for all new services at Writer. Jack Henry, SiriusXM, Starbucks, Disney streaming services, and Capitol One all have services (not data-science) divisions producing new projects in Scala ranging from the last five years to today. There are many others, of course, bit those are the teams at places people have heard of off of the top of my head. It's far from dead. What does seem to be dying are the framework-centric Play Akka, and non Airflow raw Spark jobs out there. Now, a lot of that is because they were framework jobs that happened to originate in the scala ecosystem - scala was largely incidental and was chosen because of founding project members' preferences or due to the need to develop a commercial market, imho. reply BirAdam 16 hours agorootparentThat’s precisely why people think it died. It became stable and therefore useful. It is therefore not talked about every 3 seconds by startup founders. reply mozman 15 hours agorootparentprevAs a fellow vendor for one of those names you dropped - I recommend you not to name any companies. reply wholinator2 15 hours agorootparentWhy? Googling every name given returns public job postings for (senior) scala engineers. Presumably scala divisions at these companies are public knowledge? reply mhh__ 17 hours agoparentprevScala3 looks fairly interesting. The problem however is that I can't be bothered to roll out a JDK, and secondly if I did it might encourage someone else to start writing Java again internally. Risky payoff... reply lefessan 7 hours agoprevCOBOL is not dead, but it's difficult to get access to, because there is almost no open-source tooling around it for Linux. We (OCamlPro) have created a project, called SuperBOL, to create an open-source environment around the GnuCOBOL open-source compiler (that is now very mature and used by companies). We have already released the VScode extension with an LSP for COBOL to get a modern IDE, and we are working on other tools, mostly depending on our customers. reply kwanbix 7 hours agoparentThe problem is not so much access to tooling, but access to mainframes. I can learn COBOL in a day or two, and I would love to work on a \"boring\" COBOL job, but I have no experience with mainframes. reply lefessan 5 hours agorootparentThe goal of SuperBOL (https://superbol.eu) is to allow companies to migrate from mainframes to Linux workstations, to get a \"modern\" experience of development and deployment. Indeed, mainframes are hard to get access to, and require a training by themselves, I have worked on Linux and Windows for years, and development on a Mainframe has nothing in common :-) I think the problem of COBOL is not only the lack of COBOL developers, it is the lack of expertise in COBOL environments, because they have become obsolete (both on mainframe and proprietary tooling for Linux/Windows). By providing a modern environment on Linux for COBOL, our goal is to solve the hardest part of the problem, as learning COBOL itself is not so hard for existing open-source developers... reply kwanbix 15 minutes agorootparentI imagine 99% of the work is to be done on \"obsolete\" mainframes as you call them. I doubt there is much new development in COBOL in 2024. reply imgabe 7 hours agorootparentprevIs there anything particularly different about mainframes compared to working on a server besides it probably being a different operating system? I assume it has a command line and you ssh into it somehow (or something similar)? Or are they still running punch cards or something? reply julian_t 7 hours agorootparentIt's a very different (and foreign) environment. Job control language, how data is stored... if you come from a typical modern server environment you'd be pretty lost in the mainframe world. reply macintux 5 hours agorootparentIn 1996 I took a TCP class in Chicago for which it turned out I was overqualified; it was mainly how to use tools like telnet and FTP. But what I remember most: the two other students were mainframe programmers, and they were just as baffled by my world as I was by theirs. It really was an entirely different computing paradigm, although 30 years later I probably have enough experience to make more connections than I could then. reply lefessan 5 hours agorootparentprevYou can find videos on Youtube, it's like an IDE where you would do everything in a user interface with menus, but the interface is a 25x80-char screen only :-) Everything is \"almost\" similar to a Unix system, but with different names, files are called \"datasets\", there are very few tools, but every one of them has a language to do very complex tasks... reply tephra 7 hours agorootparentprevI know two people that spend some of their time writing COBOL for a major bank. They do find that part of the job pretty boring, it is basically just writing down SQL queries in a COBOL file and then trying to get passed their 50 year old development workflow (merge to master, then do testing in a testing environment, then get code review..). reply noisy_boy 4 hours agorootparentI would love to do that for a living assuming it has job security, no crazy obsession with \"velocity\" and sane working hours. reply pantalaimon 7 hours agoparentprevWhat about https://gnucobol.sourceforge.io/ https://cobolworx.com/pages/cobforgcc.html reply lefessan 6 hours agorootparentWe are among the major contributors to GnuCOBOL, we use https://github.com/OCamlPro/gnucobol to review our contributions before pushing them on the SVN of Sourceforge. Cobolworx is indeed working on a gcc frontend for COBOL. It's an impressive work (that was presented at FOSDEM this year), but less mature than GnuCOBOL, and tied to gcc, whereas GnuCOBOL can work with any C compiler (llvm, msvc, etc.) by translating COBOL to C. Though we desig SuperBOL to work with GnuCOBOL, it could also be used with GCOBOL when it will be officially stable. reply tombert 22 hours agoprevYou know, one of these days I really need to sit down and play with some of these \"legacy\" languages, like Fortran or COBOL or Ada or APL; languages that have certainly fallen out of popularity but are still used in some critical places. It does make me wonder about millions and millions of lines of Java out there; Java has more or less eaten the enterprise space (for better or worse), but is there any reason to think that in 30-40 years the only people writing Java will be retirees maintaining old banking systems? reply Muromec 22 hours agoparentCobol is still there not because of cobol itself, but because of vendor and platform lock-in. And I guess having monolithic codebase/platform. it’s not even esoteric and difficult, just a lot of it without much structure visible to you. reply danielmarkbruce 21 hours agorootparentThis is what people miss about COBOL. It's not like people are compiling COBOL and running it on Linux on an x86 box. They are running it on legacy operating systems (and hardware) which provide a different set of underlying services. It's a whole different planet. reply crackez 20 hours agorootparentNegativo friendo. The mainframe is turning into a middleware layer running on Enterprise Linux. We've containerized the mainframe at this point, and I mean that directly - eg. Running jcl, multiple CICS regions, all in COBOL that originated on z/OS is now running in k8s on amd64. reply kjellsbells 18 hours agorootparentI hope you're right, but many comments here on HN suggest their experience with mainframes is very different. z/OS and its predecessors provided so many services completely transparently to the application that a mainframe to modernity migration is doomed to fail unless it can completely emulate (or design around) the capabilities provided by the OS and other subsystems. Even ignoring the needs of the super high end customers like banks (eg, cpus in lockstep for redundancy), being able to write your app and just know that inter-node message passing is guaranteed, storage I/O calls are guaranteed, failover and transaction processing is guaranteed, just raises the bar for any contender. K8s is wonderful. Can it make all the above happen? Well, yes, given effort. If I'm the CTO of an airline, do I want to shell out money to make it happen, risk it blowing up in my face, or should I just pay IBM to keep the lights on, kick the can down the road, and divert precious capital to something with a more obvious ROI? I think their \"no disasters on my watch/self preservation\" instinct kicks in, and I can't really blame them. HN thread: https://news.ycombinator.com/item?id=36846195 reply Spooky23 15 hours agorootparentLike anything else, some places are awesome, some not. I’ve seen both. The worst ones are just like modern places with overcustomized PeopleSoft or SAP - except the blobs of off the shelf software were purchased 30 years ago by people long dead. Other places stopped development 20 years ago and surrounded the mainframe with now legacy middleware. A lot of the “COBOL” problems with unemployment systems during COVID were actually legacy Java crap from the early 2000s that sat between the mainframe and users. reply zifpanachr23 2 hours agorootparentprevI work on them full time (not doing application programming and so I can't really speak to COBOL) but this is mostly accurate as it relates to the environment. A lot of these services are completely transparent to the application, but that doesn't mean they are totally transparent to the entire programming staff. The system configuration and programming is probably more complicated (and lower level usually, certainly YAML hasn't really caught on in the Mainframe world outside of the Unix environment) all things considered than something like k8s. So that's where a lot of the complications come in to play. Every application migration is going to necessarily involve recreating in Kubernetes or some other distributed system a lot of those same automations and customizations that decades worth of mainframe systems programmers have built up (many of whom will no longer be around). And however bad the COBOL labor shortage really is, the shortage of mainframe assembly programmers and personel familiar with the ins and ours of the hardware and system configuration is 10x worse. It should also be noted that not everywhere that has a mainframe has this issue. There is a wide disparity between the most unwieldy shops and the shops that have done occasional migrations to new LPARs and cleaned up tech debt and adopted new defaults as the operating system environments became more standardized over time. In the second case where a shop has been following the more modern best practices and defaults and has fewer custom systems lying around, ... the amount of effort for a migration (but also in a lot of ways, the motivation to take on a migration project) is lessened. The case where some company is just absolutely desperate to \"get off the mainframe\" tend to be cases where the tech debt has become unmanageable, the catch 22 being that these are also the cases where migrations are going to be the most likely to fail due to all of the reasons mentioned above. reply Muromec 11 hours agorootparentprev>If I'm the CTO of an airline, do I want to shell out money to make it happen, risk it blowing up in my face, or should I just pay IBM to keep the lights on But that's the thing, we are at the point when \"keep paying IBM\" isn't the acceptable answer anymore. reply kjs3 4 hours agorootparentprevI hope you're right, but many comments here on HN suggest their experience with mainframes is very different. HN is not the place to seek authoritative experience with something like COBOL. reply accra4rx 16 hours agorootparentprev[I work as a SA] . There are many companies that don't have a original COBOL source code only compiled objects which has been running for more than few decades. How can you guarantee that it will run perfectly in k8s . Major companies can never take that risk unless you give them some insurance against failure reply Muromec 20 hours agorootparentprevThere is a major drawback to this approach -- you need to have somebody who knows what they are doing. Total deal breaker in most of the places that have this problem in the first place. reply gerdesj 19 hours agorootparent\"you need to have somebody who knows what they are doing\" That applies everywhere. Your parent comment has managed to stuff a mainframe in a container and suddenly, hardware is no longer an issue. COBOL is well documented too so all good and so too will be the OS they are emulating. I used to look after a System 36 and I remember a creaking book shelf. The code base may have some issues but it will be well battle tested due to age. Its COBOL so it is legible and understandable, even by the cool kids. If you lack the skills to engage with something then, yes, there will be snags. If you are prepared to read specs, manuals and have some reasonable programing aptitude and so on then you will be golden. No need for geniuses, just conscientious hard workers. It's not rocket science. reply Muromec 11 hours agorootparentIt's not the point I'm trying to make. Yes you can do fancy stuff like that and de-mainframing COBOL is to run in on k8s is the path I would personally choose if I had to deal with it. It sounds like a lot of fun and the sense of accomplishment to finally have it running should be great. The problem is -- it's very smart and unique, while organizations that have this kind of a problem don't want to depend on unique set of skills of a few highly capable individuals. Everything needs to be boring and people have to be replaceable. In this paradigm, vendor java with aws lock-in is a cost, but in-house fancy stuff with cobol on k4s done by smart people in house is worse -- it's a risk. reply SonOfLilit 11 hours agorootparentprevThe need applies everywhere, the difficulty of fulfilling it tends to be an order of magnitude more in places that tend to run COBOL. I'm working at one. You wouldn't believe the stories. reply mathgorges 17 hours agorootparentprevThis is fascinating to me as an ex-mainframer that now works on a niche hyperscaler. I would love to learn more! Will you let me know some of the names in the space so that I can research more? Some cursory searching only brings up some questionably relavent press releases from IBM. reply crackez 7 hours agorootparentLook up Micro Focus Enterprise Server and Enterprise Developer. They are now owned by Rocket. reply danielmarkbruce 1 hour agorootparentI second this and know some of the folks who work on Enterprise Server. Good people. They have a partnership of some sort with AWS and there is a bunch of decent docs around Enterprise Server on AWS reply yourapostasy 17 hours agorootparentprevSounds like they’re talking about running IBM Wazi on Red Hat OpenShift Virtualization. As far as I know, there isn’t a System z-on-a-container offering, like you install from a Helm Chart or comes to you from an OCI registry. If it is the IBM I know, it’s completely out of reach of most homelab’ers and hobbyists. IBM Wazi As A Service is supposed to be more affordable than the self hosted version and the Z Development and Test Environment (ZD&T) offering. ZD&T is around $5000 USD for the cheapest personal edition, so maybe around $2500-3500 USD per year? reply danielmarkbruce 20 hours agorootparentprevYup, but the COBOL application doesn't know you've done that. reply Muromec 21 hours agorootparentprevA different kind of cloud you can say. reply danielmarkbruce 21 hours agorootparentha yes. There is actually a pretty cool product that is made by a division of Rocket Software named \"AMC\", it takes a COBOL app running on an IBM system and deploys it to a whole set of services on AWS. There are some smart dudes at that shop. reply Muromec 21 hours agorootparentDoesn't surprise me at all, somebody out there should be smart enough to make good money on that and not be very loud about it either. reply WesleyJohnson 17 hours agorootparentprevWe're running RM/COBOL on RHEL8 VMs backed powered by VMware. I don't work with it, I'm in a different IT area, but our COBOL codebase supports the lion's share of our day-to-day operations. reply overtomanu 2 hours agoparentprevSimilar thing applies to SAP ABAP. It is like Java from a parallel world, where the accumulated cruft for maintaining backward compatibility is 3-4 times more than Java. It also like a low code/no code environment where the language, the UI, ABAP IDE etc is tightly coupled to one another. Like Java, it has continued to add more language features with time, but the legacy code using old constructs is still there in the codebase of many of the orgs. Initially and up to some extent still now, it is verbose and wording wise, very similar to COBOL, then somewhere I guess in the late 90s, OO paradigm wave came in, and it had \"OO ABAP\" with classes and methods. Now cloud wave is influencing it and ABAP now has a new cloud flavor \"ABAP for cloud\" where most of the old constructs are not supported. reply rqtwteye 1 hour agoparentprev\"is there any reason to think that in 30-40 years the only people writing Java will be retirees maintaining old banking systems?\" I don't think so. But it's pretty much guaranteed that a lot of the people who are complaining about COBOL today are writing systems that will be legacy in 30 years. And the generation of programmers then will be complaining about today's programmers. Especially when I look at node or python with tons of external packages (.NET going the same way), I don't see a good long term future. reply 9659 21 hours agoparentprevAda is an order of magnitude more modern and sophisticated than your other examples. I expect Ada will capture 0.05% of the market for the next 100 years. reply johnnyjeans 4 hours agorootparentAda will probably go the way of the dodo as Dependent types catch on. It's phenomenal how ahead of it's time it was, and continues to be. Contracts are an absolute killer feature, and I see a lot of people who are otherwise very serious about memory safety scoff about logical safety, not understanding just how powerful that construct really is. reply tombert 21 hours agorootparentprevFair, I guess the list was “languages that I know were popular at one point but I don’t know anyone really using now”. Ada definitely does seem pretty cool from the little bit I have read about it. I’m not sure why it’s fallen by the wayside in favor of C and its derivatives. reply johnnyjeans 4 hours agorootparentIt's easy to get lost in the modern way we look at compilers and toolchains, but it wasn't always like this. Free compilers basically didn't exist 30+ years ago. Certainly none of the free compilers were good. For the longest time, your only options for Ada compilers were priced at government contractor-levels (think $10k per seat... in the 80s). It's also an extremely complicated language, while C isn't. A single, moderately skilled programmer who can at least make their own FSM parser can write a reasonably complete C compiler in the space of a month. There's no hand-rolling your own Ada compiler. Even just complying with SPARK is a herculean task for a team of experts. This is much the same reason I'm highly skeptical of Rust as a replacement systems language to C. A multitude of very talented folk have been working on writing a second Rust compiler for years at this point. The simplicity and ease of bootstrapping C on any platform, without any special domain skills, was what made it absolutely killer. The LLVM promise of being easily ported just doesn't hold true. Making an LLVM backend is outrageously complicated in comparison to a rigid, non-optimizing C compiler, and it requires deep knowledge of how LLVM works in the first place. reply aidenn0 20 hours agorootparentprevAda was mandated by the DoD for a bit. My understanding is that, in practice, this involved making a half-hearted effort in Ada, failing and then applying for a variance to not use Ada. reply hardburn 19 hours agorootparentI actually met a programmer who worked on military jets. According to her, Ada is only used anymore for the older jets that were already programmed in it, and she worked in C++. reply greenavocado 18 hours agorootparentMilitary jets coded in C++. God help us all. reply FpUser 18 hours agorootparentNo need to be so dramatic. Shitheads will make software fail in any language. Memory \"safety\" will not help you correctly and in timely manner calculate position of flight controls for example. reply User23 17 hours agorootparentOne can write reliable, and I mean airtight good enough for medical devices and nuclear deterrence, in basically any even vaguely modern language (think Algol-60 or later). It’s simply a matter of disciplined design and running on hardware that’s sufficiently predictable. reply 9659 16 hours agorootparentprevyes, this is true. mainly due to a perceived lack of ada programmers on the market. reply actionfromafar 20 hours agorootparentprevOften, I'm sure, but there are large code bases in Ada still. It's a shame, it looks like a really great language I would love. But it's a chicken and egg problem. If only Mozilla had decided on Ada instead of Rust! :-) reply cyberax 16 hours agorootparentAda doesn't offer any safety for dynamic memory. In fact, Ada is now adopting Rust's approach with the borrow checker. reply actionfromafar 11 hours agorootparentGreat! Time to jump on the Ada bandwagon then! ;) reply 7thaccount 20 hours agorootparentprevAda is pretty cool, but not sure if any more modern than APL. Both are actively maintained and useful in different areas. reply sevensor 17 hours agorootparentWhile we’re at it, modern Fortran exists and has its boosters. https://fortran-lang.org/ reply otteromkram 8 hours agorootparentFortran is used in NumPy, so it's not going anywhere for a while. reply int_19h 10 hours agorootparentprevAda has seen quite a few major features added to it in the past couple of decades. reply wbl 15 hours agorootparentprevThe one shop that really used it is now open to C++ and I expect Rust. But their projects tend to last a long time: 3 generations have flown in one of them, etc. reply thayne 18 hours agorootparentprevModern fortran is actually fairly modern too. But most fortran codebases aren't modern fortran, they're Fortran 77. If you're lucky. reply atrettel 17 hours agorootparentI agree that many modern Fortran codes aren't truly \"modern\" Fortran, but in my experience most codes have at least been ported to Fortran 90, even if they largely keep a lot of Fortran 77 baggage (especially the type system and indentation!). In all of my experience, I've really only encountered a single Fortran code being used currently that is actually Fortran 77 in the flesh. That said, I still think many Fortran codes would benefit from using more modern features, since so many are stuck in the past and are difficult to maintain for that reason. reply jsrcout 14 hours agorootparentThe codebase I've been working in lately is mostly pre-77 FORTRAN, maintained as such for all this time. \"Stuck in the past\" is an apt description. reply thayne 14 hours agorootparentprevPerhaps I should have said \"originally written in f77\", and still look like it. reply masto 5 hours agoparentprevI feel like APL is worth the experience, because it's such a different paradigm. I've got a soft spot for it as well because I actually used it. At work. On a PC. In the 90s. My assignment was to figure out how to get data into it, for which I ended up writing a routine that operated on floating point numbers as vectors of 1s and 0s and swapped the bits around to convert from Microsoft to IEEE format. While wearing an onion on my belt, of course. reply Mc91 22 hours agoparentprevI program an Android app for a Fortune 100 company. Last commit where someone edited a Java file was last week. Most of the new code from the past few years has been in Kotlin though. reply Muromec 21 hours agorootparentThis. Nobody wants to have the COBOL problem again, so the developer hiring money follows the programming language popularity market (with a certain regulatory approved laf ofc) reply psjs 20 hours agorootparent“laf” or “lag”? reply Muromec 11 hours agorootparentLag of course. Math doors only open once in 25 years, you know the drill. reply ecshafer 16 hours agoparentprevFortran is pretty nice to write in if you are just writing numerical stuff. If I were just doing a pure numerical simulation, I would rather do it in fortran than c++ or python (without numpy which is just fortran and c++) reply bear8642 19 hours agoparentprevTryapl.org exists if want to play with APL - John Scholes' Game of Life and other excellent videos (https://www.youtube.com/watch?v=a9xAKttWgP4) might spark your interest Other newer array languages exist too - https://aplwiki.com/wiki/Running_APL if want to explore the current space. reply adastra22 22 hours agoparentprevFortran is not a legacy language. reply Suppafly 22 hours agoparentprev>but is there any reason to think that in 30-40 years the only people writing Java will be retirees maintaining old banking systems? It feels like we're getting into that space already. reply Muromec 21 hours agorootparentNah not really. People just started replacing COBOL with java and employers are wise enough to hire people who are 30-40 years minimum from retirement. It can also be upgraded in smaller chunks and finding enough developers for the tool is an important metric corporate is looking at. If anything, banks are actively optimizing for developer experience to make sure 60% of new hires don’t run away in the first year. If anything, banks are better at navigating those kind of structural risks, they were just slow on undertaking such risks exist. If you have an episode of existential anxiety because of dat AI eating mijn job, getting a union job in a bank is a way to hedge this particular risk. reply rightbyte 9 hours agorootparent> employers are wise enough to hire people who are 30-40 years minimum from retirement. Uhm... loyalty is punnished and workers need to change jobs to keep 'market rate' wages. So dunno about that. I think it is more about that newcomers to the job market are easier to abuse. reply gwd 21 hours agorootparentprev> ...employers are wise enough to hire people who are 30-40 years minimum from retirement. Um oh yeah, the reason we're hiring 20-year-olds is because we want to ensure we have lifelong support for the new system we're writing. Not because they're cheaper, they're still idealistic and naive, they'll work long hours for foosball tables and stacks, or anything like that... reply Muromec 21 hours agorootparentIn a place where you can imagine having COBOL, working long hours is frown upon and being idealistic beyond personal integrity isn't a good quality either. Not saying such places aren't cheap, as of course they are. Being cheap is their exact point. reply User23 17 hours agorootparentprev> employers are wise enough to hire people who are 30-40 years minimum from retirement. Well I hope they’re wise enough to not let any good employment attorneys catch wind because that’s blatantly illegal. reply Muromec 11 hours agorootparentIt's not a requirement, but the outcome of hiring results demographics wise is very visible. reply strken 18 hours agorootparentprevI think Android makes a difference here. Sure, a lot of people are on Kotlin, but a lot aren't. reply eslaught 17 hours agoparentprevI wrote a small program in Algol 68 once. It was horrible because it didn't even have heap allocation in the language, so things you'd think of doing in C (e.g., tree data structures) just didn't work. That and all the compiler errors were pure numerical codes which you had to go look up in the manual (not provided). And forget about getting line numbers. I am very much glad I wasn't alive at the time this was the state of the art. reply bigger_cheese 15 hours agorootparentI ported some Algol code into C years ago, despite being completely unfamiliar with Algol I found code very easy to understand. Found the paper with original code here, it's for a Reinsch spline: https://tlakoba.w3.uvm.edu/AppliedUGMath/auxpaper_Reinsch_19... reply pdw 6 hours agorootparentprevYou're probably thinking of Algol 60? Algol 68 definitely had heap operations, the sample code on Wikipedia even showcases them to build linked lists. reply fastneutron 8 hours agoparentprevFortran is alive and well in science and engineering. The more modern standards are much nicer to work with, but largely backwards compatible with stuff written 50 years ago. reply Yodel0914 16 hours agoparentprevI’m not sure I’d choose to use Fortran, but at one point I had to maintain an app that had a Delphi UI and Fortran business logic. The Fortran, although spaghetti, was much less frustrating to work with. reply karlgkk 18 hours agoparentprev> in 30-40 years the only people writing Java will be retirees maintaining old banking systems? I kinda suspect that if Java is still around in 30 years, what we call Java will be - at best - vaguely recognizable. reply jtolmar 16 hours agoparentprevI can't say whether Java as a whole will ever become the next COBOL, but Java 8 already is well on the way there. reply RickJWagner 20 hours agoparentprevIBM offers a free COBOL plugin for VSCode and a nice tutorial with it. I started programming in COBOL (circa 1990) and took the tutorial just for fun earlier this year. reply ttepasse 7 hours agoprevTangentially, I love this tweet: https://x.com/grauhut/status/1000017084435312642 Translated: > \"I found some COBOL at a customer site. Fine. Mainframe. Nothing special. > The last comment is from 1985. > Written by my mother.\" reply brightball 21 hours agoprevFor what it's worth, I'm still actively looking for a COBOL speaker for the 2025 Carolina Code Conference. Been wanting to get a COBOL talk for a while, especially with GnuCOBOL's recent update. https://gnucobol.sourceforge.io/ https://carolina.codes reply eddieroger 5 hours agoprevI'm very late to this post, so I'm sure this will get lost, but in case OP sees it, I'm very sorry for the loss of your grandparents, and hope that you found some joy and comfort in writing about your grandfather fondly in this article, and he has found peace after the loss of your grandmother. reply hardburn 5 hours agoparentThank you! reply msla 22 hours agoprev\"I don't know what the language of the year 2000 will look like, but I know it will be called Fortran.\" —Tony Hoare COBOL is alive in that it keeps changing from era to era, to the point modern COBOL looks rather little like the 1950s COBOL everyone instinctively thinks about when they heard the term. It's as if we were still programming in Algol because Java had been called Algol-94 or something. reply Animats 22 hours agoparentNobody writes MULTIPLY A BY B GIVING C ON SIZE ERROR STOP RUN. any more. reply graypegg 22 hours agorootparentI mean, if you squint your eyes a bit, that could be SQL! So even if it's not COBOL, there's people out there writing in a vaguely english business programming language. reply tannhaeuser 21 hours agorootparentSo you spotted that? I have no proof or links to share, but I've always thought SQL was inspired by, or at least made to not look out of place next to COBOL. I recall COBOL coding card layout interpreted a flag on punch cards at the char column where top-level picture clauses needed to start specifically for designating a line as SQL for static embedded SQL preprocessing. reply DaiPlusPlus 21 hours agorootparentI think it’s more that computers at the time didn’t all have lowercase characters. Consider that even C and C++ supported trigraph/digraph compatibility chars until something like last year (and IBM still complained…): reply erik_seaberg 20 hours agorootparentC is much older than Unicode, so it's not that surprising that some systems are still using https://en.wikipedia.org/wiki/ISO/IEC_646 and replacing some reserved punctuation (e.g., curly braces) with their country's accented letters. reply throw-the-towel 21 hours agorootparentprevAnd SQL kinda dates from the same era, I wonder if this type of language was in vogue 50 years ago? reply tdeck 13 hours agorootparentThe only notable similarities I see are lack of special characters, all caps by default (most languages from this era are actually case insensitive), and using English words. Those characteristics were in vogue 50 years ago because many computers didn't support lowercase characters, and the set of non-alphanumeric characters supported tended to vary a lot between machines. Here's what the Jargon File had to say about EBCDIC, for example: > EBCDIC: /eb´s@·dik/, /eb´see`dik/, /eb´k@·dik/, n. [abbreviation, Extended Binary Coded Decimal Interchange Code] An alleged character set used on IBM dinosaurs. It exists in at least six mutually incompatible versions, all featuring such delights as non-contiguous letter sequences and the absence of several ASCII punctuation characters fairly important for modern computer languages (exactly which characters are absent varies according to which version of EBCDIC you're looking at). reply Suppafly 22 hours agorootparentprevseriously sometimes writing SQL feels more like composing a google query than programming. reply jl6 21 hours agorootparentA great thing about being a programmer is getting to complain about the crappy requirements you have to work with. SQL, on the other hand, is not a program - it’s a precise specification of the result you want, in a format that lets the database engine write the “program” for you. Thus, writing SQL helps you appreciate the struggle to achieve good requirements, and there is a chance you will develop empathy for those cursed to write them. reply int_19h 10 hours agorootparentThat can be said of any program written in a pure declarative language, but even so not all of them look like SQL. And, yes, they are still programs. reply Ekaros 11 hours agorootparentprevWell, it is in the name. Structured Query Language. And I would argue that it is very often right mind send. You are trying to query data, not process it. Thus actually making it query seems rather reasonable paradigm. reply zozbot234 22 hours agorootparentprevThe nice thing about a vaguely English like language is that your average LLM is going to do a better job of making sense of it. Because it can leverage its learnings from the entire training set, not just the code-specific portion of it. reply kibwen 22 hours agorootparentNot for generating it, because the more it looks like prose the more the LLM's output will be influenced by all the prose it's ingested. reply crackez 20 hours agorootparentI've used o365 copilot to analyze a COBOL app I had source code to, and it was great at explaining how the code worked. Made writing an interface to it a breeze with some sample code and I swear I am not a COBOL person, I'm just the Linux guy trying to help a buddy out... It also does a reasonable job of generating working COBOL. I had to fix up just a few errors in the data definitions as the llm generated badly sized data members, but it was pretty smooth. Much smoother than my experiences with llm's and Python. What a crap shoot Python is with llm's... reply valval 3 hours agorootparentprevThe exact opposite is true. reply Smar 22 hours agorootparentprev> print food if tasty? Ruby is nice. reply zdragnar 19 hours agorootparentMaybe I'm in a minority, but I genuinely dislike conditions placed afterwards. They feel great to type out when you're in the flow, but coming back and reading them grates on my nerves. Seeing the condition first means I load a logical branch into my mental context. Seeing the condition after means I have to rewrite the context of what I just read to become part of a logical branch, and now the flow of reading is broken. reply User23 17 hours agorootparentTry thinking of it as prefix if and infix if? And in any event it’s a very natural language pattern if you know what I mean. reply zdragnar 1 hour agorootparentOstensibly, code is read more than it is written. I'd rather stick to forms that favor staying in a flow. Natural language patterns are conversational, and / or use pacing to create emphasis and imply meaning. With code, we aren't reading a natural language. Injecting natural language conventions amongst things like some_string.chars.each { |c| ... } Is entirely unnecessary and unhelpful in my not very humble opinion. reply analog31 18 hours agorootparentprevMan that's almost like Hypercard. reply kernal 15 hours agorootparentprev>Nobody writes MULTIPLY A BY B GIVING C ON SIZE ERROR STOP RUN. You had me at MULTIPLY A BY B reply MathMonkeyMan 20 hours agoparentprevMore accurate might be \"I don't know what the language of 2000 will be called, but I know it will look like Fortran.\" reply 9659 21 hours agoparentprevThis was almost true in 2000. It is not true now. Things change. Slowly. reply j0hnyl 22 hours agoparentprevBut are these legacy systems from the 70s, 80s, 90s using modern cobol? reply NikolaNovak 21 hours agorootparentDepends what you mean; but not necessarily. I am managing an ERP system implemented / went live in 2016. It's working on modern P10 hardware, which was released in 2021. The ERP system is continually updated by the vendor and customized by the client. Even for COBOL running on an actual mainframe, which I think most HNers would think of 1970s dinosaur, most of the actual machines in production would be pretty new. IBM z16 was launched in 2022. So they are \"legacy systems\" in the sense they're not written on a javascript framework which was launched last week, running on lambda instances in AWS :). But they are not \"OLD\" systems, as such. reply zifpanachr23 1 hour agorootparentYep, the system is old in the same way that we could call x86 \"old\". The architecture is backwards compatible with instructions going back to the mid 1960s...but that doesn't mean new instructions and updates to the ISA aren't being pushed out on a pretty regular cadence. The new Telum II processor (and certainly this also implies another big ISA update and new hardware cycle) was announced at Hot Chips just a few weeks ago for example. See: https://chipsandcheese.com/2024/09/08/telum-ii-at-hot-chips-... reply jcranmer 21 hours agorootparentprevAlmost certainly yes. The \"legacy systems\" are likely running on versions of the mainframe with long-term support contracts, whose vendors are committed to providing newer compilers with support for newer versions of the specification as necessary. reply ithkuil 22 hours agorootparentprevWhen you hear about people being paid $X vs 10x$X to fix some cobol; is there a correlation between the age of the cobol system? reply HeyLaughingBoy 22 hours agorootparentProbably not; just a matter of how desperate they are. reply ithkuil 10 hours agorootparentWhich is also a function of how hard it is to find someone who has the required skills to address the problem reply TMWNN 20 hours agoparentprev> \"I don't know what the language of the year 2000 will look like, but I know it will be called Fortran.\" —Tony Hoare Kemeny and Kurtz described Fortran as \"old-fashioned\" in 1968!reply randomdata 1 hour agorootparentHence \"I don't know what the language [...] will look like\". Hoare seems to have made that remark around the same time work to redesign Fortran, what eventually became Fortran 90, began. Presumably he was aware of that effort and thought that Fortran would be able to keep reinventing itself as future needs dictated. reply kukkeliskuu 15 hours agoprevCloud is the new mainframe, except worse. It has all the downsides, but does not have the biggest upside. The grandpa could create (using CICS), a very reliable and performant service that would call other services inside the same transaction. The platform would handle all the complicated stuff, such as maintaining data integrity. Try to write AWS Lambdas that call each other within the same transaction. reply sofixa 9 hours agoparent> It has all the downsides Vendor lock-in from a single vendor? Wildly expensive capex and opex? Impossibility for people to know any of the tech involved without you sending them on a course to learn about it or them already having experience with it? > Try to write AWS Lambdas that call each other within the same transaction. Why is that your comparison? Was deploying to the mainframe as simple as throwing a .zip with your code at an API that you could give access to developers? reply otabdeveloper4 3 hours agorootparent> Vendor lock-in from a single vendor? Wildly expensive capex and opex? Impossibility for people to know any of the tech involved without you sending them on a course to learn about it or them already having experience with it? Is this a trick question? The answer is 'yes' to all three. reply sofixa 3 hours agorootparentFor mainframes, it is. For AWS, it isn't. Outside of a few narrow exceptions, there is no vendor lock-in into a single vendor. (A container that can run into Lambda can run into Google Cloud Run just fine). There is no capex with AWS. There's a free tier and it's freely accessible to anyone. Anyone, and I mean anyone, can start learning it if they want to. Good luck getting access to a mainframe to play around to see how and what works. Or finding any useful tutorials from this century. reply jtotheh 2 hours agoprevI worked for a while as a contractor for the US Dept. of Education Student Loan system. It was z/OS with DB2 and most new business logic was done in this weird language \"Gen\" https://www.broadcom.com/products/mainframe/application-deve... . Gen can supposedly \"generate\" java and other stuff but they used it to generate COBOL for the mainframe. You could debug the Gen code on the 3270 emulator, rather than trying to deal with the generated COBOL. There were a small number of people (like 6) who were handling that code. The data and I guess some of the code went back to like 1980 at least. There was so much legacy code, I doubt they've changed platforms. I was supposed to be more a Java guy but I did a little Gen. Mainframe is very alien to me. The people that knew it well could really crank on it, though. I joined when they were converting an MS ASP front end to a Java one. So we wrote Java that users interacted with via the web and that made calls to Gen (really, to cobol). In retrospect there was a lot wrong with that operation... One interesting problem that came up once was that the mainframe didn't sort things the same as Java. It turned to be caused by EBCDIC vs UTF. reply sigmonsays 2 hours agoparentthanks for sharing that, it's super entertaining to consider what crazy things people might be doing in the future. Debugging EBCDIC was a surprise and got me laughing. reply snovymgodym 22 hours agoprevAs always, these discussions will depend on your definition of \"dead\" and \"alive\". If we can call a technology dead once no new business is built on it, then I think we can safely call COBOL dead (and the IBM 390x aka Z/OS platform along with it, for which \"COBOL\" is usually a proxy). But if we say that anything still being used in production is not dead, then of course COBOL is alive and significantly more alive than many other things which are younger than it. But this shouldn't really be taken as a positive point for COBOL or the mainframe ecosystem. It's simply a fact of life that organizations tend to stick with the first thing that works, and for the types of entities involved in the first wave of digitalization (e.g. governments, banks, airlines) that was usually an IBM mainframe along with the software that runs on it. reply zifpanachr23 1 hour agoparentIf by new business we literally mean startups, then that has been the case basically forever, even back in the 60s and 70s. Mainframes were never really for new businesses in the startup sense of the word. The barrier to entry has always been kind of extreme. So the big customers even back in the day were always old insurance companies and banks and governments etc. It wasn't really until minicomputers that \"new businesses\" doing computing at all was feasible. So in that sense, not much has really changed, and for the target market of the product, I don't think it makes sense as a good metric for whether the platform is dead or alive. reply 8fingerlouie 12 hours agoparentprev> and the IBM 390x aka Z/OS platform along with it The problem with killing the mainframe is that no other platform really exists that can handle the amount of simultanous IO that you can get on a mainframe. Our mainframe easily processes 100m transactions per hour, with room to spare. And keep in mind that those transactions are for the most part synchronous, and will result in multiple SQL transactions per transaction. Yes, eventual consistency is a thing, but it's a very bad match with the financial world at least, and maybe also military, insurance or medical/health. You can of course also partition the workload, but again, that creates consistency issues when going across shards. Also, COBOL is far from dead, but it's slowly getting there. I don't know of a single bank that isn't actively working on getting out of the mainframe, though all projections i've seen says that the mainframe and COBOL will be around until at least 2050. Give that a thought. That's 26 years of writing COBOL. Considering that COBOL programmers are also highly sought after, and usually well paid, one could literally still begin a career as a COBOL programmer today and almost get a full work life worth of it. reply DaiPlusPlus 21 hours agoparentprev> we can call a technology dead once no new business is built on it You don’t suppose any bank - or other large financial institution - might have standardised on Cobol for their core business flows/processes? In which case a new business-unit or “internal startup” team (e.g. a new category of insurance product) might very-well have some part written in Cobol so it integrates with the rest of the bank - or at very-least might be built-on-top of the org’s existing Cobol-running infrastructure (i.e. Not written in Cobol, but still runs on Z/OS because there’s no budget for buying new commodity x86 racks and the people to manage and run them). reply snovymgodym 19 hours agorootparentSure, I know for a fact that what you're describing exists. That's not really what I mean by new business being built on it. That's a case of a very large and old business already being so locked into the mainframe ecosystem for their core systems that anything new they try to do ends up needing some kind of integration system with the legacy system. What I mean is that nobody starts a business today and says \"Ok, we need an IBM mainframe running DB2 and we'll have a bunch of COBOL, ReXX, and PL/I programs for handling our business logic\". reply zifpanachr23 1 hour agorootparentThere was a decent amount of that going on in China in the 90s and early 2000s actually in the banking sector. You probably won't see much \"new business\" until you see companies in new large markets explode in size. As in you are unlikely to ever see \"new business\" in the US, because you'd need a new bank or something to somehow explode to the size of one of the big four and suddenly realize they need to get on board with what all the competition is doing in order to compete. But it has happened at least a little within the past couple of decades, most notably with China but there have probably been other examples in Asia. reply makeitdouble 17 hours agorootparentprevI was under the impression that banks with core COBOL processes all had an intermediate layer in Java/C# to deal with these kind of integration. We saw exactly the case of a new business unit being created, and like most other units it wouldn't get direct access to the lowest layer, and interact instead with a saner level of API and modules in the language of their stack. reply jamesfinlayson 14 hours agorootparentYeah that my impression too - I haven't worked in banking but I've worked at a few places with core functionality written in Fortran and then web-facing API layers on top of that (some was in Java in think). reply calibas 14 hours agoparentprevCOBOL is undead. reply palisade 7 hours agoprevOh, btw, COBOL has the 2038 problem and it is right around the corner. We're going to need A LOT of new COBOL engineers to fix it. It runs so much of our world. We managed to save the world from Y2K in the nick of time. But, I'm not sure if we're going to have the minds necessary to solve 2038 by then as the can has just been kicked down the road without consideration. If anyone is worried there won't be jobs, there WILL be jobs. Not to be too macabre, but we need to transfer the knowledge while the people who have it are still alive, can remember and can teach others to pick up the torch. And, let us call it was it is, of those remain and still have the desire to make the effort to transfer that knowledge. It is easy to look back on y2k and think well that wasn't a big deal, but the only reason it wasn't is because people tirelessly worked to stop it. It is a testament to their success. Regarding y2k Robert Bemer tried to warn people in 1971, with 29 years left to go. And, Peter de Jager published his attention-getting article \"Doomsday 2000,\" in 1993 (in Computerworld), with a mere 7 years left which finally put the fire under everyone's ass. Keep in mind, there were still many original COBOL programmers and mainframe experts left to talk to at that time. And, there was a lot less code to change back then than there is now. Voting tabulation, insurance, utilities, administrative systems, banking, ATMs, travel, healthcare, social security, point of sale, IRS, pension funds, TACTICAL NUKES, hotel bookings and payroll programs. More than 800 billion lines of COBOL code in production systems in daily use. For better or worse, it is the very bedrock of our modern society. If you want to replace it with something that you want to maintain instead, that's fine too but we're running out of time. \"Danger, Will Robinson! DANGER!\" https://www.youtube.com/watch?v=OWwOJlOI1nU \"Listen the nothing will be here any minute. I will just sit here and let it take me away too. They look... like... big... strong hands.... Don't they?\" https://youtu.be/symP4QT7wLU?feature=shared&t=24 reply JackSlateur 4 hours agoparent> we need to transfer the knowledge while the people who have it are still alive Nah. We need to not transfer that knowledge, because the problem will be solved when the house is on fire. But do not worry : nothing will happen until then. If those people cared, they would work to replace all that cruft, not enhance it to fix 2038. reply palisade 3 hours agorootparentI hope you're right and it just solves itself. reply coldpie 4 hours agoparentprevThis sounds interesting, but I wonder who this message needs to be directed to? As a dev who doesn't work there, I can't just go \"fix 2038 for the post office.\" Are you encouraging devs like me to go try to get themselves hired into these positions now, and advocate allocating resources to fix these problems? Are you trying to tell the higher-ups at these places about a problem they might not know about? reply palisade 3 hours agorootparentI'm not sure! The problem might need to be addressed from lots of different directions; university coursework, companies and organizations depending on these systems paying more and hiring more people, more devs getting into these jobs, a thinktank to sit down and think through how best to address the problem, government regulation, etc. I'm not sure any one thing is going to deal with this, it's such a massive issue. reply palisade 5 hours agoparentprevForgot to mention the post office. And, there are probably many more. reply palisade 21 hours agoprevNote: I'm getting some hate from others who think I would pick or prefer COBOL over a modern language. I wouldn't. I was making an outside-the-box \"devil's advocate\" objective observation. I just wanted to preface that here. Okay, the rest of my original comment remains below: The irony is that we already had a memory safe and stable language in Cobol that was easier to read and understand than Rust. But, no one wants to use it so it is \"dead\" but it runs everything that made the modern age possible. RUST: println!(\"Enter number: \"); let mut input_string = String::new(); io::stdin().read_line(&mut input_string).unwrap(); let number: i32 = input_string.trim().parse().expect(\"Please enter a valid number.\"); let result = if number % 2 == 0 { \"EVEN\" } else { \"ODD\" }; println!(\"The number: {}\", result); COBOL: display 'Enter number: ' accept number if function mod(number,2) = 0 move 'even' to result else move 'odd' to result end-if display 'The number: ',result reply sestep 21 hours agoparentThis is a weird take. Sure, plenty of cool/nice things from old languages (e.g. variable-sized stack frames in Ada) get lost, and some then get rediscovered by future languages, potentially wasting effort. And I don't know COBOL, so maybe you're actually making a good point. But I find that hard to believe. Does COBOL really solve all the same problems Rust is intended to solve? Is it as performant? Can it interface with native code from other languages in the same way? Does it have a usable and sane package manager built on top of a module system that facilitates composability and backward compatibility? Does it have a way to describe the shape of data and errors as ergonomically as Rust's algebraic data types? Genuinely curious: as I said, I don't know COBOL. I'd find it extremely surprising if the answers to all these questions are \"yes,\" though. Just as there are reasons COBOL is still used, there are also (good) reasons new languages have been created. reply palisade 21 hours agorootparentA lot to unpack in this question. Do they solve all the same problems? No, for example COBOL lacks a modern concept of concurrency within a single program. COBOL's concurrency features are based on task-level parallelism, which involves dividing a program into multiple tasks that can be executed concurrently. Is it performant? Yes. COBOL is highly efficient particularly in handling large datasets and complex business logic and its compilers are optimized for reliability and speed. Can it interface with native code? Yes. Does it have a package manager? No. Does it describe shape of data? No. Data structures in COBOL are defined using fixed-length records. Note: I'm not a COBOL expert. I did learn it in college, though. reply Muromec 21 hours agorootparentprevImagine having a shell script being call",
    "originSummary": [
      "Despite being declared \"dead\" in 1992, Cobol has persisted and outlasted many fourth-generation programming languages (4GLs), demonstrating its resilience and continued relevance.",
      "The Y2K problem played a significant role in reviving Cobol by creating a demand for programmers familiar with the language, highlighting its importance in legacy systems.",
      "The narrative suggests caution in labeling programming languages as \"dead,\" especially those with a substantial user base, as they may continue to have practical applications and influence."
    ],
    "commentSummary": [
      "COBOL, often deemed obsolete, remains essential for legacy systems in sectors like payroll and banking due to its integration with reliable mainframe systems.- Despite being designed to be human-readable, COBOL requires significant domain knowledge to accurately translate business processes into code.- The language's continued relevance is underscored by the need for programmers to maintain existing systems, especially with challenges like the 2038 problem on the horizon."
    ],
    "points": 404,
    "commentCount": 396,
    "retryCount": 0,
    "time": 1727810738
  },
  {
    "id": 41719531,
    "title": "I made a game you can play without anyone knowing (no visuals/sound)",
    "originLink": "https://apps.apple.com/us/app/tik/id6720712299",
    "originBody": "Hello everyone! I just launched an iOS game called Tik! and it has no visuals or sound of any kind. So the obvious question is.. how do you play it?The game uses your phone’s Haptics in order to play a rhythm of “Tiks” (haptic vibrations). The user then has to try and recreate the timing of the rhythm they just felt by tapping it anywhere on the screen. It sounds easy, but getting the timing right is tricky, and so it usually takes a couple tries before your able to get it right.The inspiration for the game came from wanting something to do in a really boring presentation. It would have been disrespectful to look at my phone, but I also needed a distraction. I typically hold my phone in these kinds of scenarios, and fiddle with the case, when it occurred to me: what if there was a game I could play just holding the phone anywhere (under a desk, in my pocket, to the side, etc.). Sometime later Tik! was born :)I would love your feedback on it. The game is paid, but if someone would like a promo code to try it please let me know below. Link: https:&#x2F;&#x2F;apps.apple.com&#x2F;app&#x2F;id6720712299",
    "commentLink": "https://news.ycombinator.com/item?id=41719531",
    "commentBody": "I made a game you can play without anyone knowing (no visuals/sound) (apps.apple.com)335 points by appsDev 7 hours agohidepastfavorite223 comments lnyng 5 hours agoBought and played for a while, 83 attempts with 12 corrects and max 2 corrects in a row. It s a very difficult game without visual and sound to aid figuring out the exact rhythm, and the game seems very strict about how much you can be off. Suggestions: - have an option to add 4 constant interval tiks at the beginning to help setup the base rhythm - hold down the small white dot to return to menu so you can see progress without exiting - have a way to visualize a rhythm similar to the example or skip it (maybe two finger hold?) if you are stuck - some rhythms feel to have slightly uneven tempo. Is the duration of the tick taken into consideration when generating the tempo? Interesting game overall. Well done reply lnyng 4 hours agoparentAdditional suggestions: - increase tolerance to slightly off taps, and gradually increase the number of ticks (not sure you already do this but right now it’s too hard win many times in a row) - tik of the day mode. A long tick that challenges people who can win it in fewest trials reply appsDev 1 hour agorootparentThank you so much for buying the app! I am glad to know that you like it :) Also thank you so so much for the in depth feedback! I get what you mean about the game being pretty hard starting out - I was trying to balance between too hard and too easy but it seems I landed a little bit on the harder side - which is something I can fix! Your ideas about adding a constant interval to the start, holding the white dot to return to the menu (love this one!), and seeing progress without closing the app are great! I will definitely take everything you said into account for future updates! The timing of the Tiks is intentionally off to make the game a bit harder and add variety. I think the main thing that impacts how hard it is should be the tolerance of how close ur taps have to be to the Tiks, which is something. I can change to make easier, at least till the user gets around 40-50 correct or something. I love the Tik of the day mode idea and is something I had written too to implement later on. Seriously all your feedback is amazing, thanks so much!! :) reply invalidlogin 6 hours agoprevOP: 1. Use “you’re“, not “your”, for “you are”. It is wrong in the first “screen” image in your App Store listing. 2. Use an ellipsis — three dots, “…”, never two dots. This is in two images in your listing. reply appsDev 5 hours agoparentThanks for the tip! I will fix that (I have the bad habit of using 2 dots all the time) and the \"your\" part will definitely take care of. Thank you!! reply nuancebydefault 5 hours agorootparentAlso there seems to be a missing negation in the accessibility paragraph. reply password4321 5 hours agoparentprevEllipsis also has its own dedicated Unicode code point if you want to get fancy, (U+2026): … reply appsDev 1 hour agorootparentWill check it out, thx! reply 867-5309 1 hour agoparentprevagree with 1. but for 2., any value more than one conveys the same meaning.. reply appsDev 1 hour agorootparentYa thats why I typically am used to using 2, but I think the correct amount is 3 :) reply soneca 3 hours agoprevI have a mobile game idea that is “juggling for blind people”. You would use your phone as the hand to catch and throw balls in the air. All user feedback would be sound (ball going up, then going down) and haptic (catching and throwing the ball). I am just a web dev so I don’t think I have the skills to make it. Just leaving the idea here in case someone wants to build it reply captn3m0 3 hours agoparentYou'll like https://en.wikipedia.org/wiki/Send_Me_to_Heaven - your high score is how high you can throw your phone. Apple unfortunately didn't allow it on the AppStore. It might be possible to do this as a PWA, using https://developer.mozilla.org/en-US/docs/Web/API/Acceleromet... reply appsDev 1 hour agoparentprevThis is a super near idea! Thx for sharing :) I also really agree that Haptics can be used in super unique ways for people with disabilities like blindness, since you are not dependent on visuals. Even for Tik! I tired to add some accessibility labels and support, but the possibilities are truly endless! reply kroltan 2 hours agoparentprevGo for it! https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_A... https://developer.mozilla.org/en-US/docs/Web/API/Vibration_A... https://developer.mozilla.org/en-US/docs/Web/API/Sensor_APIs reply soneca 2 hours agorootparentNice, didn’t know all those functions had web APIs. Thanks, I’ll give it a try reply calimariae 3 hours agoparentprevThat's a really fun idea reply password4321 6 hours agoprevA game for people who get carsick looking at screens, awesome! I would love more suggestions that fall in this same category, aka games for the vision impaired. Where can I sign up for notification of a future Android (specifically Kindle Fire [Kids+]) release? reply pbhjpbhj 5 hours agoparentI think you could do an audio-looping app. You'd make a loop up from a series of instruments, but the instruments would appear consecutively. You choose the loop type (3 bars of 4-4 time, say, I'm not a musician!). Then you get an announcement \"clap\", with a metronome sound in the background, you tap the phone for a beat. Next the app announces \"snare\" and you tap for each snare, etc. Maybe it works best by giving you a few bars of a tune and you make the percussion up to fit? Whatever, I think there's something there. reply password4321 5 hours agorootparentThank you for sharing your idea! Lots of unexplored options with audio for sure, especially music as you pointed out. It would be possible to use the touch screen for multiple inputs split into large regions, multiple fingers, etc. reply appsDev 1 hour agoparentprevThank you so much, I'm glad you like the idea! If I ever release Tik! on android in the future I will reply back on ur comment again here ;) reply jedberg 2 hours agoparentprevSemi-related note, the new iOS has a new feature that provides motion queues to reduce car sickness, called Vehicle Motion Queues. reply appsDev 1 hour agorootparentSearched it up, looks really cool! reply jonpurdy 6 hours agoprevBought it for the novelty, easy decision. Feedback: it's pretty difficult even at the first level. As a distraction, even just easy 2-3 beat patters might be good to start with. So having difficulty levels would be great. Maybe the difficulty comes from the strength of the haptic engine, but not sure how to easily change that (somewhere in Settings app I'm sure). reply appsDev 5 hours agoparentThank you so much for buying it!! I really appreciate it! That is really nice feedback. The main thing that impacts the difficulty is how off the user's taps can be from the exact timing, and I tried to set it at a level that is not too easy/hard - but that is good feedback and will definitely look into it! Till then, I would suggest tapping along to the haptics as they occur just to get a feel for the timing. After a couple of tries it should get easier.. Thanks again for trying it out! reply RedNifre 4 hours agoprevIf you added Morse code, you could play classic text adventures! I don't have an iPhone, but could you also play this with the screen off by tapping on the volume buttons instead? reply appsDev 1 hour agoparentThats a nice idea too! Yes the Morse code with haptics idea can lead to tons of cool stuff! Using volume buttons could be neat, something to keep in mind! Thx reply Wowfunhappy 5 hours agoprevIs there any chance you will port this to the Apple Watch? That's where I'd really want a game like this! It is quite fun, I like rhythm games. reply appsDev 5 hours agoparentThank you!!! Yes I had actually thought of that but felt it would be better to launch with iPhone first - surely something in my mind for the future though :) reply jscheel 4 hours agoprevRead this post on my laptop... got my phone out and went to the app store. You can imagine what happened then. I literally could not find your app. Even searching with the same capitalization and punctuation, or by adding \"game\", etc. to the end. It's a neat idea, and I am purchasing now, but if you want any kind of visibility, you know what you have to do with this name. reply appsDev 4 hours agoparentThats a really good point, going to have to do something about that.. If someone writes \"Tik! haptic game\" or something it comes up, but that is understandably too much to ask from most users. I will try and think of a way to fix this. If you have any ideas please do let me know! Thanks for this comment! reply saint_yossarian 4 hours agorootparentBoring idea: Double it to \"TikTik!\" (assuming the length is the issue, and this name isn't already used) reply appsDev 4 hours agorootparentThat would probably solve the issue of the search! Hopefully does not get confused with TikTok lol :) - nice idea though - will see; thanks! reply esses 3 hours agorootparentI'd personally worry about a cease and desist. How about HapTik? reply appsDev 1 hour agorootparentThat is actually what I was going to name the app originally, since the app relies so much on Haptics - Its definably a great idea and not off the table! Actually could work really well! reply urbandw311er 3 hours agoparentprevTo be fair, App Store visibility improves dramatically over time. Brand new releases are often difficult to find organically. reply appsDev 1 hour agorootparentThat is a good point. If the app gains traction with time then maybe just Tik! with the ! would be enough.. reply furyofantares 4 hours agoprevLove it, although none of the app store copy resonated with me and was a little offputting. I suppose I don't really buy the premise put forth from either direction; I don't buy that it's possible to be present while doing something else (for me anyway) AND I don't buy that this is gonna be immersive. I'm not stating these things as claims; this is just my reaction to the app store copy. I did buy it and love it though. What really works for me is as a way to hang out with my kid when she's doing her own thing. I want to be available to be present at a moment's notice. reply appsDev 4 hours agoparentThank you so much for bringing up these points, and for your purchase!! I tried to make the copy a little intentionally attention grabbing; The idea isn't honestly to be completely present in what is in front of you and on the app, but to use the app as a distraction since it takes your mind off of something in front of you (which is why I used the word immersive) I am super happy to know that you love the app. If there is anything specific about my copy and marketing though that you think I could change to present it better please let me know. Thanks! reply razadots 4 hours agoparentprevI found the app store copy incredibly funny. i found your copy to be rather tedious and offputting. reply furyofantares 1 hour agorootparentI didn't suggest any copy, just gave my feedback on how I read the app store copy. No need for random insults when someone's just giving their experience as feedback. lol? reply appsDev 1 hour agorootparentprevI will look into that, thx! reply ryankrage77 6 hours agoprevDifficult to find by search on the app store - 'tik', 'tik game' (and with the exclamation mark appended) didn't return it, but 'tik! haptic' did. reply birracerveza 4 hours agoparentHad to search by the author's name, \"Tik\" is so incredibly generic not even \"Tik game\" helped. Very neat game otherwise! reply appsDev 5 hours agoparentprevI noticed that too. I am not sure what to do about it though... since I don't want to change the app name. I am happy that writing haptic or game brings it up though! reply mertysn 2 hours agorootparentstill not too late to go with \"haptik\" reply appsDev 1 hour agorootparentExactly, thats what I had thought of originally - could still change it! reply mattw2121 6 hours agoprevI'm over here visualizing people holding their phones in their pocket while continuously tapping on them. The goal of not looking disrespectful might backfire on you :). reply appsDev 5 hours agoparentI get what u mean :) - I usually use it under a desk though, or just to the side. Probably inside a hoodie pocket could work sometimes too - the point being just anywhere that someone will not immediately notice reply creativenolo 2 hours agoprevMy kids play a game where they clap a rhythm and the next person has to clap the rhythm back _unless_ they clap to the rhythm of ‘try not clap this back’. Not tried your game yet… but wonder if this could be included. reply appsDev 1 hour agoparentThat sounds interesting, yes that could definitely be a possibility for the future! reply _bramses 4 hours agoprevVery fun game concept! I got stuck on level two. The difficulty is a bit too much, and it seems when i’m halfway through my pattern input a random haptic feedback happens from my phone, which throws me off/signals i’ve failed? iPhone 15 Pro Max/iOS 18 reply appsDev 1 hour agoparentYes! The way the app works is if you mess up then it has an error haptic that tells you messed up and plays the sequence again, and if you get it right then there is a clapping like haptic. There is a help section if you click the ? at the top right of the screen when you first open the app (to see it again just close the app from the background and the re-open it, and you will see it again) It has a full tutorial explaining everything well Thank you so much for downloading the app too! I have seen other comments about it being too hard too and thats something I will try to fix in an update! :) reply giancarlostoro 5 hours agoprevEveryone else is focused on this being a game about when you're bored to keep yourself busy... Aren't literally all games for providing entertainment? This is really cool and unique. reply appsDev 3 hours agoparentThank you so much! :) reply giancarlostoro 51 minutes agorootparentIts weird to say I've wanted \"lazy\" games where you can play it without having to look at your screen necessarily but never thought of this, so I'll be downloading a copy soon as I get home. I play a lot of idle games because I can just pick them back up whenever I'm free. reply wiether 5 hours agoprevWhat's interesting is that I get better results if I close my eyes to focus on feeling the sequence I need to copy and feel the feedback. The usual : improve a sense by shutting down another? Anyway, it's fun! reply appsDev 1 hour agoparentI have noticed that too! I also like trying to tap along with the haptics as they play for practice to see where I am getting the timing wrong! Thanks for downloading the app!! :) reply cultureswitch 6 hours agoprevGenius idea, though in the grand scheme of things this is probably bad. reply appsDev 4 hours agoparentI get where you, and honestly a lot of the other comments are coming from. I really do, and maybe I am bias cuz I made the app, but I just feel like being intentionally bored is different from being bored when we don't want to be. For example, I like to take time off with no music or phone and just walk around sometimes and choose to be mindful, but other times I have already had a long day and don't want to be mored more.. Let me know your thoughts too though.. reply baggachipz 5 hours ago [flagged]prevnext [17 more] The number of people requesting a promo (i.e., free) in this thread is appalling. The author worked hard on their app, and is selling it for 95 cents. Less than a dollar. For an app that requires them to pay a ton of money each year for the developer license. What sort of \"I'm an influencer\" entitlement drives people to even consider this? reply evilduck 5 hours agoparentAre you referring to the sum total of two comments asking for a promo at the time you posted this? Hyperbolic top level comments with phrasing like \"the number of people\" to make it sound large and extreme and calling it \"appalling\" when the author is offering promo codes in their post and people are subsequently requesting them is the actual bad behavior here. reply apexalpha 5 hours agoparentprev\"The game is paid, but if someone would like a promo code to try it please let me know below. \" right in the opening post. reply imjonse 5 hours agoparentprevThe author explicitly said to ask for one if needed, why would it be appalling? reply baggachipz 5 hours agorootparentBecause it's 95 cents. Even with the author offering it, going through the process of requesting, accepting, and entering the code is effort to save 95 cents. It's 95 cents. reply aziaziazi 4 hours agorootparentThe average developer salary in India is $7,725. That is 14 times less than the $110.140 in the US. 14$ value might be seen as too much to try some small game. reply anal_reactor 5 hours agorootparentprevYes but it's more interesting than just spending 95 cents. That's also the reason why I still pirate stuff - the process itself is fun. reply Workaccount2 5 hours agorootparentprev>if needed I would be shocked if even 1 in 1000 HN users could not afford $1. People here asking are entitled and morally blind, not poor. reply ensignavenger 4 hours agorootparentYour rash judgement of other users is against the HN guidelines. You have no idea what the folks asking financial position is. I was HN user way back in the day when I was dirt poor. reply apexalpha 5 hours agorootparentprevAuther says \"would like\" not \"need\". You guys are looking to fight a problem that doesn't exist. reply imjonse 5 hours agorootparentthe author correctly intuits that a bunch of free users that may spread the word are worth more than N*0.95$ so the outrage on display here is not only unnecessary but counterproductive too reply freedomben 4 hours agorootparentprevThis is a huge and diverse community. Yeah the successful founders with exit can easily afford the $1. The highly paid SWEs and other engineers can afford it. Some people can't. I've been in that boat, and may be at some point again in the future, but I'll still be on HN. reply meiraleal 4 hours agorootparentprevI don't mind $1. I do mind paying to test someone else's app, that's quite the growth hack. reply appsDev 4 hours agorootparentI agree. I don't want people to pay to test though, since the app is already on the App Store and ready to be sold. If someone still wants the promo code though I am happy to provide it here :) reply qq66 4 hours agoparentprevThis isn’t a community of people interested in playing casual mobile games. Their interest in playing this game can be assumed to be low. The author is trying to have a discussion about the game and might get more interesting feedback from people who can play the game, and is explicitly offering promo codes because of this. And, $1 is material to many people. reply david422 4 hours agoparentprevHonestly, there are people that will always want free stuff, and that just needs to be accepted. Free users can give feedback, can spread info by word of mouth, and can also turn into paid users. A smart developer will try to use them as an asset - which seems to be the authors intention by offering promo codes. reply appsDev 4 hours agoparentprevI appreciate the sentiment honestly. I am a student and so honestly don't have a ton of money myself, which is why I wanted to give the option to try it for free for those on this thread (for any reason, not just saying if they are a student or low on money). Obviously I really appreciate those who are buying it though :) reply Raed667 6 hours agoprevNice! instead of tapping, an alternative play mode I'd love to see would be shaking! Even better if you can play with the phone \"locked\" so no accidental clicks. reply appsDev 1 hour agoparentTrue! Shaking or something, if we could get it precise enough, could be a nice experiment! reply KolyaKornelius 5 hours agoprevsounds like a one button version of the 80s game Senso / Simon. too bad there's no android version. https://www.retrohandheldgames.com/images/simon-mini-senso-m... reply appsDev 1 hour agoparentYes, it's kind of similar to that! Will let you know in a comment here if I make an android version some day! reply Enydosnes 4 hours agoprevLooks interesting! Unfortunately can't try it out due to being an Android user, but you might wanna tweak the first image on the App Store :) It says \"No evidence that your even playing!\" when it should say \"No evidence that you're even playing!\". reply appsDev 3 hours agoparentSorry to hear your on android, hopefully can expand the app to android in the future! Thank you for pointing that out! I guess I should have checked for typos and will fix that soon! reply recursive 2 hours agorootparent> Sorry to hear your on android You did it again. Sorry you're on apple. reply appsDev 1 hour agorootparentlol didn't mean it like that. Just sorry in the sense that the app is just on apple rn reply excalibur 1 hour agoparentprev+1 for Android. Apple devices don't play well with others, and Apple fanboys don't seem to understand how off-putting their elitism is. reply appsDev 1 hour agorootparentBro I really didn't mean it like that. Its just that the app is only for iOS right now.. reply pyzhianov 6 hours agoprevWell done! This is a pretty cool and unique idea. I think it would be nice to have some UI when you first open the app, so you can at least learn how to play it. It's kind of hard to figure out what you're doing wrong when you tap and what success should look like. Also, are there any difficulty levels? It feels like the very first sequence is kind of hard. reply appsDev 4 hours agoparentThank you! From what you are saying, I am assuming you bought the app (if so thank you!). When you first open the app (and every time after you completely close it from the background), there is a \"?\" at the top right. If you click it, it has a guided tutorial that explains in detail how the game works. Please let me know if you have any other questions though and I can answer them here. If you are struggling a lot with a specific sequence, just close the app completely and re-launch it and the sequence will change. I tried to set it at a difficulty that would not be too hard or easy. If it is consistently too hard though please let me know and I will make changes :) reply Tepix 6 hours agoprevI like that your app is 367.6KB. Have you looked at the resulting file to see what uses up the space? Perhaps it can be reduced further? reply appsDev 5 hours agoparentI have not dug too deep into it since the app is already small, but I have thought of doing that in a future update! I do think it can be reduced a little more :) reply ibaikov 4 hours agoprevThere was an old PSP game called Patapon, it also has rhythm-based gameplay, you should check it out. https://en.wikipedia.org/wiki/Patapon reply appsDev 1 hour agoparentThe Wiki looks super cool! Will take a look! thx reply meindnoch 5 hours agoprevCool! The idea reminds me of that game around 2015 where you had to do special things with your iPhone to unlock various tiles. E.g. restart the phone; turn WiFi on/off; shake it; turn ringer on/off; etc. reply appsDev 1 hour agoparentThx! Ya its kind of unique in not using the traditional phone's features like the screen and sound! reply f0e4c2f7 5 hours agoprevReally cool idea. Novel, I imagine a lot of people would play this. I would suggest a social media campaign with short form videos. Seems like something that has the potential to go viral or at least make a lot of money. reply appsDev 1 hour agoparentThanks so much! Yes I have tried to make one short so far and will make more moving forward! :) reply nicolas_t 4 hours agoprevBought it, I have a much easier time when I do the example thanks to the visual but it's super hard for me when I actually play it without any visual reply appsDev 1 hour agoparentThanks for buying it! Yes a lot of comments have said its a bit too hard, especially with just feeling it - will release an update soon to tone down the difficulty some. reply _spduchamp 4 hours agoprevThis is like the game my daughter and I play when we're holding hands. We squeeze a pattern that the other has to copy. reply appsDev 1 hour agoparentThat sounds like the cutest thing ever :) reply gRoberts84 5 hours agoprevShame I can't give it a go (android user) as it looks great but noticed a typo on the App store screenshots, where it says \"re-ceate\", instead of \"re-create\". reply appsDev 1 hour agoparentThanks for pointing that out! Will fix it soon :) Thanks for ur interest too :) reply maven29 6 hours agoprevYes, because Phantom Vibration Syndrome alone was not difficult enough. reply nottorp 6 hours agoprevHow about text adventures? reply appsDev 1 hour agoparentYes something with Haptics could be used for that kind of idea :) Nice thought reply hashstring 2 hours agoprevAwesome, can I get a promocode? Looks very interesting. reply appsDev 1 hour agoparentSure! Hope u like it! Promo: 93YL9NM3WNHN (To redeem, click on your profile icon, go to “Redeem Gift Card or Code” and enter the code. Each promo code is one time use only, so to anyone else reading this please ask for one in a new comment if you would like one!) reply tibbon 5 hours agoprevI recall an Indie Game Jam many years ago where there were bonus points for no/limited visuals. You understood the assignment! reply appsDev 1 hour agoparentLol yes this would have been perfect! :) reply b3lvedere 5 hours agoprevThis looks like fun. It's description made me laugh and not many games succeed in that. I hereby request a promo code to try it. reply appsDev 5 hours agoparentSure, here is your code: T7TPE4FA3L47 (To redeem, click on your profile icon, go to “Redeem Gift Card or Code” and enter the code. Each promo code is one time use only, so to anyone else reading this please ask for one in a new comment if you would like one!) reply baggachipz 5 hours agoparentprevIf you act today, you can get it for only 95 cents! reply appsDev 5 hours agorootparentLol :) Ya it's 95 cents for the first week at least! reply fny 5 hours agoparentprevPromo code? It's $0.95. reply jaruche 3 hours agoprevPlease make an Apple Watch extension! This is awesome reply appsDev 1 hour agoparentPlanning on doing that sometimes soon! Thanks!! reply KopyWasTaken 5 hours agoprevJust downloaded it, and it's pretty fun. Thanks for sharing and enjoy my $0.95! reply appsDev 59 minutes agoparentThank you for the download! I am glad you like it!! :) reply chankstein38 4 hours agoprevCool idea! Hope it gets ported to Android someday! reply appsDev 59 minutes agoparentYes will hopefully launch on Android too sometime soon! reply m9a4r3a3n 4 hours agoprevI need promo code! Thanks in advance. reply appsDev 3 hours agoparentSure! Hope you enjoy! Promo: 3HH99JJEJRJF (To redeem, click on your profile icon, go to “Redeem Gift Card or Code” and enter the code. Each promo code is one time use only, so to anyone else reading this please ask for one in a new comment if you would like one!) reply avarun 4 hours agoprevWould love a promo code, thanks! reply appsDev 59 minutes agoparentSure! Here it is: NN7RMJFXALME (To redeem, click on your profile icon, go to “Redeem Gift Card or Code” and enter the code. Each promo code is one time use only, so to anyone else reading this please ask for one in a new comment if you would like one!) reply mrzool 6 hours agoprevThis is brilliant and an instant buy for me! reply appsDev 5 hours agoparentThank you so so much! I hope you like it! :) reply seif_madc 4 hours agoprevthis is what some people call 'shitification' of games reply SV_BubbleTime 3 hours agoparentYea yea yea, so I have an idea for a game, you keep your phone as still as possible! Just hold it still and you win! No one will ever know you are playing a game!!! reply anuragg21 4 hours agoprevI would like to request a promo code to try it. Thanks! reply appsDev 57 minutes agoparentSure! Hope you like it! Promo: PN3KP3NKWPX7 (To redeem, click on your profile icon, go to “Redeem Gift Card or Code” and enter the code. Each promo code is one time use only, so to anyone else reading this please ask for one in a new comment if you would like one!) reply SV_BubbleTime 2 hours agoprevLots of things are ads. But this is double super dooper and ad. reply password4321 2 hours agoparentThe post is missing the 'Show HN' prefix but most seem to be handling that ok. reply imsotiredspacex 6 hours agoprevfirst paid app i've seen in a couple of years (makes sense, though!) reply appsDev 5 hours agoparentThank you!! :) reply sirolimus 3 hours agoprevI bought it reply appsDev 57 minutes agoparentThank you so much! Hope you like it :) reply givinguflac 6 hours agoprevGreat idea! I’d love to check it out. Any plans to have an Apple Watch version? reply appsDev 4 hours agoparentYes! I have thought of making it in the future! Stay tuned ;) reply cheeaun 6 hours agoprevHonestly first time see a 95 cents app on the App Store reply appsDev 5 hours agoparentYes! I was debating making it .99 cents but for some reason .95 just felt right for this app :) reply fny 5 hours agorootparentI think this is pretty smart. reply appsDev 5 hours agorootparentThank you! reply aroom 6 hours agoprevI would like a promo reply appsDev 5 hours agoparentSure, hope you like it! Promo: NKF9EL7JA9KT (To redeem, click on your profile icon, go to “Redeem Gift Card or Code” and enter the code. Each promo code is one time use only, so to anyone else reading this please ask for one in a new comment if you would like one!) reply aroom 2 hours agorootparentOf course someone else redeemed it… reply appsDev 56 minutes agorootparentReally, here is another one: KX7TY6RLHWJE (To redeem, click on your profile icon, go to “Redeem Gift Card or Code” and enter the code. Each promo code is one time use only, so to anyone else reading this please ask for one in a new comment if you would like one!) reply aroom 19 minutes agorootparentThank you reply EGreg 3 hours agoprevLooks interesting! Fix spelling such as “re-ceate” :-D reply appsDev 56 minutes agoparentLol yes I really need to check the grammar - some comments have pointed out I messed up \"your\" vs you are too - will fix soon :) reply toss1 5 hours agoprevSeems like a great idea, 'tho I can't (I hope yet) try it on Android. How do you select the rhythms? Can people make their own rhythms to use later (maybe a sharable library)? Are there some potentially quasi-useful ones, such as beat patterns in specific music, or maintaining exact 1-second beat intervals? Rhythms to try to sync certain brainwave patterns? Seems like a lot of possibility space out there... reply appsDev 5 hours agoparentI definitely agree there is a lot of room to explore here! I'm sorry to hear you are on android, I have only made iOS/MacOS apps so far but might bring it to android in the future! For this first version, I have entered the beat patterns myself. Each beat patten has 5-8 beats, spaced out to be faster / slower / different rhythms with each pattern taking no more than about 2 seconds to play out. This is just version 1 though, so there is obviously scope for more! :) reply freedomben 4 hours agorootparentI'd also be interested and happy to pay $1 for an Android version! reply appsDev 55 minutes agorootparentI hope to launch for android sometime soon! Thanks for your interest! reply DonnyV 5 hours agoprevI wonder if this would burn out the vibration motor? Was it made to be used this often? reply appsDev 5 hours agoparentI was worried about that tbh, but a lot of other games use Haptics too pretty frequently, so I think it would not be an issue. Apple has also not set a restriction for it. reply brazzy 6 hours agoprevEssentially an exercise in minimalism, quite cool. I want it, buy I'm an Android user. However, I also really have to wonder: \"I needed a distraction\" - smartphones have apparently conditioned us to consider boredom absolutely intolerable. I'm note sure that's a good thing. reply appsDev 5 hours agoparentGood question. The way I see it, this is for the times when you don't want to be bored. You can definitely choose to be bored sometimes intentionally, but it should not be forced. It is also a lot less stimulating than something like social media since it has no sound / screen. :) reply Arch485 6 hours agoparentprevWell actually, humans have disliked boredom since forever. Before the advent of phones, people would read, drink, or otherwise cause chaos to entertain themselves (these things still happen of course, phones are just yet another source of entertainment). Think about all those times before you had a phone that you would read the ingredients to hand soap while on the toilet! reply hollerith 5 hours agorootparent>>smartphones have apparently conditioned us to consider boredom absolutely intolerable. I'm note sure that's a good thing. >humans have disliked boredom since forever. Maybe I'm unusual, but if I go too many days without spending a significant fraction of my time doing things I dislike, then my mental health starts to decline. Specifically, I start to lack motivation and drive with the result that I spend less time pursuing and more time procrastinating (or resting when I don't need rest). (Doing something risky works just as well as doing something painful or uncomfortable in keeping me out of this particular bad mental place. It doesn't have to be a risk of something terrible happening: it only needs to feel not totally safe in some juicy way, not to be objectively dangerous.) Also, I wish I knew what I just wrote when I was still a young man. reply appsDev 5 hours agorootparentI agree, sometimes doing something \"boring\" is actually nice. I just like to choose when those times are in the day, not have them all the time. I also see this as something nice for someone who is already conditioned to be super stimulated. Instead of scrolling instagram for example, this could be nice since at least you don't get the typical level of stimulation and eye strain.. reply cootsnuck 4 hours agorootparentprevThe reading ingredients on bathroom items while on the toilet...lol. I did not know this was more of a universal experience. Did this all the time when I was a kid. reply appsDev 5 hours agorootparentprevI agree. And I think not letting ourselves get bored is also ok if we are doing it intentionally. reply kwantaz 4 hours agoprevwhy $0.99 reply appsDev 55 minutes agoparentIt's actually 0.95 - just wanted to go for something different :) reply jakubmazanec 6 hours agoprevThe app looks nice and the concept sounds interesting. But this worries me a little bit: \"I also needed a distraction\" - is it really a good idea to treat our brains this way? Why do we need distractions all the time? Why is boredom so intolerable? Also, you can simply just think about stuff, you don't have to feed your compulsion loop. reply lolinder 5 hours agoparentI have ADHD and have a really hard time focusing in Zoom meetings at work unless I have something to do. I keep a fidget spinner by my desk and use it constantly during calls. My brother uses a Rubik's cube for the same reason. This game is basically a digital fidget—it doesn't actually prevent you from being there in the meeting, but it does provide the little bit of background simulation that some people legitimately need in order to stay sane working a desk job. reply appsDev 51 minutes agorootparentI agree! The game is basically like a fidget toy that also captures your brain's attention a bit more. Also something I wanted to do is make a game you can stop at any time, and Tik! satisfies that too.. reply nextcaller 4 hours agorootparentprevI think there's a yuge market for 3d printed fidgets. I would order a sample array of curious plastic/metal fidgets just to have on my desk or to scratch a literal itch reply dingnuts 3 hours agorootparentI'm not sure I'd call it a market _exactly_ because most of them are free but there are a million printable designs on places like printables.com -- ask me how I know :P reply the-dude 4 hours agorootparentprevDo you use an 'ADHD pillow' at your desk? I can recommend. reply world2vec 4 hours agorootparentCan you elaborate, please? Googling that term has left me a bit confused. reply the-dude 3 hours agorootparentCushion! Pardon my French : https://www.amazon.com/adhd-cushion/s?k=adhd+cushion (No affiliation) reply bubblesnort 1 hour agorootparentSomething like this??? https://www.amazon.com/Wenqik-Cushion-Vibrator-Pressure-Acti... That's enough wtf for me, I'll leave the Internet for a while. reply Ladsko 3 hours agorootparentprevHuh! I use these to keep my spine musculature busy, not my mind. Am I doing it wrong? reply otteromkram 3 hours agorootparentYes, you need to balance it on your head for the full effect. /s reply bayindirh 5 hours agoparentprevI don't think its boredom. It's keeping racing and insisting thoughts, the uncomfortable things at bay, and this is worse than not allowing one to get bored. When you take everything from the brain, and sit silently, it starts to remember. Oh, the plants, the presentation I'm going to give, financials for the month, remaining tasks at the office, etc. Maybe some worse issues which bother you but you try to ignore. Escaping into some distraction from these uncomfortable thoughts is always marketed as the norm, the way it should be, but it's not. One should prioritize mental discipline over fidgeting and dopamine hits, IMHO. I know not every problem in life have a solution, and battling with some problems is hard. But running away from any and every problem is not the solution. reply appsDev 5 hours agorootparentI agree that we definitely should not run away from uncomfortable thoughts and make time to deal with them mindfully. Tik! is honestly meant for times though when you wish you had something to do, almost like having an upgraded fidget toy. Using it in moderation should help, but of course if someone is using it to escape their life issues that is a separate issue. reply bayindirh 5 hours agorootparentYeah, I just wanted to share an observation, the aim was not to discount the motivation of you or the resulting game. Congrats on the release. :) reply appsDev 50 minutes agorootparentI completely understand mate, thanks for your comment! reply 0xdeadbeefbabe 3 hours agorootparentprevSome peoples brains are so much better/fun/non-linear that they need walls or delimiters. A physical activity that keeps you in the present sounds good, and it sounds like discipline too. reply bayindirh 3 hours agorootparentI have such a brain which requires constant B12 support. You can train it to sit tight and go fast when needed. Meditation helps a lot, too. reply appsDev 5 hours agoparentprevThanks for bringing this up, and I completely agree. Needing a distraction all the time isn't healthy, and I was thinking about this while making the app too. The way I look at it though, we should be intentional with our time, making space for time to do nothing / meditate. However, sometimes when we are stuck in a boring situation, it's less about being meaningfully free and more about feeling stuck with nothing to do. In this kind of a senario, Tik! would be a better option and less stimulating than something like instagram for example, since although your mind is busy, it's not overstimulating your brain with information. Just my thoughts on the topic, please let me know if you agree or have anything to add on :) reply colechristensen 4 hours agorootparentYou're basically implying that it is immoral to have ADHD. In many ways ADHD isn't so much a disease as an incompatibility with modern office life. It isn't \"healthy\" for most people to sit in an office all day, but ADHD-like people, it is a very real struggle. One mitigation is distracting a part of your brain with some activity while doing something else. There is nothing at all wrong with this. You might as well be saying writing with your left hand is unhealthy and recommending exercises to force yourself to write with the \"correct\" hand. reply robertlagrant 3 hours agorootparent> You're basically implying that it is immoral to have ADHD. I don't see where the commenter mentioned morality. Where do you see this? reply appsDev 46 minutes agorootparentThx, yes I was just responding in context to the original comment reply appsDev 47 minutes agorootparentprevI didn't mean it like that. I was just responding in context to the original comment, which was about how people nowadays tend to distract themselves aimlessly all the time and stimulate their brain instead of taking time to let their brain be free. It is not immoral in the slightest for anyone, and especially if you have ADHD. In fact if this is something someone could use to help with their ADHD that would be incredible. I was just saying that I get where the original comment is coming from as well. Hope this clears things up! reply sickofparadox 3 hours agorootparentprevPlease learn to read people's words more charitably, and maybe to act a little less weird. I have ADHD as well and think that the incessant need for distractions is a decidedly unhealthy part of the malfunction. reply appsDev 46 minutes agorootparentThx, yes I just wanted to say that I understood the original comment's pov, nothing else.. reply colechristensen 3 hours agorootparentprevIt is very strange for you to be suggesting someone interpret others more charitably and tell them to be less weird in the same sentence. reply sickofparadox 3 hours agorootparentMaking the mental jump from \"Needing a distraction all the time isn't healthy\" to \"You're basically implying that it is immoral to have ADHD\" is both very strange and massively uncharitable. It is entirely accurate to describe your comment as both. reply zeroonetwothree 4 hours agoparentprevFor in person meetings I usually doodle on a piece of paper. It actually helps me to pay attention better, it’s not exactly curing boredom but more like inattention. People usually don’t mind because it looks like I’m taking notes. For VC meetings that doesn’t work as well though because then it looks like I’m not watching since they can’t see what I’m doing. reply appsDev 45 minutes agorootparentI have tried that before too lol. Works fine if thats your best option sometimes! reply hahamrfunnyguy 4 hours agorootparentprevI had a special notebook I used to take to the Monday sales meetings at my previous jobs job. A good chunk of the meeting was often taken up with reviewing department/sales updates which were by and large the same as the previous week. This notebook was filled with cartoons and illustrations representing what occurred during the meeting and it looked like I was diligently taking notes. Definitely helped me focus and stay tuned-in to what was going on in the meeting. reply appsDev 45 minutes agorootparentThat is a great idea - sometimes doodling can seriously help! Thx for the comment :) reply appsDev 52 minutes agoparentprevI completely agree with the sentiment. The way I think about it is that we do need mindful periods of rest and boredom, but they should be intentional. But sometimes it is worth it to want to have somme fun and not be bored, and in those kinds of scenarios Tik! can help! It is also a good alternative to staring at a screen since it is not as stimulating, so it can be used at a time where someone would normally scroll instagram for example if the user wants to use it like that. reply csomar 3 hours agoparentprevDifferent people will do different things ie: Chewing gum, games, Sibha [1], Tiktok, etc... I'd say the traditional distraction methods are much better (than social media) since they don't produce any outrage or addiction. They are a small distraction to relax your brain and avoid burning by constantly thinking into stuff. 1: https://en.wikipedia.org/wiki/Misbaha reply appsDev 43 minutes agorootparentI have seen this tool before, definitely a great pick! I tried to make Tik! less stimulating than traditional social media, but of course physical objects are even more disconnected and have their own charm as well :) reply zeta0134 5 hours agoparentprevAmong other things, \"needing a distraction\" is why I pretty much always have music playing. It's something my brain can do as a background task, and it's tremendously effective at suppressing the otherwise strong desire to investigate whatever just made that weird sound. I don't know if I could have survived in an office environment without my headphones. reply appsDev 5 hours agorootparentI feel you - I have music playing almost all the time that I can too, even when working. Don't know if it's good for me all the time, but sometimes I think it is honestly helpful. Issue is for when you can't have earbuds in or something, which is why I made Tik! :) reply GTP 3 hours agoparentprevThis podcast episode [1] by a psychology professor is exactly about what you're talking about. [1] https://www.pushkin.fm/podcasts/the-happiness-lab-with-dr-la... reply jeffhuys 6 hours agoparentprevBoredom is a bad feeling “by design” - it makes us go out and find new experiences. If, in this current world, you’re in a situation where you really can’t get out of, we instinctively try to find distractions. Thinking about stuff is also a distraction. And for some people there’s nothing to solve, really, as they’re okay where they’re at in life. That’s why I feel like you’re projecting a bit; it’s not intolerable, it’s just… nothing. So if you have no other option, why not play a game? I’m currently not in the camp of “nothing to think about” - I could sit for hours and do nothing except think. But there were (and will be) times in my life where that would not feel good - I wanted experiences! reply appsDev 40 minutes agorootparentI agree thinking can be a nice distraction sometimes, even to the point that we lose all focus on what's happening in front of us. Depends on everyone's preference what they wish to use..:) reply j_maffe 4 hours agorootparentprev> So if you have no other option, why not play a game? That's the question though, do you not have any other options? Things that are more gratifying and contribute to your development than some brain-dead game? reply summermusic 5 hours agoparentprevI'm certain you didn't mean it this way, but it is ableist to assume that because you don't need distractions that others don't. Some people living with ADHD, intrusive thoughts, autism, etc. actually do sometimes need a distraction. reply appsDev 41 minutes agorootparentI agree if someone has a condition then that is different. I think the original comment was talking in reference to doomscrolling and people using their phones all the time when they don't need to, etc.. reply smabie 4 hours agorootparentprevOr maybe they don't need an abstraction and just think they do because it's easier than the alternative. reply monkpit 3 hours agorootparentThis is very prescriptive thinking and not constructive. Is there anything wrong with having a distraction, other than just your opinion? It’s like telling someone with depression/anxiety to “get over it”. reply johnisgood 3 hours agorootparentprevAnd the alternative is? reply latexr 5 hours agoparentprevhttps://www.youtube.com/watch?v=C0ETAVxXtec&t=6 reply swiftcoder 5 hours agoparentprevFolks have used fidget spinners and other such toys for decades to help them focus and keep symptoms of ADHD and/or anxiety at bay reply appsDev 4 hours agorootparentThat is a great point, using the app actually reminds me a lot of a fidget toy sometimes! This just keeps your mind a little more active! reply micromacrofoot 4 hours agoparentprevmodern life requires doing lots of boring stuff to continue living reply appsDev 39 minutes agorootparentTrue reply sim7c00 4 hours agoparentprevYou are right sir. !!This is obviously not meant towards people with an actual professional diagnosis of something that doesn't allow them to 'sit still' or 'have a still mind'!! 90% of people who claim adhd, add, autism, ocd, ptsd or other 'neurodivergence' these days either self-diagnose, or let themselves be conditioned to think this by feedback from other people and their arm-chair diagnoses. This is a damaging state of mind. Either get professional evaluation or free your mind and learn to be still. You can't imagine how much time and effective use of that time you can get from simply learning to do nothing without being bothered by it. Diagnosing these things is _very difficult and takes a lot of time_ even for a professional with tons of experience. For some people, they need multiple different professionals to evaluate them over a period of (many) years before a somewhat accurate diagnosis is yielded depending on the ailment! reply smabie 4 hours agorootparentActually in reality these so called professionals will diagnose you almost immediately reply moritz64 6 hours agoprevcool idea. i would also like a promo code to try out. apple watch version would be great! reply appsDev 5 hours agoparentYes! I would love to bring it to Apple Watch too! :) Here is ur code! Promo: WJJAYWH6KTEK (To redeem, click on your profile icon, go to “Redeem Gift Card or Code” and enter the code. Each promo code is one time use only, so to anyone else reading this please ask for one in a new comment if you would like one!) reply kwantaz 4 hours agorootparentdo we need to pay first? reply appsDev 38 minutes agorootparentThe app is free with promo code, otherwise it costs 95 cents by default. :) If you want one here it is: PR3XEE3EMLP3 (To redeem, click on your profile icon, go to “Redeem Gift Card or Code” and enter the code. Each promo code is one time use only, so to anyone else reading this please ask for one in a new comment if you would like one!) reply aziaziazi 5 hours agoprev [–] > You just sit here, loosing brain cells in seconds. At least, that’s how things where before Tik! Am I the only one that can’t help seeing irony here? Search for a constant attention and distraction may not lead to a better mental condition, if not making worse as subsequents boring times will be even more boring. Here’s some alternatives some phoneless can engage while staring at a speaker: - imagine another life for the speaker - mentally check your grocery list - build inner abs, perineum and other hidden muscles - wank yourself from a hidden hole in you pocket - think what where the outcome and what you could have done differently in previous social interactions - my favorite : deeply concentrate on all noises, voices sounds that does not come from the speaker itself. Also congratulations, AFAIK this is a novel game ideas. Being bored leaded here to creativity. reply thomashop 5 hours agoparent [–] I thought it was quite funny when I read it. I'm pretty sure that sentence is half joking. reply nhggfu 4 hours agorootparent [–] \"wank yourself from a hidden hole in you pocket\" <- whaat. reply eniwnenahg 4 hours agorootparent [–] Are u saying \"There's an app for that\"? reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "A new iOS game called Tik! has been launched, featuring gameplay that relies solely on haptic feedback, with no visuals or sound.",
      "Players must replicate a rhythm of vibrations by tapping the screen, offering a unique challenge in timing and coordination.",
      "The game was designed to be a discreet distraction, allowing users to play without looking at their phone, and feedback is encouraged."
    ],
    "commentSummary": [
      "A new game has been developed that can be played discreetly without visuals or sound, focusing on strict timing for a challenging experience.",
      "The developer is considering improvements based on user feedback, such as adding constant interval ticks, a menu return option, and a way to visualize or skip rhythms.",
      "The game is currently available on iOS, with plans for future updates, including difficulty levels, new features, and a potential Android version."
    ],
    "points": 335,
    "commentCount": 223,
    "retryCount": 0,
    "time": 1727869709
  },
  {
    "id": 41712885,
    "title": "Don't build your castle in other people's kingdoms (2021)",
    "originLink": "https://howtomarketagame.com/2021/11/01/dont-build-your-castle-in-other-peoples-kingdoms/",
    "originBody": "In the past couple of months a couple of big social media sites have changed their terms or introduced suspicious paid plans and it has caught content creators off guard. For instance, last week Twitch introduced a new “Boost” program where streamers can pay to get more viewers to see their stream. Read here Twitch Adds New Boost Stream Feature Twitch Tests Paid Boost Feature OnlyFans ALMOST banned porn which would have left content creators out of hundreds of thousands of dollars. Only Fans (under heavy pressure) reversed the plan… for now. Every single year one social network or another pulls a stunt like this. Somehow people are still shocked when it happens. Don’t be. It isn’t a matter of if, it is a matter of when. They don’t care about you. You must market your game as if the platform you are using will go away tomorrow and you will lose access to some or most of your followers. My basic point: DON’T BUILD YOUR CASTLE IN LAND YOU DON’T OWN! I got the pixelart itch again and have a blog to write so I thought I would combine the two. This week I created a little metaphorical fable about building your castle in other people’s kingdoms. I am using the amazing RPG tileset from Pita Madgwick to do it. Here goes: Your game studio is basically your land. You are the king. You can do whatever you want on this plot of land and kick out who you want, charge what you want. Set the rules. Goal here: You want to grow from this little tiny hamlet to a giant castle. You also want a bunch of people in your kingdom living there (aka playing your games), and paying you taxes (buying your games) and telling you how brilliant of a leader you are (fan mail, fan art) and enjoying the company of your kingdom’s fellow citizens (community engagement). That is your goal but for now you have no one in your kingdom. Your castle is tiny. But how do you get people to come to your crappy little kingdom? You look across the sea and you see another country run by another King. They have thousands of people. Everyone is rich. The king is giving away land for anyone to build their castle. Let’s call it Myspacia So you cross the sea and build a castle in their land. The King doesn’t even charge you for it. So you decide to spend a whole lot of time building a big beautiful castle. Everyone is there. Thousands of people come into your castle built on their land. Your home Kingdom is neglected but why worry? Then one day the rain dries up and the land isn’t fertile, and the king doesn’t do anything like invest in irrigation, and the infrastructure sucks. People move away and that castle that you spent so much time building is empty. Nobody is around to visit. It sucks. Your castle looks awesome but it sits empty not because of anything you did but because the landlord messed up and everyone left. So you say, no matter. Let’s go over to this kingdom where everyone is setting up. Let’s call it Facebookia Again, just like Myspacia once was, it is bustling. It’s just like the good old days. You start a new castle! Sure you have to start all over but look at all the people! So you build and build and build. Your home Kingdom is still neglected but who cares! Facebookia is awesome! Then one day. The King of that land puts a giant wall around their kingdom. Even though you helped make his kingdom worth living in, you are not allowed to enter your castle. In fact, the King starts charging you a toll just to enter your own castle to talk to the people who are there! Why oh why did you spend so much time and money on this castle?!? This happens every single day. But there are thousands of variations A hoard of racist barbarians invade and nobody wants to visit your castle anymore because the king turns out to be a total creep and everyone is scared off because he just lets the racists hang out. (See Twitter and Facebook) The kingdom gets absorbed by another neighboring King that has no idea why people where there in the first place and starts changing the laws and everyone leaves. Example: Tumblr There are countless tales of this happening. EVERY SINGLE EXTERNAL KINGDOM will do this to you. No matter how “cool” or “hip” they are right now. They will let you down. So what do you do? How do you possibly fix this? Here are the rules. Rule #1: Build your castle on land you own Your kingdom is a platform that you own: A website on a domain you own Your blog hosted on your site (not on medium or Patreon) A mailing list Your Intellectual Property that you own and can license out Merch that you sell on your site Your own reputation But wait! Your mailing list is hosted by Mailchimp which is another company, and your website is hosted by GoDaddy or Squarespace? Aren’t they evil kingdoms too? Not really. They are just hosting platforms that are invisible to your followers. The general public doesn’t have to go to Mailchimp.com to read your newsletter or squarespace to view your blog. Your readers go to your domain. If any of those companies changes their terms in a way that you don’t like, you can migrate to a new hosting platform and your followers will never have to change their behavior. They will still go to the same URL to get to your site, they will still receive your newsletter from your email address. It is completely transparent to them. Spend more resources on the castles on your land. Rule #2: SHAMELESSLY USE THE OTHER KINGDOMS JUST LIKE THEY ARE USING YOU! I know Tiktok is the hot social media platform right now. It is so pleasant! It’s not like that last kingdom twitterlandia! All the cool kids are here! It is fun! There is dancing! And the traffic is huge! But just like Facebookia and Myspacia something will change with them. It will. It almost did already. Your solution? Use them so hard. Don’t fall in love. Try to get every last follower off of their kingdom and back to your kingdom. Be shameless about it. It is true, you cannot get visibility without them, but don’t rely on them as your home base. Instead build the minimum following necessary. You are basically building a Potemkin Castle. Don’t feel guilty posting a Call to Action of “Join me on my mailing list.” You have every right to get people who want to hear from you out of their kingdom and into your kingdom. Don’t let people shame you that you are being to “salesy.” F**k em. You need to get people out of enemy territory and you gotta be clear. ALWAYS HAVE A CALL TO ACTION. Basically build a big tall temporary tower in that foreign kingdom that is loud and garish and attracts a lot of attention. When anyone enters you say “oh to really follow me, go across the sea and join my real kingdom.” Always try to build this bridge from a rival Kingdom back to your home Kingdom. Basically, when using any social media platform always ask yourself “How can I enrich my own kingdom with the people of this other land?” When constructing your path see my next rule… Rule #3: Always move people back to your kingdom, never to another kingdom. It always kills me when I see a trailer on youtube go viral and the call to action at the end is “follow us on Discord!” or “Follow us on Twitter.” UGH! You went from Youtuberia to Discordia! Neither of which are owned by you. You are just sacrificing a bunch of traffic that could have been your own and you are giving it to another King who can take it from you. Always try to get people to follow you back to your kingdom. Why oh why are you spending time and money on a bridge that helps these two kings while neglecting your own land? Rule #4: Operate like your castle can get shutdown tomorrow Do you have a huge following on Twitter? Is everyone who would buy something from you following you only on Youtube? What would happen if tomorrow Twitter didn’t exist? Or Youtube? How would you communicate to them? Do not over-invest in one platform. Always try to get them back to your kingdom. Don’t wait until it is too late. From the first day you start in that rival kingdom you should be pushing followers back to your home kingdom. Yes you can still build a little castle in their land, but build a cheap one that you can afford to lose. Then you should stand on the top of that cheap castle and say “follow me over there!” as you gesture wildly to platforms owned by you. Rule #5: Be suspicious of new kingdoms that give away easy visibility Just about every 2 years there is some new “hot” social media site where you get tons of “engagement” and followers come easy? Remember Snapchat? The new guys are most definitely going to let you down soon. Here is why. Social media platforms are capitalist enterprises and they are trying to steal market share away from rival social media sites. They are giving away so much free visibility, free engagement, cheap paid advertising to screw their rival social network. This is temporary. The party won’t last. They will eventually decide to stop giving away traffic and decide to monetize their subscribers (meaning charge you to reach your fans). Right now I see there are 2 platforms that are new and very risky. TikTok I have to be honest, they are giving away a LOT of free traffic. And it seems to be pretty good traffic. It is attractive! I also hear their paid ad rates are very good. However this is because they are trying to grow as fast as they can. They are giving away free traffic right now to steal from other social networks. The good times will end. My recommendation is yes, try to go viral on TikTok then make a CTA to follow you on your mailing list. Also don’t set your profile link to a LinkTree (that is another platform you don’t own!) Instead, link to your own URL that is designed to quickly shuffle them to where you want them to. Discord Yes everyone is on Discord right now but the company is still privately held and doesn’t have a solid business model yet. Also concerning is that they are explicitly anti-ads. I know it sounds good to be anti ad but that means they have no clear way to monetize. That means they could stagnate without any clear growth model and a more aggressive rival will take market share from them (this is what happened to Myspace when Facebook showed up.) Discord is also run by a small company relative to the amount of mindshare they have. This means they are ripe to be purchased by a bigger company. And when a big company takes over, we will always get screwed by the changes they make (Just look at Tumblr and Instagram and WhatsApp and Twitch for examples of this). Rule #6: Give good reasons to go back to the Castle in your Kingdom. And be persistent! It is hard to make people leave a social media site. But you need to work hard at it. With every single person who enters your castle in a foreign land, tell them “welcome, yes my castle is nice here, but did you know I do better stuff over there in that Kingdom across the sea?” Always be working to get people over to your land. Use lead magnets to entice people to follow you back to your kingdom. For example Yes you went viral on TikTok but you should use that visibility to tell them that to learn more they should join your mailing list. Announce you are holding a contest on all the social media platforms but to enter the contest they have to join your mailing list. Hold a beta but instead of running it on Discord (another kingdom) tell them to sign up for the beta on your mailing list. Tease major reveals and exclusive news about your game on Social media but tell them that the announcement will be made on your website and mailing list first. Give exclusive codes out to your mailing list. You also need to be persistent. This isn’t a one time thing. Every week you should be telling them to follow you back to your kingdom. It will be slow, but building a TRUE following takes time. I am not the first one to point this out: Post navigation Previous post: How Choo-Choo Charles earned 90,000 wishlists in 2 weeks Next post: Retention: The most important number you are not paying attention to",
    "commentLink": "https://news.ycombinator.com/item?id=41712885",
    "commentBody": "Don't build your castle in other people's kingdoms (2021) (howtomarketagame.com)331 points by lopespm 23 hours agohidepastfavorite223 comments openrisk 11 hours agoThe elephant in the room is the size distribution of \"other people's kingdoms\". Having oversized kingdoms and overbearing kings is not a god-given parameter, its down to regulation, political and economic choices. Its not for nothing that the current digital world has been called neo-feudal. The real solution is to force these kingdoms to build permanently open gates and roadways that connect the land, increase all around traffic and opportunity. Only when people turn from digital vassals to digital citizens will we emerge from the middle ages we are currently in. In this sense the most important development in the online world is still ahead if us. reply arethuza 8 hours agoparentI live somewhere that has a lot of castles - there are 3 (possibly 4) within 2km of where I am sitting writing this. I don't think any of these castles were built directly by kings - although I suspect their construction was either approved by a king or by someone who had delegated authority from a king. NB I can also see a large castle about ~11 km away that was a royal castle (and still has a military garrison). I suspect that most castles are probably in other people's kingdoms. reply khafra 7 hours agorootparentSo, you should build your castle in someone else's kingdom iff that kingdom either 1. Has strong norms against castle seizure or abandonment of the king's duties in kingdom upkeep 2. Has a federation of non-king castle owners strong and unified enough to force the former point. reply hoorayimhelping 2 hours agorootparent3. You are strong enough to provide a serious and credible threat to the king if he implements a policy that threatens you. Example: Valve in the early 2000s before or as they were building Steam to challenge the video game publisher model. 20 years on and Valve is still printing money, while Sierra Online doesn't exist. reply oremolten 59 minutes agorootparentSierra Online was acquired through fraudulent accounting, and the company that acquired them went under shortly after as their fraud was revealed. Unfortunately Sierra had to accept the offer. reply Maken 6 hours agorootparentprevIf you are in France or some other central European old Kingdom, the people living in those castles were the ones who either put the king in the throne or had the power to remove him if he started some funny business, so it was their kingdom in a sense. The problem with modern platforms is, as always, how much leverage the users have against the administrators. reply arethuza 6 hours agorootparentYes, in the case of Scotland there is a famous document (Declaration of Arbroath) that was written to the Pope asking him to, amongst other things, acknowledge that Scotland had been pretty much always been independent of England. This was \"signed\" by the Scottish nobles and has a section saying that if the current king (Robert the Bruce) wasn't good enough at fighting the English he'd be removed and they'd find someone more capable. reply inglor_cz 3 hours agorootparentprevRemoval of a bad king was a possibility, but actually attempting to do it was ... tricky. It could definitely backfire and end up with the rebels on a scaffold, or, worse, with a decade-long civil war that harmed everyone and opened the door of the kingdom to potential raiders from the outside. In practice, unhappy nobles would often rather deny their necessary cooperation (at war or administering the land in peace) and thus force the king to make some amends and tradeoffs. Passive aggressivity isn't a modern concept :) reply int_19h 2 hours agorootparentSo long as the king is not sufficiently powerful to take on a bunch of nobles who gang up, for all practical purposes, it is not the king's country. reply inglor_cz 46 minutes agorootparent\"for all practical purposes\" Well, there is the practical purpose of legitimacy. It may seem too soft for modern power theoreticians, but the legitimate king has something that cannot be acquired by raw power, and that puts somewhat of a damper on potential rebels. Not on each and every one of them, of course, but it has a wide effect. Killing or deposing the legitimate monarch was a serious spiritual crime for which one could pay not just by his earthly life, but in the afterlife as well. Even usurpers like William the Conqueror tried to obtain some legitimacy by concocting stories why they and nobody else should be kings. We still see some reverbations of that principle today. Many authoritarians love to \"roleplay elections\", even though they likely could do it like Eritrea and just not hold any. It gives them a veneer of legitimacy. reply PaulHoule 3 hours agorootparentprevMy understanding in many places (France in the Versailles era and the contemporaneous Tokugawa Japan) important families were expected to have some members at court where they could be observed, held accountable (hostage?) etc. That would be a reason to be your own domicile close to the court. reply neon_me 7 hours agoparentprevWhen it comes to the \"internet\" - you are 30 years late to apply such forces. Everything is now DRMed, closed garden proprietary bs - there is no legal framework, nor will to reverse that and we are going to pay. And this is not cynic talking ... reply j45 6 hours agorootparentThe web is still open. Wide open. For anything to build. More users online than ever, and able to get their attention too. reply Veuxdo 3 hours agorootparent> More users online than ever, and able to get their attention too. Not really. There are some people walking around with giant teddy bears[0], but that is entirely for show. [0]https://www.wired.com/story/tiktok-platforms-cory-doctorow/ reply gspencley 5 hours agorootparentprevIt looks like you got down-voted but I'm not sure why, because you're technically correct. Rewind 20 years and YouTube, Facebook, Twitter, iPhones, TikTok, Discord and what we think of as the \"contemporary Internet\" didn't really exist. Google existed, and even back then SEO was a thing and people were talking about not putting all of your eggs into Google's basket when it comes to your business model (which I remember vividly because I started a business in 2003 running a for-profit website that would continue to exist until 2022). Fast forward to the present and yeah users are opting in to \"platforms\" that require accounts that keep content within the walled garden. And Google search has declined in quality so much that I and many others don't use it anymore. But the world wide web, as a technology that is accessible to everyone, that existed 20 years ago still exists. You can still build a website You can still create opt-in email newsletters And there are a lot more people online today than there were 20 years ago, which in many regards makes it easier to reach an audience today than it did back then... even if how you would choose to go about it might differ because of user behaviour. It's fashionable to be pessimistic towards the tech industry.. and I myself get pessimistic about it all the time. But when I look back at the fact that I was able to, beginning in 2003, create an online business that allowed me to work from home and feed my family for 15 years at a time before YouTube existed and when the dominant social media platform was still MySpace ... and now I see content creators getting millions of views and some of them are just talking heads in a bedroom ... yeah the world changed but in many ways it's easier to reach people today than it was before this modern era of walled gardens and a google search that sucks. reply j45 3 hours agorootparent100% true. But we are starting to have the first generation that grew up with Google thinking Google, etc was the internet, where as it's not. The culture of creating more than consuming gave way to consuming content and scrolling becoming the default behaviour that was conditioned into users. Using a platform is one thing, reducing your platform risk by finding the people who will be your supporters is the real purpose of other platforms in other cases... coming to your platform. As people start to see themselves as a platform, I suspect this will change. reply treyd 4 hours agorootparentprevIt's functionally shackled by the terms Google lays out for it. reply runamuck 4 hours agorootparentAnecdotal: My hobby tech blog went from 4k hits/ day (all cold Google search traffic) w/ top Google searches in 2019 to about 60 a day today. I still publish at the same tempo and I believe I improved the quality of the blog, but I suspect these days the search engine traffic pushes eyeballs to the walled garden \"social media\" apps. reply raxxorraxor 4 hours agorootparentYou are no \"authoritative\" voice. What do you think was all the rage against misinformation about? To give legacy media and advertising customers an edge. All platforms with user voices and ratings were destroyed too. User opinions are bad for marketing. If any search term is in any way part of any news cycle, you will get the crappiest search results you could imagine and any real content like a blog fitting the topic will be far down the line. reply j45 3 hours agorootparentprevI'm not sure why search engines would push there or where you are learning about seo, etc. It seems search engines want to know it's real people behind content. Do you post your blog on social media to be found and shared? reply Veuxdo 3 hours agorootparent> Do you post your blog on social media to be found and shared? It wouldn't do you any good. Social media sites will kill your post if it has a link in it. They don't want you leaving. reply runamuck 2 hours agorootparentprevI post it to LinkedIn and X, but my logs show very little traffic from those sources. reply j45 3 hours agorootparentprevIf Google is relevant to it. Google's relevance has been changing with alternate means to discovery (perplexity, chatgpt) than their search. reply PaulHoule 3 hours agorootparentprevI see more 401s than ever before running a webcrawler I think because of A.I. paranoia. reply throwaway48476 11 hours agoparentprevIt is the same process that turned literal kingdoms into representative democracies. reply openrisk 10 hours agorootparentAbsolutely. But it is disconcerting to realize the inertia of current collective intelligence even when what is at stake is great gains in productivity and welfare and even when formally we \"celebrate\" the benefits of well governed, market based democracies. It goes to show that every generation has to internalize the painful way key facts about what is good and what is bad for society, even if history provides more than enough learnings for free. reply Moru 10 hours agorootparentHistory isn't exactly the most liked subject in school. Most people continue not liking in later in life. reply throwaway48476 10 hours agorootparentHistory is just terribly taught and practiced. At the core history is just telling stories which are always interesting when told well. reply Maken 6 hours agorootparentHistory is terribly taught because it's often about the how and not the why. reply teqsun 2 hours agorootparentEven worse is the overemphasis on when (in terms of exactness). Knowing the rough order of events (as per the flow of a story) is important, as is the relative timespan, but a lot of history schooling puts too much emphasis on knowing the exact dates of certain events, which I think really subtracts the experience for many. reply arethuza 9 hours agorootparentprevThe most interesting history we got taught at school was by one of our music teachers who was a kilt wearing Scottish independence supporter who used to tell us bloodthirsty stories about Bruce, Wallace and others... NB This was ~45 years ago - I doubt such things would be tolerated these days. :-) reply Neonlicht 8 hours agorootparentI suppose he skipped the part in which the Scottish elite sold out their country (literally) to the English crown? reply arethuza 8 hours agorootparentHe probably didn't mention that because it wasn't particularly bloodthirsty and therefore of little interest to 12 year old boys. Mind you, the fact that it was events on the Isthmus of Panama that were one of the main causes of the union is fairly interesting: https://en.wikipedia.org/wiki/Darien_scheme reply AmericanChopper 7 hours agorootparentprevScottish history would be far too dangerous to teach today. Undermines the narrative that all white people have a detestable history of colonisation and exploitation. The history curriculum I was taught in school was terribly boring and politicised. Other than the mandatory WW2 coverage, the _only_ other topics we studied were the horribleness of European colonisation, like Gandhi and Apartheid, ect… I was rather surprised to grow up and find out how interesting the topic actually was. reply zigman1 10 hours agoparentprevDo you think fediverse is a good direction as response to that? reply openrisk 8 hours agorootparentConceptually the fediverse points towards the \"right\" direction, but imho it still falls way short from being a fully developed and sustainable new proposal. Both on the technical side and (maybe more importantly) on the economic side. Don't get me wrong, it is admirable what a handful of highly motivated people have achieved with activitypub, atproto etc. (to mention just some currently trending designs). But what needs to be done to deprecate the pattern of digital feudalism is a much bigger challenge. The main way to move forward will be to incentivize (through legislation) many more actors (not just social media reformers) to invest and experiment in this direction, away from the feudal hypersurface that is crushing our horizon. Its the only way to explore the vast number of technical possibilities and economic patterns without being hampered by biases and blind spots. We don't know what a digital democratic economy and society exactly looks like. Its not been done before. Maybe more than one patterns are equally viable and it becomes a matter of choice and/or random historical accidents. But we do know that we are far from anything remotely compatible with our purported norms and values. reply noirscape 6 hours agorootparentprevThe fediverse is probably the best answer you're gonna find to digital feudalism that is compatible~ish with the real world. Which is to say; it theoretically divides the risk that any single castle and king could hijack the entire process up into many smaller castles, meaning that if a king turns hostile, you can go somewhere else with relatively little friction. The reality is that if you truly want to get rid of digital castles and kings, you're essentially going to have to operate a distributed digital firehose (cynically: digital sewage pipe) that anyone can submit to with no preconditions whatsoever. For many reasons (first one that jumps to mind: spam, second reason: illegal shit, third reason: trolls) most people don't want to operate something like that, and that's before the law gets involved. Pet projects exist of course, but pretty much zero of them are made to scale up against the idea of truly nuking kingdoms; the closest to a realization of this sort of network is something similar to TORs peer2peer, and you can consider pretty much all legal risks of running a TOR exit node for a service like this. reply throwaway48476 9 hours agorootparentprevThe fediverse just moves the problem to multiple servers. The solution is a content addressed network. reply j45 6 hours agorootparentprevIt’s one of the better options. There’s a few other neat technologies that are toying with being social network protocols. There’s some fascinating angles for combating AI fake content compared to human ones. reply lcnPylGDnU4H9OF 31 minutes agorootparent> There’s some fascinating angles for combating AI fake content compared to human ones. Are there any common terms one could research? reply andrepd 5 hours agorootparentprevNo. Network effects + turbo-capitalism being able to lose 100s of millions a month to build market share, mean excessive concentration which we cannot get rid of simply by providing alternatives, even if they are \"better\". reply AtlasBarfed 1 hour agoparentprevThe real elephant in the room is unless you are an actual king, your castle is always on someone's land I get the original point of the article, but the reality is you're always building something on someone else's infrastructure. It depends on how much the infrastructure you want to build yourself and own versus how much you get to use of theirs and for how much reply j45 5 hours agoparentprevWe already have digital citizenship and already are digital citizens. We are digital citizens of commercially owned and run countries called Apple, Google, Microsoft, Facebook, and more. A digital citizenship is in private corporations with out many rights in exchange hold our digital identities as they see fit. It’s why we are offered digital citizenship to a digital identity in exchange for convenience of a single sign on to click. This can setup a relationship Of being locked out of your digital identity and whatever it is tied to. A way to keep a balance is to only use email as login, and own your identity with your own domain for email that at least can be moved between providers if you don’t want to manage your own. reply j45 6 hours agoparentprevDo we go on massive platforms to find the small communities (like subreddits) that we like? reply j45 6 hours agoparentprevOr, maybe reside on large platforms partially or temporary. There is an existing solution to not having to put in massive efforts to get massive private companies change their ways a tiny bit. The open web. We can build any web we want, at any time. And build we should. All large communities were small once. Starting a community and being a part of a small community is the only way they will grow. Maybe forums like HN and forums of the past have some of that right still. And maybe we can give what we want our attention, instead of it being gamified away from us. reply jonstaab 2 hours agoprevRule #7: Use a social media platform that lets you own your identity and social graph. Social media has certain benefits that your own website doesn't. Public key cryptography, self-hosted servers, and an open protocol make it possible for your followers to actually follow you, regardless of what app they use to access the protocol. This is what we're building on nostr (in contrast to bluesky and farcaster, which are nearly as closed as the legacy solutions). It's not always pretty, but it works better for sovereign social media than anything else. reply fire_lake 1 hour agoparentThe mailing list is king here. Always push people to your mailing list so you can do direct contact. reply szundi 1 hour agorootparentLot of young people just don’t care about emails anymore reply miki123211 20 hours agoprevYou're always building a castle in someone else's kingdom. If you're publishing on your own website instead of a social media platform, your new Kings are your domain registrar, registry operator and ultimately ICAN itself, your hosting provider, Let's Encrypt, all the email providers you need to be able to deliver to (notably Microsoft and Google), and probably also your payments provider. Despite what people say, the internet is not decentralized, and it's no longer possible to build a site that isn't in anybody else's kingdom. This is mostly a good thing, if this wasn't true, somebody would have set up a site that was a safe haven for child porn, and there'd be nothing that anybody could ever do about it. reply lolinder 20 hours agoparentWhen you get to this level of granularity the metaphor really starts to fall apart, but the principle is still there: identify your points of failure, the risk of them failing, and ensure there's a plan B. Most businesses can treat their domain name as fail-safe. If you have a .com/.org/.net, pay well in advance, and aren't doing anything that's currently illegal in the US, you're not going to lose it unless there's a dramatic political shift that's earthshattering for ~everyone. On the other hand, social media platforms arbitrarily locking you out is a daily occurrence for tens of thousands of innocent people per day. This isn't just a hypothetical risk, it actually does happen to people and businesses all the time. Even the most law-abiding business should not build their castle in a social media platform. reply throwaway48476 11 hours agorootparentThis is not a safe assumption. You're just one crazy person willing to harass the family of whoever runs the registrar away from being 'too difficult to work with' and getting your account nuked. They don't charge enough to stick their neck out for you. reply pyrale 9 hours agorootparentWe're also one button press away from thermonuclear apocalypse. Knowing what's more likely and what's less likely is still useful information: social media turning bad is a daily occurence, while dns registrars' family members have been safe for a pretty long time now. reply throwaway48476 9 hours agorootparentNuclear security had many buttons and many people. Harassing people is far more accessible and has a proven track record of success. reply pyrale 9 hours agorootparent> has a proven track record of success. Do you have examples of someone successfully harassing a registrar employee into breaking the registrar's ICANN accreditation terms? reply graemep 4 hours agorootparentprevYes, and a cray person could blowup your house or your business premises, reply Veuxdo 19 hours agorootparentprev> On the other hand, social media platforms arbitrarily locking you out is a daily occurrence for tens of thousands of innocent people per day. If you're at all legit, you don't have to worry about being locked out. Everyone has to worry about being downranked to oblivion, which is the new normal on most SM sites. reply strken 18 hours agorootparentI was once involved in my friend's SaaS startup and he got locked out of Facebook ads for having an inactive account and then spending too much money in the first day. \"Too much\" in this case was a few hundred dollars. Turns out you're meant to slowly increase your spend over a week while doomscrolling shitty clickbait, otherwise Facebook thinks your account has been compromised. reply navigate8310 13 hours agorootparentprev> If you're at all legit, you don't have to worry about being locked out. This is simply false. We were locked out of Meta Ads Manager for no apparent reason. When we contacted Meta customer support—setting aside the casual racism I faced for not being a native speaker—all they could offer was, \"Oops, that shouldn't have happened; we'll refresh your account.\" As a result, we lost approximately $5k in business because we couldn't reach our audience at its peak. reply lolinder 19 hours agorootparentprevMy wife got randomly banned from Facebook Marketplace for a year. Appeal after appeal was ignored, then randomly they restored access more than a year later. A year is enough time to kill a business. reply dandellion 19 hours agorootparentprev> If you're at all legit, you don't have to worry about being locked out. That's not correct, just on HN you can frequently see articles about people getting locked out of Google, Paypal, Facebook, etc. with no explanation given. I've been banned for suspicious activity on a social media site on an account I hadn't used in years, probably because someone was trying to steal the username. reply BadHumans 19 hours agorootparentprev> If you're at all legit, you don't have to worry about being locked out. Complete ignorance of the people who arbitrarily get flagged by algorithms to no fault of their own or get on the bad side of someone at these companies who have a grudge. reply zdragnar 19 hours agorootparentYou mean like the Texas home schooling Facebook group that keeps getting dinged because Facebook keeps asserting that the word \"Texan\" implies they are selling drugs? reply rchaud 5 hours agoparentprev> your new Kings are your domain registrar, registry operator and ultimately ICAN itself To whom have these bodies caused problems, to anywhere near the same extent as mass market social media networks? reply piyuv 4 hours agorootparentOP is close to defending sovereign citizens. Well-regulated, established organizations are not threats to liberty; on the contrary, they’re required for a well functioning community (of netizens) Some kings thought that they were bound to gods so in the name of total freedom they announced themselves as “god-kings” reply int_19h 1 hour agorootparentIt's not an either-or. Organizations are required for a well-functioning community, but they're also threats to liberty insofar as they represent easily capturable concentrations of power. reply appendix-rock 4 hours agorootparentprevNobody said that this happened? The commenter is pointing out the faulty absolutist suggestion of the clickbait title. reply croes 8 hours agoparentprev>But wait! Your mailing list is hosted by Mailchimp which is another company, and your website is hosted by GoDaddy or Squarespace? Aren’t they evil kingdoms too? >Not really. They are just hosting platforms that are invisible to your followers. >The general public doesn’t have to go to Mailchimp.com to read your newsletter or squarespace to view your blog. Your readers go to your domain. reply Gud 8 hours agoparentprevJust because you are using someone else’s services doesn’t mean you’re in their kingdom. Self hosting (which I think you should be) is more like being Luxembourg. Sure, you still have to appease the neighbours, and occasionally you might be invaded, but overall you still get to see your own taxes and keep the culture somewhat independent. reply roenxi 18 hours agoparentprev> This is mostly a good thing, if this wasn't true, somebody would have set up a site that was a safe haven for child porn, and there'd be nothing that anybody could ever do about it. I doubt it is true, and I'd assume people have set up a site. If the media industry failed to exterminate torrenting with enormous economic incentives to do so why would the crusade against child abuse achieve more success? It isn't technically possible to stop people communicating with each other over the internet. reply throwaway48476 9 hours agorootparentIt's already happened. The Trump shooters brother was arrested for CSAM only because it was discovered during the investigation of his brother. reply ThunderSizzle 8 hours agorootparentWell, for all the \"safety\" of the kingdoms there, it didn't stop it. So the kingdoms have not prevented it, and many probably have facilitated it, and maybe not always unintentional (as in, someone from inside the company was \"in on it\"). reply throwaway48476 8 hours agorootparentThe FBI also temporarily ran a CSAM site which raises ethical and legal questions. reply dartos 10 hours agoparentprev> Despite what people say, the internet is not decentralized. Do people say this? I’ve never heard anyone outside of web3 land say this. IIRC it’s one of the big disappointments of the internet that is evolved in such a centralized way. But also you can deploy a website which doesn’t rely on ICANN or a hosting provider, lets encrypt, email, or any of that. Your only “king” would be an ISP (which you could also run yourself, if you were so inclined) It wouldn’t be an easily accessible castle, but it’d be yours. reply immibis 6 hours agorootparentYou still need an IP address. You can build your own network on top of point-to-point layer-2 connections, which have no central authority, but it won't be reachable from the Internet. BTW: anyone interested in this should join DN42, which is an alternative central authority, and does more-or-less this. Although 99.9% of DN42 links are internet VPNs because that's cheaper, physical links are also accepted because they're cooler. (This reply was delayed by an hour by HN's rate limit) reply dartos 3 hours agorootparentI’m not an expert (or all that knowledge, honestly) in ISP level stuff. I just know it can be done. If you ran your own ISP and purchased wholesale bandwidth, would that not just include an ipv6, at least? reply immibis 3 hours agorootparentYou can get an IPv6 range from your ISP, or directly from the central authority in your region. (IPv4s are too scarce to get a range, so you'll only want to have one and that will have to be part of your ISP's range because you can't advertise just one.) Purchasing wholesale internet bandwidth is another way of saying purchasing internet service (a lot of it). The company that sells you that is your ISP. reply bitnasty 19 hours agoparentprevThis is addressed in the article… reply xeyownt 13 hours agorootparentYes, but you had to scroll to see it. Way too hard these days. reply throwaway48476 19 hours agoparentprevThis logic extend to governments as well. It's a spectrum which in many ways the mega platforms are directly comparable in their economic impacts to governments. This requires a more nuanced analysis than a reductive \"it's a private company\". reply SigmundA 20 hours agoparentprevAt this point you only have your own kingdom if you have a standing army with nuclear weapons, you are sovereign, everyone else rents, this is just physics, the details are social contracts. reply EarlKing 17 hours agorootparentA certain medieval gentlemen from Alamut would beg to differ. One does not need a standing army and nuclear weapons so much as the ability to inflict your politics on others credibly and unavoidably. There are many ways to do that, not all of which necessarily involve violence. Put another way: There are many minority populations throughout history and up to this very day that have managed to carve out a niche in their host population without necessarily employing mass violence to do it. reply throwaway48476 11 hours agorootparentAll politics is violence by other means. reply EarlKing 1 hour agorootparentIf you think that all politics is violence then you're always going to be woefully ineffective at it. Never bring a shotgun to a negotiation when a well-placed fact (or fiction) will do. reply HPsquared 9 hours agorootparentprevIt does make Clausewitz's saying about war being \"politics by other means\" back in context when you put it that way. But really politics is just about \"one person causes another to act\". This can be through persuasion. It doesn't have to be force (or fraud for that matter). reply throwaway48476 8 hours agorootparentPersuasion is merely the implication of force. All actions can be explained through the language of force from the tenuous to the direct. reply EarlKing 1 hour agorootparentPersuasion is the art of supplying facts to enable mutual self-interest. Not everyone has an implacable class interest. reply HPsquared 8 hours agorootparentprevConsider the persuasion of making a sale. That's not force. People can sell political ideas in the same way, they can spread virally. EDIT: Also I consider economics, politics and marketing as basically \"mass psychology\". Hence all the problems with replication in those fields. EDIT 2: And with these things being psychology, there's a big \"default biological drives\" component. A lot of the motivations for political etc actions are internal to each person. reply throwaway48476 8 hours agorootparentThe replication issues in those fields are partly attributable to the fields inability to explain behavior in terms of the biological imperative. There is the theoretical rational actor which while very misunderstood is also subject to the stochastic and entropic reality. The 'internal motivation' Persuasion can be divided into carrot and stick. The stick the implication of force against the individual and the carrot the promise of the ability to use force against other actors. This can be further expanded to negative force inherent from a relatively worse off position for not taking the carrot. With some creativity all behavior can be formulated from a few simple primitives. reply tshaddox 20 hours agorootparentprevHaving your own nuclear weapons is probably like having firearms in your home in that you’re actually more likely to be the victim of that class of weapons. reply SigmundA 19 hours agorootparentThe alternative is you don't have them and you rent protection from someone who does. reply tshaddox 19 hours agorootparentRight, I’m hinting that it’s probably not worth maintaining your own nuclear weapon system in order to host your own website and email newsletter. reply SigmundA 18 hours agorootparent\"If you wish to make an apple pie from scratch, you must first invent the universe\" reply veunes 4 hours agoparentprevFull independence is nearly impossible reply 6510 19 hours agoparentprevYou can make a html website in a torrent. Works surprisingly well. One time I had a copy of someones website that got deleted and experimented a bit. The index was paginated linked page titles 50 per page. I combined the paginated pages so that each had 2000 entries (I think it was, maybe 5000) Then I wrote a bit of js that takes a search query from the url?q= looks if it exists on the page, if nothing is found load the next html document and append the query to the url. To my surprise it paged though the pages remarkably fast. If you want to you could, in stead of display the content, display a search box on each page with the query in it, have a row of dots for the page number (on page 4 display 4 dots) Displaying 50 or 500 blank pages one after the other goes pretty damn fast if you load them from the file system. They can also be pretty damn big. If you put the content in comments the rendering engine wont touch it at all. When you update the website you can make a new torrent that has the same folder name and the same files inside. Run a check and the client will discover you had nearly everything already. The only restriction is that it may not change existing html documents. For that you can just attempt to load non existing scripts in the folder. Have script1.js attempt to load script2.js and 2 look for 3 etc Can publish updates on a telegram channel. reply Y_Y 10 hours agorootparenthttps://en.wikipedia.org/wiki/Microsoft_Compiled_HTML_Help reply echoangle 20 hours agoprevEasier said than done… if you are a YouTube creator, are you supposed to set up your own video hosting to compete? And how many of your viewers will move over to watch your stuff there? This advice probably works for blogs and mailing lists but isn’t really actionable for other content. reply nine_k 14 hours agoparentIf you are a \"YouTube creator\", you have already firmly planted your castle on Google's land. The positioning of onself as bound to a particular website run by someone else is needless loss of independence. Position yourself as a video creator and post your videos also to Instagram (when possible) and to Vimeo. Seed free / back catalog episodes via a torrent. Run a mailing list announcing and discussing your videos, with some premium content for paying subscribers only. Maybe have an X / SkyBlue / mastodon feed with more compact announces, comments, and high-virality short clips from your longer videos. Cross-link and cross-reference all the channels of your presence. Make your brand recognizable across the publishing methods. Gently prod people to touch more than one channel of your video distribution, just to get the most avid viewers acquainted with several. Yes, this is significantly more work. It also may bring significantly more results if your videos are good. This gives you a much stronger assurance that your brand and your following will not be lost, should you lose access to YouTube / Instagram / Vimeo / X / whatever other platform. Commoditize your complement, as they say. reply kalleboo 13 hours agorootparentVimeo only gives you 2 TB bandwidth/month without negotiating an Enterprise plan. If your video goes viral, you're going to be out thousands to host it for everyone. How are you going to pay for that? You could put it on credit and then show these numbers when manually negotiating the payout from your next sponsor and pay it back with the proceeds from the next video, but there's no guarantee your next video will be also a hit. reply Animats 7 hours agorootparent> If your video goes viral That's what PeerTube is supposed to be for. You can set up a PeerTube host yourself. Or there are some public PeerTube hosts that accept uploads. When people are watching your videos, the ones with good bandwidth are also hosting them for other users. The hosting site is just handling the original copy and coordinating the peers. (This isn't like Bittorrent; hosting is centralized but playout is distributed. When no one is watching, the only copy is on the original server.) PeerTube really should be popular like WordPress, for self-hosted content. But it's not. Neither Google nor Bing indexes PeerTube sites, so there's no discovery. Few PeerTube videos have more than a handful of viewers. I use PeerTube for technical videos, to keep them ad-free, and it works fine for that low-volume application. Here's the Blender 4.2 showcase reel on PeerTube.[1] It's a good demo. Will it overload if watched by many HN users? Please try. [1] https://share.tube/w/uYK7X52m2Y7RyahL4wjKaM reply Zak 3 hours agorootparent> Neither Google nor Bing indexes PeerTube sites, so there's no discovery. That's not search engines discriminating against it in this case. https://share.tube/robots.txt reply immibis 6 hours agorootparentprevPeerTube is just a self-hosted video platform. Video bandwidth is legitimately expensive. You'll still be out a bunch of money if your video goes viral. reply treyd 4 hours agorootparentThat's why it's built on WebTorrent, to share the load across users and instances. reply immibis 3 hours agorootparentRemoved end of 2023: https://github.com/Chocobozzz/PeerTube/issues/5465 reply treyd 1 hour agorootparentI saw elsewhere that it's planned on being readded after the rearchitecting work that's mentioned in that issue. reply j45 6 hours agorootparentprevThere are cdns that can help.. reply MichaelZuo 4 hours agorootparentThe core issue is that someone has to pay a lot for a lot of bandwidth, or a lot of someone’s paying a bit each. reply j45 3 hours agorootparentI've been connecting the dots in video/bandwidth delivery. While I was digging up an additional link, it appears Cloudflare R2 allows no egress fees. https://www.cloudflare.com/developer-platform/r2/ 10GB free to host, no egress fees. Combined with a cloudflare worker, it seems reasonable that the object storage could be managed. reply immibis 3 hours agorootparentNow your castle is in someone else's kingdom. And in Cloudflare's kingdom, always be ready to get an email: \"pay us $150,000 in 24 hours or we cancel your service\" reply j45 2 hours agorootparentMy original comment was using a group of cdns. I think there’s a few. In this case you’re already paying for storage so egress is free. A 10 gig fibre connection is another way to start. The internet always costs someone. reply password4321 2 hours agorootparentprevHost on a provider with \"unlimited\" data transfer (the legit ones are capped by rate eg. 100mbps etc.). reply CJefferson 13 hours agorootparentprevCan you suggest a few video creators who are having success with this model? I watch quite a few video creators, and don’t know any trying to use this model. reply Grumbledour 7 hours agorootparentPersonally I have seen a few over the years come and go. Podcasts (Adio and Video) for example often tried to use youtube as an additional channel, but still maintain their websites and RSS feeds. It seems these days, most Youtube creators are at least somewhat aware of the problem and have websites, discord channels, patreons etc. While I still think many would struggle if they lost their youtube access suddenly, they do have additional channels to reach out to at least part of their audience. reply lucianbr 6 hours agorootparentprevThere's nebula.tv. The people there are both video creators and their own hosts, or so I read. Got together and built themselves a host because YT was not what they needed. reply rchaud 5 hours agorootparentprevMost videographers are actively trying to be seen, are they not? How else would they transition into an agency/studio job with real customers and projects? I've never heard of a videographer that would accept obscurity in exchange for tech/platform sovereignty. reply albert_e 1 hour agorootparentprevone possible example -- https://www.youtube.com/watch?v=ht9GwXQMgpo i saw they post pretty well produced videos on youtube -- for folks like me but also promote a more elaborate/detailed video series on the same/related topics on a separate subscription based platform reply sumtechguy 6 hours agorootparentprevI have seen a few do the conversion. They usually start by cross posting on any video site they can. X, Rumble, locals, self hosting, discord, with usually some sort of patreon model of funding with maybe ad reads. Then what is left on YT is highlights of their other longer form content on other sites. The kicker is they do not need as many people following them as YT is not taking the majority of the ad revenue cut. But if you want to see people trying to make the conversion just scroll the front page of Rumble. Many of them are trying to get out form under youtube and many have YT channels too. But Rumble is just another YT waiting to happen and they know it. reply Elinvynia 11 hours agorootparentprevLinusTechTips literally built their own video hosting site - Floatplane - exactly for this reason, to have a backup in case YouTube nukes their channel. reply throwaway48476 11 hours agorootparentWhich is increasingly likely as they manually removed his video about adblock. reply mvdtnz 13 hours agorootparentprevNo, he can't, because there are none. It's a ludicrous model that exists only in the minds of HN commenters. reply keiferski 12 hours agorootparentprevThis is all good advice but realistically you can probably skip the random social media sites and just do email and YouTube. Email is much, much better than pretty much any social network. reply gilbetron 4 hours agorootparentEmail? Outside of the older crowd, I don't know anyone that actively uses email for anything. So many people in my life are surprised when my wife and I use email for anything. Tech/business/academic might hit some ok % with email, but outside of that I'd doubt you'd get to 1% of your potential audience. reply Suppafly 50 minutes agorootparent>Email? Outside of the older crowd, I don't know anyone that actively uses email for anything. This, it's surprising and somewhat annoying, but people ~20ish and younger pretty much just don't use email. reply keiferski 4 hours agorootparentprevEmail is generally considered the best channel in the marketing industry. It’s absolutely not just something for old people. reply zelphirkalt 8 hours agorootparentprevSomehow you will need to reach people, at least initially, though. They don't magically appear on your mailing list. reply nine_k 10 hours agorootparentprevMail lists go far, but retweets go wide. Different tools for different purposes. reply keiferski 10 hours agorootparentSure, but in my experience it's better to have 1000 solid email subscribers than have your tweet seen by 100k people. Even moreso for something like TikTok, where you can get millions of views but capitalize on virtually none of them. reply authorfly 2 hours agorootparentEmail has the problem though that Gmail suddenly in one fell swoop blackhole you for 80% of your readers. reply tdeck 12 hours agorootparentprevDave Jones from the EEVBlog does this - he cross posts to his own site and to many smaller video hosting sites. But if I remember correctly he has said in the past that almost all his viewership comes from YouTube. Unfortunately for long-form videos in English YouTube seems to be the only game in town in terms of discoverability. reply nine_k 10 hours agorootparentWhile you're tiny, you need discoverability a lot. But even if YouTube bans you and deletes all your videos, you lose relatively little. The bigger you are, the more well-known, the larger is your following, and the more the whole enterprise is the source of your livelihood, the more you may need to hedge your bets. reply j45 6 hours agorootparentprevNice summary. There are tools out there that can help with chunks of this, but understanding the pieces as you’re laid out is critical. Since a lot of creators today were consumers first of content, they miss the side when there was little social or video to consume online, and in turn creating was the default. reply rlayton2 19 hours agoparentprevI think one method here is to incorporate your own site into the content as much as possible. For example, if you are a creator, get people to sign up to a newsletter to get the source files. Get people onto your platform/forum/whatever as well as watching through YouTube. Easier said than done, but better than not doing anything. From there, you also ensure that you have a backup of all your videos. I've talked to people that only had their stuff on YouTube/Facebook/whatever. It is super risky. If you have a backup, and YouTube bans you, you can rehost elsewhere, it won't be as big, but you might still have a business afterwards. reply azemetre 18 hours agorootparentAlso something that needs to be noted, you don't need the same original numbers of people in your kingdom to make equivalent money. When you're making commerce in someone's fief, they will demand tribute as well. In the confines of your own kingdom, all the ad dollars are yours. Which also means you don't need to chase the same amounts of people to make similar coin, especially if the deals you make with advertisers are between you and the advertiser (not you, the advertiser, and the king of some other fief). reply georgeecollins 14 hours agorootparentExactly. You can be huge on Youtube or tiktok and if you convert some of that to direct engagement you are much better able to survive a changing landscape. reply Cthulhu_ 11 hours agorootparentprevYeah, every YT creator that is serious about their job should have their own website with a copy of the videos, and I find it really curious that this doesn't seem to be much of a thing? At best I'm seeing merchandise webshops. But you'd think these people would be multi-channel and have a website, youtube, all the social medias, etc, and the bigger ones a company to manage them all. But I suspect that as they get bigger, they enter in exclusivity / no-compete contracts with Youtube, and if they detect the same video hosted elsewhere, they get taken down or something. reply Y_Y 10 hours agorootparentThis sounds like an opportunity for a product. Apart from eyeballs and familiarity, Youtube does a lot of handholding so that non-technical people van run their own channels. I don't think 90% of youtubers would have any idea how to spin up a website. But I'm sure they'd be happy to pay someone to do it for them (as long as the price was a small fractuon of their ad revenue). reply lolinder 17 hours agoparentprevYour YouTube example is exactly what gave rise to Nebula.tv—creators banded together to create an alternative that would backstop them against YouTube's dominance. reply kalleboo 12 hours agorootparentAnother example is Floatplane which was bootstrapped by the Linus Tech Tips people after realized how dependent they were on YouTube. reply echoangle 11 hours agorootparentprevAnd how many people are on nebula compared to YouTube? reply nine_k 7 hours agorootparentAll the 1000 of your mailing list subscribers? Or maybe 10k. You start needing alternatives when you're already established and have a following. With this comes large enoug influence and thus the ability / risk to step on some big toes, including Google's. reply naming_the_user 15 hours agoparentprevYou're omitting the choice of just not doing that in the first place. If you want to be a Windows developer, then yes, you have to be a Windows developer in order to be a Windows developer. But you don't have to want to be a Windows developer. You don't even have to want to be a developer. reply devjab 12 hours agorootparentI think the difference between development for a “real” OS is that windows is still mainly owned by its customers. Similar to how MacOS is. On MacOS people can still install your applications even if you don’t pay the Apple tax to avoid their pop-up warnings. (I’m not sure if avoiding the windows warnings is also something you pay Microsoft for.) I think a better comparison would be iOS or Chrome, where you’ll realistically have to submit yourself to their stores if you want to reach most users. Which is sort of even more locked down than YouTube as some content creators on YouTube have managed to move their audience to other platforms, though sometimes by still posting teasers or at least some content on YouTube. reply dfxm12 2 hours agoparentprevAnother option is to consider that \"YouTube creator\" should not be treated as anything more than a hobby; it should certainly not be your identity/job title. Unless you have some sort of contract with Alphabet, your videos are hosted at their pleasure and you are owed nothing. Your time is likely better spent not bolstering someone else's library of content. reply btown 17 hours agoparentprevThere's an entire OTT sub-industry for video hosting and out-of-the-box monetization: https://en.wikipedia.org/wiki/Over-the-top_media_service For instance, https://vimeo.com/ott is an effective (albeit expensive) option, powering Dropout (formerly CollegeHumor) and other brands and allowing them to focus on content. Dropout, in particular, has found an effective model of releasing short clips from their improv-heavy shows on social video platforms, gaining virality there while subtly reminding new and old fans that they can find full episodes, and support on-screen and off-screen talent, by subscribing to the brand directly. Their growth would be impacted by the loss of a marketing channel, but not their underlying subscription fundamentals. (The entire Dropout business story is quite inspiring and worth a watch: https://www.youtube.com/watch?v=qRK_gNfFdP0 ) reply JBiserkov 15 hours agorootparentThat sounds incredibly interesting! Thanks for sharing that! The YouTube link at the end is ironic ;-) reply chillfox 18 hours agoparentprevOne way is to release videos 1-2 weeks early on your own site. reply instig007 8 hours agoparentprevWith videos you can start by retaining control of your channel configurations and making it independent from any particular video hosting provider. See this for inspiration (not promoting it, just the gist of the idea): https://grayjay.app/ reply paulryanrogers 20 hours agoparentprevWell there is podcasting and PeerTube. reply whatshisface 20 hours agorootparentYouTube offers millions of dollars in free advertising to content creators along with tens of dollars in free hosting. reply EarlKing 17 hours agorootparentIt really doesn't. To understand why, you have only to comprehend the following: Whether someone is searching under a particular keyword, or just browsing whatever pops up on the home page, the average browser has a finite amount they're willing to scroll before abandoning their search... and chances are your video is NOT going to be placed highly in those results unless you're directing a firehose at it from offsite via Twitter, forum posts, news aggregators, or paying Youtube to promote your video flat out (which is such an obvious moneygrab on their part its disgusting). In other words: If you rely on their algorithm to promote your work you're literally playing the lottery and, much like the lottery, statistically you're going to lose. It makes far more sense to find bandwidth and hosting, negotiate with an ad network, and direct a firehose at the resulting site... but that's more work than some are willing to do. shrug Oh well. reply speff 7 hours agorootparentThis is an amateurish take on marketing yourself on YouTube. The algorithm is /not/ like the lottery. My wife is a content creator on YT and hasn’t spent a dime on advertising. The free advertising isn’t in the form of search result placement (mostly) but rather the algorithm showing your videos next to more popular related videos. That’s why the absolute most important thing for video promotion isn’t the material itself, but rather the title/thumbnail combination. People are generally bad at understanding this and/or bad at marketing themselves so they attribute their lack of success as random chance And unless your audience is very tech oriented, they’re not going to switch off whatever platform the ads are on to watch videos hosted elsewhere. You’d need to ask a LOT of people (= a large amount of $$$) and hope a few of them make it over a bit at a time reply EarlKing 1 hour agorootparent> My wife is a content creator on YT and hasn’t spent a dime on advertising. Is your wife a representative sample of all Youtubers? If not, your datum is irrelevant. > unless your audience is very tech oriented, they’re not going to switch off whatever platform the ads are on to watch videos hosted elsewhere. Having now witnessed multiple creators hop from one platform to another and drag their audiences with them because they're JUST THAT ENTERTAINING... no, you're wrong. People will gladly follow artists to a better platform if it means they're able to make a living and/or not be censored. reply ako 13 hours agorootparentprevIf you place it on a website you’ll also be subjected to their algorithm, google search. reply EarlKing 1 hour agorootparentThe point of going to your own site, though, is not to rely on algorithms, but construct your own marketing funnel. reply paulryanrogers 20 hours agorootparentprevIndeed, I was just trying to point out some decentralized alternatives. reply tshaddox 20 hours agorootparentprevWith podcasting you’ll almost certainly be reliant on being searchable on the major podcasting apps. PeerTube is as close to nonexistent as a video platform can be. reply Spivak 15 hours agorootparentPodcasting is actually worse. YouTube is a kingdom where people come to you. In podcasting there are a few large kingdoms and you have to be in all of them because of the \"wherever you get your podcasts\" thing. reply JacobThreeThree 1 hour agorootparentThere is a quasi-open podcasting index that many podcasting apps use. It's here: https://podcastindex.org/ reply giantrobot 20 hours agorootparentprevWith YouTube people can just click the \"make money\" button. YouTube handles the ad sales and payments. Both are your job if you're podcasting or publishing on PeerTube. Hosting video content is not an unsolvable problem. YouTube's moat is economies of scale and user base. YouTube's draw is the \"make money\" button. reply EarlKing 17 hours agorootparentThe \"make money\" button, however, is an illusion for 99% of publishers. The one case where it does seem to make out is with livestreams, and then only because unlike topical short-form videos, streaming is not a winner-take-all environment where one or two people run away with all the eyeballs, but instead people will tend to decommoditize topical streaming based on the personality of the broadcaster and your ability to form a parasocial relationship with them... hence even a relatively unknown person, if they're persistent, can manage to grab a few hundred regular viewers who'll toss a few bucks each stream... not enough to make a living, but enough for beer money. The prime advantage of youtube in this scenario is not having to deal with setting up hosting/DDoS filtering and negotiating with a payment processor ... just push the button and upload. So for streamers I think it can still be worth it, but for people posting short form content I think they might be better off rolling their own because they can't rely on Youtube's algorithm to give them enough eyeballs to be profitable. reply magarnicle 15 hours agoparentprevSome of them have, it's called Nebula. reply j45 6 hours agoparentprevA huge part of the world forwards videos primarily on WhatsApp. And links to YouTube. Your question seems to connect discovery of videos and distribution. Video hosting is getting easier. There’s platforms like avideo that are relatively easy to host. Many companies use alternatives already like or Vimeo. Hosting your video permanently first from your own setup isn’t too far fetched. YouTube can be secondary. Many people use social media to build their own email lists and communities. YouTube can achieve the same. At the same time I think YouTube is more going to eat cable tv up or at least offset it more first. reply MisterBastahrd 16 hours agoparentprevA high school friend of mine contacted me out of the blue on facebook after probably 20 years. He had gotten on early with an MLM that made it big and one of them had such success on the platform that he had made multiple appearances at their national convention to give a testimonial to how it changed his family's lives. Mind you, this is a guy who was 2 years from being able to retire with a pension from the chemical refinery he worked at. I laughed, told him I wasn't interested, and warned him that he didn't own his network: that the MLM could take it from him at any time, and it's why most of the experienced salesmen I knew lived well below their paychecks. He grew very upset, told me I didn't know what I was talking about, and basically behaved as if I had insulted his religion. Well, half a year later I was laid off and found a new job with a marketing automation firm. On my second day, we had an all hands meeting where they were announcing that the MLM he worked for would be immediately breaking contract and leaving our platform because they reached a settlement with the DOJ over their methodology. Effective immediately, they were going to a distributor model and ceasing all payouts for network related sales. I knew his world was going to collapse before he did. In the end, he had to sell his house and most of his possessions, his wife divorced him, and he tried to break back into the MLM world but could never get anything started. Nobody wanted to hire him for a traditional sales role because they regard MLMers as lazy and dumb. He's back at another chemical refinery, hoping to work there for another 20+ years to earn another pension. reply liotier 6 hours agorootparent> 2 years from being able to retire with a pension > [..] > hoping to work there for another 20+ years to earn another pension I don't understand that... If he was two years from retiring, then he only needed two more years of salaried employment somewhere lese - didn't he ? What country did he live in ? reply lotsofpulp 2 hours agorootparentIn the US, pension is short for “defined benefit pension”, most often a provided by a single employer stipulating that you work at that employer for a minimum number of years, and the longer you work at one employer, the greater the benefit. They only exist at taxpayer funded employers or legacy businesses like oil and gas, but most everyone else has switched to defined contribution pensions, but those are referred to as “401k” or “401b” or some other letter for the appropriate section of the law that specifies the tax benefit of saving for retirement. The latter are better ever since low cost index funds came about, as you get to skip paying the DB pension administrators and remove agency risk. reply MisterBastahrd 2 hours agorootparentVirtually all people who have worked and retired at oil and gas companies over the past 40 years had both a company pension AND a 401K. My dad has a paid off house and no bills other than utilities and taxes. He's pulling in over 80K a year in retirement, and he re-invests most of what he's being forced to pull out. reply MisterBastahrd 4 hours agorootparentprevThe US. Your pension, if you get one, is tied to your employer. Most people have 401Ks. reply jimbob45 15 hours agoparentprevThe optimal strategy would probably be to start on YouTube and then migrate to your own platform once you can afford it and have an audience willing to come with you. Then probably dual stream for a while on your site with blended chat support before cutting the YouTube cord loudly and with warning. reply Razengan 16 hours agoparentprev> if you are a YouTube creator, are you supposed to set up your own video hosting to compete? They could use their popularity to promote and donate to alternatives. reply birdman3131 22 hours agoprevInteresting article but it only talks about 1 half of the coin. For the sort of stuff they are talking about you can't get near the visibility and ease of use building it yourself. You will see a fraction of the traffic that somebody doing the same thing on those platforms will see. They try to hand wave it with build a tower and bring them back to your site but that rarely works well. I need to create an account to use your site has a significantly higher bar than I hit subscribe to see your next video in my feed. reply Apreche 22 hours agoparentI have friends dealing with this very problem. They strongly believe in and agree that they should build in their own kingdom. They hate the platforms and all the ways in which they are bad. But they are small business owners. They make their living entirely based on digital visibility. They need to get their message out to where the eyeballs are. They may try to get people to subscribed directly to their e-mail newsletter, but that's not enough. Most people find them on Instagram, Twitter, etc. If they delete those accounts, as they would like to, their business will be in deep trouble almost immediately. Web discoverability has had the same dilemma since its inception. People only remember and actively engage with a few things. A search engine, some media platforms, some communities they are involved in, etc. If a link appears in one of those places it's extremely visible. If a web page does not show up in one of those places, discovering it is next to impossible. What are they going to do, guess the URL? How can someone get some amount of visibility on the web without putting anything in anyone else's kingdom? Even someone following the POSSE model (post on own site, syndicate elsewhere) is extremely dependent on the elsewhere if they want to be visibility. Without the elsewheres to syndicate to, they will build an empty and isolated kingdom. reply givemeethekeys 21 hours agorootparentAdvertising on multiple platforms is a little less risky than building the entire business on, being able to publish to the App Store. reply bitnasty 19 hours agorootparentprevThe article didn’t say you should delete all your social media accounts or never post content there… reply dandellion 19 hours agorootparentRight, it specifically says to build bridges from other kingdoms to yours. So using Twitter, Youtube, etc. to bring people to your own site. reply carlosjobim 17 hours agorootparentprevWell, there's always good old fashioned off-line visibility, if your small business friends want to experience real worthless crap. If you do your work, it's not hard to get good visibility on Google and other search engines. The key is this: If you're selling product X or service Y, you need to make your website the very best resource imaginable for information about it and with an as easy purchase process as possible – with good terms to boot. But most small business owners are completely uninterested in that, and instead spend their days spamming social media and paying for ads to bring visitors to their website that turns potential customers away instantly. reply AnimalMuppet 21 hours agorootparentprevBuild your castle in the kingdom that gives you the best game-theoretic outcome, but always keep in mind that it's not your kingdom. reply eikenberry 21 hours agoparentprevWhy not both? Build your castle in your own kingdom but have \"vassels\" in all those other kingdoms to get the benefits they provide and use them to promote your own kingdom. You might still rely on those 3rd party \"kingdoms\" for the vast majority of your income but you at least have options if one kicks you out and your fans know where to find you. [edit: akin to a developer having the official git repo self hosted but mirroring it into github for the community] reply guyzero 3 hours agoprevThis advice goes back to previous generations of web entrepreneurs, way back to 2015 or earlier: https://www.roughtype.com/?p=634 \" It’s a sharecropping system, but the sharecroppers are generally happy because their interest lies in self-expression or socializing, not in making money, and, besides, the economic value of each of their individual contributions is trivial. \" reply shahzaibmushtaq 48 minutes agoprevYes, build a place where people can reach you at any time if the place where they met you becomes out of reach for any reason in the future. reply philipov 21 hours agoprevProblem is that everywhere is already someone else's kingdom. This advice amounts to \"Don't bother trying to build a castle.\" reply onemoresoop 21 hours agoparentFind the kingdom where you have most friends. reply theossuary 20 hours agoparentprevIt's true, even assuming you do everything yourself, you're still building within the laws of a country, which is building within someone else's kingdom, as it were. I suppose the real rule of thumb should be \"Don't build your castle in an autocracy.\" reply humblepi 21 hours agoparentprevDesktop computers still exist and will happily run games. reply swagasaurus-rex 21 hours agorootparentPiracy and DRM killed most direct-to-customer distribution of software. reply whatshisface 20 hours agorootparentValve Software got $8.6B in 2023. reply BadHumans 19 hours agorootparentSteam has DRM. reply okanat 19 hours agorootparentNot always. There are plenty games that work without the Steam libraries. Also GOG exists and very healthy with explicit no DRM policy. reply int_19h 1 hour agorootparentGOG isn't exactly DRM-free these days. The platform doesn't add its own DRM, but it does distribute games with DRM elements. Their stance seems to be that, so long as the game is playable offline in single-player mode, it is acceptable. reply tjpnz 18 hours agorootparentprevBut GOG censor their catalog for everyone after feedback from the CCP cough gamers. reply Sohcahtoa82 1 hour agorootparentprevAnd yet Steam is incredibly popular despite the DRM because it's unobtrusive. You don't get punished for replacing your computer every couple years and needing to reinstall your games. I'm not sure I've ever heard of someone having a technical problem with Steam's DRM, I've only heard moral/ethical/worried-about-what-happens-when-Steam-disappears problems. reply ChrisArchitect 21 hours agoprevMore discussion from 2021: https://news.ycombinator.com/item?id=29108662 reply dang 19 hours agoparentThanks! Macroexpanded: Don't build your castle in other people's kingdoms - https://news.ycombinator.com/item?id=29108662 - Nov 2021 (122 comments) reply amelius 22 hours agoprevWe all built our castle in TSMC's and ASML's kingdom ... reply doublerabbit 22 hours agoparentWhile being guarded by a moat of snakes.. reply neilv 21 hours agoprevI'm about to launch an small indie Web site, and yesterday I started going through a list of 11 social media sites on which to grab the brand name. But initially the Web site has only an email list signup form. I figure, if I have an array of icons for social media sites where everyone is owned, then random people interested in the site will just pick one of those. I guess I'll soon see whether I get many connections that way, whether people actually read their email, whether they forget they signed up and flag it as spam (scrodding me with GMail), etc. (Later, I plan to have an active Fediverse presence, for people who want some social thing like that. But I don't expect many people to be on Fediverse, so first I'll have to sell it to people. It's an easier sell if that's the only \"app\" on which I'm putting out stuff, rather than hypocritically supporting all the social media ranching companies by replicating content to them.) reply ricardobayes 7 hours agoprevThis actually piqued my interest, does anyone know of any good resources to learn digital marketing? reply meiraleal 7 hours agoparentI always start by searching HN. I'm no techbro so I take a good amount of what I read with a grain of salt. With such an open query (Digital marketing), you should limit to past year and there will be good content first one: How do you learn digital marketing? https://news.ycombinator.com/item?id=41107413 reply hshshshsvsv 2 hours agoprevAlso generally a good idea not to build any sand castles. reply ramshanker 9 hours agoprevNice. Convinced me to add a mailing list to my website. :D I promise, 1 mail update per month. Exceptional cases, 1 mail a week. reply shadowtree 22 hours agoprevMrBeast built his castle inside of Youtube. reply binary132 20 hours agoparentThe thing with being MrBeast is that now he makes YouTube a lot of money, so they have a good reason to keep him around. reply paulnpace 3 hours agorootparentThey can replace him by altering search results, so he stays around while others build up make up for the revenue. There is a reason the YouTube search engine is no longer useful for finding things. reply DonHopkins 20 hours agoprevThe term is \"sharecropping\". reply mylastattempt 9 hours agoprevWhile the article admits that it’s pretty much necessary to use “other people’s kingdoms” to get any interest in or visibility for your castle in the first place, I feel it still greatly underestimates the power of the few large kingdoms that are in actual place on the internet at this point in time. If your goal is to monetize your castle, you generally need the masses. And while you should indeed spread your risk, be it throughout multiple kingdoms or having one of your own, it is naive or even ridiculous to assume you can get the bulk of your revenue-generating visitors to continuously add 'visiting your castle in your kingdom' to their routine. That is a conscious effort they have to make, not just a mental choice but an actual action, to go to your (e.g.) website. Simply put: the majority of visitors to any castle do their visits in the FB/X/IG/YT/TT kingdoms. Only a negligible few of them will consistently make the effort to go to your kingdom. Spread your risk, but don’t delude yourself. reply nextcaller 5 hours agoprevBuilding castles on the intern-net is fun. Maybe the knowledge can be transferred to the doctor-net. reply russellbeattie 22 hours agoprevI've had this attitude before and missed out on some major opportunities. For example, even though I was an early smartphone adopter, I refused to develop apps for the iPhone when the AppStore was launched in 2008 because of the closed nature of Apple's ecosystem. There are a variety of billion dollar companies which can attest that building their castle in Apple's kingdom worked out fine for them. The big question today is: Do you try to make an AI business using OpenAI's APIs, or do you host everything yourself? One could make the argument either way. reply lmeyerov 18 hours agoparentYou use their APIs in a way that commoditizes them. Ideally your customers don't care if you switch to Anthropic, because the LLM provider is not the reason customers are picking you. Likewise, there is some structural reason that OpenAI will never release a feature that rugpulls you, eg, no 'chat to your PDF'. An extreme form is self-hosted on edge-only devices where folks are buying some other hw. Ex: Nvidia selling GPUs and giving out free Triton inferencing OSS software. But most are in the middle, eg, some accounting app now with LLMs. Our case of investigations in louie.ai is right at that boundary: OpenAI likes to support data analysis, but folks using Splunk/databricks/etc all day expect a lot more out of software here, and that's too at-odds with OpenAI's org chart and customerbase. reply rqtwteye 16 hours agoparentprevMost business advice is really good at figuring out in hindsight why things went a certain way. But usually it's not that great at predicting what will work in the future. reply keyle 21 hours agoparentprevThis is a good counterpoint. I fell for this too. There is an argument for airbnb the lands with a castle on wheels. reply muscomposter 17 hours agoprevwhich by this point, is nowhere at all. we cannot even go die and just drop dead in a ditch like the animals we are oh no. now we need a certificate, and we need to essentially buy, a lot of land for our rotting remains to rot in, lest a single lot of land go unclaimed… reply high_na_euv 6 hours agoprev>know it sounds good to be anti ad but that means they have no clear way to monetize. Nitro reply renewiltord 8 hours agoprevMeanwhile, Mr Beast. reply jorisboris 9 hours agoprevI started a newsletter on Revue. Then Elon shut it down quite drastically after my 17-ed edition. I'm using Convertkit now where frankly speaking I'm running the exact same risk... reply FrustratedMonky 19 hours agoprevGood advice, but really think it is a lot harder to get eyeballs than this makes out. What the big platforms brings is the audience. Yes, you can make a site to archive off the content, and direct people to your own site. But that is a backup plan. If you get de-platformed, and you go it alone, your audience will stagnate and shrink. Each little guy just doesn't have the reach or infrastructure to drive eyeballs. Hence, why the proliferation of sites that do this for you like substack, twitch, etc... Anything with content, by being a part of a bigger crowd you can gain more eyeballs. reply alexdobrenko 18 hours agoparentyeah i came here wondering about substack which does give you everyone's email addresses... reply alexdobrenko 18 hours agoprevcurious how ppl feel about substack in all this? its def not your kingdom but you do have everyone's email addresses reply dceddia 18 hours agoparentIt feels like a middle ground to me. If you can export your list, and use your own domain, and have an easy way to get the content out, it might be worth whatever distribution they can provide. Just generally I’d always have an eye on the exit and watch for signs of things going down hill. Anything VC-backed warrants more care. Think about how they could alter the deal and plan accordingly. reply immibis 6 hours agoprevYou will never own every dependency. The raw IP Internet is also someone else's kingdom, more and more by the day. Best you can do is try to balance the utility of someone else's kingdom with its risks. reply uxx 9 hours agoprevIs this a political post? :D reply JohnMakin 21 hours agoprevKind of tangential, but this article mentions Twitch Boost - I can't imagine small creators having any real issue with this. Building momentum on twitch is hard, and usually involves a ton of luck. If you have no viewers, you get few recommendations, until either the algorithm helps you out and you get lucky or you get a big raid/rehost that gives you the momentum to grow. It's either that or you happen to be one of the first streamers of some entirely new gaming category that doesn't have any big names attached to it, you get lucky there, and grow. Offering a shortcut to skip all that and pay for growth seems like a common sense move for a lot of small creators. I struggle to think of the arguments against it - are they concerned big creators will flood money into it and drown out smaller ones? They already drown out smaller streamers, especially in streaming categories that are very \"saturated.\" They also have no incentive to boost their stream, they're already top of the recommendations anyway. Great revenue idea, and a change I as a small creator was welcome to see. Often I have viewers want to spend their channel points or bits or whatever they're called and I tell them to save it, I don't seek profit off of what I do (plus twitch takes it all anyway) I have a day job - but I do feel bad because they seem to want to spend it on something and I only have enough energy and bandwidth to add custom emojis or bot commands, which are dumb and people tire quickly of anyway. reply fwip 18 hours agoparentChannel points are free to the viewer and automatically accumulated by watching your stream. Bits are purchased at roughly a 100:$1 ratio, and about half of that goes to the streamer (and half to twitch). reply JohnMakin 18 hours agorootparentPartner here - I don’t know the precise TOS here because it’s twisty and constantly changing but I have streamed now for almost 10 years as a partner with a micro following, my account balance to this day is like $46. They make every excuse possible not to give you money or put arbitrary restrictions on how much you should stream to access it, to the point I just stopped and put a paypal link on my profile and said dont give it to twitch. They steal a lot from smaller partners. However, it’s a good platform so I just take it. Kind of on the theme of this thread, lol. You choose to build a castle in someone else’s kingdom because there’s no other place. reply danielmarkbruce 20 hours agoprev [–] Yeah, build a business on an island. reply meiraleal 5 hours agoparent [–] in the \"cloud\" reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Social media platforms often alter terms or introduce paid plans unexpectedly, as seen with Twitch's \"Boost\" program and OnlyFans' near-ban on adult content, posing risks for content creators.- The main advice is to avoid building a business solely on external platforms; instead, prioritize developing your own website, mailing list, and intellectual property.- Creators should use social media to gain followers but ensure they redirect them to their own platforms, maintaining control over their audience and content despite platform changes."
    ],
    "commentSummary": [
      "The phrase \"Don't build your castle in other people's kingdoms\" advises against relying entirely on large platforms for digital presence due to their control over access and potential for sudden rule changes.",
      "It suggests creating independent spaces, such as a personal website or mailing list, to maintain control and direct audience connection.",
      "This strategy minimizes dependency on external platforms and safeguards against unexpected changes that could affect business operations."
    ],
    "points": 331,
    "commentCount": 223,
    "retryCount": 0,
    "time": 1727809856
  },
  {
    "id": 41715762,
    "title": "Math from Three to Seven",
    "originLink": "https://www.thepsmiths.com/p/review-math-from-three-to-seven-by",
    "originBody": "Share this post REVIEW: Math from Three to Seven, by Alexander Zvonkin www.thepsmiths.com Copy link Facebook Email Note Other Discover more from Mr. and Mrs. Psmith’s Bookshelf The P is silent, as in pshrimp or pseudonym. Over 4,000 subscribers Subscribe Continue reading Sign in REVIEW: Math from Three to Seven, by Alexander Zvonkin John Psmith Sep 30, 2024 78 Share this post REVIEW: Math from Three to Seven, by Alexander Zvonkin www.thepsmiths.com Copy link Facebook Email Note Other 11 Share Math from Three to Seven: The Story of a Mathematical Circle for Preschoolers, Alexander Zvonkin (Moscow Center for Continuing Mathematical Education, 2007). To me, one of the greatest historical puzzles is why the Cold War was even a contest. Consider it a mirror image of the Needham Question: Joseph Needham famously wondered why it was that, despite having a vastly larger population and GDP, Imperial China nevertheless lost out scientifically to the West. (I examined this question at some length in this review.) Well, with the Soviets it all went in the opposite direction: they had a smaller population, a worse starting industrial base, a lower GDP, and a vastly less efficient economic system. How, then, did they maintain military and technological parity1 with the United States for so long? The puzzle was partly solved for me, but partly deepened, when those of us who grew up in the ‘90s and ‘00s encountered the vast wave of former Soviet émigrés that washed up in the United States after the fall of communism. Anybody who played competitive chess back then, or who participated in math competitions, knows what I’m talking about: the sinking feeling you got upon seeing that your opponent had a Russian name. These days, the same scenes are dominated by Chinese and Indian kids. But China and India have large populations — the Russians were punching way about their weight, demographically speaking. Today, those same Russians are all over Wall Street and Silicon Valley and Ivy League math departments, still overrepresented in technical fields. What explains it? Are Russians just naturally better at math and physics? When I related these questions to an Ashkenazi-supremacist friend of mine, he immediately suggested that “maybe it’s because they’re all Jewish.” (I’ve noticed that the most philosemitic people and the most antisemitic people sometimes have curiously similar models of the world, they just disagree on whether it’s a good thing.) My friend’s question wasn’t crazy, since there are definitely times when asking “were they all Jewish?” yields an affirmative answer. But in this case I had to disappoint him with the knowledge that many of these Russian math and chess superstars were gentiles.2 What’s more, by the ‘60s and ‘70s the Soviets had an entire discriminatory apparatus dedicated to keeping Jews out of the scientific establishment, so it would be impressive indeed if they were the foundation of its success. Another possible explanation actually hinges on the relative poverty of the Soviet Union. Assume there are a lot of people out there with natural mathematical talent, but who given their druthers would major in underwater basket-weaving instead. The United States, because it’s so wealthy, can afford to “waste” a huge proportion of our talented population on humanities, arts, and other stuff that doesn’t involve you sitting in the school library until 3am. In other words, not going into a technical field is a form of luxury, which America can afford to consume. The Soviets, rather like the Chinese today, were forced by their underdog status to allocate human capital more efficiently (and had the authoritarian means to do so by force if necessary). This theory is related to the curious fact that, on average, the more feminist your society, the fewer women there are in math and science — which makes total sense if you assume that on average women are good at math but uninterested in it. The thing is, the émigré superstars I encountered didn’t seem at all grudging or resentful about their studies. If anything it was the opposite. I’ve previously complained about how much I hate Russian mathematician Edward Frenkel’s3 book, but one thing it gets across well is just how important passion is to being a great mathematician, and passion was the thing the émigrés seemed to have a surfeit of. In college, the joke was that seminars by American professors would last an hour, whereas seminars by Russian professors would turn into boisterous debates lasting all night. People have been writing for centuries about Russians having a tendency towards “maximalism” — whether aesthetic or ideological or anything else. Maybe a culture-wide commitment to not doing anything by half-measures explains it? These are all fun theories, but in the interviews I’ve read with Soviet mathematicians and scientists, the things that comes up over and over again are “mathematical circles,” a practice that originated in the pre-revolutionary Russian Empire and then spread far and wide through the Soviet Union. A mathematical circle is an informal group of teenagers and adults who really enjoy math and want to spend a lot of time thinking and talking about it. They’re a little bit like sports teams, in that they develop their own high-intensity internal culture and camaraderie, and often have a “coach” who is especially talented or famous. But they’re also very unlike sports teams, because they don’t compete with each other or play in leagues or anything like that, and usually any given circle will contain members of widely varying skill levels. Maybe a better analogy is a neighborhood musical ensemble that gets together and jams on a regular basis, but for math. The most important thing to understand about mathematical circles is that the math they jam on is completely unlike the math you study in school, and also completely unlike the “competition” math that bright kids in the United States sometimes do. Both school math and competition math are primarily comprised of exercises. An exercise is a question concocted by a human being for a didactic purpose. Any bright kid with any amount of genre-savviness can immediately make a few assumptions upon being assigned an exercise. He or she can guess that the exercise is solvable in fewer than five minutes with the appropriate techniques, and that it is related to the material in the current chapter of the book. A clever student can often use psychological techniques to reverse-engineer what the teacher or the designer of the standardized test was trying to get at with the exercise, and answer it through a process of elimination or savvy guessing or pattern matching. Solving an exercise is like hunting a neutered zoo animal. It may be a low-stress environment for polishing particular aspects of your technique, but it will not help you to survive in the wilderness. For that, you need to see people solving problems. A problem is a question of interest that comes up when somebody is trying to do something real. A problem may not be solvable by you, or by your coach, or by any human being. Even if the problem is solvable, it may require weeks or months of dedicated, painful pursuit. It may not be obvious what techniques are required to solve a problem, they may not be techniques that you know, or it may require a surprising combination of techniques. The problem is mathematical nature red in tooth and claw. There are no guardrails. There are no hints or answers at the back of the book. There is no book. It may eat you. (For more on exercises vs. problems, read my review of The Education of Cyrus.) REVIEW: The Education of Cyrus, by Xenophon John Psmith · Jan 8 The Education of Cyrus, Xenophon (trans. Wayne Ambler, Cornell University Press, 2001). Read full story The bread and butter of the mathematical circle is solving problems together, as a team. There is no time here for exercises; you can do that lame stuff at school. Sometimes the coach picks a problem for you, something just beyond your ability, just the thing you need to hone your edge. But sometimes the whole circle works together on a problem that nobody has the answer to and that challenges the very best members. These problems are the most important, because with them you see great minds, men older and more talented than you, stretched to the breaking point and occasionally beaten. You see them grind and grind and try every possible attack on a problem and sometimes lose anyway. And you see them not run from being defeated, but cheerfully charge in again, because losing is good for you, losing is how you know you’ve picked an opponent worthy of a man. You learn to love things that are hard. And occasionally you win, and when you win it feels like you all win, like humanity wins, because you’re all in it together, all doing something beautiful and dangerous and exemplary of the best qualities that human beings have. There are also times when everybody is too tired to work on a problem, and in those moments of recuperation, it’s the coach’s job to tell stories of legendary problems of the past and of the mathematicians who slew them. These stories often contain lessons, inspiration, or perspective on how mathematics evolved and got to be the way it is. Human history would look very different, after all, without the brachistochrone problem or the roots of a quintic polynomial problem or the icosahedron problem or the precession of Mercury’s perihelion problem. But other times there’s no hidden lesson, no grand perspective on the human story. They’re just ripping good yarns, and hearing them is a process of initiation into mathematical folklore, because every culture (and mathematics is surely a culture) has shared stories and references and inside jokes, even when they’re purely for fun. This book is the story of one such mathematical circle. But it’s an unusual one because…it’s for preschoolers. The “coach” of this circle is Alexander Zvonkin, a professional mathematician frustrated that his kids are having all the wonder and life and joy crushed out of them by the grey functionaries at their school. So he starts a circle for his son Dmitry and a few of the neighbors’ kids, most of whom are around three or four years old. That’s young enough that according to Piaget’s experiments there are cognitive modules related to number and volume that simply haven’t come online yet. Fortunately, Zvonkin is familiar with the latest research on developmental psychology, and turns lemons into lemonade by using the kids’ lack of numerical intuition to introduce them to some pretty deep ideas about when two sets have equal cardinality. (If you’re curious, he talks more about these experiments in this journal article.) At this point I expect you are rolling your eyes, especially if you have experience with three-year-olds. It can be difficult enough to get them to sit still, never mind ponder deep questions about the cardinalities of sets. And what exactly does it look like to pit somebody against a problem who is barely potty-trained? This is where the genius of Zvonkin’s format kicks in — it’s not really a book, it’s a journal, and one that is barely edited. So it’s full of failure after failure, entries like, “today I had a cool idea for a puzzle but everybody just screamed instead and then one of the kids vomited.” And yet, slowly, wondrously, over the four years of the circle’s existence, his patience pays off and the kids start doing really incredible things. His initial goal, when the kids are at their youngest and are least prepared to match wits against a problem, is just to counter-program their schoolwork a little bit. Zvonkin hates the fact that their school presents math as a set of formulas to be obeyed, and DESPISES the fact that the kids’ midwit teacher deducts marks for failing to write answers in a designated format.4 Worst of all, the teacher docks points when the kids use techniques that they “aren’t supposed to know yet.” So Zvonkin throws himself full-bore into discomfiting and unsettling the pat answers they’re bringing home from school, emulating Socrates both in his methods and in his singular focus on corrupting the youth.5 About a year into this, Zvonkin decides that the kids are ready for their first real problem, and asks them the following simple question: how many ways are there to select two items from a collection of five items, if the order in which they’re chosen doesn’t matter? This is a question from the field of combinatorics, which Zvonkin notes with a sneer used to be taught to advanced high-schoolers, until the authorities decided it was too hard. And here he’s going to teach it to preschoolers, or, even harder, he’s going to make them figure it out for themselves with very few hints. He does this, maddeningly, by showing them the problem over and over again, in many different guises and disguises, over a period of months. He does it inductively, because four-year-olds are tactile creatures who have not yet assembled the cognitive tools required to reason formally and symbolically (more on that in my review of Mindstorms). First he gets beads and asks them to make chains of two red and three blue and asks them how many possible such chains there are. A boisterous debate follows: if you take a chain and rotate it 180 degrees, does it count as the same chain or a different one? This is a good mathematical question, and Zvonkin gives the mathematician’s answer: “We can make up the rules, we can decide whether it counts, so now we have two problems instead of one, but it turns out that one of them is both easier to solve and more interesting.” The kids have fun with their beads, but they are still nowhere near ready for the theory of how to count ways of choosing k items from an n item set. That’s okay, he’s just getting started. He lets a few months go by, he lets them forget it, then he gives them sheets of paper with rows of five circles, and challenges them to find as many different ways as possible of coloring just two of them. As the kids are coloring, he asks if this reminds them of anything… they pause. There’s something in the backs of their heads, but they aren’t sure. It’s getting closer though. More months go by, and it’s time for the problem to visit again. This time he brings a 4x3 grid, and explains that it’s a city map, and that a taxi is starting in the lower-left corner, and wants to go to the top-right corner, and asks how many possible paths it can take with no backtracking. Once again they leap into action. Once again he asks if this reminds them of anything. The kids are confused, they’ve never played the taxi game before. This time he drops a hint, takes one of their paths, and each time the taxi makes a decision to go right, he draws a little red circle, and each time it goes up he draws a little blue circle. Pandemonium. The kids are going nuts. They have discovered the beauty of isomorphism, a secret passage leading from one part of the world, up into the Platonic realm, and back into another superficially very different place. But they still haven’t answered the problem. He lets a couple more months go by. Now he places five empty matchboxes and two balls on the table. How many different ways are there to put the balls in the boxes? This time the kids figure it out quickly: it’s the same as the puzzle with the beads! And that means they’re finally ready to stare the problem in the face, ready to begin their ascent of this mountain. The answers to all of these puzzles, which are really all the same puzzle in different clothing, is that there are ten ways. But if we enumerate all ten of them, how can we prove that there aren’t any more? And what if our original set had four items or six items instead of five, how would the answer change? And these little kids who don’t yet know their times tables will totally figure it out. What should we expect from children intellectually? Are they, as Piaget says, neurologically incapable of certain kinds of thought? Or are they, as Zvonkin believes, capable of solving challenging problems that many adults would struggle with? I think the answer is “both.” There’s a persistently wrong belief that many people, even many teachers, implicitly or explicitly hold, which says that children are basically like adults, only they’re dumber and know less stuff. Call this the “homunculus theory” of childhood cognition. But the truth is that kids are more like artificial neural networks — they’re at a subtly different point in mind-space, they’re good and bad at different things than adults are good and bad at. For example: young children are much more concrete thinkers than adults, whether that’s for neurological reasons or because they haven’t built the cognitive tools for abstraction yet.6 When you meet an adult who can’t reason symbolically or propositionally, they’re often (though not always!) pretty dumb and bad at thinking in general. What a mistake it is to apply the homunculus theory and assume the same of a child. You’ll underestimate and condescend to them and cheat them of opportunities to figure things out for themselves, while simultaneously getting frustrated at their inability to grasp incredibly simple ideas. They aren’t homunculi, they aren’t tiny adults, they’re an intelligence that is differently shaped from yours. This is an unintuitive and uncomfortable idea for us, and we don’t have the mirror neurons to really grok it, but consider it good practice for all the very strangely shaped intelligences we will be encountering in the coming decades. One thing Zvonkin does that works about equally well on kids and adults is repeating things over and over again, and letting a long time go by between the repetitions. The reason this works is the same reason that when I’m trying to figure something out for myself, I’ll think about it really hard for a while and then go for a walk or take a shower. You’re hijacking the interplay between the focused-mode and the diffuse-mode of cognition (which I discussed in a review of a book by Hillaire Belloc, of all people). It works even better if on each repetition you come at the problem from a different angle, so your subconscious has new material to chew on. Using this technique I was once able to get a five- or six-year old to figure out why summing the numbers in any row of Pascal’s triangle must give a power of two.7 The most important lesson of Zvonkin’s book, though, and also the realest and the rawest, comes at the end. He’s been running his little circle for four years, has racked up triumphs and failures, formed all sorts of theories about how best to teach math to little kids, and recorded it all in gory detail. That last is important, because his daughter Evgenia is now a little older than his son Dmitry was when he started the original circle, so naturally he decides to do it all over again with Evgenia and with the neighborhood kids who are her age. But this time, he’s armed! He already knows what works and doesn’t, he has handwritten journals full of hard-won lessons, he’ll be able to save a ton of time and run everything much more smoothly. As if. In the second iteration of the circle, all of his notes are completely useless, and all of his initial attempts to teach anything fail, because these are different kids with different aptitudes and different interests. Zvonkin, raised in a communist society and a believer in the absolute malleability of human nature, is fairly bowled over by this, especially by how young all these differences are manifesting. Reading between the lines, it sounds like he got quite lucky with his first set of children, and that the second group were much more challenging to teach.8 The most eloquent testimony to this is that after about a year he gives up, and the journal ends abruptly. This is just an extreme version of the universal experience of being the parent of more than one child. The moment your second kid is born, or sometimes even before they’re born, they begin teaching you how little impact you actually had over the life trajectory of your first kid. The differences between them,9 despite the fact that you do almost everything the same, testify to just how much of parenting is actually a powerless process of watching a new being discover and disclose to the world what it is going to be. In one way, this makes what’s going on even more existentially dramatic — you’ve produced not a blank slate that you can program, but an alien intelligence that will produce a whole new universe. The other thing is that despite being a tiny bit demoralizing, this is also tremendously liberating: your actions can only change who they are on the margin, so you can relax and do things that are fun for both of you. Sometimes that means a favorite book or movie, sometimes a love of sport or hiking. And sometimes, the shared activity that brings both of you joy is a love of thinking, even the strenuous sort of thinking that comes from wrestling with a problem. 1 There are scientific sub-disciplines where even at the end the Soviets had a clear lead, including several fields of math. Even crazier, there are sub-disciplines where we have not yet gotten back to where the Soviets were (for instance phage therapy). 2 Undeterred, my friend pointed out that many modern Russian gentiles have significant Jewish ancestry. The Soviets actively promoted mixed marriages, to the point where in some cities the average urban gentile Russian is as much as 25% Jewish. I still don’t think this explains Soviet scientific prowess, but it’s an interesting data point because the most highly urbanized areas are the ones where most of the mathematicians (and most of the emigres) came from. 3 Before you ask, I looked it up and Frenkel is half Jewish, half gentile. I will leave it to you whether you count that as evidence for or against my friend’s theory. 4 Interestingly, while he starts out full of fire and brimstone and sounding like Lockhart’s Lament, he later gets invited to teach an experimental math curriculum at a Moscow public school and comes away much more appreciative of the constraints that both teachers and administrators are working under. 5 There’s a weird echo here of what post-structuralist humanities professors think they’re doing with each new crop of undergrads. But of course what the professor is actually doing is reinforcing dominant paradigms and indoctrinating the next generation in the mores and dogmas of the official state belief system. Our society is simply so advanced that it conceals its official doctrine as a sort of radical skepticism (but only on approved topics). 6 Or maybe those are just the same thing. 7 The aggravating thing about how well this works is that…it means all those schools I hated were actually onto something. One of my least favorite things about elementary school math class was how it was the exact same thing every year. But actually if you have kids who are struggling to grasp a concept, just giving them many opportunities to attack it, with lots of space between them, might do a lot of the work for you. 8 Though interestingly, one girl from the second circle later became an actual mathematician as an adult. 9 A friend of mine once pointed out to me that assortative mating drastically increases variance in offspring. So if you’re similar enough to your spouse, say…to write a Substack with them, you may want to pursue diversification as a strategy with your kids. Subscribe to Mr. and Mrs. Psmith’s Bookshelf Launched 2 years ago The P is silent, as in pshrimp or pseudonym. Subscribe Error 78 Share this post REVIEW: Math from Three to Seven, by Alexander Zvonkin www.thepsmiths.com Copy link Facebook Email Note Other 11 Share Previous",
    "commentLink": "https://news.ycombinator.com/item?id=41715762",
    "commentBody": "Math from Three to Seven (thepsmiths.com)312 points by background 19 hours agohidepastfavorite176 comments kreyenborgi 10 hours agoThis was a surprisingly interesting and well-written article. I hope people read it and not just the comments here :-) I'm unsure if it implies that \"lame school exercises\" are unnecessary or just not sufficient (I've recently read articles about how teaching \"insight\" without exercises is detrimental, though perhaps doing problems implies getting that repetition-work). Does anyone have good experiences with keeping kids math-interested as they get into their teens? My kid used to enjoy math in school, and love talking about math problems (\"can you help me set up that triangle pyramid thing with the sums again\"), but now is seemingly disillusioned and finds the school exercises boring. Combine that with, well, teen-age, and I fear it's going to be hard to get back the spark. Not that it has to come back, but I'd hate for the interest to turn into dislike due to lack of opportunities. reply Izkata 1 hour agoparentHere's one possibility it looks like no one has suggested yet: it's boring because it's too slow. I was bored with math up until 8th grade (age 13-14) but didn't realize why until that year. Up until that point I got straight As pretty effortlessly, but due to an administrative error I skipped a year of math. I was supposed to have a year of pre-algebra, but got placed into algebra instead. Luckily that teacher decided to do a month of review before starting new topics, which effectively meant I was taking a year long class in just a month. I actually had to put in effort for once and averaged a C. It was during that year when the pace slowed back down that I realized I did like math in general, it was how slow classes had to go to accommodate all the students that I didn't care for. reply Suppafly 47 minutes agorootparent>it was how slow classes had to go to accommodate all the students that I didn't care for. This is a huge problem across all classes, not just math. It's not as bad if the lowest portion of the bell curve is shuffled off to remedial learning classes, but really you need 3 tracks or more to keep the highest performing students challenged enough. reply nerdponx 6 hours agoparentprevCan't speak for my own kids (yet), but personally I was able to hold my interest in math through my teens for 2 reasons: 1. I had some good teachers who showed (glimpses) of the how and why, not just the \"what\", so it helped math feel like it made sense, rather than being just facts and calculating algorithms to memorize. One demo that left a particular impression on me was the teacher asking us to go around the unit circle in increments of 10 degrees and plot the ratio of the opposite side and hypotenuse of the inscribed right triangle. Watching the sine function -- until then some mysterious thing that just existed with no explanation or context -- materialize in front of me on graph paper was magical. 2. I was shown that math is useful. In another great high school demo, the teacher assigned every student a length, width, and height, to be cut from construction paper and taped together in a box. After we were done, we laid out all the boxes together and computed their volumes. Then the teacher worked through the calculus on the board to figure out the dimensions of the box with the highest possible volume, given that fixed amount of construction paper. That was a really big moment for me, because until then I \"hated\" math, being a silly waste of time messing around with numbers and shapes just for the sake of doing it. reply dan-robertson 8 hours agoparentprevI think the amount of approachable math content online is incredible. Some comments mention 3Blue1Brown on YouTube, which is good but can go on a bit and maybe be a bit advanced. I think Numberphile is great for having a lot of videos, each of which is pretty short, and which still show some small proof of some problem. There are also books of interesting mathematical tidbits or puzzles, eg the Martin Gardener or Ian Stewart books. I guess one other thing to say is that it probably helps for you to appear to be interested in the math things instead of you being interested in your kid doing what you want (ie looking at the math things) reply Suppafly 45 minutes agorootparentKhan Academy is great for learning math, the old school videos or the newer gamified stuff both. reply voidUpdate 8 hours agorootparentprevThere are a good amount of entertaining maths communicators on the internet. I'd like to recommend standupmaths/matt parker, as well as looking at the SoME playlists which contains some interesting content too reply graemep 1 hour agoparentprevI took my kids out of school before they were teens. The younger one who did not like maths at school does like it now and is doing maths A level (UK exam, similar level to APs in the US AFAIK) at school (well, \"sixth form college\" school for 16+) and got a 9 (top grade) in her maths IGCSE (UK exams taken at 16 in schools, but mine took some of them younger). I think the problem is that schools here (and I think most countries have similar problems) is that they focus on grades rather than keeping kids interested. Too much pressure takes away the fun. The article has some other clues to things that can go wrong with bad teachers: for example > \"Worst of all, the teacher docks points when the kids use techniques that they “aren’t supposed to know yet.”\" That is really terrible (and not typical, I hope - would not have happened in my school, I think) but it does happen. I think there maybe a problem with insight without repetition, but it is definitely possible to keep kids interested while doing repetition as long as they feel they are getting better. My kids did do a lot of practice with minimal supervision. I also think you absolutely have to provide enough interesting stuff to make kids feel the subject is interesting, even if there is some grind. Having a parent who is interested and will do things like answer questions is a huge help. reply dxbydt 3 hours agoparentprev> Does anyone have good experiences with keeping kids math-interested as they get into their teens? The first step would be to get them into a math circle. There are 100s of them https://mathcircles.org/map/. I run a math circle as well, and work with a bunch of teens/preteens. I've had a lot of success with them. AMA. reply blackbear_ 9 hours agoparentprev> Does anyone have good experiences with keeping kids math-interested as they get into their teens? Not a parent, but what kept me engaged at that time was programming simple games or interesting visualizations and animations. I \"discovered\" quite a bit of useful trigonometry, linear algebra and statistics by just fooling around and following my curiosity. And the intuition I gained definitely helped later on with university math reply red_admiral 6 hours agoparentprevFor the \"exercises are important and also build conceptual understanding\", see \"BASIC SKILLS VERSUS CONCEPTUAL UNDERSTANDING, A Bogus Dichotomy in Mathematics education\" by H. Wu. The big challenge in teaching is not to make the exercises seem lame. reply nerdponx 6 hours agorootparentI haven't read this whole article yet (PDF here https://math.berkeley.edu/~wu/wu1999.pdf), but this idea is my #1 problem with Tom Lehrer's \"New Math\" song. His big complaint at the beginning is that the emphasis is too much on understanding and not on efficiently/correctly calculating an answer. As funny as the song is, I don't think that complaint has aged well at all. Also the old algorithm was just as complicated as the new one, but at least the new one makes it easier to see what's going on, so the whole joke kind of falls apart. reply red_admiral 4 hours agorootparentAs far as I understand the article, the author (and myself) absolutely wants people to practice longhand addition etc., and is pushing back on the idea that you can teach how to calculate XOR how to understand place value. If some of the kids go on to study CS, they can then think about the similarities and difference between decimal, hex and binary addition, how half and full and ripple-carry adders work, and how you add bigints. At that point you need both a conceptual and a procedural understanding of digit-wise addition. If you want to do say 67 + 24, perhaps even in your head, there are more efficient ways to add than the standard algorithm, and I think that's what new math was trying to get at. But at some point you might want to add 25137 + 1486 and then your neat tricks no longer work and you need something that scales. reply jameshart 1 hour agorootparentNew math or common core or any approach that tries to center ‘understanding’ over rote procedure is definitely pushing in the right direction. I think that people who have the closed understanding of addition, that there is one true algorithm for doing it and who will start your 25137+1486 problem off by adding six and seven to get three and carry the one… are missing out on a deeper intuition about numbers, because they only think of those numbers as sequences of digits. But someone who sees that as ‘add fifteen hundred and take away fourteen’ is much closer to understanding what that expression actually represents, as well as being able to produce 26623 almost immediately without writing anything down. It’s not about ‘neat tricks’, it’s about numbers having shape and feel and flavor. reply hugetim 4 hours agoparentprevFor me it was this curriculum, which should be better-known: https://www.elementsofmathematics.com/ One place it is offered in-person is the St. Louis area where I grew up: https://megsss.org/about-us/ reply nuancebydefault 4 hours agoparentprevThe article seems to imply though that the nurture/nature quotient is very low. As a one off example, I've always been interested in exact (applied) sciences, my kid much less. reply ikari_pl 10 hours agoparentprev> I hope people read it and not just the comments here :-) This got my upvote! reply 082349872349872 10 hours agoparentprevhave you tried TFA's tack of, instead of throwing him on the mercy of the school exercises, presenting a problem or two? > \"Problems worthy of attack prove their worth by fighting back\" —PH reply kreyenborgi 9 hours agorootparentIn a small way, yes, and throughout \"three to seven\", actually up until she was nine, we had a lot of fun with what I think I can call problems (especially while home-schooling during the pandemic, where we had time to keep going back to these from different angles). But I'm not able drum up much interest these days, so I was wondering if people here had any insights on what if anything has worked with tweens, as opposed to how the younger ones learn. reply boilerupnc 8 hours agorootparentFor me it was Math Magic Tricks and Math Puzzles. [0] [1] [0] https://matthewfurman.com/math-magic-tricks/ [1] https://solveordie.com/math-riddles/for-teens/ reply 082349872349872 9 hours agorootparentprevI learned basic trig around ~10 because I wanted to make spacewar/asteroids-like games, which led naturally into matrix math, later on. Parsing also interested me around ~12 (text games this time), but while I made some mechanical attempts, the theory never clicked until much later. Sometime around that time I learned about recursion by reverse-engineering the display code for a tile based first-person maze crawler one of my father's colleagues had written. (yes, fib should've been simpler, but drawing those perspective walls was way more concrete) [perspective was luckily something I'd been introduced to in second grade, so it was old hat at this point, and the scaling math was straightforward; the only jump I needed to make was grokking that having drawn the walls visible from this square, one could use the same routine, with fresh parameters, to draw the walls from all the still-visible neighbouring squares, etc. Unfortunately z-buffers make this entire approach obsolete; but maybe he'd take it as a challenge? this is trivial with z-buffering, but how might it even be possible without?] Might Processing sketches (or whatever the new shiny might be) interest your kid? reply sersi 9 hours agorootparentPersonally, that's how most of my math learning came. As a teen, I started to program and wanted to understand mathematics tools to solve specific problems, so I learned trig, Bezier curves, cryptography, number theory, etc like this. Then later between my love of point and click adventure games and puzzles plus the fact that I had good foundations in maths, pure mathematics problems became increasingly fun. reply f1shy 8 hours agorootparentprevI still have to make to that point, but answer from what I remember from my time there: Abstract math, or \"math per se\" was utterly uninteresting for me. My drive was to solve actual problems I had or wanted to solve. For example, making something out of wood with complex shapes, or drawing with the computer. I would say you have to find an area of interest with which the kids get passionate, and needs math to solve the problems. reply mathnmusic 9 hours agorootparentprevTry dropping him in one of these math discord groups (for eg: Summer of Math Exposition)? Teens care a lot about social approval and seeing so many people having fun with math might help. reply pokerface_86 3 hours agorootparentprevwhen i was 12,13 i really enjoyed the algebraic manipulation parts of calculus without having to think too hard about setting up problems. just practicing integration, differentiation and limits was a good start reply pokerface_86 3 hours agoparentprevi didn’t even know i enjoyed math until i was fortunate enough to take multivariable calculus my senior year of HS, you don’t really get to do any cool shit in typical public schools so it’s hard to keep the interest reply tempfile 10 hours agoparentprevSchool is where you kid spends the majority of the time. If they find it boring, and the school is unable/unwilling to provide enrichment, then it is an uphill battle to resist that. The ideal solution is to make the work they do at school engaging, then they'll seek out enrichment at home themselves. There might be math-oriented stuff online (3Blue1Brown is one off the top of my head) that keeps them wanting to understand more. That might anchor their school work a bit, or give them something extra to try. Books can help too. reply chongli 6 hours agorootparentThe ideal solution is to make the work they do at school engaging, then they'll seek out enrichment at home themselves. One thing I haven’t seen brought up in this discussion yet: technology. Seriously, what hope does a teacher have for getting students to engage when they’re competing against all the might of Silicon Valley? The industry is spending billions every year to discover and implement the best techniques for stealing teenagers’ attention and focus away from everything else in their lives. There’s a growing chorus of people who want to get phones out of classrooms. That’s a strong first step but students’ struggles don’t end when they go home for the night. I volunteer as a tutor with high school students at an after-school homework club. We aren’t allowed to take their phones away! You can imagine how much of a Herculean struggle it is for these kids to put away their phone and actually get some work done. reply nuancebydefault 4 hours agorootparentA new law in Belgium will forbid smartphone usage at primary school (age 6..12) at least. There's hope. reply 082349872349872 9 hours agorootparentprevBeing a product of the US school system, the most important lesson it taught me is that teachers as well as students are caught up in a system that's bigger than they are, so in order to educate oneself, one need merely (a) organise one's own time effectively, but (b) avoid doing so indiscreetly, such that it could force other pawns to call one's lack of genuine participation to the attention of the Man. 90% of success in primary and secondary schooling is just showing up; as long as you keep your grades up, they won't demand mental attendance, only the physical. denn meine Gedanken zerreißen die Schranken und Mauern entzwei: die Gedanken sind frei. reply 0xEF 9 hours agorootparentI agree, but would like to add that the US public school system also has a bad habit of teaching to the test, namely standardized testing like the ACT or SAT. As it turns out, my time would have been better spent learning how to budget long term or navigating the US healthcare system as opposed to learning maths rarely seen in the wild or that the mitochondria is the powerhouse of the cell. The information imparted to me during the entire four years of high school has largely been forgotten, \"replaced\" by more practical knowledge that I wish I'd had even a tiny bit of upon entering adulthood. reply harimau777 5 hours agoprevMy biggest issue with math education is that after we learned the theory we never went back and developed an actual plan for solving the problems. For example, we learned a dozen different ways to approach integration, but after all this we never really put together a workable strategy for approaching a problem and deciding what tools to use. It's like trying to teach someone to swim by just throwing them in the water over and over and expecting them to eventually figure it out. As a result, the primary emotion students learn to associate with math problems is fear. Instead of the sense of confidence that comes with having a plan, each problem feels like \"will things work out or will I get lost and waste hours without actually ever finding a solution\". reply nuancebydefault 4 hours agoparentI would say the opposite, we're teaching them how to swim (the exercises the article talks about) without a swimming pool (real problems). reply veunes 4 hours agoparentprevA more structured approach would definitely help! And I think that's the reason why ao many are affraid of math reply kurisufag 5 hours agoparentprevThe best strategy is one suited to you because you came up with it yourself, in my opinion. Other than the big kludges (u-substitution, etc.), teaching specific/mechanistic integration processes directly would have been an uncomfortable way for me to learn. reply pokerface_86 3 hours agoparentprevyou face the exact same problems with coding, arguably more so as the trial and error and debugging process is worse than any proof i’ve ever had to do. if you can’t figure out how to apply basic integration techniques without a teacher formally sitting you down and saying exactly what situations to use each formula in, you haven’t learned shit reply fifilura 1 hour agoprevI simply think the basic assumptions that anything was better in Soviet is wrong. They just focused much higher percentage of GDP on military and space stuff. Meanwhile, life in Russia was miserable. They got tanks, nuclear weapons and rockets. No companies that made people's life better. This is what kept the cold war going. Until it didn't. If you are wrong the basic assumptions, you can look for clues anywhere, it does not matter. reply Suppafly 35 minutes agoparent>I simply think the basic assumptions that anything was better in Soviet is wrong. Agreed, it's bizarre to assume the Soviet version of anything is better than the what the US or other western nations are doing. reply timthorn 10 hours agoprevAxiom Maths is trying to import the concept of maths circles to the UK, providing support and materials for schools to host their own circles. It is run by a team with deep expertise in mathematics education, including the founding head of King's Maths School, a state school that is one of the top performing sixth forms in the country. https://axiommaths.com/how-we-work/ reply jarvist 10 hours agoparentPractically speaking (running a little maths circle in the UK for my children, and some of their friends from nursery and primary school), I have found the Nrich website to be the single best source of resources: https://nrich.maths.org/about-nrich There is also https://parallel.org.uk/ by Simon Singh, but this is aimed at ages ~10+. The book by Rozhkovskaya has some really nice activities in it. https://www.amazon.co.uk/gp/product/1470416956 The book by Zvonkin described in the article is a very good motivator, particularly for the honest descriptions of lessons gone badly wrong, and staying up late cutting out pieces of cardboard! But it's quite difficult to use as a teaching resource. reply hugetim 4 hours agorootparentA nice source of middle- and high-school aged problems: https://www.usamts.org/ One of the joys of high school was discussing these with a friend (after submission---but one could forego the contest and just do the circle thing with them for fun). reply svat 16 hours agoprevWhen my kid was three I encountered this lovely book and thought I'd read it to attempt to replicate something like it (despite all the warnings that it's a journal and not a guide); unfortunately I never got around to finishing the book (nothing against the book, just got distracted) and now the kid's already past seven :) But what little I read was delightful; thanks for posting this summary! reply drivebyhooting 14 hours agoparentI have a similar experience. The book skips the first 20 weeks. Many of the activities require materials and I could have benefited from a more prescriptive curriculum. Some other math circle curricula are not as inspiring but are much easier to follow. reply nicolas_t 10 hours agorootparentThe book skips the first 20 weeks for the boys but covers those activities for the girls (around the end of the book). So I'd suggest reading the girl circle and then coming back to the boys circle... I've absolutely loved that book and I've been trying to incorporate some of the ideas in games with my son. That said, do keep in mind that despite being from 3 to 7, his son is actually 3 years old and 10 months when he started (and I think the same for the daughter, I forgot). Personally, I've noticed that my just turned 3 years old son is not developmentally ready for a lot of the activities yet (but he's been surprisingly good at other activities), so I do think that you need to adapt depending on the children you try this on. reply sanderjd 14 hours agorootparentprevYep, I thought the idea seemed cool, but I couldn't figure out how to execute it. reply nicolas_t 10 hours agorootparentA couple of other books that I think are useful and easier to execute than Zvonkin's books are the books by Christopher Danielson. Which One Doesn't Belong? is great to play with a child and Talking Math with Your Kids has some good ideas (way too short though) reply usgroup 6 hours agoprevIt ends like this, largely cancelling out the rest of the article: >In the second iteration of the circle, all of his notes are completely useless, and all of his initial attempts to teach anything fail, because these are different kids with different aptitudes and different interests. Zvonkin, raised in a communist society and a believer in the absolute malleability of human nature, is fairly bowled over by this, especially by how young all these differences are manifesting. Reading between the lines, it sounds like he got quite lucky with his first set of children, and that the second group were much more challenging to teach.8 The most eloquent testimony to this is that after about a year he gives up, and the journal ends abruptly. reply nuancebydefault 4 hours agoparentI would say in a nutshell, teaching results:YMMV reply isaacfrond 11 hours agoprevomg, 'midwit teacher deducts marks for failing to write answers in a designated format' this is exactly the math teacher my kids have. So frustrating. reply sahmeepee 11 hours agoparentIn this country many teachers have been taught that it's important for kids to be able to use a range of approaches to solve a problem. They then force them to use each of the prescribed set of methods even when they are totally inappropriate for the task. Any deviation from the method they are told to use for that question is wrong. No creation of your own adapted methods is acceptable. In other words, the teachers were taught that kids should use different methods, but seemingly weren't taught why. reply ykonstant 1 hour agorootparent\"You're all individuals!\" \"Yes!\" \"You're all different!\" \"We're all different!\" \"..I'm not.\" \"Shh.\" reply hyperbrainer 6 hours agoprevAs a teenager who dislikes the current schooling system, what I am most curious about is actually why something like the \"mathematical circles\" do not exist in the west. To some extent, a similar social group is formed by robotics teams in my experience. A dedicated teacher/coach and a bunch of people who like electronics can really get amazing things done. Why is this the case? reply eitally 3 hours agoparentI am under the impression that such things do/can exist, but ad hoc. For example, if you were to take extracurricular lessons at a RSM or similar private tutoring business, you could/would probably find a number of similarly inclined teens who might be interested in creating a circle. Similarly, my experience attending a science & math magnet school in the 90s was that -- basically mirroring my later experience in college -- a subset of the kids taking advanced math classes in high school naturally tended toward hanging out & studying/practicing/researching together. More formally, there are tons[1] of local, state, regional and national math competitions that target elementary, middle and high school students, and -- just like robotics -- it's up to volunteers (teachers, students, parents) at the school level to decide whether to invest time & resources to create a local team/club. When I was in school, we had MathCounts teams at younger ages, and Math Olympiad (and Science Bowl & Science Olympiad -- my team made it to the national event in Science Bowl, actually) in high school. I'm under the impression that this is pretty common, at least in urban/suburban areas. [1] https://artofproblemsolving.com/wiki/index.php/List_of_Unite... reply masto 5 hours agoparentprevMaybe you already know or could try to find other peers who like math, and see if you can get something started? I think there's a good chance that if you approached a supportive teacher with \"my four friends and I want to start a math club, can you help us?\", it would get the ball rolling. Perhaps you could put something up on the bulletin board or equivalent you kids have these days, data kiosks or hovergrams or whatever. reply photochemsyn 32 minutes agoparentprevProbably cultural - if a society celebrates physical prowess (sports etc. especially for males) and physical appearance (fashion etc. especially for females) but doesn't celebrate intellectual prowess for either gender - often the opposite - then children, teenagers, and young adults won't view working hard to improve their mental abilities as something worthwhile that they will be rewarded for. It's a symptom of a fairly unhealthy society. There are a great many historical reasons why this situation arose - aristocrats feared the rise of well-educated groups within the serf class that might challenge their power, and plantation owners famously forbid teaching their slaves how to read and write, and some of that thinking persists to this day. Regardless, people who spend roughly equal time on developing both their mental and physical capabilities via deliberate (and time and energy consuming) practice are the ones that tend to turn out healthiest and happiest. reply nuancebydefault 4 hours agoparentprevWhy not join the robotics team? Plenty of problems like inverse kinematics and probably newer mathematical approaches. reply myth_drannon 17 hours agoprevI have this book, it's a fun read but difficult to replicate on your own. Tried on my children but it's hard work and I'm not a mathematician like the author and the society is different. reply otar 15 hours agoprev> All joking aside, we fledgling mathematicians understood that the single most important thing was not raw intelligence or knowledge (Americans tend to lag behind in the latter compared to all international students). What mattered was passion. The way to become successful in mathematics, like almost every endeavor, is to care about it, to love it, to obsess over it. This is the most important point from the article. My theory is that if you are not obsessed with something, you won’t be good enough with it, wether it’s a math, coding, business or something else… Thats how most of us got started in tech from the early ages. reply Ma8ee 10 hours agoparentIt depends on what you mean by “good enough”. Most developers today aren’t particularly passionate about it, and certainly not obsessed, but the demand for them is high enough so they still are “good enough” to have relatively cushy jobs. reply otar 4 hours agorootparentThat's a good point, but it can also be that the employer is satisfied with the \"good enough\" results. While it is true that the current high demand on a job market allows many to have \"good enough\" skills for employment, I would argue that passion, curiosity, and obsession are the driving forces that lead to better outcomes both for individuals and the industry as a whole. These qualities inspire deeper engagement and lead to more quality work. For routine tasks, basic competence might suffice. However, for solving complex problems, it won't... Passion/curiosity/obsession often leads to voluntary, extensive practice and learning. This typically results in faster skill acquisition and a deeper understanding of the subject matter. While becoming competent without any of these is possible, the path is often slower and limited. Also, both the tech industry and the job market are evolving rapidly. Passionate/curious/obsessed developers are more likely to keep up with new technologies and methodologies, potentially leading to better long-term career prospects and adaptability. The pace of change in our industry demands a continuous hunger for knowledge and a relentless pursuit of excellence. In the end, if you don't want to be a mediocre developer with a mediocre career, such stuff matters. reply bee_rider 18 hours agoprevI think this must be a very stupid question, but I’ll ask it anyway. I always thought the Soviet Union was smaller than the US population wise, and really did punch above their weight. But Soviet Union census of 1970 lists 241,720,134 people, while the US census of 1970 lists 203,392,031 people. https://en.m.wikipedia.org/wiki/1970_Soviet_census https://en.m.wikipedia.org/wiki/1970_United_States_census Is this statistic somehow not representative? If so, what’s up with that? If not, is the belief that the Soviet Union was smaller than the US population widespread and wrong? If it is widespread and wrong, where’s it come from? (Although, I must admit the possibility that it isn’t widespread, and was just unusually wrong. In which case the answer is just that I’m unusually bad at geopolitics, which would not be surprising at all). reply llm_trw 17 hours agoparentThe OP is wrong. The USSR had a larger population than the US by around 20% from 1950 to 1990: https://www.cia.gov/readingroom/docs/DOC_0000380594.pdf Chances are he's only counting the population of Russia proper, which would be a bit like only counting the US East Coast population. reply wwilson 17 hours agorootparentMy guess is rather that he's conflating the US with US + Western Europe. reply ccppurcell 13 hours agorootparentAnd then you can make the appropriately similar conflation of USSR with Warsaw pact countries. reply aklemm 17 hours agoparentprevProbably just conflating Soviet Union with Russia, which does have a smaller population. The Soviet Union encompassed so many more countries. reply girvo 14 hours agoparentprevTo be fair, the US and Western Europe were a somewhat combined bloc wrt. trade and being allies. So in that respect the combined USSRs population is smaller? But purely US v USSR, the latter has always had more people reply flohofwoe 11 hours agorootparentThe SU and Eastern Europe countries were also such a 'combined block' though (both for trade via COMECON and militarily via the TFCMA (aka 'Warsaw Pact'). Although AFAIK Western Europe had a much higher population than the Eastern European socialist countries. But in general, the education and health care systems were usually the 'flag ships' with easy and free access for the 'working class' (which also means extreme discimination against anybody else though). reply cbsmith 17 hours agoparentprevhttps://www.foreignaffairs.com/articles/russian-federation/1... reply dankwizard 17 hours agoparentprevI don't think anybody except you thought it was smaller. Why are you suggesting theres a widespread misconception instead of the more likely alternative - you made a mistake? reply johnfn 17 hours agorootparentThe article strongly implies this. > These days, the same scenes are dominated by Chinese and Indian kids. But China and India have large populations — the Russians were punching way about their weight, demographically speaking. reply qup 17 hours agorootparentAlso > Well, with the Soviets it all went in the opposite direction: they had a smaller population, a worse starting industrial base, a lower GDP, and a vastly less efficient economic system. How, then, did they maintain military and technological parity1 with the United States for so long? reply LarsDu88 12 hours agorootparentThe truth is, the Soviet bloc consistently made lower quality stuff or had much poorer training. There's are a persistent set of myths that both the Soviets and the western arms manufacturers like to perpetuate. The t-34 tank was the greatest tank ever (sometimes had 10:1 losses offset by 14:1 manufacturing) The ak-47 is the best due to is reliability (poor tolerances made it both reliable and astoundingly inaccurate) Soviet/russian tanks have not come out on top in any conflict for the past 50 years. On the battlefields of Ukraine, the t72 has been infamous for its design flaws wherein even mild penetration to the gun autoloader housed in the turret ring often leads to catastrophic explosions instantly killing all the crew inside. In Israel's fights against Syria, syrian Soviet tanks had a critical design flaw wherein they were not able to shoot downward at an angle, effectively making them sitting ducks. The last time Soviet jets had parity with the west was when both sides were copying the same German jet fighter designs appropriated from Focke-wulf at the end of world War 2. Repeatedly in actual combat situations, the soviet equipment fares poorly... In Israel, Iraq, and Ukraine. Perhaps the only conflicts Soviet equipment has been used effectively is when Iraq deployed its mostly Soviet weapons against Irans mostly American weapons and even that's arguable considering the United States backed Saddam (and later obliterated his army with more modern western technology) reply throw_pm23 9 hours agorootparentEven Napoleon's weapons were vastly superior to the Russian ones at the time... oh, wait :) reply LarsDu88 2 hours agorootparentYou need to look at the casualty figures from the actual battles, not the attrition figures from Napoleon's march back to French allied territory. Russian soldiers under Russian (very often not ethnic russian) generals suffered staggering losses. But the Russian Empire in 19th century is not the Soviet empire in the 20th century. This topic is about Soviet math and engineering, not 19th century Russia reply dan-robertson 8 hours agorootparentprevI don’t think the napoleonic wars are a very good comparison as they happened 100 years before the Russian revolution. You do see some parallels to later wars – the Russians being technologically inferior, or getting Poland after a war, for example. If you look at overall deaths, the French side suffered half as many as their opposition, and more Russians died than people from any other country opposing Napoleon. This still ended up being much less extreme than in WWII where I guess the one sentence summary is that, in Europe, most belligerents were spending enormous amounts of money on weapons and technology whereas the Soviet Union suffered enormous military and civilian casualties to achieve victory. reply bee_rider 15 hours agorootparentprevI did cover that option. Although, the thing that brought it to mind is the fact that the author made the same mistake. reply noemit 10 hours agoprevUSSR was feminist in some regards. Women had women-only spaces to learn math and science. There is a lot more equality of performance in STEM in former soviet populations. reply generationP 2 hours agoparentAlso a huge drinking problem that is not entirely but mostly concentrated in men. reply eru 10 hours agoparentprevAs mentioned in the article, that might be completely explained by their comparative poverty. reply wizzwizz4 9 hours agorootparent> This theory is related to the curious fact that, on average, the more feminist your society, the fewer women there are in math and science — which makes total sense if you assume that on average women are good at math but uninterested in it. This isn't a complete explanation: we can see this by looking at other STEM fields. The early years of computer programming were dominated by women, yet nowadays, women are proportionally uninterested. You don't get such a dramatic demographic shift because of innate tendencies, but this was contemporaneous with a shift from programming being considered low-status to high-status work. Is this perhaps social, rather than directly economic? To take an example from elsewhere in the thread (https://news.ycombinator.com/item?id=41718072): I can see the “you must use this method” prescription hitting girls harder than boys, since girls tend to drift towards copying / collaborative play, and boys tend to drift towards competitive play. This prescription might make mathematics seem less like play, to girls – which would be ironic, since real mathematics is an incredibly collaborative endeavour. (Which raises the question: do girls inherently prefer copying play, and boys inherently prefer competition play? Who knows? I suspect not, but I think it'll be a long time before we find out.) reply vundercind 4 hours agorootparent> The early years of computer programming were dominated by women, yet nowadays, women are proportionally uninterested. We eliminated the job women were dominating (programmer) by combining it with the one men were dominating (analyst). At the same time law and medicine were seeing huge increases in the proportion of women practitioners, so the status thing doesn’t make a ton of sense as an explanation. Besides, it was not high status in the 80s when this was going on (or the 90s… arguably it’s still not, just high pay) reply Izkata 59 minutes agorootparent> We eliminated the job women were dominating (programmer) by combining it with the one men were dominating (analyst). Gender disparity is usually shown as a percentage, but years ago I ran across one for programmers that used absolute numbers and the pattern showed a different story than usual - which this reclassification could probably explain. I don't remember what year exactly the flip was, but before the flip the number of men and women were increasing at around the same rate. After it, the number of men skyrocketed while the number of women kept increasing at the same rate as before. As a percentage this looks like women lost interest or got pushed out, but the absolute numbers look more like men flocked to it without pushing anyone out. Or, perhaps, got grouped into it. reply 0xdde 18 hours agoprevThe author raises an interesting question as to how the Soviets produced so much scientific talent, but his discussion of math circles strikes me as more of a tangent than a convincing answer. Were these math circles really so widespread, and were they a big part of producing mathematical and scientific question? He doesn't address this. However, the book he is reviewing is available online [1] and I see from skimming it that Zvonkin says only one of his students ultimately chose math as a profession. My hunch is that the structure of the formal education system in the USSR played a larger role. [1] https://sites.icmc.usp.br/sasha_a/zvonkin-e.pdf reply ccppurcell 13 hours agoparentAnd that one was his own son, if memory serves. Genetics and family culture may play a big role. reply nicolas_t 10 hours agorootparentAnother girl, not his daughter, from the girl's circle also became a mathematician (whereas the daughter is a professor of film studies). So, yes, genetic, family culture (most of the parents of the kids from the math circles were teachers or academics), interests... reply atemerev 6 hours agoparentprevThe real answer is that we (I speak as a Russian) didn’t have such advanced computers in the USSR. What was routinely solved numerically in the US, had to be painstakingly traced analytically, and new methods had to be developed for such approaches, and mathematical education had to be boosted so enough people could work in the field (mostly developing new weapons, sadly). reply lupire 17 hours agoparentprevIt's all part and parcel of a deeply mathematical culture. \"Math as a profession\" is a limited subset of \"professions that rely heavily on math\", despite what some mathematicians might say. reply bdjsiqoocwk 18 hours agoparentprevnext [11 more] [flagged] mitthrowaway2 17 hours agorootparentIf you study much of 20th century mathematics and physics, you'll certainly find Soviet mathematicians showing up everywhere. Control theory, probability, nonlinear differential equations, etc. Just from the names of theorems alone, it's pretty hard to miss. reply ants_everywhere 17 hours agorootparentprevThe Soviets produced a lot of outstanding mathematicians. It's remarkable in absolute terms and it's even more remarkable considering that Soviet education was generally anti-science for much of its existence (e.g. see [0]). IIRC Stalin eventually left a group of mathematicians and physicists alone because it was clear that if they were suppressed the Soviet Union couldn't win wars or plan the economy. My initial hypothesis would be that creating this kind of playground in the otherwise dismal intellectual atmosphere, combined with the ability to select the best people from all over the empire, and the urgency and funding that came with the wars and cold war, played a major role in their ability to do important work. [0] https://en.wikipedia.org/wiki/Repression_of_science_in_the_S... reply lupire 17 hours agorootparentprevThey invented space ships, for one thing. Russian was a scientific power in the 19th Century before Soviet Union, and continued during the Soviet era. The west had limited access to it, due to the Cold War. https://en.m.wikipedia.org/wiki/Science_and_technology_in_Ru... reply avmich 17 hours agorootparentSoviet Union wasn't called a superpower for nothing. USSR had many world class achievements in scientific and applied areas, and some organizational achievements in social and manufacturing areas. There are examples and counterexamples, but the result is what we have, and while at some areas ex-Soviets were seen as backwards people in early 1990-s, in some others they really brought some positive advancements to the West - or First World - when the borders became open. reply m_mueller 16 hours agorootparentCase in point: The reason why the US heavily relied on Soviet rocket engines for their launches for ~15 years (before SpaceX dominance) was because they were simply more advanced and cost effective. Material science apparently was a step above - Soviet scientists were able to create an alloy for use in oxygen-rich engines which was unbelievable to Western counterparts till they visited and had it demonstrated. reply avmich 16 hours agorootparentThis is one example, and there could be many - both where USSR had an edge and where it was behind. I believe here we want to have the overall picture - and that picture was that there actually were some novelties which were interesting on the West, even though in overall quality of life and some associated parameters USSR was notably losing. Or, saying it from another end, USSR wasn't advanced enough to avoid dissolution after - not necessarily caused by - the Cold war, even though it had some achievements unavailable on the West. reply m_mueller 10 hours agorootparentYes, that was what I also wanted to point out here. As in, the set of novelties Soviets had over the West was at least non-zero. And that rocketry happened to be one may be surprising to some of those less informed about space technology. reply bdjsiqoocwk 15 hours agorootparentprevLol what reply komali2 16 hours agorootparentprevQuantify in my opinion requires qualify because, how many is \"a lot?\" But broad strokes, the USSR was an intellectual powerhouse. Add as many \"in spite of\"'s as you like, but in my opinion the \"a lot\" target is achieved. You mention science and I'll get to that, but I want to first target what I feel is a general misconception of the Soviet Union as like, a bleak concrete-ridden, muddy backwater of labor camps (it kinda was of course) with nothing to contribute to the world. Post revolutionary periods always produce fantastic art, literature, and social experiments. See post-revolutionary American religious scene for an example. In the Soviet Union, there's a clumping of great literature around 1917. Summary: https://en.wikipedia.org/wiki/Russian_literature#Early_post-... > The Imaginists were post-Revolution poetic movement, similar to English-language Imagists, that created poetry based on sequences of arresting and uncommon images. The major figures include Sergei Yesenin, Anatoly Marienhof, and Rurik Ivnev.[65] Another important movement was the Oberiu (1927–1930s), which included the most famous Russian absurdist Daniil Kharms (1905–1942), Konstantin Vaginov (1899–1934), Alexander Vvedensky (1904–1941) and Nikolay Zabolotsky (1903–1958).[66][67] Other famous authors experimenting with language included the novelists Boris Pilnyak (1894–1938), Yuri Olesha (1899–1960), Andrei Platonov (1899–1951) and Artyom Vesyoly (1899–1938), the short-story writers Isaak Babel (1894–1940) and Mikhail Zoshchenko (1894–1958). Sorry for the big copy paste, but, there's just so many of them, and to literature nerds, what they did was \"groundbreaking.\" I know it sounds silly but let us literature nerds have our thing. Then there's a bunch of fun leftist / communist poetry, from Vladimir Mayakovsky and Nikolai Tikhonov (the \"Could nails from such people be fashioned\" guy). And on and on. Art had some interesting characters as well, \"in spite of\" the Socialist Realism thing. Isaak Brodsky, for example. Re: science, as someone else linked, efforts were hampered slightly by the repression of science that was perceived as in opposition to dialectical materialism, but in general the Soviet Union seemed very determined to create a lot of engineers. You have Fields medal winners: Grigory Margulis (interestingly he suffered from the Soviet antisemitism mentioned in this article), Vladimir Drinfeld, and Sergei Novikov. And you have nobel prize winners such as Nikolay Semenov, Nikolay Basov + Alexander Prokhorov, Pavel Cherenkov (the Cherenkov radiation guy) + Ilya Frank + Igor Tamm, Leonid Kantorovich (basically invented linear programming), Pyotr Kapitsa, and Lev Landau. Then there's the obvious such as the fact that the Soviets were first to put a satellite in orbit, first to put a human in orbit (arguably far more useful than putting a human on the moon, though putting a human on the moon is probably more inspiring). What is interesting is how during the time these may not be \"contributions to science\" due to the USA and the Soviet Union often not sharing advancements in science with eachother because of the Cold War. Imagine if the two nations had been cooperating with eachother. Then again maybe there wouldn't have been a \"Space Race.\" reply 082349872349872 1 hour agorootparent> Imagine if the two nations had been cooperating with eachother. I think Kennedy and Khrushchev, having defused the Cuban Missile Crisis, might have started on a path leading in this direction — but both of them got cancelled. reply Illniyar 16 hours agoprevRegarding Soviet prowess, I always considered the fact that going to higher education considerably shortened and made easier your military draft term to be a main factor. Everyone who could went to university, because why wouldn't you? This incentive pressure and selection bias we're probably insane. reply generationP 2 hours agoparentThat and even better: it opened the doors towards a lot of the better jobs, both in terms of working conditions and offering some amount of breathing room. Education was a more significant social elevator in the East than in the West, first and foremost because the ground level was much lower. reply d--b 10 hours agoprevThe main cultural difference is that Americans don’t value maths and physics as much as they value law and business. Harvard Law school is still the thing you aim for when you’re a smart kid. MIT is what you aim when you’re good AND you’re really into it. In France, the top thing to do is go to Polytechnique, which is an engineer school created by Napoleon. So culturally French people push their kids towards learning maths. reply antupis 6 hours agoparentIt is so interesting that those are always so country-specific here in Finland it is Medicine and industrial management. reply 082349872349872 9 hours agoparentprevthe provenance is unclear, but somehow Napoleon wound up with both a construction problem and a theorem to his name (if your kid has neither aptitude nor taste for maths, what do you do? push them towards ENA?) reply d--b 8 hours agorootparent> if your kid has neither aptitude nor taste for maths, what do you do? push them towards ENA? Usually business school, HEC is the second highest viewed thing. ENA is something you may do later, either after political science studies, or after polytechnique, or business school. reply hoseja 10 hours agoprevThose hyperlinks to other relevant content seem especially devious from this author. I have dozen new tabs of reading open now. reply com2kid 17 hours agoprevFrom the book being reviewed: > All joking aside, we fledgling mathematicians understood that the single most important thing was not raw intelligence or knowledge (Americans tend to lag behind in the latter compared to all international students). What mattered was passion. The way to become successful in mathematics, like almost every endeavor, is to care about it, to love it, to obsess over it. And in this, Eastern Europeans had a clear superiority, a cultural advantage. They had been trained, from an early age, to love mathematics more intensely. IMHO this is what drove American superiority in software engineering for several decades. The people who self selected into software engineering really loved the field. I suspect we'll see a continuous slow decrease in all aspects of quality of software as those who have a genuine love and passion for the field are replaced by those in it just for the money. reply dinobones 16 hours agoparentGood example of passion from early bell Labs: https://www.youtube.com/watch?v=tc4ROCJYbm0 Other examples I can think of (from my Gen Z experience, growing up in SoCal): - Elementary school: Making custom action replay codes, hacking game saves with programs, CheatEngine/memory/hex editor and following YouTube tutorials, Javascript \"document.contentEditable=true\" hack and changing stuff on websites, pressing F12 and changing random javascript code until something interesting happens or breaks. - Middle school: making sites on Weebly/freewebs, embedding chats and flash games on them, sharing them during computer class - High school: Making PHP sites/vbulliten/Newgrounds/flash games, later iOS apps I wasn't the only one doing these things. There were always like 3 other kids like me in any classroom that would do the same things. Most of us ended up becoming passionate SWEs, besides one that became an accountant. reply eru 10 hours agoparentprev> I suspect we'll see a continuous slow decrease in all aspects of quality of software as those who have a genuine love and passion for the field are replaced by those in it just for the money. And that's exactly how progress looks like! When you need to know 6502 assembly to make a game, only geniuses can make games. When you can click one together in Roblox, game development opens up to many more people. So the average game developer won't be as smart. But that's not because the new tools make us stupid. The same applies to any kind of software. (Or photography, or music, or movies, etc.) The average quality might go down when the floodgates open, but with modern tools the geniuses can produce even better stuff than before. reply richardw 15 hours agoparentprevHasn’t that happened already? As someone who started coding a long time ago and who did it for fun, I’ve seen the industry move from enthusiasts to mainstream and finally to massive comp optimisers who spend more time on angling for a promotion than building. I’ve fallen in and out of enjoyment of engineering many times. But I still come back because I love making something that adds value. There will always be space for the builders who give a shit. reply nicolas_t 10 hours agorootparentAs someone who has needed to hire quite a few developers, I will say that the biggest communality of the greatest software engineers are those who are in it for fun. So I ask about side projects, I ask about what they did as kids, I ask about what they're excited about... Someone who is just there for the money can be great in a bigger company but has no place in a startup. reply eru 10 hours agorootparentprevYou say it like trying to get paid well is a bad thing? reply richardw 9 hours agorootparentNo human on earth doesn’t want to get paid well. Some are purely mercenary. Those I would prefer not to work with or hire. (There are a lot of caveats. Someone might have always worked for jerks and has checked out, etc.) reply eru 4 hours agorootparentI like to be passionate about what I am doing, but there's plenty of great projects / companies to work for. So might as well look after the money, too. (Generally, the companies that can afford to pay you well, are also those that can afford to treat you well.) reply cyberax 16 hours agoparentprev> IMHO this is what drove American superiority in software engineering for several decades. The people who self selected into software engineering really loved the field. People in the Soviet Union had much less access to computers than in the US. And the first years after the fall of the USSR were quite lean for the vast majority of the population. Only by the late 90-s people in the xUSSR started getting enough money to buy computers en-masse. reply eru 10 hours agorootparent> Only by the late 90-s people in the xUSSR started getting enough money to buy computers en-masse. Well that, and computer continued getting ever cheaper. reply redundantly 16 hours agoparentprev> I suspect we'll see a continuous slow decrease in all aspects of quality of software as those who have a genuine love and passion for the field are replaced by those in it just for the money. This seems narrow minded. In the early days of software development, the barrier for entry was incredibly high. The possibility of people making high quality, unique software is greater than it ever has been. It's also narrow minded to insist that only passion for engineering itself can produce high quality results. It's like claiming famously wealthy musicians can't and don't make remarkable, impactful music. reply munificent 16 hours agorootparent> It's also narrow minded to insist that only passion for engineering itself can produce high quality results. It's like claiming famously wealthy musicians can't and don't make remarkable, impactful music. I think you're making a logical fallacy, or at least you seem to be implying that the set of \"famously wealthy\" people is disjoint with the set of people who are passionate. Sure, famously wealthy musicians can make great music. So can poor ones. But I haven't seen a lot of lazy, uninspired musicians make great music. reply knodi123 4 hours agorootparent> But I haven't seen a lot of lazy, uninspired musicians make great music. that almost sounds like a joke setup. ;-) reply redundantly 15 hours agorootparentprevI never said anything about laziness, so I’m not sure why you’re adding that qualifier. I take it you believe that without pure love or enjoyment in something, a person could only be lazy. Inspiration doesn’t require passion for the art to come first, or even at all. Look at Gene Simmons. He co-founded one of the most successful, influential rock bands ever, driven by the goal of becoming rich and running a successful business, not by an unadulterated love for music. reply munificent 2 hours agorootparentI was looking for an antonym for \"passionate\". You're right that \"lazy\" doesn't quite capture it. > Look at Gene Simmons. He co-founded one of the most successful, influential rock bands ever, driven by the goal of becoming rich and running a successful business, not by an unadulterated love for music. This is a good example because while Kiss certainly has popularity, few of their songs are really loved for their musicality. Kiss' music is more about being a good time than good music per se. Sort of like how Garfield is an effective comic product but not actually really funny in the way that other comics are. In both of these cases, the creator is passionate about something and working hard at delivering it. They're passionate about providing a certain product experience, and less so about \"art\" (for however you want to define that). But imagine a version of Gene Simmons that didn't have the passion to master playing the bass and also didn't have the passion to grind every day at making Kiss a world-known rock band. That person isn't someone you'll ever hear of. reply nine_k 15 hours agorootparentprev> the barrier for entry was incredibly high Hmm, for some values of \"incredibly\". John Carmack, a juvenile delinquent, dropped out of university and went on career programming, soon upending the game industry. Linus Torvalds released Linux while being a university student, five years before obtaining a master's degree. Vitalik Buterin dropped out of university and created Etherium, funded by a grant from Thiel foundation. Whatever you may say about cryptocurrencies, Etherium is a nontrivial piece of software, showing remarkable longevity in the fast-moving field. None of them had a ton of formal qualifications. None of them had to obtain a license. They could just sit at a computer, write great software, and release it to the world, changing the world quite much. What they all have is a passion for (and resulting deep knowledge of) computers, mathematics, logic, plus independent thinking, and, well, not asking for permission. This is what a low barrier to entry plus universal availability of powerful tools (computers, compliers, etc), and books leads to. (High barriers bring very different results: look now many small aircraft still fly with engines designed in 1950s, burning leaded avgas. A worthy challenger still fails to step over the sky-high barrier.) reply redundantly 14 hours agorootparentFor Carmack and Torvalds, I’d argue the barrier to entry was still very high at that time. Both had the opportunity to attend university, which in itself gave them access to people and resources they otherwise wouldn’t have had. Additionally, they had access to personal computers when almost the entire world did not, along with the time and resources to focus on their interests. They were extremely fortunate to have that kind of privilege. As for Buterin, I have no idea who they are, so I can’t speak to them. reply Tomis02 13 hours agoparentprev> IMHO this is what drove American superiority in software engineering for several decades. The people who self selected into software engineering really loved the field. IMO it was funding that made the difference. People outside of USA did not have any less passion towards the field. reply eru 10 hours agorootparentI think the comment you replied to is not so much comparing USA vs rest of the world, but USA then and now. reply tightbookkeeper 5 hours agorootparentprevAny amount of funding gets immediately sucked into the abyss. The entire mathematical research community in Soviet Union probably cost less than a series C startup. The only sense in which this is true is if choosing that field is a death sentence relative to other society outcomes due to lack of resources. reply cynicalsecurity 16 hours agoparentprevSurvivorship bias. Eastern Europeans are actually very bad with math, no better than your regular American. But immigrants you see were very really motivated to leave the post-Soviet hell, so they had to show excellent results. Math is taught horrifyingly badly in Eastern Europe. It presented as something extremely overcomplicated and most teachers, having a laughably low salary they barely survive on, don't care teaching it in a way kids would understand. reply cyberax 16 hours agorootparent> Survivorship bias. Eastern Europeans are actually very bad with math, no better than your regular American. Most people everywhere are bad at math. However, Eastern Europeans and Asians have a larger percentage of people who end up good at math compared to the US. And it's not even close, if you look at math competitions. Immigrants and children of immigrants are over-represented among the US team members. reply The_Colonel 14 hours agorootparentI've long pondered a similar question - why are there so many Indian and Pakistani women in SWE in comparison to western women? Are Indian/Pakistani women better than western women in engineering? Is the education there better? How are these countries successful in mitigating this gender gap? My theory is that this is actually caused by sexism and gender discrimination. There are smart, intelligent women everywhere, but due to sexism many career options have been traditionally closed for women in these societies, while SWE (as a completely new field) isn't. Their high numbers can be explained by the lack of opportunities in other areas. If you're an intelligent woman in Pakistan, IT is one of the few ways to prosper, meanwhile a woman in the West has way more opportunities. I think it used to be the same principle with science in EE. Like, you're a highly intelligent person, you strive for success and recognition. In US, the classic path is entrepreneurship, but that was pretty much closed / very difficult in the Soviet block. You could get into politics, but you have to bend the knee to the party line. Science is one of the few avenues where you can thrive intellectually, get recognition and keep yourself relatively unaffected by politics. reply thaumasiotes 14 hours agorootparentThere is a general finding that women go into engineering fields (and other relatively high-paying fields) more the poorer their country is. Neither \"software engineering\" nor \"India / Pakistan\" is an exceptional case; there is no reason to look at the specifics of the field or the region. Usually the theory is that women everywhere hate engineering, but poor women may suck it up and go into engineering anyway because they need the money. In fact, that was pointed out in this very thread a couple hours before your comment: https://news.ycombinator.com/item?id=41716578 reply The_Colonel 4 hours agorootparentI agree this has an effect as well - software engineering is one of the few fields which provide good living in those countries. However, coming from (relatively poor, but relatively gender-egalitarian) Eastern Europe, female engineers aren't anywhere close to the amount in e.g. India and Pakistan, so I don't think it can explain the disparity completely. reply chongli 16 hours agorootparentprevImmigrants and children of immigrants are over-represented among the US team members. Still survivorship bias. Immigrants from China and India are not selected randomly from the population, they're selected by their means and determination to emigrate. Furthermore, if you include the fact that the US caps the number of visas granted on a per-country-of-origin basis and the fact that China and India have the 2 largest populations in the world, the people who successfully obtain visas from these countries are the survivors of the most stringent selection process. reply cyberax 16 hours agorootparentYou can also look at Fields Medal winners. The majority of award ceremonies have at least one Slavic person: https://en.wikipedia.org/wiki/Fields_Medal reply munificent 16 hours agorootparentprev> Eastern Europeans and Asians have a larger percentage of people who end up good at math compared to the US. These are two different claims: Eastern Europeans and Asians who are in the US have a larger percentage of people who end up good at math.* Eastern Europeans and Asians who are in their respective countries have a larger percentage of people who end up good at math.* If you are making the first claim, you're just restating the parent comment's survivorship bias claim. If you're making the second, then you are making a strong claim, but it would be interesting to see data behind it. (I don't have any insight one way or the other.) reply nine_k 15 hours agorootparentprev> Immigrants and children of immigrants are over-represented That's exactly the bias. Immigrants are self-selected for higher risk tolerance, higher endurance, often wider or deeper knowledge, and readiness to think hard and work hard to achieve a better place in life. Unsurprisingly, these same qualities help achieve results in studying and professional career. Coming from a culture that respects abstracted knowledge (Chinese, Jewish, Russian, Indian, etc) helps additionally, but is by far not sufficient by itself. reply seanmcdirmid 14 hours agorootparentprevThere are lots of Chinese and Indians, are you sure that there is a larger percentage who are good at math? When you take 1.4 billion x2 compared to 380 million Americans, the percentages don’t have to be high. Immigrants from those two countries at least, also tend to be in highly educated and more well off segments of those societies. You could find a lot of Chinese refugees from Vietnam in the early 80s not actually good at math, and instead having typical problems refugee communities have. You’ll also find this in African immigrant populations today if you compare refugees from east Africa to Africans who went the work visa route. Race isn’t really an indicator of anything compared to education background and the resources your family has access to (and inter generational knowledge on using those resources). reply Onavo 16 hours agoparentprev> They had been trained, from an early age, to love mathematics more intensely. Nonsense, sounds like post-hoc rationalization. Maybe talk to some actual Slavic people. Sure the Russians had \"math clubs\" and \"chess clubs\" but it wasn't as if the US didn't have RadioShack and garage/ham culture. Talk to some of the older generations that still remember the Berlin Wall and you might also understand why so many women from the ex USSR states are in STEM while it's the opposite in the West. TL;dr: STEM was a quick way to prosperity, the eastern bloc countries were poor, and engineers are useful even in a communist regime. They studied math because there wasn't much else they couldn't have done. reply cyberax 16 hours agorootparentHah. In the USSR an average engineer earned less money than an average worker. I'm not joking. But STEM was seen as far more prestigious than manual labor. This was very much a cultural thing, pushed by the government (engineers are useful!). Another thing, there was a huge societal pressure to excel at school. It was common for parents to check their children's marks every day. There's a very famous picture about it: https://en.wikipedia.org/wiki/Low_Marks_Again - a kid knows that his parents are going to check his marks and berate him. And this attitude was everywhere. For example, getting low marks and then overcoming them was a theme for a lot of iconic Soviet cartoons and stories (\"The country of undone homework\", \"Vovka in a Faraway Kingdom\", etc.). I have not seen anything similar in the US. reply 082349872349872 8 hours agorootparentin case anyone else were interested: https://www.youtube.com/watch?v=2NlnJsCEzSM \"The country of undone homework\" https://www.youtube.com/watch?v=YpygndkMSWA \"Vovka in a Faraway Kingdom\" (I was already shocked that one of the leading roles in the romcom Три плюс два was a physicist, but then again Young Sheldon might provide evidence that pop culture in the Old Country is more STEM-accepting now than it had been in my day?) EDIT: I love how the exclamation point cries out \"Halt!\" and the question mark demands \"Where [do you think you're going]?\" (and the doodle of Kyzya) EDIT2: Vovka needs much more russian-specific cultural background than Homework. I recognise the golden fish (Только ты — рыба моей мечты), but not any of the other tales. I'll probably eventually run across filmstrips explaining each/each family of tales, but if anyone would care to give pointers to specific ones, I wouldn't mind any spoilers! Is the \"sam\" of the samovar the same as the \"sam\" of \"sdelai sam\"? reply 082349872349872 13 hours agorootparentprev> getting low marks and then overcoming them Do I understand https://www.youtube.com/watch?v=qvrS6z4tUtI correctly to mean that it wasn't possible to join a scouting troop without good marks? reply cyberax 12 hours agorootparentIt was done by individual schools, there were no hard-and-fast rules. Straight \"A\" students did get some additional rewards, such as trips to summer camps in Crimea. reply 082349872349872 11 hours agorootparentWhere they might have the opportunity to make music videos with famous singers? https://www.youtube.com/watch?v=NepI7BTYpnY Thanks for the correction! Lagniappe: https://www.youtube.com/watch?v=WOnxu62nz9g EDIT: wait a moment, now I'm confused: if her (Lena's?) marks weren't an issue for induction, why does it matter that her friend got jealous and ruined her test? (or did I get this story right, but it wasn't necessarily a general all-Union thing, just that in this specific case a 2 would have been problematic for her troop/school/family?) reply thaumasiotes 14 hours agorootparentprev> Hah. In the USSR an average engineer earned less money than an average worker. But in the USSR, your ability to buy something was generally not limited by the amount of money you had. It was limited by whether you'd be allowed to buy the thing for other reasons. > But STEM was seen as far more prestigious than manual labor. Sounds like an engineer's money may have been worth much more than a laborer's? reply cyberax 12 hours agorootparent> Sounds like an engineer's money may have been worth much more than a laborer's? Not in general. It heavily depended on individual circumstances. For example, machinists could earn a bit more money by using factory tools (lathes, drills, etc.) to make replacement parts for cars. And a lot of workers were stealing some of the product their factory was making. There was a common attitude of \"everything around is common, so everything's around is mine\". On the other hand, engineers had more career perspectives. They were more likely to be promoted to managerial positions. reply Muromec 8 hours agorootparentprevThat depends on what you are buying. Some things worked like health insurance in US, some others weren't. Housing you don't buy at all, a car you need to know a secret way to jump the queue or be in a right position. Fancy stuff -- you need to have friends who can sail and bring it to you. But there was plenty of stuff you just buy, from air plane tickets to beer and meat. reply tightbookkeeper 4 hours agorootparentprevThis is not true at all. Communists made a big emphasis on stem over law and classics, and most communist leaders had stem background. In communist state prestige is money. reply dejv 12 hours agorootparentprevUniversities in eastern bloc were really elite places. Only low single digits percent of people were able to enroll. Also majority of degrees were in STEM, education or medicine as they were deemed useful for the state. To get degree outside of STEM, political background of your family was checked and things like having family member (even say uncle) who emigrated outside of country or having grandparents who owned businesses or farm decades ago will get you discarded. So the smart kids usually have very limited path forward, so STEM it was (if you were lucky) reply lupire 18 hours agoprev6 years ago and 10 years ago, with a few comments: https://hn.algolia.com/?q=Math+from+Three+to+Seven This book and the culture it come from are so influential, that many people who did \"enrichment\" have already been exposed to many of the activities in the book. Most famous may be the Scratch JR / code.org introductory computer programming, but with pencil and paper. reply dang 13 hours agoparentAh good find. Macroexpanded: Math from Three to Seven: The Story of a Mathematical Circle for Preschoolers [pdf] - https://news.ycombinator.com/item?id=17018583 - May 2018 (20 comments) Math from Three to Seven: Chapters One and Three [pdf] - https://news.ycombinator.com/item?id=8811334 - Dec 2014 (21 comments) reply lovegrenoble 18 hours agoprevThe USSR was indeed the most reading country in the world. Soviet citizens spent approx. 11 hours a week reading books, newspapers and journals on average, which was twice more as the British, North Americans and French people did. It was the findings of the world study of 1966. reply bdjsiqoocwk 18 hours agoparentNot a good metric for producing scientific talent, and it doesn't distinguish reading fiction from actually educating yourself. For the purposes of producing scientific talent, reading fiction helps you as much as watching TV. reply 082349872349872 9 hours agorootparentI bet a lot of scientific talent was inspired (on either side* of the Iron Curtain) by the genre of fiction this dude is reading: https://barykin-pin-up.ru/#/i/kniga-luchshaya-podruga * Lem (Cyberiad, etc.) was all I could get of theirs, on mine. reply philosopher1234 17 hours agorootparentprevI don’t know any definition of actually educating yourself that would exclude reading fiction. And why are you focused on the purpose of producing scientific talent? reply shepherdjerred 13 hours agorootparentThe article is trying to explain why the Soviets were so good at keeping up with the US in science/math reply bdjsiqoocwk 2 hours agorootparentRight... tell me you didn't read the article, am I right. That's why I didn't bother replying. I often feel the impulse to reply to \"show everyone that this guy is talking nonsense\" but if that's obvious other people will see it too, so I say nothing. reply 12345hn6789 17 hours agorootparentprevThis is an incredibly pessimistic view. Do you have any sources to these claims? reply myth_drannon 17 hours agoparentprevYes, people had a lot of time for hobbies. Reading, writing poems, electronics. Sometimes I watch old interviews of people on the streets and compare with the interviews they do on the streets now. It's night and day. Even people, like working class, drunk in a bar in the end of 80's collapse were more well spoken and intelligent then the people now. Either it's Putin, emigration or capitalism or whatever but there is a serious degradation in the populace. reply 082349872349872 7 hours agorootparentAccording to Zoya, Birkins, boob jobs, and Jaguars are the current topics of conversation? (that said, museums did see an uptick of entries when they offered reduced rates for patrons wearing Louboutins) I blame Катя Кузнецова (1986); she wanted the red sports car with the radio and the little dog, after all: https://www.youtube.com/watch?v=jvdlAgreRug&t=4574s Lagniappe: https://www.youtube.com/watch?v=DgdP5U28jHc reply komali2 16 hours agorootparentprevI've noticed this aspect in general of revolutionary societies. What I'm personally quite selfishly interested in is whether this is unique to leftist revolutionary societies - were Germans or Italians in 1936 having spirited debates about fascism and how best to serve the Fatherland? I have no idea, from what I've read so far it sounds like no. Meanwhile, for example in Spain in the same time period, there was a remarkably broad activation of the population in revolutionary activism and political engagement, which allegedly doubled productivity and dramatically increased agricultural yields, which to me indicates that the anarchists were basically everywhere (how else did they syndicalize such wide swaths of the economy?). Similarly there's the whole French Revolution cafe / salon culture. reply 082349872349872 7 hours agorootparentFascism was explicitly and proudly anti-intellectual, eg https://en.wikipedia.org/wiki/Achille_Starace#:~:text=On%20o... reply tightbookkeeper 5 hours agorootparentI think you’re missing a lot of historical context. If by “intellectual” you mean cosmopolitan university professors and government administrators then yes. This also closely associated with internalization, relativism, and Jewish culture. If by “intellectual” you mean learning, reading, thinking, then no. reply 082349872349872 1 hour agorootparentThat's a novel thesis; do you have historical examples to provide a basis for believing it? (Starace, above, is already an obvious counterexample) reply gradschoolfail 12 hours agoprevPeripheral, but not totally irrelevant: Psmith was an Edwardian dandy of PGWodehouse’s imagination https://en.wikipedia.org/wiki/Psmith reply 082349872349872 18 minutes agoparent8 billion people in this world, yet Jane Psmith and John Psmith have oddly familiar voices: the μορφή of their writing brings to mind a non-geodesic ὕλη of yesteryear... reply generationP 2 hours agoparentprevAnd I thought it was a pun on p-zombies... reply lain98 10 hours agoprevI have been trying to join/create a circle as an adult. I asked some of my online friends but no interest so far. reply spydum 7 hours agoparentIt's interesting to me, as if you read Benjamin Franklins biography, he mentions creating a literary circle being super important. I suspect many of our important thoughts leaders through history created small social circles where they hyperfocused on their domain with friends in a more social way reply 082349872349872 1 hour agorootparentMailing lists (the N:N variety, not the modern 1:N abomination) were such, and for a few, still are. reply noemit 10 hours agoprevMy parents grew up in the Former Soviet Area so I will share this anecdote: Both of my parents studied Chemistry. Math is really important in our family. You are shamed if you don't understand something logical. My dad still had to do military service even if he studied. There was no strong incentive to study other than the fact that it was free and something to do for people who had no jobs, only 1 hour of TV per day, etc. My hot take is that lack of entertainment and the fact that education was one of the only free things available to them was a large contributing factor. reply dyauspitr 15 hours agoprevHe almost lost me when he said the USSR was punching about its weight with a lower population which is untrue. The USSR had a significantly higher population than the US during the Cold War. reply tightbookkeeper 17 hours agoprevEvery study which examines different populations across the world and expects them to be identical will be confused. If every cultural group was equally interested in math, that would be shocking. reply Muromec 8 hours agoprevCan we please stop calling \"russian\" on everyone from ussr and/or having a Slavic-sounding name. reply aryonoco 14 hours ago [flagged]prevnext [3 more] This easily take the prize for the most stupid thing I've read this weeke. I reckon come the end of October, it will be a strong contender for the stupid writing of the month as well. reply dang 13 hours agoparent\"Please don't post shallow dismissals, especially of other people's work. A good critical comment teaches us something.\" https://news.ycombinator.com/newsguidelines.html reply shepherdjerred 13 hours agoparentprevWould you like to share why or do you just want to insult the piece? reply amykyta 7 hours agoprevCurious (not) how Soviets just became ‘russian’. This is soft propaganda once again. reply defrost 7 hours agoparentCast your mind back 33 years . . . The Union of Soviet Socialist Republics (USSR) was formally dissolved as a sovereign state and subject of international law on 26 December 1991 by Declaration № 142-Н of the Soviet of the Republics of the Supreme Soviet of the Soviet Union. https://en.wikipedia.org/wiki/Dissolution_of_the_Soviet_Unio... reply data_maan 11 hours agoprev [–] If Russians punch way above their weight demographically and are so good at math - how come then that the French have even more Fields medals per capita? Maybe this article was written by a Russian troll farm, as it is essentially claiming Russian math supremacy. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "\"Math from Three to Seven\" by Alexander Zvonkin introduces the idea of mathematical circles for preschoolers, focusing on problem-solving rather than traditional rote learning.",
      "The book, structured as a journal, shares Zvonkin's experiences in teaching complex math concepts to young children through playful methods, highlighting their unique cognitive abilities.",
      "Zvonkin's varied success with different groups of children underscores the individuality of each child's learning process and the importance of nurturing a love for problem-solving."
    ],
    "commentSummary": [
      "The article reviews \"Math from Three to Seven,\" focusing on maintaining children's interest in math as they age.",
      "Commenters suggest engaging methods like using online resources (e.g., Khan Academy, 3Blue1Brown) and participating in math circles to foster interest.",
      "The discussion includes the role of passion in learning math and considers cultural and educational influences, referencing the historical emphasis on math and science in Soviet education."
    ],
    "points": 312,
    "commentCount": 176,
    "retryCount": 0,
    "time": 1727827125
  },
  {
    "id": 41714672,
    "title": "Who is pretending to be hiring?",
    "originLink": "https://news.ycombinator.com/item?id=41714672",
    "originBody": "I’m looking for a job and like many people in this situation am finding it unusually difficult.I’ve read rumors that many firms are actually in a hiring freeze, but they keep job reqs open for appearances. Apparently some investors use job postings as a company health metric.From my contacts, I am personally aware of situations where internally-recommended CVs are ignored by HR, and other cases had open job postings and passed people successfully through the interview process, and then the hiring manager still didn’t pull the trigger. I have no way of knowing how widespread this is, but it is happening at some places.Is your company like this? If you have real info and not just suspicions, let’s name some names.",
    "commentLink": "https://news.ycombinator.com/item?id=41714672",
    "commentBody": "Who is pretending to be hiring?289 points by neilk 21 hours agohidepastfavorite99 comments I’m looking for a job and like many people in this situation am finding it unusually difficult. I’ve read rumors that many firms are actually in a hiring freeze, but they keep job reqs open for appearances. Apparently some investors use job postings as a company health metric. From my contacts, I am personally aware of situations where internally-recommended CVs are ignored by HR, and other cases had open job postings and passed people successfully through the interview process, and then the hiring manager still didn’t pull the trigger. I have no way of knowing how widespread this is, but it is happening at some places. Is your company like this? If you have real info and not just suspicions, let’s name some names. gip 20 hours agoIt is anecdotical, but I'm consulting with a startup in the Bay Area. We have 9 job openings listed on the website (and for some reason only 4 on LinkedIn). But in reality one position (senior dev) is really open, and the bar is sky high. By that I mean that the founders would hire the right person. But the other 8 positions are just there for signaling and nobody looks at the applications we get (and for one of these positions we got 1k+ applications last time I checked). For when I'm asked, the CEO told me to say that we are prioritizing finding the senior dev first (and the position has been open for 6 months). I think the founders feel that it is the right posture to signal that the company is growing (external messaging) and that we are doing well (internal messaging). reply taurath 20 hours agoparentIt should be illegal. Given how many regulations there are around hiring, there should also be some around job postings. Making people waste a bunch of time updating their resume and writing cover letters for a company thats not actually looking to fill a role is awful. Its creating shitty dynamics for both job seekers and job posters - seekers have to spreadfire apply to as many places as possible with quantity over any quality, get their inboxes obliterated with rejections that make very little sense. Job posters get 1000 applicants for every position because there's barely any reason to read the description anymore. Not to mention all the economic reporting that is completely messed up by this. Job openings are something that is tracked, and policy can't adapt if literally every company is saying they're hiring like gangbusters but nobody can get a job. reply hirvi74 18 hours agorootparentI remember reading something within the past month about how the SEC is looking to crack down on companies using fake job postings as a way to fake their growth. It's still technically an attempt to fraud shareholders. Edit: I can't find the article. Maybe I am confusing it with this thread: https://news.ycombinator.com/item?id=41112855 reply taurath 14 hours agorootparentMy least favorite thing about this day and age is that we have to justify things primarily by whether it effects shareholders or not, not whether its causing a bunch of harm to people looking for work. reply RangerScience 20 hours agorootparentprevHeh :) Enforcement would potentially look a lot like unemployment, but in reverse: you have to show you’ve been interviewing people, just like unemployment requires you to show you’ve been looking reply meragrin_ 22 minutes agorootparentWhy would interviewing people be the test? If you don't hire anyone, it isn't a real position. They should have to prove the people applying for the position could not perform or be trained to perform the position. reply twiceaday 15 hours agorootparentprevThe core issue is that the common metric is a bad proxy for the actual signal. Goodhearts law and all that. Enforcing that the proxy be good is weird. It would be better to enforce publicly sharing the actual signal. reply mckn1ght 20 hours agorootparentprevNot even that would be good enough because a lot of sham reqs still interview and then reject later. reply t-3 8 hours agorootparentThe way it works for the unemployed is if they don't take an offer, benefits get cut off. So it would be on the company to prove that each rejected application did not meet the standards they were looking for (trivial - just use the same unrealistic expectations many companies already have: 10 years experience in $5_year_old_tech). reply taurath 14 hours agorootparentprevIf nobody should be forced to hire someone, then maybe they should be forced to give metrics on how many people are hired vs job reqs posted, and that information should be given to the candidates. Good luck hiring people if you don't actually want to fill 80% of your roles and candidates know it. reply trillic 15 hours agorootparentprevWhy? To burn money? reply red-iron-pine 36 minutes agorootparentaye was my thought. interviewing is expensive and time consuming, and has a very small but greater than zero chance of turning into a lawsuit. throwing up a bunch of job adverts up on a low cost platform is comparatively simple and requires no real activity after putting them up; just ignore the emails. reply edanm 13 hours agorootparentprev> It should be illegal. Not everything we don't like should be illegal. This sounds like the kind of thing that is incredibly unenforceable anyway. How do you differentiate between \"we're not actually hiring\" and \"we simply have a very high bar\"? How do you do it in a way that doesn't impact the economy too much (like forcing employers to do stupid things like auto-write everyone back and waste even more of their time in order to appear to actually be hiring)? reply skeaker 1 hour agorootparentEasy, you offer a hotline where people can report it when they see it and then sue/fine the company for defrauding their investors by faking growth. If the case is legitimate, you reward the person that called in to the hotline with a bounty. Everybody wins except the fraudulent company, as it should be. reply edanm 29 minutes agorootparentSo now every company does a technical screen that weeds out a large percentage of people, then randomly chooses to waste some more people's time by dragging them through an interview. Everyone wastes more time but they can say they interviewed a lot of people. I'm not saying this behavior isn't bad, to the extent that it actually really exists. I'm just not sure making it illegal is the right move. Why not let the market take care of it? You can usually see if a company is growing or not. If this becomes such a common phenomenon that that's a problem, you can usually explicitly ask, or there will be industry sources that can tell you if a company is growing or not. reply polski-g 5 hours agorootparentprevThey want to turn the US into the EU: a dying, poor, over-regulated museum of decline. reply aguaviva 16 hours agorootparentprevIt should be illegal. Indeed. And handsome whistleblower bonuses (i.e. enough to retire on) should be paid to individuals who are in a position to report the company principals to appropriate authorities (with easily obtainable evidence of course), so that they can be dealt with accordingly. Instead of just casually mentioning to others at the water cooler that this is what their client/employer was doing, as if it were just one of those things. reply paulcole 15 hours agorootparent> handsome whistleblower bonuses (i.e. enough to retire on) should be paid to individuals Is this money coming from the government or the company? Because I’m guessing the startup using fake job postings to signal growth probably doesn’t have enough runway to cover the handsome retirement of a 30-year old. reply mway 15 hours agorootparentSounds like a \"them problem\". If it weren't punitive, it wouldn't be a deterrent. reply drstewart 15 hours agorootparent>If it weren't punitive, it wouldn't be a deterrent. This is why I don't understand people who are against the death penalty and punishing mandatory minimum sentences. As you correctly point out, harsh retribution is a good deterrent. reply majewsky 6 hours agorootparentBecause the actions that lead to death penalties are usually committed without a calm and collected risk-benefit analysis, whereas economic decisions of a corporation absolutely are. reply thunky 6 hours agorootparent> the actions that lead to death penalties are usually committed without a calm and collected risk-benefit analysis Really? I thought death penalty is typically reserved for premeditated acts where the criminal did actually think it through. reply paulcole 3 hours agorootparent> where the criminal did actually think it through Until we can get into the criminal's brain we can't know the extent to which they thought it through. We're just basically saying, \"Anybody would know that they shouldn't kill somebody and it seems like they probably thought about killing this person before they did it.\" I doubt there's going to be a stat that satisfies you here, but this one is interesting: https://deathpenaltyinfo.org/facts-and-research/murder-rates... I haven't ever seen non-anecdotal evidence (flimsy or otherwise) that makes me think the death penalty acts as a deterrent. reply thunky 2 hours agorootparent> Until we can get into the criminal's brain we can't know the extent to which they thought it through. Sure we can, based on their actions. For example, we know that the guy that killed 60 people in Vegas planned it out ahead of time: https://en.wikipedia.org/wiki/2017_Las_Vegas_shooting#Prepar.... I'm not the one saying that the penalty works as a deterrent. It probably didn't in this case since the guy killed himself. Although he may have preferred death to a life in prison. reply paulcole 20 minutes agorootparentCongrats on picking the most extreme example possible. What about a situation where someone kills their wife after work one day? How will you know if he had thought about it for a while or just snapped? Obviously you will look at the evidence and see if there was clear evidence of planning or not. But if there's not how can you be confident in whether it was planned? > I'm not the one saying that the penalty works as a deterrent. Good, because it doesn't. taurath 14 hours agorootparentprevLook up the prison population vis a vis mandatory minimums and tell me its been a good deterrent. Maybe what drives crime is independent of how much deterrent there is! reply paulcole 15 hours agorootparentprevI mean it’s not a them problem if they just can’t afford to pay it. What are you going to do, rat on your employer to get money from them they know they can’t pay so they just go out of business and you lose your job? reply mway 7 hours agorootparentI mean, yeah. It's still a them problem, because they can choose to engage or not engage in those practices while knowing the consequences. What are you going to do, never penalize companies when it might hurt their bottom line? Just because they can't pay it doesn't mean there shouldn't be repercussions. That would be like saying that a person can't be fined because they don't have the money. AFAIK the judicial system will happily levy costs on you that you can't afford, and it is 100% a \"you problem\". reply aguaviva 13 hours agorootparentprevPresumably the government will backstop it by a certain amount X, to be increased to Y > X if such funds can be clawed back from the principals / company. Not equivalent to the most attractive exit they hope to make (if they stayed with the company and if it paid out), of course -- but enough to make it worth their trouble, to hedge the diminished employment prospects that will be incurred as a price for sticking their neck out, and to convince these companies that they're running a significant risk in pulling shenanigans like this. reply catchcatchcatch 20 hours agorootparentprevGet an attorney and have a conversation about filing a lawsuit in civil court. There’s objective economic harm for not at least calling everyone that applies, in my opinion (I’m not an attorney) to Unfortunately there’s taxes for people not understanding computer science and wanting to be in “management.” Especially if people stare at the software newspaper all day. Entry level manager positions aren’t supposed to be glamorous…. reply catchcatchcatch 20 hours agorootparentI know software managers and recruiters that don’t want to do fairly filter through 1000 applicants. When it’s a very large company that has over 100,000 global employees it’s a bit unfortunate. reply red-iron-pine 33 minutes agorootparentWhen it’s a very large company that has over 100,000 global employees you should have HR tools that can do that filtering for you. reply zerr 6 hours agoparentprevThat's why one should spend less than a second for applying to positions. reply galfarragem 10 hours agoparentprevTIL. I supposed this was mostly a \"conspiracy theory\" but I just acknowledged that this is true and even a standard practice. This explains a lot on some past job searches. It degrades job seekers mental health and the HR ability to manual screen CVs once job seekers adapt and shoot CVs everywhere. reply dicjsnw 19 hours agoparentprevName names. reply jedberg 20 hours agoprevVCs are absolutely using job listings as a health metric, and it is leading to companies listing a bunch of jobs. They aren't exactly fake jobs -- they will hire someone if some unicorn walks in. But they are nice to have jobs, not necessary jobs. Also some companies keep up generic listings like \"Senior engineer\" not because they are hiring but because they would be willing to make an opportunistic hire for the right person, and want to collect the names of interested people for when they are hiring. reply jszymborski 20 hours agoparentI'm out of my depth here, but doesn't this feel a bit short-sighted on the part of start-ups? If talented folks are applying to ghost jobs and never hearing back, aren't they less likely to apply later when real vacancies open? I know it's an employers market atm since firms don't have the cash flow to scale, but interest rates are coming down and it won't always be this way. Again, I'm out of my depth, recruiting is not my expertise, etc... reply CryptoBanker 17 hours agorootparentOnce they've applied once their resumes are on file. These companies can always reach out to a candidate at a later date reply gwbas1c 5 hours agorootparentThat's somewhat short-sighted, because many good candidates aren't on the market long. reply jedberg 20 hours agorootparentprevWell, it's a game theory thing. Probably a few people will ignore their outreach after they remember the company never got back to them. But in most cases they will probably assume the application was just lost. Or if it's a hot startup that just got a round of funding and has an interesting problem, they won't care. On balance it probably helps more than hurts. reply 5thaccount 9 hours agorootparentprev> doesn't this feel a bit short-sighted Absolutely feels that way... but it may also be VITAL. The first (really only) goal of a company is to not die. I call this the SHL rule - as it was recommended several times to SHL that he kill off Gumroad. Who can kill a company varies over time. Initially, that is likely 100% the founders. Either giving up, feuding or running out of money. Then investors/debtors have the power to kill a company off. Finally, and every company should be so lucky to reach this level, acquirers/bankers/Government can kill off a company. Making sure you don't die - and knowing who has the power to kill you off - should be prioritised at (almost) any cost. As an example, I once had a client who spent $X0K a month on AdWords for one keyword exact matched. It generated almost no revenue. The main investor would Google this one word, and if the site did not rank 1st both paid and organic, he'd threaten to pull all future funding. The company was loss making at that time, so that would have killed it off. I moved that one keyword into it's own AdGroup, called it \"Investor Relations\", never talked about it again, and years later the company was sold for $X0,000,000. reply xyst 20 hours agoparentprevWhy do VCs always ruin everything? From housing, jobs, healthcare, petcare, appliances. Everywhere I look these fucking vultures ruin everything they come into contact with. reply aabbcc1241 17 hours agorootparentIt's not VC ruin anything, it's the people chasing VC abused the systems for their own benefit. reply gwbas1c 20 hours agoprevWhen I worked at VMware in 2008, I remember interviewing a candidate. Priorities changed, we weren't crazy about the candidate, and they didn't get hired. No one was ever hired for the opening, and ~1 year later the project was canceled. > but they keep job reqs open for appearances People hire for appearances. If you're a manager you need people to manage. It makes you feel important. That job that I had at VMware... The more I think about it, that job was making someone feel important, and feel like they were checking a box. My prior job was about making someone feel important, too. (My boss was promoted to manager so he hired me.) So I wouldn't go and say that a company is pretending to be hiring. It's more that priorities change, or sometimes the bar for a position is high, ect, ect. reply marcus0x62 20 hours agoparent> If you're a manager you need people to manage. It makes you feel important. When you're a manager, you need a bench of candidates for areas where you think your team will grow, and for people from your team who might leave. When I was a manager, I always had a list of potential hires, but it was a spreadsheet I kept, and when I'd talk to people informally I'd let them know - either I have no possible opening for them now, but I'd like to keep them in mind for the future if they were also interested in working for me or, I'd let them know I'd probably have an opening n months in the future. But, I'd never post job listings just to get a candidate list. Or interview random people just for the hell of it. For one, at most (bigger than tiny startup) companies, there's at least some bureaucracy in getting job listings approved - why would you do that work if you don't need to? Also, why would you want to lead people on who you want on your team? At the line manager level, this theory makes no sense. I'm not saying it doesn't happen, just that it is as stupid for the manager as it is wasteful for the job applicant. reply gwbas1c 6 hours agorootparent> just that it is as stupid for the manager as it is wasteful for the job applicant. You're clearly a good manager. (And I suspect I would enjoy working for you.) Don't underestimate the amount of lousy managers out there. Many of them don't know they're lousy, or are just trying to do what's right without realizing that they aren't doing what's right. reply xyst 20 hours agoparentprevThere’s a few rumors out there that promotion for managers at Amazon require a minimum head count. Fortune 500 companies are a disaster. It’s all a game of smoke and mirrors. Pump the stock at all costs reply Ancalagon 1 hour agorootparentrumors? I thought this was common knowledge for most large orgs reply Rastonbury 18 hours agoparentprevInteresting take, did you feel like your work never helped the company or only helped marginally? Or was it a role you could purely coast in reply gwbas1c 6 hours agorootparent> did you feel like your work never helped the company or only helped marginally? The product was cancelled before it shipped. (Basically, the market window ended and the product was my first career example of architecture astronauts and the consequences.) But, to make it interesting: The HR guy who hired me bumped up my rank to get me a pay increase. They didn't tell me that I was the most experienced engineer on the team, nor did I have the leverage to push back on some serious architectural mistakes. 1 year in, I realized the project was an exercise of \"architecture astronauts,\" although I didn't know the word at the time. > Or was it a role you could purely coast in I could have done that. I consider that generally unethical. I did coast a few days before I gave notice; I gave notice the day before a scheduled vacation, and then came in one day after the vacation to meet with HR. To make a long story short: I decided to quit a few days before the Employee Stock Purchase Plan grant date, and I was afraid if I gave notice, I'd loose the stock. To put things in context, my manager wanted to walk me out the door as soon as I gave notice, and I had to tell him that would make him look bad. reply heraldgeezer 20 hours agoparentprev>People hire for appearances. If you're a manager you need people to manage. It makes you feel important. This eventually leads to layoffs. At my old company, when someone in a team moved teams or quit, they reflexively hired a replacement or consultant even if it was not needed. Then they had to be laid off due to budget (me included) So yes, managers just want a bigger team to look good. It worked when money was free... reply qwertyuiop_ 13 hours agoparentprevMore often than not Managers aggressively hiring and “growing” the team is to build a facade for themselves to get promoted or prove that they grew the team. reply gcr 20 hours agoprevIt’s rough out there, folks. Anecdote: a while back, I did an internship at a YC “darling” company that you’ve definitely heard of. They apparently liked me so much that a couple years ago, the lead of intern recruiting emailed me encouraging me to re-apply if I was ever on the job market. Well it’s fall 2024, and they automatically rejected my resume without review. Apparently not even internships are good enough as a hiring signal anymore. reply hiyer 13 hours agoparentIf you have the recruiter's contact, it might be worthwhile reaching out to them directly. Automated screening is far from accurate. reply wavemode 19 hours agoparentprevIn the past I was auto-rejected for a position within my own company, that the hiring manager literally told me to apply for. HR and hiring managers aren't the same people, and aren't always operating with the same set of criteria. I was directed to re-apply and answer some of the questions differently (and not quite truthfully...) just to get past the screening system. I would encourage you to reach back out to intern recruiting and see what's up. reply jrs235 4 hours agorootparentThanks for sharing. The following is not me judging you for misleading answers it's me judging the other half on why there's so much more BS floating around everywhere. Honestly and humility is punished while deceitfulness and overconfidence is rewarded. Everyone, not just the emperor, will be walking around in the finest of all robes... reply hyperG 16 hours agorootparentprevAt my previous company, I was rejected by HR for a job the hiring manager not only told me to apply for but hired me immediately after the interview for. Reach out for sure. Do anything humanly possible to avoid going through HR. reply nottorp 20 hours agoparentprev> they automatically rejected my resume without review They switched to \"AI\" for efficiency :) reply HDThoreaun 3 hours agoparentprevDid you actually talk to anyone at the company? Likely you were auto rejected and they didn’t even know you applied. reply 0x000xca0xfe 20 hours agoprevThe tiny German startup I worked at last year was posting 4 dev positions. After some financial problems hit they announced (internally but in an official manner) that they were not going to hire anybody. Couple weeks later I pointed out to the person responsible for hiring that the postings were still up. They explicitly responded that they will keep them up. I didn't get an actual reason but I think it was for job market \"research\" and to keep a steady stream of applicants to threaten existing employees with replacement. reply Squeeeez 18 hours agoprevWhat kind of punishment does HR get if they reject good candidates? I had a discussion with an HR person the other day, she was claiming things like \"oh we would just paste their CV into chatgpt and ask whether we should hire them\", \"his belt didn't match his shoes so we blacklisted him\", \"he used forbidden words like 'but', not a good match\". Maybe it was just an exception, but I have a feeling like it would be pretty common. Between that and black magic CV filtering software, they have all the excuses. Nothing human about anything in that process anymore. reply Rastonbury 17 hours agoparentTheir KPIs and quotas (pass rate of candidates passing HM stage, time to hire) and hiring manager busting their balls. Depends on the company though and again it's 99 rejects and 1 hire, as a manager I can't be reading CVs everyday and interviewing everyone and I've been on the candidate side to reply neilv 20 hours agoprevI've heard startup founders pretending to hire, like it's a common best-practice. Personally, I don't think it's very honest, and I'm going to wonder what other honesty they have flexibility about. I wonder whether any of the third-party job-posting sites has figured out ways to say you're not much hiring -- or only hiring/promoting internally, or only filling a funnel for possible future openings, or only hiring if a rare unicorn comes along -- without that looking negative to people who only want simpleton metrics. Maybe the cooling of \"growth\" theatre startups will make it OK to sound like you're not \"growing\" right now. reply alx_the_new_guy 13 hours agoparentThe most obvious approach I can think of would be some sort of post-application questionnare and comparing that to the companie's job posting, sort of, stats. Say, the company has a lot of job postings, but the all the applicants say they're auto-rejected. That's a decently clear indicator. Also, if you link your linkedin/stackoverflow/github or something, there could be a more or less automatic way of evaluating you as a candidate in general and your fit for this/similar position, which could be fed back into the post-interview questionnare processing. Obviously, not that good a way to evaluate candidate fitness, but a way nonetheless. Rings privacy alarm bells, but oh well. Someone could build a decentralized version of it which would work via a browser extension. And, actually, 3rd party hiring companies have a way better relationship with the companies hiring than with the candidates, so I very clearly can see this mechanism weilded against us. reply 0x000xca0xfe 19 hours agoparentprevWhen it happened at my last job it was definitely foreshadowing other malevolent behavior. reply calpaterson 20 hours agoprevHaha, bold thread. I can understand the frustration as probably we all know this monkey business is too common - but I suspect that an open invitation to \"name some names\" is not probably not going to be a productive and useful as you might hope :) reply dicjsnw 18 hours agoparentIf you don’t call out companies engaging in this anti-worker practice, it will continue as the norm. Norms don’t change without social pressure. reply dserban 20 hours agoprev> Is your company like this? If you have real info and not just suspicions, let’s name some names. A certain company (the name starts with \"A\") is widely known for doing this, you might guess which company I refer to by deep-diving into my comments history. It looks exactly like in this YT short: https://www.youtube.com/shorts/V5VAN6ldS9o reply iknownthing 19 hours agoprevAbout a year or so ago I interviewed with Sourcegraph for about 6 months then they ghosted me and the role I was up for disappeared. Pretty sure no one got hired for it. reply MeetingsBrowser 16 hours agoparentI saw source graph posted on the \"Who's Hiring\" thread today and looked at some of the postings. They are pretty open about their leveling and pay structure. Although the job listing says they pay \"above average\", the pay for a Software Engineering role with 5-8 years experience can pay as low as $63k reply linotype 14 hours agorootparentThat’s less than what I made in nominal terms (USD) when I graduated in 2009. reply iknownthing 6 hours agorootparentprevI wish they were open about their ghosting. reply Delphiza 7 hours agoprevThis has always been the case in all industries. The applications that you get, by volume or type, may change depending on people looking for work. It is not restricted to tech either. If you are in the \"Laser\" industry and post a job looking for a _shark wrangler_, it is an indication that you are a good company to call if one is looking for \"sharks with laser beams attached to their heads\". My wife was looking for a job earlier this year (non tech), and it was interesting to see the grind from the outside. It seems that we are at the point where job seeker AIs and job poster AIs are just going to have to fight it out. There is no way to tell if a job is real or if you are going to get ghosted. As a candidate you don't have the time to research and write cover letters. It is a numbers game and if you are going to get ignored hundreds of times, you need to send out hundreds of applications, so you have to spam job postings. Job postings get lots of spam, so it is difficult to rise to the top of the pile. Each party needs a better AI than their competitors. It used to be a better CV, or a better job posting, but those days are long-gone. reply sentrysapper 16 hours agoprevI'm not affiliated with them but ghostjobs.io is doing awesome work tracking companies that do this. For the job seekers on HN, avoid companies that engage in this behavior. reply GenerWork 19 hours agoprevI'm a product designer. The UX market is seemingly frozen right now. There's a bunch of influencers on LinkedIn who post new jobs and use this as evidence that the industry is turning the corner, but at the same time I keep seeing more and more looking for work badges, and many seniors I know who are quite good at their craft are simply unable to get interviews. I myself am looking for a new job and jobs hardly send out rejection emails anymore, which is new to me. reply Buttons840 16 hours agoprevThis thread reminds me. I once called out a Who's Hiring post on HN. I publically replied and commented that I was a good fit and had applied, but never heard anything in return. A short time later HN got more strict about \"no discussion\" in the Who's Hiring post. What a shame. reply water-data-dude 20 hours agoprevThe title made me think you were looking for folks to make up a company and pretend they’re hiring folks :( Well, if anyone wants to pretend to apply to my imaginary tech startup, we have an exciting product that combines intrusive cameras all over the customer’s house with cutting edge AI to blast a bloodcurdling scream through their smart speakers whenever they bite into a piece of fruit. reply golly_ned 20 hours agoprevMy last company, OctoAI, would leave postings up even through layoffs. They'd go unfulfilled; exceptional candidates would still join the company on occasion, but not through the front door. reply eitally 20 hours agoprevI work in cloud consulting and we definitely do not act like this. We currently maintain almost 0 bench for one of the hyperscalers and recruiting is proving to be very difficult for senior technical consultants (both infra & data domains). I have two roles listed via LinkedIn right now and I can't tell you how many low quality applications I've received. Lots of people are using the \"easy apply\" to try their luck, even if they're not remotely qualified. This is sort of the flip side of what others have described about having a post listed just in case a unicorn walks in. I don't need unicorns. I just need solid cloud consultants with a few years of client facing experience. reply lmaoguy 14 hours agoparentI’m interested reply eitally 1 hour agorootparentsend me a note. email is in profile. reply hi-v-rocknroll 14 hours agoprevThe appropriate response is to reject working for unethical corporations, unionize, and/or form your own company to keep more of the value of your effort. reply sireat 12 hours agoprevIt might be some small comfort that this \"fake hiring\" situation has always been around and is not limited to US and dev positions. Anecdotally, my wife applied to a large European cross-country multi-billion project as an architect. She had the perfect mix of government and private experience in relevant technologies or so we thought. There was no response. The position remained open for a half year more along with dozens more. Why would someone waste money advertising (even in print) on these positions, if no interviews were conducted? Apparently all that happened is that high level management hired HR firm to place advertisements and collect candidates for lower level positions that would actually do the work. Presumably this was done in good faith in that project would be moving forward. Now two years later the project has 4X ballooned in cost to 25 billion. Those local positions are still not filled. reply austin-cheney 10 hours agoprevA couple of places have reached out to me to interview for their senior full stack position in the past few weeks including Capital One. I am currently employed though and no longer willing to do corporate web work. My experience in looking for work last year suggests that corporate job portals were all ignored. I had employees I knew at Walmart and Fidelity confirm this to me and it was double confirmed by various third party recruiters who struggled to fill positions they knew actually did exist. Most of these openings were legally required in conformance with EEO laws but just weren’t real, at least to the public. reply Brian_K_White 20 hours agoprevMy other favorite is sometimes there are posts here where the company is apparently looking to hire every single position required to make a company. Well, in that case sure, I too am a multinational firm servicing the ___ industry just looking to fill a few roles: senior back end engineer, senior front end engineer, senior sales manager, senior accountant, founding product concept... that's all. reply edferda 20 hours agoprevHonest question, not trying to be confrontational, just curious every time I see these kind of posts/anecdotes. It seems to me that finding a job in tech is easier than finding a job in any other professional field (e.g. chemical engineering). I am an electrical engineer myself and it was easier to get a job that paid better doing programming than in EE. Specially for the effort you have to put in. How is it that HN complains so much about the whole process? Are people only applying to big tech companies or hot startups hoping to get the compensation they have been getting for the past n years? There must be plenty of tech jobs in non tech industries doing normal, “boring” work like dba or maintaining legacy systems. I mean, those kind of jobs still pay enough to live a normal, decent life. They might not be exciting but work is work. Although that is my take, coming from a 3rd world country and all. Or am I just delusional and the “boring” jobs(that pay less but still enough) are nonexistent? I am not from the US so I really don’t know how the market looks outside of the FAAANG/startup bubble. Heck, last time I checked even the US government needed tech folks. It feels that there are jobs out there but the jobs don’t match people’s expectation. But I could be really wrong. reply mekoka 19 hours agoparentNot trying to be confrontational either in answering your question. Just sharing an anecdote, since I have some experience working in a company that for a time, employed mostly EE as software engineers. I'll call this company Y (since the X alias is now prone to create confusion). Y is entrenched in the business of producing monitoring tools for electrical systems (power systems, controllers, rt simulation, etc). Beyond very basic drivers and software to interface with their devices, the actual useful apps to work with them were always written by partner companies that were in the software business. One day, Y found itself having to compete with a former partner (a software company) that had acquired one of Y's direct competitors (power systems, controllers, simulation, etc). Y then thought it was time they became less reliant on external software for their products and it made sense that they, too, entered the software business. The obvious next step was to reverse engineer and replicate some of the existing apps that were interfacing with their systems. Y first tried to hire some SE for the job. But faced with the challenge of paying SE salaries, it was reasoned that since Y's existing EE have the academic prerequisite to code, they can probably do the job. A few meetings later, company management and the various EE managers all agreed that code is obviously code. Network, web, desktop, you name it, they can build. They can do it all. Three years of technical debt later, they tried hiring actual SE who, upon interacting with the code, just kept leaving, for some reason. By the fourth year, those projects were scrapped and new ones started from scratch, with actual SE as project leaders and a few handpicked former-EE-turned-software-devs from the old teams. All this to say that although EE can technically write code, building software, if done right, is a lot more than about simply spewing logic with a programming language. I'm not saying that an EE can't also become a qualified software dev, but once that happens, they'll want to be paid a software dev salary. reply xtracto 17 hours agoparentprevThis rings true in my experience. I'm in the tech space, but my brother is a veterinarian. Find a job, he must comb through local newspapers, look for vet shops, ask friends/colleagues and maybe look in 3 or 4 job pages. And the pay is shit. We in tech have it easy: upload your CV to LI and Indeed and hunt the postings there. Everything is concentrated in one place. reply MeetingsBrowser 16 hours agorootparent> We in tech have it easy: upload your CV to LI and Indeed and hunt the postings there. Everything is concentrated in one place. This does not sound like someone who has been job hunting for software roles in the last few years. I applied to ~60 positions that I think I was a strong fit for through linkedin and indeed and only heard back from 3. Only one of those actually followed through to an interview. I also searched company careers pages manually and applied to 5 companies directly, which resulted in 4 interviews and 3 offers. 5 years of experience and all three offers were for ~$150k fwiw. reply pabs3 17 hours agoprevHmm, \"they keep job reqs open for appearances\" sounds like fraud? reply aryehof 12 hours agoprevPretending to be hiring has been going on for years. “We are hiring” == “we are always open to consider a special James Bond special one-in-a-thousand special developer” reply INTPenis 20 hours agoprevFunny you should say that because I've been suspecting the same thing here in Sweden. reply myapp 10 hours agoprevWouldn't leaving job reqs open be an indicator of not being able to attract talent? reply 93po 2 hours agoprevThroughout 2022, before all the crap job market now, my employer 100% had a couple job postings (it was small so there was only like 4 total) that they had zero desire to fill, even if a great candidate came along. I think mostly in a \"nice to have contacts in case we do need someone again\" or they find someone who's really qualified and really really inexpensive. For product management roles, if it matters. reply lmaoguy 14 hours agoprevIntel reply Madmallard 20 hours agoprevMy ultra qualified friend who is a lead at a fortune 500 company has only had 2 leads in 11 despite being probably in the top 3 best available candidates for all 11 applications. So yeah, I don't think many tech companies are actually hiring. reply diego_moita 20 hours agoprevWe, job seekers, should react against it. We should post their names here. There are a lot of posts like that on HN's Who's Hiring. One of the most obvious examples is MixRank [0]. On the last jobs thread, they reposted [1] the same job advertisement they've been bot-posting for almost 2 years. It is identical. And HN doesn't even allow us to flag/report this abuse. Other companies that do the same: Cargado, Aha!,... HN's \"Who's Hiring\" is turning into a trap. [0] https://news.ycombinator.com/item?id=41129813#41131139 [1] https://news.ycombinator.com/item?id=41709301 reply cdfuller 13 hours agoparentIn the MixRank posting, did you see this section? It looks like they added it after receiving similar criticism. > We're hiring continuously for the positions below— they aren't singular positions that will close once filled. Our philosophy on hiring is that the candidate is more important than the position. For each new member of the team, we design a custom role and responsibilities that are specialized to their interests. Other companies will come up with a long list of specific requirements for a position with the expectation that you'll exactly replace someone from the team, or that you'll be the perfect tetris piece that satisfies the job requirements decided by a committee. MixRank is more pragmatic: we'll first get excited about having a unique individual on the team, then we'll figure out the best way to accommodate their specific talents. reply _DeadFred_ 19 hours agoprev [–] This entire thread triggers the \"I hate this' meme in me so hard. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [],
    "commentSummary": [
      "Many companies maintain open job postings during hiring freezes to project financial health to investors, despite not actively hiring.",
      "This practice frustrates job seekers, as firms may ignore recommended CVs or conduct interviews without the intention to hire, leading to wasted time and misleading economic data.",
      "Both startups and large firms engage in this behavior, using job postings to signal growth or maintain a candidate pool, negatively impacting job seekers' mental health and complicating the hiring process."
    ],
    "points": 289,
    "commentCount": 99,
    "retryCount": 0,
    "time": 1727819690
  },
  {
    "id": 41721668,
    "title": "The Fastest Mutexes",
    "originLink": "https://justine.lol/mutex/",
    "originBody": "Oct 2nd, 2024 @ justine's web page The Fastest Mutexes Cosmopolitan Honeybadger Cosmopolitan Libc is well-known for its polyglot fat binary hack that lets your executables run on six OSes for AMD64 / ARM64. What may surprise you is that it could also be the best C library for your production workloads too. To demonstrate this point, let's compare Cosmo's mutex library with other platforms. We'll do this by writing a simple test that spawns 30 threads which increment the same integer 100,000 times. This tests how well a mutex implementation performs in the heavily contended use case. In essence, that means the following (see the segment at the bottom of the page for the full source code). int g_chores; pthread_mutex_t g_locker = PTHREAD_MUTEX_INITIALIZER; void *worker(void *arg) { for (int i = 0; i < ITERATIONS; ++i) { pthread_mutex_lock(&g_locker); ++g_chores; pthread_mutex_unlock(&g_locker); } return 0; } Now let's start with the exciting part, which are my benchmark results. Benchmarks Times will be measured in microseconds. Wall time is how long the test program takes to run. That includes the overhead of spawning and joining threads. User time is how much CPU time was spent in userspace, and system time is how much CPU time was spent in the kernel. System and user time can exceed the actual wall time because multiple threads are running in parallel. The first results I'll show are for Windows because Mark Waterman did an excellent mutex shootout three months ago, where he said, \"in the highly contended scenario, Windows wins the day with its SRWLOCK\". Contention is where mutex implementations show their inequality. Mark was so impressed by Microsoft's SRWLOCK that he went on to recommend Linux and FreeBSD users consider targeting Windows if mutex contention is an issue. Windows Mutex Implementations 24-core Threadripper 29070WX wall time (µs) user time (µs) system time (µs) implementation 148,940 328,125 62,500 Cosmopolitan pthread_mutex_t 410,416 5,515,625 1,640,625 Microsoft SRWLOCK 949,187 7,937,500 5,078,125 Microsoft CRITICAL_SECTION 991,750 12,156,250 4,031,250 MSVC 2022 std::mutex 1,165,435 24,515,000 15,000 spin lock 9,780,803 1,937,000 6,156,000 Cygwin pthread_mutex_t As we can see, Cosmopolitan Libc mutexes go 2.75x faster than Microsoft's SRWLOCK (which was previously believed to be the best of the best) while consuming 18x fewer CPU resources. Cosmopolitan mutexes were also 65x faster than Cygwin, which like Cosmopolitan provides a POSIX implementation on Windows. Cygwin's mutexes are so bad that they would have been better off for this use case just using a spin lock. Now onto Linux, the lord of all operating systems. Linux Mutex Implementations 96-core Threadripper Pro 7995WX wall time (µs) user time (µs) system time (µs) implementation 36,905 44,511 23,492 Cosmopolitan pthread_mutex_t 101,353 150,706 2,724,851 glibc pthread_mutex_t 202,423 4,694,749 2,000 spin lock 411,013 2,167,898 9,926,850 Musl libc pthread_mutex_t Here we see Cosmopolitan mutexes are: 3x faster than glibc 11x faster than musl libc 42x less CPU time than glibc 178x less CPU time than musl libc Here's how things actually work in practice. Imagine you have a workload where all your threads need to do a serialized operation. With Cosmo, if you're looking at htop, then it's going to appear like only one core is active, whereas glibc and musl libc will fill up your entire CPU meter. That's bad news if you're running a lot of jobs on the same server. If just one of your servers has a mutex bloodbath, then all your resources are gone, unless you're using cosmo. It's still a new C library and it's a little rough around the edges. But it's getting so good, so fast, that I'm starting to view not using it in production as an abandonment of professional responsibility. The C library is so deeply embedded in the software supply chain, and so depended upon, that you really don't want it to be a planet killer. If essential unquestioned tools are this wasteful then it's no wonder Amazon Cloud makes such a fortune. Last but not least, we have MacOS. MacOS Mutex Implementations M2 Ultra wall time (µs) user time (µs) system time (µs) implementation 52,263 43,202 911,009 Apple Libc 54,700 63,055 1,003,674 Cosmopolitan pthread_mutex_t On MacOS with an M2 ARM64 microprocessor, Apple's Libc slightly outperforms Cosmopolitan's mutexes. For reasons I do not yet fully understand, Cosmopolitan's normal mutex implementation doesn't work well on this platform. It's possibly because the M2 and XNU are in league. So on MacOS ARM, Cosmopolitan uses a simpler algorithm based on Ulrich Drepper's \"Futexes Are Tricky\" paper that basically just farms out all the heavy lifting to XNU's ulock system calls. That's why performance is nearly identical to what Apple does. So in summary, these benchmark results indicate that Cosmopolitan mutexes, in the best case, will be overwhelmingly better than alternatives at the contended + tiny critical section use case, and in the worst case, Cosmopolitan will be roughly as good. How I Did It The reason why Cosmopolitan Mutexes are so good is because I used a library called nsync. It only has 371 stars on GitHub, but it was written by a distinguished engineer at Google named Mike Burrows. If you don't know who he is, he's the guy who coded Google's fiercest competitor, which was Altavista. If you're not old enough to remember Altavista, it was the first search engine that was good, and it ran on a single computer. I've had a lot of fun integrating nsync into Cosmopolitan. I've even had the opportunity to make upstream contributions. For example, I found and fixed a bug in his mutex unlock function that had gone undiscovered for years. I also managed to make contended nsync mutexes go 30% faster than nsync upstream on AARCH64, by porting it to use C11 atomics. I wrote new system integration for things like futexes that enable it do portability at runtime. Lastly I made it work seamlessly with POSIX thread cancelations. So how does nsync do it? What are the tricks that it uses? Here's some of my takes and analysis: nsync uses an optimistic CAS (compare and swap) immediately, so that locking happens quickly when there's no contention. When a lock can't be acquired, nsync adds the calling thread to a doubly linked list of waiters. Each waiter gets its own semaphore on a separate independent cacheline. This serves an important purpose. Once a thread enters the wait state, it's no longer touching the main lock. To understand why that's important, read Ulrich Drepper's paper \"What Every Programmer Should Know About Memory\". He goes into great depth on the coherency protocols used by modern microprocessors, where cores basically talk to each other under the hood about which cachelines they're using. When multiple cores touch the same ones, that creates a lot of communication overhead within the processor. nsync enlists the help of the operating system by using futexes. This is a great abstraction invented by Linux some years ago, that quickly found its way into other OSes. On MacOS, futexes are called ulock. On Windows, futexes are called WaitOnAddress(). The only OS Cosmo supports that doesn't have futexes is NetBSD, which implements POSIX semaphores in kernelspace, and each semaphore sadly requires creating a new file descriptor. But the important thing about futexes and semaphores is they allow the OS to put a thread to sleep. That's what lets nsync avoid consuming CPU time when there's nothing to do. nsync avoids starvation with this concept of a \"long wait\". If a waiter gets woken 30 times and fails to acquire the lock internally every time, then nsync adds a bit to the lock that prevents threads that haven't waited yet from acquiring. This means that initial CAS at the beginning will fail for everyone else until the queue has had some time to clear. nsync makes the use case we benchmarked go fast (contended lock with a small critical section) using this concept of a \"designated waker\". This bit on the main lock is set when a thread is awake and trying to acquire the lock. In nsync, the unlock function is what's responsible for waking the next thread in line waiting for the lock. Having this bit allows the unlocking thread to know it needn't bother waking a second locker since one is already awake. To learn more of nsync's secrets, you can read the source code here: cosmopolitan/third_party/nsync/mu.c. See also cosmopolitan/libc/intrin/pthread_mutex_lock.c. Online Proof If you want to see a live demo of a piece of software built with Cosmo mutexes, then do your worst DDOS to the http://ipv4.games/ web server. Now this is truly a game for hackers, competing to dominate the Internet. You're already playing this game because your IP was just claimed for jart. The service runs on a GCE VM with 2 cores and so far it's managed to survive being DDOS'd by botnets as large as 49,131,669 IPs. A lot of that is thanks to nsync which allowed me to move SQL queries to background threads which send messages to each other. There are still improvements to be made, but overall it's held up well. You can even monitor its /statusz health metrics. Source Code #define ITERATIONS 100000 #define THREADS 30 int g_chores; pthread_mutex_t g_locker = PTHREAD_MUTEX_INITIALIZER; void *worker(void *arg) { for (int i = 0; i < ITERATIONS; ++i) { pthread_mutex_lock(&g_locker); ++g_chores; pthread_mutex_unlock(&g_locker); } return 0; } struct timeval tub(struct timeval a, struct timeval b) { a.tv_sec -= b.tv_sec; if (a.tv_usec < b.tv_usec) { a.tv_usec += 1000000; a.tv_sec--; } a.tv_usec -= b.tv_usec; return a; } long tomicros(struct timeval x) { return x.tv_sec * 1000000ul + x.tv_usec; } int main() { struct timeval start; gettimeofday(&start, 0); pthread_t th[THREADS]; for (int i = 0; i < THREADS; ++i) pthread_create(&th[i], 0, worker, 0); for (int i = 0; i < THREADS; ++i) pthread_join(th[i], 0); assert(g_chores == THREADS * ITERATIONS); struct rusage ru; struct timeval end; gettimeofday(&end, 0); getrusage(RUSAGE_SELF, &ru); printf(\"%16ld us real\" \"%16ld us user\" \"%16ld us sys\", tomicros(tub(end, start)), tomicros(ru.ru_utime), tomicros(ru.ru_stime)); } The reason we care about the contended case, because that's where mutex implementations show their inequality. Uncontended mutexes usually perform the same across implementations, and even then you might be better off with a spin lock, which only takes a few lines: void spin_lock(atomic_int *lock) { if (atomic_exchange_explicit(lock, 1, memory_order_acquire)) { for (;;) { for (;;) if (!atomic_load_explicit(lock, memory_order_relaxed)) break; if (!atomic_exchange_explicit(lock, 1, memory_order_acquire)) break; } } } void spin_unlock(atomic_int *lock) { atomic_store_explicit(lock, 0, memory_order_release); } Please note that spin locks should really only be used when you have no other choice. They're useful in kernels, where extreme low level constraints disallow anything fancy. Spin locks are also a useful implementation detail in nsync locks. But overall they're bad. I imagine many developers believe they're good. If so, it's probably because they've only benchmarked wall time. With locks, it's important to take CPU time into consideration too. That's why we use getrusage(). Funding Funding for The Fastest Mutex was crowdsourced from Justine Tunney's GitHub sponsors and Patreon subscribers, the backing of Mozilla's MIECO program, and the generous contributions of our developer community on Discord. Your support is what makes projects like Cosmopolitan possible. Thank you! twitter.com/justinetunney github.com/jart Written by Justine Tunney jtunney@gmail.com",
    "commentLink": "https://news.ycombinator.com/item?id=41721668",
    "commentBody": "The Fastest Mutexes (justine.lol)276 points by jart 3 hours agohidepastfavorite108 comments pizlonator 2 hours agoAlways cool to see new mutex implementations and shootouts between them, but I don’t like how this one is benchmarked. Looks like a microbenchmark. Most of us who ship fast locks use very large multithreaded programs as our primary way of testing performance. The things that make a mutex fast or slow seem to be different for complex workloads with varied critical section length, varied numbers of threads contending, and varying levels of contention. (Source: I wrote the fast locks that WebKit uses, I’m the person who invented the ParkingLot abstraction for lock impls (now also used in Rust and Unreal Engine), and I previously did research on fast locks for Java and have a paper about that.) reply PaulDavisThe1st 39 minutes agoparentTo add to this, as the original/lead author of a desktop app that frequently runs with many tens of threads, I'd like to see numbers on performance in non-heavily contended cases. As a real-time (audio) programmer, I am more concerned with (for example) the cost to take the mutex even when it is not already locked (which is the overwhelming situation in our app). Likewise, I want to know the cost of a try-lock operation that will fail, not what happens when N threads are contending. Of course, with Cosmopolitan being open source and all, I could do these measurements myself, but still ... reply pizlonator 18 minutes agorootparentTotally! Pro tip: if you really do know that contention is unlikely, and uncontended acquisition is super important, then it's theoretically impossible to do better than a spinlock. Reason: locks that have the ability to put the thread to sleep on a queue must do compare-and-swap (or at least an atomic RMW) on `unlock`. But spinlocks can get away with just doing a store-release (or just a store with a compiler fence on X86) to `unlock`. Spinlocks also have excellent throughput under most contention scenarios, though at the cost of power and being unkind to other apps on the system. If you want your spinlock to be hella fast on contention just make sure you `sched_yield` before each retry (or `SwitchToThread` on Windows, and on Darwin you can do a bit better with `thread_switch(MACH_PORT_NULL, SWITCH_OPTION_DEPRESS, 1)`). reply PaulDavisThe1st 6 minutes agorootparentWe use spinlocks where appropriate. In the 90s I recall that the general rule of thumb was if the lock is held foruses an optimistic CAS (compare and swap) immediately, so that locking happens quickly when there's no contention reply ngoldbaum 7 minutes agoparentprevThis style of mutex will also power PyMutex in python 3.13. I have real-world benchmarks showing how much faster PyMutex is than the old PyThread_type_lock that was available before 3.13. reply uvdn7 29 minutes agoparentprevI was thinking the same. There are many mutexes out there, some are better at certain workloads than the rest. DistributedMutex and SharedMutex come to mind (https://github.com/facebook/folly/blob/main/folly/synchroniz..., https://github.com/facebook/folly/blob/main/folly/SharedMute...) Just like hashmaps, it's rarely the case that a single hashmap is better under _all_ possible workloads. reply pizlonator 24 minutes agorootparentYeah. I should say, though, that if you're on Windows then I have yet to find a real workload where SRWLock isn't the fastest (provided you're fine with no recursion and with a lock that is word-sized). That lock has made some kind of deal with the devil AFAICT. reply kccqzy 3 hours agoprev> The reason why Cosmopolitan Mutexes are so good is because I used a library called nsync. It only has 371 stars on GitHub, but it was written by a distinguished engineer at Google called Mike Burrows. Indeed this is the first time I've heard of nsync, but Mike Burrows also wrote Google's production mutex implementation at https://github.com/abseil/abseil-cpp/blob/master/absl/synchr... I'm curious why this mutex implementation is absent from the author's benchmarks. By the way if the author farms out to __ulock on macOS, this could be more simply achieved by just using the wait(), notify_one() member functions in the libc++'s atomic library. A while ago there was also a giant thread related to improving Rust's mutex implementation at https://github.com/rust-lang/rust/issues/93740#issuecomment-.... What's interesting is that there's a detailed discussion of the inner workings of almost every popular mutex implementation. reply BryantD 44 minutes agoparentMike was a legend by the time I got to AV. The myth was that any time the search engine needed to be faster, he came in and rewrote a few core functions and went back to whatever else he was doing. Might be true, I just can't verify it personally. Extremely smart engineer who cares about efficiency. We did not, however, run on one server for any length of time. reply the-rc 2 hours agoparentprevBurrows is also responsible for the Burrows Wheeler Transform, Bigtable, Dapper and Chubby, among others. reply tialaramex 2 hours agoparentprevAlthough it does get there eventually, that Rust thread is about Mara's work, which is why it eventually mentions her January 2023 book. The current Rust mutex implementation (which that thread does talk about later) landed earlier this year and although if you're on Linux it's not (much?) different, on Windows and Mac I believe it's new work. That said, Mara's descriptions of the guts of other people's implementations is still interesting, just make sure to check if they're out-dated for your situation. reply SkiFire13 54 minutes agorootparent> although if you're on Linux it's not (much?) different AFAIK one reason to switch was that mutexes on Linux and MacOS were not guaranteed to be moveable, so every rust's Mutex had to box the underlying os mutex and was not const-constructible. So this makes a considerable change. reply tialaramex 48 minutes agorootparentThat's the reason for Mara's Mutex. I know, it doesn't seem like five minutes, but Mara's is now the previous version of the Rust Mutex implementation. std::sync::Mutex::new became const in 1.63, which was over two years ago. reply loeg 1 hour agoparentprev> I'm curious why [Abseil's] mutex implementation is absent from the author's benchmarks. Possibly because it's C++ (as opposed to C)? I am speculating. reply Uehreka 1 hour agoprevSo on the one hand, all this Cosmo/ape/redbean stuff sounds incredible, and the comments on these articles are usually pretty positive and don’t generally debunk the concepts. But on the other hand, I never hear mention of anyone else using these things (I get that not everyone shares what they’re doing in a big way, but after so many years I’d expect to have seen a couple project writeups talk about them). Every mention of Cosmo/ape/redbean I’ve ever seen is from Justine’s site. So I’ve gotta ask: Is there a catch? Are these tools doing something evil to achieve what they’re achieving? Is the whole thing a tom7-esque joke/troll that I don’t get because I’m not as deep into compilers/runtimes? Or are these really just ingenious tools that haven’t caught on yet? reply amiga386 45 minutes agoparentAPE works through cunning trickery that might get patched out any day now (and in OpenBSD, it has been). Most people producing cross-platform software don't want a single executable that runs on every platform, they want a single codebase that works correctly on each platform they support. With that in mind that respect, languages like go letting you cross compile for all your targets (provided you avoid CGO) is delightful... but the 3-ways-executable magic trick of APE, while really clever, doesn't inspire confidence it'll work forever, and for the most part it doesn't gain you anything. Each platform has their own packaging/signing requirements. You might as well compile a different target for each platform. reply 0x1ceb00da 35 minutes agorootparentWasn't elf format modified by upstream to accomodate for cosmo? That makes it kinda official. Still hard to see a use case for it. If you want everyone to be able to run your program, just write a web app, a win32 program, or a java applet. 20 years old java applets still run on modern JVMs. reply hyperion2010 16 minutes agorootparentprev> Most people We'll I'm used to not being most people, but I'd much rather be able to produce a single identical binary for my users that works everywhere than the platform specific nonsense I have to go through right now. Having to maintain different special build processes for different platforms is a stupid waste of time. Frankly this is how it always should have worked except for the monopolistic behavior of various platforms in the past. reply fragmede 31 minutes agorootparentprev> Most people producing cross-platform software don't want a single executable that runs on every platform They don't? Having one file to download instead of a maze of \"okay so what do you have\" is way easier than the current mess. It would be very nice not to have to ask users what platform they're on, they just click a link and get the thing. reply jkachmar 23 minutes agoparentprevreposting my comment from another time this discussion came up: \"Cosmopolitan has basically always felt like the interesting sort of technical loophole that makes for a fun blog post which is almost guaranteed to make it to the front page of HN (or similar) purely based in ingenuity & dedication to the bit. as a piece of foundational technology, in the way that `libc` necessarily is, it seems primarily useful for fun toys and small personal projects. with that context, it always feels a little strange to see it presented as a serious alternative to something like `glibc`, `musl`, or `msvcrt`; it’s a very cute hack, but if i were to find it in something i seriously depend on i think i’d be a little taken aback.\" reply almostgotcaught 52 minutes agoparentprev> So I’ve gotta ask: Is there a catch? Are these tools doing something evil to achieve what they’re achieving? it's not that complicated; they're fat binaries (plus i guess a lot of papering over the differences between the platforms) that exploit a quirk of tshell: > One day, while studying old code, I found out that it's possible to encode Windows Portable Executable files as a UNIX Sixth Edition shell script, due to the fact that the Thompson Shell didn't use a shebang line. (https://justine.lol/ape.html) so the answer is simple: i can't think of anyone that wants to ship fat binaries. reply fragmede 29 minutes agorootparentAnyone focused on customer experience wants to ship a binary that just works, without customers having to know what a fat binary even is. reply jonathrg 2 hours agoprev> It's still a new C library and it's a little rough around the edges. But it's getting so good, so fast, that I'm starting to view not using it in production as an abandonment of professional responsibility. What an odd statement. I appreciate the Cosmopolitan project, but these exaggerated claims of superiority are usually a pretty bad red flag. reply tredre3 1 hour agoparentI'd like to point out that Justine's claims are usually correct. It's just her shtick (or personality?) to use hyperbole and ego-stroking wording. I can see why some might see it as abrasive (it has caused drama before, namely in llamacpp). reply jancsika 1 hour agorootparentThis case isn't abrasive, but it's certainly incoherent. Name a single case where professional responsibility would require C code advertised as \"rough around the edges\" to be used anywhere near production. (The weasel words \"starting to\" do not help the logic of that sentence.) I can definitely understand how OP could view this as a red flag. The author should amend it. reply another-acct 50 minutes agorootparentprevI also meant to comment about the grandstanding in her post. Technical achievement aside, when a person invents something new, the burden is on them to prove that the new thing is a suitable replacement of / improvement over the existing stuff. \"I'm starting to view /not/ using [cosmo] in production as an abandonment of professional responsibility\" is emotional manipulation -- it's guilt-tripping. Professional responsibility is the exact opposite of what she suggests: it's not jumping on the newest bandwagon. \"a little rough around the edges\" is precisely what production environments don't want; predictability/stability is frequently more important than peak performance / microbenchmarks. Furthermore, > The C library is so deeply embedded in the software supply chain, and so depended upon, that you really don't want it to be a planet killer. This is just underhanded. She implicitly called glibc and musl \"planet killers\". First, technically speaking, it's just not true; and even if the implied statement were remotely true (i.e., if those mutex implementations were in fact responsible for a significant amount of cycles in actual workloads), the emotional load / side remark (\"planet killer\") is unjustified. Second, she must know very well that whenever efficiency of computation is improved, we don't use that for running the same workloads as before at lower cost / smaller environmental footprint. Instead, we keep all CPUs pegged all the time, and efficiency improvements only ever translate to larger profit. A faster mutex too translates to more $$$ pocketed, and not to less energy consumed. I find her tone of voice repulsive. reply fefe23 33 minutes agoparentprevHave you considered that you may have a different kind of humor than Justine? Why would you even post this here? Who do you think this is helping? reply another-acct 7 minutes agorootparentI think it's fair to comment not only on the subject, but on the writing itself, too. And it might help Justine improve her writing (and reach a larger audience -- after all, blog posts intend to reach some audience, don't they?). Of course you can always say, \"if you find yourself alienated, it's your loss\". reply jonathrg 22 minutes agorootparentprevIt doesn't clearly come across as a joke. reply pmarreck 34 minutes agoparentprevI feel that there’s a certain amount of hubris that comes along with spending long periods of time solo-coding on a computer, and perhaps unwittingly starved of social contact. Without any checks on you or your work’s importance (normally provided by your bog-standard “job”), your achievements take on a grandeur that they might not have broadly earned, as impressive as they might be. An example is APE (which I otherwise feel is a very impressive hack). One criticism might be “oh, so I not only get to be insecure on one platform, I can be insecure on many all at once?” The longer you spend in technology, the more you realize that there are extremely few win-wins and a very many win-somes, lose-somes (tradeoffs) reply almostgotcaught 1 hour agoparentprevIt's especially a red-flag since an enormous number of projects (almost all of them?) will never tolerate shipping fat binaries (ie what cosmopolitan C is in reality). reply ataylor284_ 19 minutes agorootparentThe core of this a library called nsync. It appears most of the improvements by Justine are upstreamed into nsync itself which doesn't have any of the baggage of cosmopolitan. Whatever your opinion of the project or author, they've made good effort to not lock you in. reply another-acct 43 minutes agorootparentprevAgreed; this is what I've always (silently) thought of those fat binaries. Absolute stroke of genius, no doubt, and also a total abomination (IMO) from a sustainability perspective. reply amiga386 1 hour agoprevIf it's so good, why haven't all C libraries adopted the same tricks? My betting is that its tricks are only always-faster for certain architectures, or certain CPU models, or certain types of workload / access patterns... and a proper benchmarking of varied workloads on all supported hardware would not show the same benefits. Alternatively, maybe the semantics of the pthread API (that cosmopolitan is meant to be implementing) are somehow subtly different and this implementation isn't strictly compliant to the spec? I can't imagine it's that the various libc authors aren't keeping up in state-of-the-art research on OS primitives... reply jitl 1 hour agoparent> I can't imagine it's that the various libc authors aren't keeping up in state-of-the-art research on OS primitives... is this sarcasm? (I don't know any libc maintainers, but as a maintainer of a few thingies myself, I do not try to implement state-of-the-art research, I try to keep my thingies stable and ensure the performance is acceptable; implementing research is out of my budget for \"maintenance\") reply amiga386 55 minutes agorootparentBut if you maintain a few thingies, you'd probably know about rival thingies that do a similar thing, right? If the rival thingies got a speed boost recently, and they were open source, you'd want to have a look at how they did it and maybe get a similar speed boost for yourself. reply tialaramex 30 minutes agorootparentThis is nowhere near as common as you seem to think, and mostly only happens for the narrow cases where somebody is obsessed with a particular problem so that they'd actually want to read other people's solutions. Most of the implementers do not have that sort of relationship to a problem they solved in the past. If in December you make a general purpose stable sort that's 25% faster than his, Orson Peters is probably going to read your code and try to apply ideas from it. But sorting is the thing Peters really cares about, the people who wrote the stable sort in say Microsoft's STL (their C++ standard library implementation) even if they still work there won't care enough to go back and change that unless told to do so. reply jitl 24 minutes agorootparentprevIt depends on the calculus about (time) budget and stability. Maybe I consider performance already acceptable, and don't have time budget to investigate beyond that. Maybe I look at \"nsync\", see its mutex (may) change the fairness semantics, and then decide not to adopt it because this may break my callers; or its enough that it may change the fairness semantics, and I don't have the budget to test nsync or a new implementation based on the nsync algorithm to determine if the semantics differ. reply yshui 54 minutes agoprevI had the pleasure of reverse-engineering win32 SRWLOCKs, and based on the author description of nsync it is very close to how SRWLOCK works internally. Kind of surprised how much faster nsync is compared to SRWLOCK. reply 1st1 1 hour agoprev> I've even had the opportunity to make upstream contributions. For example, I found and fixed a bug in his mutex unlock function that had gone undiscovered for years. I see a stream of improvements to the vendored in nsync inside the cosmopolitan project [1]. Are you planning on upstreaming most of those too? A separate question -- is using the upstream nsync as safe as using your fork? [1] https://github.com/jart/cosmopolitan/commits/master/third_pa... reply jart 28 minutes agoparentIf Burrows wants my C11 atomics refactoring then he shall have it. Beyond that, my changes mostly concern libc integration, systems integration, and portability. Our projects have different goals in those areas, so I'm not sure he needs them. reply tombert 3 hours agoprevI have to admit that I have an extremely visceral, negative feeling whenever I see a mutex, simply because I've had to debug enough code written by engineers who don't really know how to use them, so a large part of previous jobs has been to remove locks from code and replace with some kind of queue or messaging abstraction [1]. It's only recently that I've been actively looking into different locking algorithms, just because I've been diving in head-first to a lot of pure concurrency and distributed computing theory, a lot of which is about figuring out clever ways of doing mutexes with different tradeoffs. I've gotten a lot better with them now, and while I still personally will gravitate towards messaging-based concurrency over locks, I do feel the need to start playing with some of the more efficient locking tools in C, like nsync (mentioned in this article). [1] Before you give me shit over this, generally the replacement code runs at roughly the same speed, and I at least personally think that it's easier to reason about. reply another-acct 37 minutes agoparent> remove locks from code and replace with some kind of queue or messaging abstraction Shared-nothing message passing reflects the underlying (modern) computer architecture more closely, so I'd call the above a good move. Shared memory / symmetric multiprocessing is an abstraction that leaks like a sieve; it no longer reflects how modern computers are built (multiple levels of CPU caches, cores, sockets, NUMA, etc). reply tombert 25 minutes agorootparentThat's good to hear! I am pretty removed from underlying hardware now, so it makes me happy to hear that better way of doing things is catching on even in low-level land. reply jart 2 hours agoparentprevWhat are some examples of people using mutexes wrong? I know one gotcha is you need to maintain a consistent hierarchy. Usually the easiest way to not get snagged by that, is to have critical sections be small and pure. Java's whole MO of letting people add a synchronized keyword to an entire method was probably not the greatest idea. reply foobiekr 9 minutes agorootparentI've always disliked that lock cyclic dependencies is discussed as a hierarchy when what it really comes down to is a linear order of locks. The problem with lock _hierarchies_ as a concept is that a lock really should represent serialization of access to a particular pool of data, and should make no assumptions that it being held implies some other lock's domain is also held. The code that results when people do not maintain this kind of rigor is quite terrible, but hierarchies tend to steer people into thinking that way because they imply recursively taking locks. Stated differently: locks should be taken and released in a fixed order - so locks are ranked - but there should not be a model where all lower-ranked locks must be held for a given lock to be taken. The lock protects its domain and the ordering of take and release is to prevent deadlock, but there's no requirement for completeness. reply cogman10 2 hours agorootparentprevWhen, how, and why. The biggest part of mutexes and how to properly use them is thinking of the consistency of the data that you are working with. Here's a really common bug (psuedocode) if (lock {data.size()} > 0) { value = lock { data.pop() } lock { foo.add(value) } } The issue here is size can change, pop can change, and foo can change in unexpected ways between each of the acquired locks. The right way to write this code is lock { if (data.size() > 0) { value = data.pop() foo.add(value) } } That ensures the data is all in a consistent state while you are mutating it. Now, what does make this tricky is someone well-meaning might have decided to push the lock down a method. Imagine, for example, you have a `Foo` where all methods operate within a mutex. This code is also (likely) incorrect. value = foo.bar() if (value.bat()) { foo.baz(value) } The problem here is exactly the same problem as above. Between `foo.bar()` and `foo.baz()` the state of foo may have changed such that running `foo.baz(value)` is now a mistake. That's why the right thing to do is likely to have a `foo.barBaz()` method that encapsulates the `if` logic to avoid inconsistency (or to add another mutex). In java, the most common manifestation (that I see) of this looks like this var map = new ConcurrentHashMap(); if (map.get(foo) == null) map.put(foo, new Value()); Because now, you have a situation where the value of `foo` in the map could be 2 or more values depending on who gets it. So, if someone is mutating `Value` concurrently you have a weird hard to track down data race. The solution to this problem in java is map.computeIfAbsent(foo, (unused)->new Value()); reply hinkley 1 hour agorootparentComposing locks is where Java usually blows up. And computeIfAbsent can end up holding the lock for too long if the function is slow. reply foobazgt 36 minutes agorootparentComposing locks isn't a Java problem - it's a fundamental abstraction problem with locks. This is one of the reasons why you usually reach for higher level abstractions than mutexes. > And computeIfAbsent can end up holding the lock for too long if the function is slow. How is this different from any other lock-holding code written anywhere? reply foobazgt 1 hour agorootparentprevJava's take on monitors was definitely not great, and people were emulating mutexes with them even in the language's earliest days. Still there are a lot of things that can go wrong with mutexes: forgetting to unlock in the case of exceptions, priority inversion, recursive locking, deadlock, needlessly high contention, etc. Java has had an excellent concurrency runtime with abstractions that are typically a better fit than a bare mutex for over 20 years now (c.f. Doug Lea). Synchronized still exists, because of Java's excellent backwards compatibility. reply tombert 1 hour agorootparentprevPersonally I've had issues with performance because of people using `synchronized` too liberally, where they end up locking a lot more code than necessary. I've also had issues with fairly typical circular-dependencies, causing deadlock, or at least pauses that aren't strictly necessary. Deadlock doesn't happen nearly as often as textbooks have led me to believe, but it can happen with sloppily written code. In regards to Java, at this point I almost never use the `synchronized` keyword anymore and instead (if I can't easily map to some kind of queuing abstraction) use the ReentrantLock object simply because of the ability to have lock acquisition time out, and also letting you opt-in to fairness if you'd like. It's not as pretty but it's more flexible and as far as I'm aware it doesn't affect performance much. For the most part, though, in Java, you can get away without (explicit) locks by simply abusing the built-in data structures. I know they're using their own synchronization techniques behind the scenes, but I trust those to be correct more than some ad-hoc stuff I'd write as an engineer. reply aidenn0 3 hours agoparentprevI feel the similarly about C\"s \"volatile\" (when used in multithreaded code rather than device drivers). I've seen people scatter volatile around randomly until the problem goes away. Given that volatile significantly disturbs the timing of a program, any timing sensitive bugs can be masked by adding it around randomly. reply cogman10 3 hours agorootparentThere seems to be a lot of voodoo beliefs around concurrent programming that lead to really bad things. One of the best books I've read on it is Java concurrency in practice [1]. It does an excellent job of dispelling these occultic beliefs and letting the reader know exactly when and how concurrency should be implemented. It is applicable to more languages than just java, especially since many have adopted large parts of the java memory model. The worst things I usually find when reviewing concurrent code is people either not using locks when they should, using locks when they shouldn't, and having inconsistent data guards. I've seen people throw in random locks to guard local non-shared state which is just crazy town but \"Multiple threads are running this code, so I'm adding a lock\". I certainly prefer message passing over shared state. However, it's a little baffling to me why it's so hard for devs to grasp how to properly maintain shared state. Instead of just learning the basic rules, it gets couched in \"It's just too hard to understand so keep adding things until it works\". [1] https://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz... reply LegionMammal978 2 hours agorootparent> However, it's a little baffling to me why it's so hard for devs to grasp how to properly maintain shared state. Instead of just learning the basic rules, it gets couched in \"It's just too hard to understand so keep adding things until it works\". Probably because most people aren't aware that there are basic rules to be learned. I'd imagine the typical experience is, you're very familiar with single-threaded code, and now you're trying to let other threads work with your data. You have heard that there are many pitfalls, and that there are special-purpose tools like mutexes to avoid those, but you look at the examples and find them mostly baffling. \"Why do they perform these incantations for this data but not that data, or in this place but not that place?\" So you come up with some weird mental model and move on with your life, never aware that there are underlying principles for maintaining shared state. Personally, I didn't understand mutexes very well at all, until I started looking into what the atomic memory orderings from C++ et al. were supposed to mean. reply Maxatar 2 hours agorootparentNot too sure what the basic rules are and I'm not able to find any list of such rules. For me the biggest challenge when sharing state is that the only benefit I can see for parallelism is performance, so if I'm not gaining performance there is no reason to use parallelism. If I use coarse-grained mutexes then I end up with straight forward to reason about code but I lose the performance benefit and in fact can end up with slower than single threaded code. If I use very fine grained mutexes then I end up with faster code that has very hard to find bugs that happen on very rare occasion. And then on top of that even if you do write correct fine grained locking, you can still end up with slow code due to cache behavior such as false sharing and cache coherence. So ultimately I disagree that writing parallel code is simple unless you're willing to give up performance in which case you may as well just stick to single threaded code or use parallelism among independent data. Writing correct parallel software that shares state and actually delivers substantial performance benefits is incredibly difficult, and I am skeptical that there is a set of simple rules that one can simply read about. reply tialaramex 2 hours agorootparent> Not too sure what the basic rules are and I'm not able to find any list of such rules. The actual rules are completely terrifying because they involve the physics of microprocessors. If you've watched Grace Hopper's lectures where she gives out physical nanoseconds (pieces of wire that are the same length as the distance light travels in a nanosecond, thus, the maximum possible distance data could travel in that time) you can start to appreciate the problem. It is literally impossible for the intuitive Sequentially Consistent model of how computers work to apply for today's fast yet concurrent processors. Light is too slow. However generally people mean either Java's memory model or the C++ 11 (and subsequently 14, 17, 20) memory models used in languages such as C++, C and Rust. Those rules are less terrifying but still pretty complicated and the programming language promises to somehow provide an environment where these rules (not the terrifying ones) are all you need to know to write software. So that's nice. It can be simple to write parallel code for a language designed to make that easy. Yes even if there's shared data. It only started to get trickier if the shared data is modified, so long as it isn't we can make copies of it safely and modern CPUs will do that without actual work by the programmer. reply cogman10 1 hour agorootparentAre there popular languages that don't have memory models which make reasoning about concurrent models easier? A language with a notion of threading and shared state is going to have something akin to read/write barriers built into the language memory model to tame the beast. reply cogman10 1 hour agorootparentprev> Not too sure what the basic rules are and I'm not able to find any list of such rules. I'd suggest the book in my original comment, Java concurrency in practice. > If I use very fine grained mutexes then I end up with faster code that has very hard to find bugs that happen on very rare occasion. I agree this is a real risk if you are doing fine grained mutexes. But the rules are the same whether or not you want to follow them. If you have shared state (A, B, C) and you want to do a calculation based on the values of (A, B, C) then you need a mutex which locks (A, B, C). Certainly, that become a problem if you have calculations that just require (A, C) and you might want to avoid locking for B. In that case, you need a more complicated mechanism for locking than just simple mutexes which is certainly easy to get wrong. When the (A, B, C) actions happen you have to ensure that the (A, C) actions can't happen at the same time. This isn't a complicated rule, but it is one that can be hard to follow if you are trying to do super fine grained locking. It's even trickier if you are going to abuse the platform to get correct results. But fine v coarse isn't the problem I'm referring to when I say people get the simple rules wrong. Rather, than worrying about fine vs coarse grained locking, I very frequently see code where mutexes and concurrency primitives are just peppered everywhere and haphazardly. We might call that super coarse grained. reply zozbot234 2 hours agorootparentprev> Not too sure what the basic rules are and I'm not able to find any list of such rules. You may want to consider https://marabos.nl/atomics/ for an approachable overview that's still quite rigorous. reply SJC_Hacker 1 hour agorootparentprev> For me the biggest challenge when sharing state is that the only benefit I can see for parallelism is performance, so if I'm not gaining performance there is no reason to use parallelism. Aside from performance, another very common reason is to not lock the UI from the user. Even in UI-less programs, the ability to abort some operation which is taking too long. Another is averaging out performance of compute tasks, even in the case where it would be faster to handle them sequentially. Without some degree of parallelism these things are not possible. Consider a web server. Without parallelism every single request is going to completely lock the program until its complete. With parallelism, you can spawn off each request, and handle new ones as they come in. Perceived performance for majority of users in this case is significantly improved even in the case of single processor system - e.g. you have 99 requests which each take a single second, and then one which takes 101 seconds. Total request time is 200 seconds / 100 requests = 2 seconds average per request, but if that 100 second request comes in first, the other 99 are locked for 100 seconds, so average is now > 100 seconds per request ... reply hinkley 1 hour agorootparentprevI loved concurrent code when I was starting out. I’d taken a pretty good distributed computing class which started the ball rolling. They just fit into how my brain worked very well. Then I had to explain my code to other devs, either before or after they broke it, and over and over I got the message that I was being too clever. I’ve been writing Grug-brained concurrent code for so long I’m not sure I can still do the fancy shit anymore, but I’m okay with that. In fact I know I implemented multiple reader single writer at least a few times and that came back to me during this thread but I still can’t remember how I implemented it. reply tombert 11 minutes agorootparentThat's something I'm afraid of for my latest project. I did some concurrent stuff that wasn't 100% clear would actually work, and I had to write a PlusCal spec to exhaustively prove to myself that what I was doing is actually OK. It works pretty well, and I'm getting decent speeds, but I'm really scared someone is going to come and \"fix\" all my code by doing it the \"normal\" way, and thus slow everything down. I've been trying to comment the hell out of everything, and I've shared the PlusCal spec, but no one else on my team knows PlusCal and I feel like most engineers don't actually read comments, so I think it's an inevitability that my baby is killed. reply tombert 1 hour agorootparentprev+1 for the Java Concurrency in Practice book. It's the book I recommend to nearly everyone who wants to get into concurrent programming. Goetz makes it a lot more approachable than most other books. reply hinkley 1 hour agorootparentGoetz has come a long way. I knew one of the people who contributed to that book and he was a little frustrated about having to explain things to him he felt he shouldn’t have had to. The implication was he’d already had this conversation with some of the other contributors. Sometimes though, the newbie is going to write the clearest documentation. reply f1shy 2 hours agorootparentprevMaybe because I had a complete semester of multiprogramming in the uni, I see almost trivial to work in such environments, and cannot comprehend why is so much mystic and voodo. Actually is pretty simple. reply tombert 6 minutes agorootparentI feel like it's not terribly hard to write something that more or less works using mutexes and the like, but I find it exceedingly hard to debug. You're at the mercy of timing and the scheduler, meaning that often just throwing a breakpoint and stepping through isn't as easy as it would be with a sequential program. I feel like with a queue or messaging abstraction, it can be easier to debug. Generally your actual work is being done on a single thread, meaning that traditional debugging tools work fine, and as I've said in sibling comments, I also just think it's easier to reason about what's going on. reply tialaramex 2 hours agorootparentprevIn most cases (in a C or C++ compiler, not Java) it's just straight up incorrect to use volatile for something other than memory mapped I/O. Yes, POSIX guarantees that in a specific case (signal handling IIRC) it'll do what you meant if you use volatile int. That's nice, but more generally this is not the right choice. Unfortunately Microsoft enshrined the situation (on Windows, on their compiler, on x86 and x86-64 only) that volatile primitive types are effectively atomics with Acquire-Release ordering. This is of course awkward when Microsoft tries to bring people to a non-x86 architecture and it can't just give them this because it would suck really hard, so finally they have to grow up and teach their developers about actual atomics. !! Edited to fix: Previously this said Relaxed ordering, the ordering guaranteed by Microsoft is in fact Acquire-Release, hence it's expensive to provide for architectures where that's not the default. reply hinkley 1 hour agorootparentWhen Java implemented volatile it didn’t do anything. Later when they fixed the memory model to deal with out of order execution they made it part of the fence semantics, and then it actually made some sense. reply zozbot234 2 hours agorootparentprevThe \"volatile\" keyword should never be used for C/C++ multithreaded code. It's specifically intended for access to device-mapped addresses and does not account for any specific memory model, so using it for multithreading will lead to breakage. Please use the C/C++ memory model facilities instead. (As a contrast, note that in Java the \"volatile\" keyword can be used for multithreading, but again this does not apply to C/C++.) reply aidenn0 1 hour agorootparent> Please use the C/C++ memory model facilities instead I should point out that for more than half of my professional career, those facilities did not exist, so volatile was the most portable way of implementing e.g. a spinlock without the compiler optimizing away the check. There was a period after which compilers were aggressively inlining and before C11 came out in which it could be otherwise quite hard to otherwise convince a compiler that a value might change. reply hinkley 1 hour agorootparentprevI’m surprised that’s true. C borrowed very heavily from Java when fixing the NUMA situations that were creeping into modern processors. reply bob1029 2 hours agoparentprev> some kind of queue or messaging abstraction Agreed. I find things like LMAX Disruptor much easier to reason about. reply tombert 1 hour agorootparentEven within Java, something like BlockingQueue will get you pretty far, and that's built into the runtime. If I am allowed to use libraries, I end up using Vert.x for nearly everything. I think that their eventbus abstraction is easy enough to reason about, and even without using it simply using the non-blocking stuff it provides ends up being pretty handy. reply jeffbee 1 hour agoparentprevMessage passing is just outsourcing the lock, right? For example a Go channel is internally synchronized, nothing magic about it. Most of the mutex tragedies I have seen in my career have been in C, a useless language without effective scopes. In C++ it's pretty easy to use a scoped lock. In fact I'd say I have had more trouble with people who are trying to avoid locks than with people who use them. The avoiders either think their program order is obviously correct (totally wrong on modern CPUs) or that their atomics are faster (wrong again on many CPUs). reply tombert 1 hour agorootparentIt's definitely doing synchronization behind the scenes, no argument here. BlockingQueues in Java seem to use ReentrantLocks everywhere. It's outsourcing the lock to people who understand locks better. It just abstracts this detail away for me, and I personally trust the libraries implementing these abstractions to be more correct than some ad hoc thing I write. It's an abstraction that I personally find a lot easier to reason about, and so my thinking is this: if my reasoning is more likely to be correct because of the easier abstraction, and the internal synchronization is more likely to be correct, then it's more likely that my code will be correct. I don't do super low-level stuff at all, most of my stuff ends up touching a network, so the small differences between the built-in synchronized structures vs the regular ones really don't matter since any small gains I'd get on that will be eaten the first time I hit the network, so a considerably higher ROI for me is almost always figuring out how to reduce latency. If I did C or C++, I'd probably have different opinions on this stuff. reply foobazgt 25 minutes agorootparentprevEvery abstraction is about outsourcing the thing it's abstracting away. If using a queue solves your problem, you no longer have to deal with all the headaches that you can run into using a bare mutex. reply loeg 1 hour agorootparentprev> Message passing is just outsourcing the lock, right? More or less, yeah. You can write an MPSC queue that doesn't explicitly use a lock (or even anything that looks like a lock). reply alberth 3 hours agoprevAre there any Linux distro's built/using Cosmo? (like Alpine use of musl) reply joelthelion 2 hours agoprevCould established libcs adopt this? If not, why not? reply loeg 1 hour agoparentMaybe. nsync is Apache licensed. reply wallstprog 1 hour agoprev\" I also managed to make contended nsync mutexes go 30% faster than nsync upstream on AARCH64, by porting it to use C11 atomics.\" Curious about this -- so what does C11 atomics use to implement? At least in Linux, C++11 atomics use pthreads (not the other way around). reply jart 1 hour agoparentnsync has wrapper macros for all the various atomics libraries that prevented it from using two things. 1. Weak CAS. nsync always uses strong CAS upstream to make the portability abstraction simpler. Being able to use weak CAS when appropriate helps avoid code being generated for an additional loop. 2. Updating the &expected parameter. nsync upstream always manually does another relaxed load when a CAS fails. This isn't necessary with the C11 atomics API, because it gives you a relaxed load of the expected value for free when it fails. Being able to exploit those two features resulted in a considerable improvement in nsync's mu_test.c benchmark for the contended mutex case, which I measured on RPI5. reply rcxdude 1 hour agoparentprevIt depends on what atomics. In principle most of them should map to an underlying CPU primitive, and only fallback to a mutex if it's not supported on the platform. reply loeg 1 hour agoparentprevAtomics mostly map to underlying compiler / CPU intrinsics, not pthreads. reply jeffbee 1 hour agoparentprevI am also curious about this and the ambiguity of \"AARCH64\". There are 64-bit ARM ISA versions without atomic primitives and on these what looks like an atomic op is actually a library retry loop with potentially unbounded runtime. The original AWS Graviton CPU had this behavior. The version of the ISA that you target can have significant performance impact. reply rnrn 3 hours agoprevis comsmopolitan’s mutex also less fair than the other implementations compared? reply cogman10 3 hours agoparentIt's not fair, but (from the description) it does make some effort to be fairish. It'll queue up waiters in a linked list that is fairly fair, but new people can jump ahead of the line and grab the CAS before the list is processed. However, it has added logic to start chunking through the queue after 30 wakeups from a waiter. With that, waiting isn't indefinite, but it also isn't fair. I have no idea how that compares to other implementation's fairness. I know the JDK recently abandoned fairness because of the overhead and complexity it added around mutex handling. reply tialaramex 2 hours agorootparentFairness is known to cause serious problems such as convoys, so while \"unfair\" isn't itself a desirable property, you might choose to be unfair because the alternatives are worse for some applications. Probably a specifically Fair version of any concurrent primitive which can be fair is worth giving a distinct name, the way you'd offer both a stable and an unstable sort, knowing that the unstable sort will often (though not always) be faster but some people cannot tolerate an unstable sort so it's useless for them. On the other hand, maybe it's an attractive nuisance and if you offered this you'd find most users took your FairMutex, and then were angry because of the inevitable problems from fairness, even though the unfair one was right there... reply greiskul 1 hour agorootparentIn a lot of cases, programmers don't even care about fairness, but do care about starvation. Is there a word for structures like the one discussed here, that are unfair but appear to prevent unlimited starvation? reply DSMan195276 22 minutes agorootparentI don't think this lock is _guaranteed_ to prevent starvation, it just makes an effort at it. There's only two priority levels and a hard-coded 30 wake-ups required to enter high priority - if waiters were continually joining then there could always be more than one entry in high priority and an entry could get stuck there forever. Typically it won't matter, but if you have high contention then this might not be good enough. reply pizlonator 2 hours agoparentprevMost fast locks these days are unfair. It turns out the perf advantage of unfairness is so massive that it’s just Better (TM). reply forrestthewoods 2 hours agoprevHrm. Big fan of Justine and their work. However this is probably the least interesting benchmark test case for a Mutex. You should never have a bunch of threads constantly spamming the same mutex. So which mutex implementation best handles this case isn’t particularly interesting, imho. reply cogman10 2 hours agoparent> You should never have a bunch of threads constantly spamming the same mutex. I'm not sure I agree with this assessment. I can think of a few cases where you might end up with a bunch of threads challenging the same mutex. A simple example would be something like concurrently populating some data structure (list/dict/etc). Yes, you could accomplish this with message passing, but that uses more memory and would be slower than just having everything wait to write to a shared location. reply jart 2 hours agoparentprevWhat do you consider a good benchmark test case for mutexes? reply pizlonator 2 hours agorootparentVery large multithreaded programs with lots of diverse uses of locks, including: - uncontended, mildly contended, and horrifically contended - short and long critical sections - contention among small numbers of threads and large numbers of threads - contention that happens when other locks are held recursively and those are also contended on (like, thread A wants a lock held by thread B, but thread B is trying to get a lock held by thread C) Different lock algos work well or badly depending on how the locks are used, so it’s important to pick real programs as your benchmark rather than trying to cook a synthetic benchmark. reply Salgat 2 hours agoparentprevI'd say the vast majority of cases where I use a lock/semaphore is around very expensive resources, where the utilization of that resource vastly outweighs any performance overhead of the lock. reply another-acct 11 minutes agorootparentThis is how it should be. IIRC -- apologies, can't find a source --, Ulrich Drepper wrote somewhere about NPTL that its mutexes were not particularly lightweight, but that you should design your program for low contention anyways. For highly contended data structures, spinlocks (and nowadays explicit atomics) are likely better. reply convolvatron 2 hours agoparentprevwhat else would you measure? certainly the uncontended case is important and a baseline, but otherwise this is kind of weak point for mutexes - that if you don't handle contention well then you have idle hardware or lots of additional scheduler work or kernel crossings. [edit - I forget to even mention one of the most important things, that locks that reform poorly under contention can have really negative systemic effects like hot spotting the memory network, and that would show up here too] reply tialaramex 2 hours agorootparentUncontended is crucial. If you want to benchmark other things that's excellent, but if MutexA has crap uncontended performance then I'm on a loser if we pick MutexA unless I am absolutely sure we will have a lot of contention. Since contention is never desirable, that's rare. Think of this like the random input case for a sort benchmark. Do I want stuff like all-ascending, all-descending, zig-zag and so on? Sure, those are nice. But without the random input case the benchmark is not very helpful. I might sort a zig-zag, I might sort data that's already in ascending order, but I will sort random data, that's going to happen or else I would not need a sort function. reply jart 2 hours agorootparentUncontended is uninteresting, because all mutex implementations perform roughly the same here, give or take a nanosecond or two. If you're truly uncontended then a naïve spin lock will actually seem fastest, because xchg is faster than cmpxchg which is needed for good locks. reply loeg 1 hour agorootparentUh, why do you say a naive spin lock would use xchg instead of cmpxchg? I don't think you could make a valid spinlock using xchg. reply jart 56 minutes agorootparentOn x86 you can. When xchg is used with a memory parameter it locks the bus. This is true even in the absence of a lock prefix. I included a spinlock implementation in the blog post. If you see any errors with it, then please let me know! reply gok 2 hours agoprevConsider adopting `os_sync_wait_on_address()` on Darwin for your futex needs reply jart 1 hour agoparentI've used that. It's just as good as ulock although relatively new. The issue is that using this API makes cancelation points no longer atomic. SIGTHR needs to be able to know the exact instruction in memory where an asynchronous signal is delivered when interrupting a wait operation and that's not possible if it's inside an opaque library. reply bjourne 1 hour agoprevI made a benchmark on this last year when I didn't know how slow pthread mutexes were: https://stackoverflow.com/questions/76965112/why-are-pthread... For my use case, the mutex wait amounted to roughly 40% of the total runtime and spinlocks were way faster. Perhaps nsync or Cosmopolitan would have made my code much faster. I still believe the FUD around spinlocks is overstated. For \"normal\" hpc code the number of threads should beIn 2012, Tunney started working for Google as a software engineer.[4] In March 2014, Tunney petitioned the US government on We the People to hold a referendum asking for support to retire all government employees with full pensions, transfer administrative authority to the technology industry, and appoint the executive chairman of Google Eric Schmidt as CEO of America. the absolute madman reply Dansvidania 34 minutes agoparent [–] I wonder what they (Tunney) think of that now. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Cosmopolitan Libc's mutex library demonstrates superior performance in heavily contended scenarios, outperforming Microsoft's SRWLOCK by 2.75x and Cygwin by 65x on Windows, and glibc by 3x and musl libc by 11x on Linux.",
      "The library's efficiency is attributed to its integration with the nsync library, which employs advanced techniques like optimistic Compare-And-Swap (CAS) and futexes to reduce CPU usage and contention.",
      "The project is supported by various sponsors, including GitHub, Patreon, Mozilla's MIECO program, and the developer community, highlighting its collaborative development and community backing."
    ],
    "commentSummary": [
      "The discussion focuses on mutex implementations, with critiques on benchmarking methods, suggesting that real-world performance should be tested in large multithreaded programs.- There is a debate on the merits of different mutex types, such as spinlocks, and the importance of uncontended performance, highlighting the Cosmopolitan C library's mutex improvements.- The conversation also explores the use of message passing versus mutexes for concurrency, with some advocating for abstractions like queues for easier reasoning and debugging."
    ],
    "points": 277,
    "commentCount": 108,
    "retryCount": 0,
    "time": 1727883105
  },
  {
    "id": 41715277,
    "title": "How CERN serves 1EB of data via FUSE [video]",
    "originLink": "https://kernel-recipes.org/en/2024/schedule/how-cern-serves-1eb-of-data-via-fuse/",
    "originBody": "How CERN serves 1EB of data via FUSE CERN, the European Organization for Nuclear Research, generates vast amounts of data from experiments at the Large Hadron Collider (LHC). CERN’s Storage and Data Management Group at the IT department is responsible for managing this data, including its long-term archival on tape, distribution across the Worldwide LHC Computing Grid (WLCG), as well as providing secure and convenient forms of data access to more than 30000 users that need it. In this talk we will give an overview of the open source projects leveraged by CERN to satisfy the storage needs of the organization, such as CERNBox and EOS, and discuss some of the unique challenges faced by the high-energy physics community in data storage and management. Additionally, we discuss how FUSE is used to allow users to access data securely from anywhere in the world. Guilherme AMADIO",
    "commentLink": "https://news.ycombinator.com/item?id=41715277",
    "commentBody": "How CERN serves 1EB of data via FUSE [video] (kernel-recipes.org)210 points by pabs3 19 hours agohidepastfavorite94 comments qwertox 14 hours agoIIRC I had issues with inotify when I was editing files on a remote machine via SSHFS, when these files were being used inside a Docker container. inotify inside the container did not trigger the notifications, whereas it did, when editing a file with an editor directly on that host. I think this was related to FUSE, that Docker just didn't get notified. reply z3t4 4 hours agoparentThe inotify signals might work if you add -v a whole directory reply udev4096 13 hours agoprevThis is fascinating. How are they managing or even taking backup for this gigantic storage? reply tantalor 3 hours agoparentWhat is Rucio? Rucio enables centralized management of large volumes of data backed by many heterogeneous storage backends. Data is physically distributed over a large number of storage servers, potentially each relying on different storage technologies (SSD/Disk/Tape/Object storage) and, frequently, managed by different teams of system administrators. Rucio builds on top of this heterogeneous infrastructure and provides an interface which allows users to interact with the storage backends in a unified way. The smallest operational unit in Rucio is a file. Rucio enables users to upload, download, and declaratively manage groups of such files. https://rucio.cern.ch/documentation/started/what_is_rucio reply JBorrow 5 hours agoparentprevThey use a distributed data management tool called RUCIO: https://rucio.cern.ch to distribute data on the grid. reply ephimetheus 13 hours agoparentprevFor experiment data, there is a layer on top of all of this that distributes datasets across the computing grid. That system has a way to handle replicate at the dataset level. reply rob_c 12 hours agoparentprevTape and off-site replicas at globally distributed data centres for science. Of the 1EB a huge amount of that is probably in automated recall and replication with \"users\" running staged processing of the data at different sites ultimately with data being reduced to \"manageable\" GB-TB level for scientists to do science reply fnands 9 hours agorootparentYup, lots of tape for stuff in cold storage, and then some subset of that on disk spread out over several sites. It's kinda interesting to watch anything by Alberto Pace, the head of storage at CERN to get an understanding of the challenges and constraints: https://www.youtube.com/watch?v=ym2am-FumXQ I was basically on the helpdesk for the system for a few years so had to spend a fair amount of time helping people replicate data from one place to another, or from tape onto disk. reply julienchastang 3 hours agoprevSomewhat off topic, but CERN has a fantastic science museum attached to it that I had the privilege of visiting last summer. There is of course Tim Berners-Lee's NeXT workstation, but also so much more. It is also the only science museum I've visited that addresses topics in cyberinfrastructure such as serving out massive amounts of data. (I personally get interested when I see old StorageTek tapes lol.) The more traditional science displays are also great. Check it out if you are ever in the Geneva area. It is an easy bus ride to get out there. reply zrules 1 hour agoparentDon’t forget to visit the gift shop too. They don’t have an online store so it’s the only place to get CERN ‘gears’. You can easily overspend there for gifts your friends and family will appreciate (if they know and like about CERN and its missions). reply a-dub 14 hours agoprevdoes modern fuse still context switch too much or does it now use io_uring or similar? reply mappu 13 hours agoparentFUSE over io_uring is still WIP: https://lwn.net/Articles/988186/ FUSE Passthrough landed in kernel 6.9, which also reduces context switching in some cases: https://www.phoronix.com/news/Linux-6.9-FUSE-Passthrough . The benchmarks in this article are pretty damning for regular FUSE. reply Dwedit 10 hours agorootparentFUSE Passthrough is only useful for filesystems that wrap an existing filesystem, such as union mounts. Otherwise, you don't have an open file to hand over. reply a-dub 12 hours agorootparentprevyeah but still not great for metadata operations, no? i remember it was really not great for large sets of search paths because it defeated the kernel's built-in metadata caches with excessive context switching? reply Dwedit 14 hours agoparentprevLast I read about FUSE, adding a 128KB read-ahead buffer drastically reduced context switching. reply synicalx 15 hours agoprev1EB with only 30k users, thats a wild TB-per-user ratio. My frame of reference; the largest storage platform I've ever worked on was a combined ~60PB (give or take) and that had hundreds of millions of users. reply lmihaig 5 hours agoparentWhen experiments are running the sensors generate about 1PB of data per second. They have to do multiple (I think four?) layers of filtering, including hardware level to get to actual manageable numbers. reply elashri 4 hours agorootparentIt depends on which experiment. We call it trigger system. And it varies according to each experiment requirements and physics of interest. For example LHCb is doing now full trigger system on a software side (No hardware FPGA triggering) and mainly utilizing GPUs for that. That would be hare to achieve with the harsher conditions and requirements of CMS and ATLAS. But yes at LHCb we discard about 97% of the data generated during collisions. Disclaimer: I work on LHCb trigger system reply chipdart 13 hours agoparentprevMost humans don't handle sensor and simulation data for a living, though. CERN just so happens to employ thousands who do that for a living. reply shric 13 hours agoparentprevMy frame of reference; the largest storage platform I've ever worked on was a combined ~tens of EB (give or take) and that had over a billion users. reply hackernewds 14 hours agoparentprevThat's the scale of the universe, compared to data generated by humans reply renewiltord 15 hours agoprevMost of the magic is in https://eos-web.web.cern.ch/eos-web/ apparently reply hackernewds 14 hours agoparentnext [3 more] [flagged] qwertox 14 hours agorootparent.ch as in Switzerland. Does .cn (China) prohibit open source? reply irusensei 10 hours agorootparent\"Confoederatio Helvetica\" if anyone wonders why Switzerland uses the CH TLD. reply vfclists 5 hours agoprevRe: https://news.ycombinator.com/item?id=41716523, > over the years what discoveries have been made at CERN that have had practical social and economic benefits to humanity as a whole? Some responders to the question believe I was criticizing a supposed wastefulness of the research. Not knowing the benefits of the discoveries in high energy physics, ie the stuff the accelerators are actually built to discover, doesn't mean I was criticizing it. Responses referenced the contributions the development of the infrastructure supporting the basic research itself have made, which is fine, but not the benefits of high energy physics discoveries. So to rephrase the question - What are the practical social and economic benefits to society that the discoveries in high-energy particle physics at institutions like CERN have made over the years? This is not just in relation to CERN, but world wide, such those experiments which create pools of water deep underground to study cosmic rays etc. reply deelowe 4 hours agoparentYou're probably getting replies like that because it's a bit of an odd question. Academic research isn't really done to achieve a particular purpose or goal. The piratical benefit literally is academic. reply dylan604 4 hours agorootparentIt's also one of the first questions from people that very much are criticizing, so even if it was an sincere question it will be lumped together. Not recognizing/addressing this when posing the question does nothing to prevent it from the lumping. reply superhuzza 3 hours agorootparentprevThe piratical benefit may be particle cannons? Yarrgh! reply InDubioProRubio 12 hours agoprevThe things you can build when everyone is a rockstar :D reply jgalt212 8 hours agoprevI'm convinced CERN could greatly benefit from \"middle out\". reply maybeben 17 hours agoprevi mean, they also have one of the largest ceph deployments. anything is scalable with no budget. reply pas 16 hours agoparentslide 22 states that the cost is 1 CHF/TB/month (on 10+2 erasure coded disks), though it would be interesting to do a breakdown of costs (development, hardware, maintenance, datacenter, servicing, management, etc..) reply pclmulqdq 14 hours agorootparent1 CHF/TB/month is a bit expensive for storage at that scale, so it would definitely be interesting to see what they're spending the money on and what they are (and aren't) counting in that price. reply rob_c 12 hours agorootparentTape backup, accessibility, networking, availability... At 1CHF/TB that's a lot better than my local university still charging >100x that for such services internally reply pclmulqdq 5 hours agorootparentEconomies of scale in storage are significant. Also, I don't know why you put up with your university charging 100x that when you can store things on AWS for $5-10/TB/month (or less). That comes with all the guarantees (or more) of durability and availability you get from the university. reply hackernewds 14 hours agorootparentprevNo budget often tags along with no accountability reply hi-v-rocknroll 15 hours agoparentprevThey probably consume Panasas, IBM, DDN, and BeeGFS gear and licensing too. reply adev_ 13 hours agorootparentNop. Most internal data is spread between Ceph and home-made distributed storage system named EOS (https://indico.cern.ch/event/138478/contributions/149912/att...) running over commodity hardware. The only commerical-backed storage system is the long term storage tape system. Still it has an home-made overlay API over it to interface with the rest of the systems. reply rob_c 12 hours agorootparentprevGood god no. Nowhere near anything so crass. CEPH and EOS all the way reply niemandhier 13 hours agoprevPeople here keep claiming “Anything is possible with unlimited budget”. Cerns budget is 1.4 billion Euro, 50 million Euro for all IT infrastructure. https://cds.cern.ch/record/2888205/files/English.pdf#page18 It’s not the money, it’s the people. Update: Added source. reply lmihaig 5 hours agoparentPeople get this very wrong, CERN is extremely underfunded. People really don't understand how expensive running the accelerators is and most of the budget goes to that. Last years they even had to run for less months than expected because they couldn't afford the rising energy prices. The buildings are old, the offices suck, you don't even get free coffee and they pay less than the norm in Switzerland. But they have some of the top minds working on very specific and interesting systems, dealing with problems you'd never encounter anywhere else. I would like to yap more about the current management and their push/reliance on enterprise solutions but to cut it short I really do think cern is a net contributor to open science and they deserve more funding. reply atoav 12 hours agoparentprevThat kind of place can draw a certain kind of employee. This finding is hard to transfer to commercial projects. Sure employees will always claim to be really motivated, especially in the marketing material, but are they we-are-nerds-working-on-the-bleeding-edge-of-human-knowledge-motivated? Probably not, but there is surely some manager out there who made themselves believe they can motivate their employees to show the same devotion for the self-made hardships of some mostely pointless SaaS product. If you want to grab that kind of spirit, what you do needs to fundamentally make sense beyond just making somebody money. reply sligor 10 hours agorootparentThat's exactly how we were able to go to the moon in 55 years ago. And why it's complicated today. It was of course lot of money. But it was mostly a lot of highly skilled, motivated devoted people doing for an ultimate common goal. Money would not have been sufficient by itself. reply HPsquared 6 hours agorootparentSince then, a LOT of the smart motivated people have been lured into either banking or adtech. The pay is good and the technical problems can be pretty interesting but the end result lacks that \"wow factor\". reply seb1204 5 hours agorootparentprevI also read that nowadays we are more risk averse and many people/manager/companies are mostly administrators of status quo. Pair that with lack of vision and public engagement for current challenges to humanity. reply wvh 7 hours agorootparentprevIn other words, if you permit, pure capitalism isn't a sufficiently good motive to get something significant done. But of course most of us don't work towards an ultimate common goal – and neither did most people in those times. One wonders if there is enough meaning left these days to go 'round and ensure most of us feel passionate about the stuff we (have to) do. Maybe we really need a god or war or common enemy to unite all strands into a strong rope. reply jedrek 10 hours agorootparentprevAlso, CERN does not have a profit motive. How much good work have the people reading this thread had to trash because it didn't align with Q3 OKRs? How much time and energy did they put into garbage solutions because they had to hit a KPI by the last day of June? reply bayindirh 8 hours agorootparent> Also, CERN does not have a profit motive. This is a great point. We work with CERN on a project, and we're all volunteers, but we work on something we need, and contribute back to it wholeheartedly. At the end of the day, CERN wants to give away project governance to someone else in the group, because they don't want to be the BDFL of anything they help creating. It allows them to pursue new and shiny things and build them. There's an air consisting of \"it's done when it's done\", and \"we need this, so we should build this without watering it down\", so projects move at a steady pace, but the code and product is always as high quality as possible. reply niemandhier 10 hours agorootparentprevCERN buddy of mine suggested that exposing a colony of physicists to elevated ambient levels of helium would trigger excessive infrastructure building behavior. reply quailfarmer 11 hours agorootparentprevThat’s a great observation, and I think generally correct, but there are private companies where that sort of motivation exists, for basically the same reason reply guappa 8 hours agorootparentThen they get bought by some megacorp which kills the motivation. reply Cthulhu_ 4 hours agorootparentOr they are the megacorp that killed it (Google, Xerox?) reply adev_ 13 hours agoparentprevCERN was a good example of how much can be done with how little when you have the right people. For a long time, the entire Linux distribution (Scientific Linux) used for ~15K collaborators, the infra and the grid computing was managed by a team of around 4-5 people. The teams managing the network access (LanDB), the distributed computing system, the scientific framework (ROOT) and the storage are also small, dedicated skilled teams. And the result speaks for itself. Unfortunately, most of that went to shit quite recently when they replaced the previous head of IT by a Microsoft fanboy/girl coming from outside of the scientific environment. The first thing he/she did was to force Microsoft bloatware everywhere to replace existing working OSS solutions. reply axus 5 hours agorootparentI think the majority of the Scientific Linux software came from Fedora/Red Hat and the Linux kernel. Planning and managing the CERN computing infrastructure is a lot of work, then updating and releasing a famous distro on top of that was impressive. reply jimbat 5 hours agorootparentprevScientific Linux was originally a product of Fermilab, with contributions from CERN. reply wuming2 11 hours agorootparentprev> Unfortunately, most of that went to shit quite recently when they replaced the previous head of IT by a Microsoft fanboy(girl?) coming from outside of the scientific environment. Painful to read so I did a short check. From a news post I don’t want to link here, but easily found searching “CERN, the famous scientific lab where the web was born, tells us why it's ditching Microsoft and helping others do the same”, direction taken in 2019 seemed quite the opposite. I am not sure how current head of IT at CERN, Enrica Porcari, fits in to the story. Insider info will be appreciated. reply adev_ 10 hours agorootparent> direction taken in 2019 seemed quite the opposite The head of IT changed in 2021 if it answers your question. reply dguest 9 hours agorootparentThere was a huge initiative at CERN to move to non-MS products. It was great actually: suddenly we were leaving behind a bunch of bloated MS cruft and working with nice stuff. As someone working at CERN I was really inspired, not just by the support for open source but by how well it all worked. Then next thing I knew we were doubling down on MS stuff. I don't know what happened. It was sad though, and the user experience did not improve in the end. I'm not close enough to CERN-IT to know the details. But for what it's worth, no one I knew in IT could think of a good reason for going back. reply notabee 4 hours agorootparentConsidering how massively in bed with the U.S. government and other governments that Microsoft is, and said government has been known for keeping tabs even on allies(1), I'm sure that certain parties have a keen interest in keeping up with what's going on at CERN that's not just scientific curiosity. Strangely these Microsoft evangelists manage to pop up in organizations all the time to reverse any open source initiatives. Could just be a coincidence though. 1. https://www.washingtonpost.com/graphics/2020/world/national-... reply wuming2 10 hours agorootparentprevDon’t see any previous experience at Microsoft [2]. Just a self taught fan then? Edit: “Partnership is the art of understanding shared value. In WFP we have a number of partnerships, not many, but the ones that we have are deep, are sustained, are long-term. And definitely UNICC is one of them. Enrica Porcari, Chief Information Officer and Director Technology Division at the WFP” [1] United Nations International Computing Centre (UNICC) is a Microsoft shop. Legit to assume, if OP statement holds true, she got the business sponsorship going while CIO at the World Food Program (WFP). This kind of attempted executive takeover is always the strategy of a team. Who sponsored and voted for her at CERN is the real person of interest. 1. https://www.unicc.org/our-values/what-makes-us-unique/ 2. https://cgnet.com/blog/former-cgnet-employee-enrica-porcari-... reply wuming2 8 hours agorootparentJoachim Mnich, Director for Research and Computing and her boss [4], holds the position also since January 2021 [1]. Mike Lamont, Director for Accelerators and Technology, also got the job at the same time [2]. Finally Fabiola Gianotti, Director-General, in 2019 extended her tenure for a second term “to start on 1st January 2021” [3]. So in 2019 the initiative to remove Microsoft began. With renewal and promotions taking in to effect it stopped. Interesting. Feeling a strong Microsoft US vs Munich DE vibe. With a twitch of IT. 1. https://home.cern/about/who-we-are/our-people/biographies/jo... 2. https://home.cern/about/who-we-are/our-people/biographies/mi... 3. https://home.cern/about/who-we-are/our-people/biographies/fa... 4. https://german-dac.web.cern.ch/sites/default/files/2022.01%2... reply wuming2 6 hours agorootparent“newly created CERN Venture Connect programme (CVC), launched in 2023 […] In establishing CVC, CERN’s Entrepreneurship team entered discussions with Microsoft, with the aim to better leverage the Microsoft for Startups Founders Hub“ [1]. Under the purview of Christopher Hartley, Director of Industry, Procurement & Knowledge Transfer (IPT) [2], Microsoft is gaining more footholds at CERN. Won’t be too far fetched to consider Mr Hartley and Ms Porcari as working together to achieve some sort of common good. 1. https://home.cern/news/news/knowledge-sharing/journey-cern-e... 2. https://german-dac.web.cern.ch/sites/default/files/2022.01%2... reply lokimedes 13 hours agoparentprevAlso, the in-kind contributions from hundreds of institutes around the world. Much can, and has, been said about physicist code, but CERN is the center of a massive community of “pre-dropout” geniuses. I can’t count the number of former students that later joined Google and the likes. Many are frequenting HN. reply amelius 10 hours agoparentprev> Cerns budget is 1.4 billion Euro Kind of weird that a company like Uber has a valuation of $150 billion Euro. reply dguest 9 hours agorootparentMost of the people who make CERN work aren't working for CERN. The IT department is under CERN, but there are many thousands of \"users\" who don't get payed by CERN at all. Quite a lot of the fabrication and most of the physics analysis is done by national labs and universities around the world. reply elashri 9 hours agorootparentCERN budget on experiment level is being paid mostly by contributions from the institutions that is part of this experiment. I am talking about operation, R&D and this would also include personnel contributions to different aspect. There is also service work that each one of the users must do beside doing physics. I am for example work on software development stack beside my current physics analysis. Some of my colleagues working on hardware. Then there are country level contributions that pays for CERN infrastructure and maintenance (and inter experiment stuff) and direct employees salaries. reply dguest 6 hours agorootparentThe important point here is that (I believe) the 1.4 billion above doesn't account for all the work done directly by institutes. Institutes pay CERN, but they also channel government grants to fund a huge amount of work directly. Most of the people I know who \"worked at\" CERN never got a pay check that said CERN on it. reply yccs27 10 hours agorootparentprevApples to oranges. Budget is per year, valuation is total. A better comparison would be Uber's revenue of $37 billion in 2023. reply amelius 9 hours agorootparentI don't see why it's Apples to oranges. Uber could pay for 150 CERN-years. reply chmod775 9 hours agorootparentNo, they could not. Valuation is not money in the bank. It does not even represent an amount that is convertible to an equal amount of liquid currency. It's a number that is hardly useful for anything and I'm tired of people cooking up all sorts of nonsense with it. reply amelius 9 hours agorootparentOk, maybe it's 75 CERN years or maybe even 10. The point still stands. PS: Sorry if you got tired, but I'm tired of people explaining what valuation isn't when we're just talking orders of magnitude. reply exe34 8 hours agorootparentprevit's only useful for getting loans that you'll pay back with a bigger loan. it's how rich people are always cash-poor but wealthy and live wealthy lifestyles. reply gwervc 9 hours agorootparentprevHow many people ordering a meal (often out of laziness) per day vs thinking and searching the mysteries of universe? Economically it makes sense that Uber generates a lot more of cash. reply chrisandchris 8 hours agorootparentI think you misinterpreted that there shall be a correlation between _valuation_ and _earnings_. Ubers _first_ ever positive year was 2013, after 15 years in business [1] . Uber may be generating cash, but it's also loosing (lost) cash a lot faster than it was generating it. By taking 2013 as reference (~2 billion), it needs another 5 of those years just to recover from its losses in 2012 (9 billion). I understand the economics behind it, but its valuation is way out of reality. [1] https://www.theverge.com/2024/2/8/24065999/uber-earnings-pro... reply hkwerf 5 hours agoparentprevThat being said, though, members contribute more than money. A lot of the work done at CERN is not done on CERN budgets, but on the budgets of member institutes. reply dauertewigkeit 9 hours agoparentprevGood hiring managers can find the hidden gems. These are typically people who don't have the resume to join FAANG immediately, due to lacking the pedigree, but who have lots of potential. Also these same people typically don't last long because they do eventually move on. Also it helps that Europe is so behind in tech that if you want to do some cutting edge tech you are almost forced to join a public institution because private ones are not doing anything exciting. reply sofixa 5 hours agorootparent> Also it helps that Europe is so behind in tech that if you want to do some cutting edge tech you are almost forced to join a public institution because private ones are not doing anything exciting. This is genuinely cringeworthy. Do you think that companies in the EU all use COBOL on mainframes and nothing newer than 10 years old is allowed? Airlines and banks here(!) are rewriting their apps to be Kubernetes native... And have been doing so for years. Amadeus (top 2 airline booking software in the world) were a top Kubernetes contributor already a decade ago. The tech problems being solved at Criteo, Revolut, Thales, BackMarket, Airbus, Amadeus (to name a few fun ones off the top of my head) are no less challenging and bleeding edge than... \"the Uber of X\" app number 831813 in the US. Or fucking Juicero or Theranos or any of the other scams. reply guappa 8 hours agorootparentprevBecause doing the millionth CRUD in USA is very exciting? reply wvh 7 hours agorootparentOne wonders if things win because they really are better, or because there's sufficient financial momentum behind them. I have worked in the public sector for some years, and I don't think Europe is behind, just that the budgets are a lot smaller. If you want to capture a lot of people in an ecosystem or walled garden, you're going to need money, and lots of it. For all that's good and bad about it, most of that excess is concentrated in the US, in a few hotspots. No need to get distracted and put a flag on somebody like a Zuckerberg or Jobs or Gates though. reply sofixa 5 hours agorootparent> and I don't think Europe is behind, just that the budgets are a lot smaller. If you want to capture a lot of people in an ecosystem or walled garden, you're going to need money, and lots of it And the initial market you have is quite a bit smaller. Germany is the biggest EU country by population at 84 million, compared to 333 million in the US. Moving into another EU country means translating into a different language, verifying what laws apply to you, how taxes work, etc. Sometimes it's easy (just a translation), sometimes you might have to redo everything almost from scratch (e.g. Doctolib which schedule healthcare appointments, do meetings online with doctors, can be used to share test results, prescriptions - each new country they enter will have a lot of regulations on healthcare data that will need to be applied). But it's mostly the budgets. reply rob_c 12 hours agoparentprevYes, but that still covers infrastructure (cables) and a lot of equipment for the experiments including but not limited to massive storage and tape backup, distributed local compute, and local cluster management all with users busy trying to pummel it with the latest and greatest ideas of how they can use it faster and better... Not to mention specialist software and licences. 50M doesn't go that far when you factor all of this in reply vfclists 16 hours agoprev [14 more] [flagged] coherentpony 16 hours agoparenthttps://en.wikipedia.org/wiki/CERN#Scientific_achievements Here's a couple, in case you don't want to read the page: - CERN pioneered the introduction of TCP/IP for its intranet, beginning in 1984 - CERN has developed a number of policies and official documents that enable and promote open science - The CERN Science Gateway, opened in October 2023,[179] is CERN's latest facility for science outreach and education I purposefully picked items that weren't directly particle physics related. reply scottapotamas 14 hours agorootparentJust tacking some detail onto \"promote open science\". CERN was/is a large early user and supporter of the open source KiCAD electronics CAD tooling. The downstream impact of improved accessibility to solid ECAD tooling has been a large contributing factor to the growing ecosystem of open electronics. A lot of really impressive test and measurement equipment to support their research is developed in the open (see https://ohwr.org/project). People on HN are probably most likely to have heard of the White Rabbit timing project, but there's fantastic voltmeter designs, a lot of FPGA projects for carriers, gateware, fun RF designs. reply snugglebert 13 hours agorootparentThey also use the expensive big ECAD tools for the super complex stuff. But no secret - they are one of the reasons why Kicad isn't an ugly duckling anymore. reply magicalhippo 11 hours agorootparentprevThey have their own page for it: https://kt.cern/ There's a lot of use for the acceleration and sensor knowledge in the medical sector. Technology first developed for high-energy research can be used to improve CT scans[1], better cancer treatment[2] and so on. This goes way back. [1]: https://home.cern/news/news/knowledge-sharing/spectral-imagi... [2]: https://kt.cern/success-stories/pioneering-new-cancer-radiot... reply tiffanyh 16 hours agoparentprevInventing WWW is arguably the single greatest economic development in the history of mankind. reply hollerith 16 hours agorootparentBut if Berners-Lee hadn't started the WWW, someone else probably would have within a few years: the hard part was the development of the internet, i.e., a flexible low-cost wide-area network where anyone could start a new service (look in /etc/services to see all the services that people have defined over the years) without the need to get permission from anyone. IIRC the first WWW server went live in 1990. By then there was already WAIS, Archie and Veronica (search engines for anonymous-FTP sites). In 1991, the first Gopher server went live. Gopher grew rapidly till the late 1990s. The US government's Advanced Research Projects Agency started funding research into \"packet-switched networks\" in 1960 which would eventually lead to the internet, which went live in 1969 (under the name ARPAnet, but only a pedant would say that ARPAnet is not the early verion of the internet). Then the USG continued to fund the internet every year till it no longer needed funding in the early 1990s. So, CERN and Berners-Lee (mostly the latter because no one at CERN other than Berners-Lee cared much about the WWW in its early days before it became a big hit) get some credit for the WWW, but in my reckoning it is a small amount of credit. reply bozhark 15 hours agorootparentBut if… But wasn’t. reply Enginerrrd 16 hours agoparentprevA lot of the benefit has come from learning expertise in applications. Tons of the data science tools have roots in CERN. Tons of interesting statistical methods, tons of experience R&D with superconductors and all manners of sensors. Tons of math/ computation techniques / modeling, etc would not be here without for CERN. It would be sort of silly to expect that any of their actual discoveries or tests of the SM would have any actual application, but the ancillary benefits are there. reply hackernewds 14 hours agorootparentWhich tons? And why would it be silly? If actual new particles or physical phenomena were found the applications would be trillions reply adgjlsfhk1 13 hours agorootparenta particle that requires 30 km particle accelerator to produce isn't going to have that many applications on earth reply arlort 13 hours agoparentprev> practical social and economic benefits to humanity as a whole? Why does it have to be practical? Scientific discovery is a perfectly valid end in its own even if it only ever means that we understand the universe better The fact that almost always scientific discovery turns out to have practical purposes in the long run (centuries, not decades) is an added bonus. It's not like it's a huge expense either. If switzerland decided to it could cover the yearly budget of cern, by itself at the cost of a fraction of a percentage of its gdp alone reply dekhn 15 hours agoparentprevThere's a number of points to unpack here. High energy physics research has contributed some technology with social and economic benefits. Some of that has been direct results coming from pure research into fundamental properties of matter and electromagnetic radiation, some are indirect results that came about because when you build an institute like CERN, it spontaneously generates advances in other areas that solve more general problems (this is known as the \"collect a bunch of smart people in a single place, with a lot of resources, to solve a unique problem\" strategy). But no, most of the research, pure or applied, has not really had direct practical social and economic benefits to humanity as a whole. That's entirely missing the point. We, as a society, have decided that we will balance our economic productivity into several different areas- welfare, infrastructure, military, industry, science/research, technology. We believe that investments in areas of research which have no direct benefit still can have positive outcomes- partly through fundamental discoveries, but also enriching us as a species. We also believe these investments will ensure that we have the freedom to be productive in the future. A cynic might even say that CERN has played a critical role in keeping people from working on military applications, or working for the enemy. If your criticism (it's hard not to read your comment as an implicit criticism) is that we should invest the results of our productivity more directly into areas which maximize social and economic benefits- sure, this is argued about all the time. The SSC was cancelled, at least partly because people failed to see the value in having a world-class HEP facility in the US. reply rob_c 12 hours agoparentprev [–] No, but had cynicism? Off the member states the highest cost per used payer is still less than a bag of peanuts each year and most people with throw that at the TV over whatever upsets them without thinking. It's collective science not big pharma which is soaks tax payer money and then sells the discoveries back to you with 1000x markup. And yes CERN has played an important part in the scientific conversation of where we are in the universe and what is looks like. If you don't think that's important I think flat earth cults are working just as hard to derail conversations they don't want to join in good faith... reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "CERN manages an enormous 1 exabyte (EB) of data from the Large Hadron Collider, utilizing open-source projects such as CERNBox and EOS for efficient data handling.",
      "The Storage and Data Management Group at CERN is responsible for data archival, distribution, and ensuring secure access for over 30,000 users.",
      "FUSE (Filesystem in Userspace) is employed to facilitate global data access, enhancing the accessibility and usability of the data."
    ],
    "commentSummary": [
      "CERN manages an enormous 1 exabyte (EB) of data using FUSE (Filesystem in Userspace), facing challenges such as inotify issues within Docker containers.",
      "They utilize Rucio for efficient data management across various storage systems, ensuring global data distribution with tape backups and off-site replicas.",
      "Despite budget constraints and recent management changes favoring Microsoft, CERN continues to be a center for scientific innovation, contributing significantly to open science and technology, and is highly valued for its scientific discoveries and advancements in data science."
    ],
    "points": 210,
    "commentCount": 94,
    "retryCount": 0,
    "time": 1727823922
  },
  {
    "id": 41714750,
    "title": "Radio Shack Catalog Archive (1939-2011)",
    "originLink": "https://www.radioshackcatalogs.com/?_hsenc=p2ANqtz-9H5PQMgh6cUobaKL8FZ3-Ib1lk2jXz-BBrutnvv14LwcLObCTepV_IHs6nj83QW1bzJZzkyQpOm2OVPZbBmOmtzIMoRw&_hsmi=327012423",
    "originBody": "RadioShack Catalogs This template is provided by OpenElement and was made in partnership with Sensode. A complete FAQ is available describing various elements composing it (see the FAQ page in the Site Explorer on the left). In case of questions, please visit the forum. This text block can safely be removed and will not appear on the page. home MAIN CATALOGS COMPUTER CATALOGS SALE CATALOGS HISTORY MISC conTRIBUTE ABOUT In the virtual corridors of RadioShackCatalogs.com, a digital archive unfolds like a time capsule, preserving the history of RadioShack from its inception in 1921. As a venerable retailer, RadioShack had been a cornerstone of innovation for over 100 years, providing an array of cutting-edge technology products and services that spanned personal, mobile, and home technology. The heart of this online archive lay in its collection of catalogs, spanning the years 1939 to 2011. For 72 years, RadioShack had meticulously crafted these catalogs, showcasing a diverse range of products that mirrored the evolving landscape of technology. From hi-fidelity stereos to communication equipment, from computers to electronic components, these catalogs are a visual journey through the history of RadioShack. Brands like Tandy, Realistic, TRS-80, Micronta, Archer, Optimus, Clarinette, Nova, Patrolman, Enercell, and Science Fair adorned the pages, each representing a chapter in the RadioShack story. Professionals, tech-savvy consumers, and hobbyists alike eagerly perused these catalogs, seeking the latest gadgets, tools, and electronic wonders that would shape their world. What sets RadioShackCatalogs.com apart is its innovative approach to showcasing this historical material. The pages of these catalogs come alive in a page-flipping format, allowing users to traverse the years, page by page. Whether researching RadioShack products, immersing in historical material, tracking the progression of electronics and computer technology, or simply indulging in a nostalgic trip down memory lane, this site offers a unique and captivating journey through time experience. In a world where technology continues to advance, this digital repository ensures that the memories, products, and innovations of RadioShack will forever be accessible to those who wish to reminisce and appreciate the enduring impact of this iconic retailer. ▼ CLICK / SCROLL-DOWN TO VIEW CATALOGS ▼ MAIN CATALOGS 1939 1940 1941 1942-44 1945 1946-48 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 Retail 1961 Industrial 1962 1963 1963-64 Industrial 1964 Retail 1964 Industrial 1965 Retail 1965 Industrial 1966 1967 1968 1969 1970 1971 version 1 1971 version 2 1971 version 3 1972 version 1 1972 version 2 1973 1974 1974 Qwik-Fill 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 Retail 1999 Commercial 2000 2001 Retail 2001 Commercial 2002 U.S.A. 2002 Canadian 2003 U.S.A. 2003 Canadian 2003-04 2004-05 2006-09 2010 2011 COMPUTER CATALOGS 1977 TRS-80 Intro. RSC-1 1978 TRS-80 RSC-2 1979 TRS-80 RSC-3 1981 TRS-80 RSC-4 1981 TRS-80 RSC-5 1982 TRS-80 RSC-6 1982 TRS-80 RSC-7 1983 TRS-80 RSC-8 1983 TRS-80 RSC-9 1984 TRS-80 RSC-10 1984 TRS-80 RSC-11 1985 Tandy RSC-12 1985 Tandy RSC-14 1986 Tandy RSC-15 1986 RS Software RSC-16 1987 Tandy RSC-17 1987 Tandy RSC-17b 1987 RS Software RSC-18 1987 RS Software RSC-18e 1988 Tandy RSC-19 1988 RS Software RSC-19e 1989 Tandy RSC-20 1989 Tandy RSC-20a 1989 Educational RSC-20e 1990 Tandy RSC-21 1990 Educational RSC-21e 1991 Tandy RSC-22 1991 Tandy RSC-22a 1991 Educational RSC-22e 1992 Tandy RSC-23 More Computer Catalogs! HISTORY A BRIEF HISTORY CHARLES TANDY STORY BEHIND COMPANY UNIQUE TECH COMPANY RADIO SHACK STORES TRADEMARKS ANNUAL REPORTS EMPLOYEE PUBLICATIONS RADIO SHACK SCRAPBOOK TANDY CORPORATION ADDITIONAL MISCELLANEOUS SALE CATALOGS & FLYERS ADVERTISEMENTS TV COMMERCIALS STORE/CORPORATE VIDEO EDUCATIONAL VIDEOS \"ANSWERS\" MAGAZINES COMIC BOOKS SURPRISE PACKAGE SCIENCE FAIR KITS MISCELLANEOUS Navigating the Catalogs Link: AlliedCatalogs.com Link: TandyShowcase.com . CONTRIBUTE / DONATE / CONTACT Contributions of missing catalogs or unique RadioShack material are welcome and appreciated. Want to contribute to RadioShackCatalogs.com ? The process of meticulously disassembling, hand-scanning, digitally enhancing images, organizing, and preparing each catalog page for online viewing is incredibly time-consuming. Additionally, there are continuous expenses involved in acquiring new publications, conducting research, maintaining web hosting, and covering other web-related costs to keep this site running. Your financial contribution or donation of missing material would be immensely appreciated and would significantly contribute to the sustainability of this website, both now and in the future, ensuring its availability for everyone to utilize and enjoy. Contact Email: ~ Michael Please SUBSCRIBE to my Radio Shack and Allied Radio YouTube Channels: ©2008 - All RS copywritten content has been authorized to be displayed by TRS Quality Inc. / RadioShack Corporation (2013) to maintain historical records of Radio Shack. RadioShackCatalogs.com is not associated or affiliated with Radio Shack Corporation or its subsidiaries and/or affiliates.",
    "commentLink": "https://news.ycombinator.com/item?id=41714750",
    "commentBody": "Radio Shack Catalog Archive (1939-2011) (radioshackcatalogs.com)199 points by rmason 20 hours agohidepastfavorite80 comments Brett_Riverboat 7 hours agoRadio shack is at least indirectly responsible for me disassembling ( and sometimes successfully reassembling) most of the electronics in the house growing up. The tools and DIY gear they carried enabled me to learn and build electronics. I'm still salty about the bafflingly stupid decision to become little more than a cellphone store. reply snakeyjake 20 minutes agoparent>I'm still salty about the bafflingly stupid decision to become little more than a cellphone store. That was a little after my time, but back in the 90s my second job after I got tired of being a dishwasher was at Radio Shack. During the brief time I worked there if I sold a single Tandy Sensation! (had to say it with the exclamation mark) the profit on that sale would exceed, by a lot, every single component we sold the entire month, and as an awkward teen I sold a lot of Tandy Sensation!s per month. At my store, when I worked there, electronics parts took up about a quarter of the square footage of the store but was practically none of our revenue. The only people buying electronics parts were church AV guys trying to fix a worn out 1/4\" jack or blown capacitor in an amplifier. Can't pay rent on those guys. As an outsider I watched the parts shelves go from most of the back of the store to a single set of drawers to nothing and I can't say I blame Radio Shack. A lot of time was spent inventorying a mindboggling array of components, none of which sold in volumes great enough to justify the expense or the space. reply ravenstine 6 hours agoparentprevSame! I took apart so many electronics when I was a kid. In retrospect, I really have to appreciate my parents putting up with this. Fortunately, I didn't permanently destroy anything... most of the time. Radio Shack was paradise for me in terms of being able to fix stuff and also build my own electronics. I built an AM radio transmitter from scratch using Radio Shack parts. That made my 11 year old self feel like I had discovered fire. What happened to Radio Shack is pretty sad. I get that the business simply wasn't going to sustain at that scale as consumer tech evolved, but RS caused their own decline way sooner than it should have happened. Becoming a high pressure cellphone retailer was a stupid idea, and I remember their selection not even being that good to begin with. And, like Kramer from Seinfeld said, Radio Shack really wanted your phone number for purchasing something as simple as batteries. Today, phone numbers are asked for all the time when purchasing something like groceries, but I remember Radio Shack being overly aggressive in getting your phone number. Meanwhile, their electronics component inventory kept dwindling. At least with Fry's Electronics, they still had a lot of components on the shelf right until the very end, as ridiculously overpriced as they were, whereas Radio Shack seemed to dismiss its core audience. reply buescher 1 hour agoparentprevMy recollection is that they got out of the computer business after a very serious embezzlement case left them kind of broke around 1990, and that was the beginning of the long tailspin, but I can't find a reference to the exact story. reply imglorp 5 hours agoparentprevThey didn't quite hit the right tone in their other markets either. It's hard to pay rent selling $2 packs of components. Computers were ok for a while, especially at the beginning, but not selling. They didn't want to compete on TVs. Hifi gear seemed a shrinking market. I'm not sure what I would have done differently in their place. reply epcoa 4 hours agorootparent> I'm not sure what I would have done differently in their place. Microcenter. Granted much larger and fewer store model, not a slot next to Orange Julius. But RadioShack was famously cluelessly managed for years. reply buescher 1 hour agorootparentRight plus that was the transformation that was happening that they didn't follow - electronics and gadgets out of the mall and into big box stores like Best Buy and Circuit City. Tough too to get by on small parts for minor repairs when things break rarely and then aren't worth fixing. Time was grocery stores had little tube tester kiosks, you know. That said, Batteries Plus seems to have a business. reply mc32 2 hours agorootparentprevI love the The Onion’s parody interview of Radio Shack’s CEO. It was an epic rant. https://theonion.com/even-ceo-cant-figure-out-how-radioshack... reply snozolli 58 minutes agorootparentprevI'm not sure what I would have done differently in their place. I remember some buzz around carrying Arduino not long before they went out of business. They drifted away from the DIY scene into cellphone kiosk territory. Maybe if they shuttered a bunch of stores and leaned into the new era of DIY (Arduino, 3D printing, drone parts) they might have survived. reply briHass 16 hours agoprevBoy, do I miss those catalogs, and that's not just the nostalgia talking. Flipping through the parts, tools, and accessories is perfect project idea fuel, and if you've hit a frequent/current snag working on something, the color photos and well-written descriptions may present the perfect tool or component for solving the problem. Sure, the Internet made access to any part you needed at prices that still make RS look like highway robbery (even after 30 years of inflation!), but there's something to be said for a curated list of the most common items a tech-geek would need, in a store where you could have the item in your hand in a hour. reply seoulbigchris 10 hours agoparentI can't put my finger on it, but there was something more accessible when you had a physical catalog in your hand. I am not knocking modern online catalogs, which are great when you know what you want. Take Digikey, for example, often I don't know exactly what I want, but only roughly. It was so quick to just flip through the pages in the correct section of the catalog and zero in on it. The search features we have on Digikey's website today are excellent, but I can't help but feel they are still a little slow in many circumstances. Maybe it is just my age. EDIT grammar and a missing phrase. reply detourdog 7 hours agorootparentI think the knowledge that the catalog was complete. When researching on the internet one never knows how thorough one’s research is. reply analog31 6 hours agorootparentprevI echo this experience. Also, thumbing through the catalog, you built a mental library of parts, so you could visualize an idea for a circuit or gadget. Same with \"reading\" the IC databooks. A drawback was that the Radio Shack catalog was curated, and therefore, outdated. That's where Digi-Key and others (RS Electronics, McMaster-Carr) were eye-opening. Today the Digi-Key catalog would be a foot thick. reply HeyLaughingBoy 5 hours agorootparent> Today the Digi-Key catalog would be a foot thick At least. The last one I remember them sending me about 10 years ago was already almost 3\" thick. reply ocean_moist 14 hours agoprevSome of my earliest memories are at a Radio Shack trying to convince my dad to buy me an RC car. Eventually we switched to Fry's (where I bought and built my first computer) but that died too... Now there's a big hole in the bay area and I am probably one of the last people to have that sort of childhood staple. Although, Microcenter might be a worthy replacement once it's done. reply MarioMan 14 hours agoparentLast time I was in the bay area, I went to Central Computers, and it fills a lot of the niche that Microcenter offers elsewhere in the country. It's one of the few places I can find Raspberry Pis at MSRP (without the high shipping prices from online retailers), and it has enough worthwhile parts for you to build your own PC if you wanted, too. reply kstrauser 1 hour agorootparentI love Central Computers. We needed some weird cable to connect 2 very different devices and I grabbed a coworker to take along for the journey. He was highly skeptical that they'd have something as odd as we needed. They had an entire aisle section devoted to the genre with different lengths and colors. When I need something unusual, and I need it right now, they're the first place I look. I try to throw more common business their way, too, because I want them to be open and available forever. reply cancerhacker 4 hours agorootparentprevSanta cruz Electronics (Bay Area adjacent) sells them as well as passive components and NTE chip replacements. I even went there a year ago to buy a passive SCSI terminator- the guy went in back and came back with a dust covered box marked SCSI $5/per and let me dig for what I needed. reply dimator 14 hours agorootparentprevI love giving them my business when I can. I hope they're thriving, whatever that means for brick and mortar anymore. reply 0xEF 10 hours agoparentprevI have a Microcenter within biking distance. You are going to hate their prices versus what you can get the exact same product for online. Plus, still no individual electronics components. One of the biggest things I miss about Radio Shack was being able to go buy just the five capacitors I needed to repair something, all housed lovingly organized by value in those sliding drawers. reply paulryanrogers 7 hours agorootparentOur microcenter price matches major online retailers reply amacbride 13 hours agoprevThe Radio Shack catalog (and Radio Shack itself) was a hugely influential part of my childhood. My grandfather (Berkeley EE '34) was a huge fan, and one of my favorite early Christmas gifts was the 75-in-1 Electronics Kit, which taught me the fundamentals of electronics. Later, I got my first computer (a TRS-80 Model I), and I would write programs for school assignments, then ride my bike to the Radio Shack Computer Center so that I could print them out. I glad we have websites like SparkFun and friends, but there was something about browsing the catalogs or visiting the stores that was creatively inspiring. (RIP Fry's) I was at MicroCenter in Cambridge yesterday, so that experience isn't totally lost, but it's harder to find. reply ravenstine 6 hours agoparentMicroCenter is a national treasure I hope we don't lose. I just moved nearby Cambridge, so I'll have to check that one out! reply whartung 2 hours agoprevI used to get their electronic kits. They came in a plastic box, which was also the perfboard, and it was point to point soldering. Those were great fun for the curious. I also remember being quite excited when I got one of their \"Flavoradios\", in yellow, for Christmas one year. Outside of a cell phone, which, yea, I bought one there, my last major purchase was a handheld CB radio. I still have it, I wish I could open it, the batteries leaked and compartment is sealed (and you need to get inside to unscrew the housing). But it was nice because I got it for a 4WD trip, and I knew that if anyone was going to have a CB radio, it was Radio Shack. And they did, and it worked great for that trip. That was probably 2000, 2001 or so. I spent a lot of time at the Radio Shack as a kid, my folks bought a lot of stuff there, including computers. reply musicale 16 hours agoprevThe best part is the computer catalogs. I'm interested in that TRS-XENIX operating system from 1983: > Derived from Western Electric's UNIX™ Operating System. The 1983 lineup (RSC-8) is impressive - everything from handhelds to home/game systems to CP/M to multiuser/UNIX systems. It's a shame that they apparently discouraged third-party software and games. [Writing this post on a Unix-based system from Apple, Radio Shack's less-successful competitor.] reply zabzonk 15 hours agoparentFirst time I've seen it as coming from WE - I suppose due to the unbundling of Bell Labs. I actually developed business apps (and did sysadmin) on Altos Xenix machines back in the early nineties - they were quite nice. reply NoMoreNicksLeft 4 hours agoparentprevI have a TRS-80 Model 6000 with Xenix in a closet somewhere. But I've only ever powered it up a few times and seen the prompt... even 20 years ago when I got it at the flea market, it was impossible to scrounge up the 8\" floppy disks the thing used. Always meant to explore a little more with it, never did. There's a knockout in the back for an arcnet card... this thing really could be networked with more than just serial/modems. Pretty weird. reply technothrasher 3 hours agorootparent> even 20 years ago when I got it at the flea market, it was impossible to scrounge up the 8\" floppy disks the thing used. https://www.floppydisk.com/5point25 reply NoMoreNicksLeft 1 hour agorootparent> We carry a variety of 8\" disks. Please call (800) 397-7890 for details. Don't even want to know. That's some \"the menu doesn't have any prices listed\" bullshit. reply kstenerud 2 hours agoprevFrom the 1979 catalog (the first one featuring home computers - the TRS-80), page 82: Editor/Assembler Program Although 16K of RAM is required, this package will run with Level-1 BASIC. It is a 2-cassette program which creates both source and object files. Microsoft, an industry leader in systems software, has developed this program - so you can expect the ultimate in editing features. Standard Zilog mnemonics are used; macros and conditional assembly are not supported. $29.95 reply scrapcode 3 hours agoprevRight on time for me - as I'm looking to identify a certain plug (it appears to be a micro JST) Is there anything currently similar to McMaster-Carr[0] for electronics? They seem to do the best in terms of a technical parts catalog. [0] https://www.mcmaster.com/ reply fragmede 2 hours agoparentdigikey mouser jameco immediately come to mind but there are more. octopart has a listing reply ProllyInfamous 4 hours agoprevI knew Radio Shack was doomed after their introduction of the CueCat [0]. A free, hackable device which cost Radio Shack $6.50/unit (just to manufacture)? I'll take three... For anybody looking through OP's Catalog Archive, this would have been late-2000/early-2001. [0] wikipedia.org/wiki/CueCat reply slowmovintarget 4 hours agoparentFunny how ideas like that were waiting for the pocket computers we now all carry around with us. reply hammock 3 hours agoparentprevThey gave it away for free? reply ssl-3 7 minutes agorootparentReports varied pretty broadly, but yes: They were generally \"free.\" (The whole game was meant to drive customer interaction, and making the game pay-to-play would've been even stupider.) At the Radio Shack that I frequented, they weren't quite free: I had to take a paper catalog along with the barcode reader -- even though I already had a copy of that same catalog on my coffee table at home that they'd sent in the mail. I wound up with a couple of them that I never did much with. (I had some grand ideas of using them for automated shopping lists for pantry items that worked fine in my head...until I realized that the concept required very good compliance from the entire household or it became pretty useless. I didn't want to start that war so the concept went nowhere.) reply ok123456 3 hours agorootparentprevThen, they tried to use the DMCA to stop people from writing open-source drivers that would have enabled it to be a generic barcode reader. There were a lot of heated words on Slashdot about this back then. Now, people would just accept that. reply whartung 3 hours agorootparentprevThey MAILED THEM TO YOU. Like AOL CDs. They just showed up one day. reply kstrauser 1 hour agorootparentI think mine came bundled with an issue of Wired. reply shireboy 2 hours agoprevThis is so cool. I just sent to my kids as they always ask what computers/phones/music/etc. was like \"when I was a kid\". reply tivert 5 hours agoprevhttps://www.radioshackcatalogs.com/flipbook/2002_radioshack_... That cover is so late-90/early-2000s. reply atentaten 14 hours agoprevAre there any online shops that are good for purchasing electronic components and gadgets like Radio Shack? reply ramenbytes 14 hours agoparent- Digikey - Mouser - SparkFun - Adafruit - Antique Electronic Supply - Sphere Research Corporation -Ebay, occasionally, if the seller is trusted and known by your corner of the electronics community. There are several mailing lists where you can get equipment and parts as well over on groups.io. - test-equipment-buy-sell-exchange - tekscopes - hp-agilent-keysight-equipment and other sources that I'm not remembering off the top of my head. Check out the EEVBlog forums, they probably have a list somewhere, or can tell you where they shop. Same with the various mailing lists. If they don't have it, they might be able to point you towards who does. reply dghlsakjg 2 hours agorootparentMicroCenter is good too, especially if you can go in person reply tyingq 9 hours agorootparentprevA little more niche, but tindie.com also. reply Molitor5901 19 hours agoprevPosted 36 days ago https://news.ycombinator.com/item?id=41359903 reply kjhughes 18 hours agoparentThat's ok -- any mention of Radio Shack catalogs will always make me smile. reply wannacboatmovie 14 hours agoprevThis is a brilliant website, destroyed by abhorrent UX. Completely unusable on mobile. A link to some PDFs would be 1000x more effective. It makes me long for the simple paper catalogs. reply schlauerfox 1 hour agoparentI hope the PDFs get uploaded to a torrent file on the archive.org site sometime, that would be much easier. reply Tempest1981 11 hours agoparentprevI found it less jarring once I found the sound OFF toggle. There is also a mobile mode, but not like a bulk PDF. I'm guessing they're saving bandwidth by loading each page individually. If they gave me PDFs, I would spider all 73 years like a packrat, and look at < 10% of them. reply NoMoreNicksLeft 4 hours agoparentprevI think there's a trivial wget script that would download each page and pdf-ify it, but I figured I could be lazy and let someone else write it and just reap the rewards without the work. reply SllX 13 hours agoparentprevYeah I came back to this thread to see if anyone tracked down the source PDFs so I could virtually thumb through some of these on my way home. Can’t get one to load and not refresh itself constantly on my phone. reply neom 16 hours agoprevInteresting the brand name was \"Realistic\" - seems like something you'd have expected to have evolved out of a toys company or something -- https://www.radioshackcatalogs.com/flipbook/1985_radioshack_... If Argos is your thing: https://retromash.com/argos/ reply fsckboy 14 hours agoparentRadio Shack comes from the days of AM radio and baffle-less speakers, when sounding \"Realistic\" was a somewhat distant goal reply daniel_reetz 11 hours agoparentprevI worked at RS in '99/00- at the time \"Realistic\" branded stuff was RCA produced. Sometimes we would have identical items from both companies, with the Realistic model on sale or special with free batteries or an extended warranty. reply tamaharbor 18 hours agoprevDon't be jealous, but I was a member of the exclusive \"Battery of the Month Club\". reply slowmovintarget 15 hours agoparentNot jealous... I worked at a Radio Shack as a clerk. The training program was something else. It took weeks of studying books and taking tests to get \"certified.\" I could diagnose and prescribe for any TV or media combination. 300 ohm wire, 75 ohm cable, or mix and match for fun. Need RCA cord? No problem, let me show you these gold-plated patch cords (back before digital audio, when that made a difference). You're going to need two splitters and this switch here... And then there was the day where I spent two hours selling that Tandy 1000. It was going to be my biggest commission ever! Just as I was about to ring it up, my boss rolls over and says, \"Don't worry. I've got this.\" Fairly soon after that I chose to not be an employee of Radio Shack. reply AStonesThrow 14 hours agorootparentImagine working at Best Buy instead, where they managed to sell a cable modem to my neighbor, a Qwest ADSL subscriber. reply dole 3 hours agorootparentI worked at both around 94-95. IIRC, RS's commission started paying if you could sell more than an avg $75/hr for a pay period and a bonus rate if you hit $115/hr. BB made you hit a minimum of like $2000/day if you were in the computer dept. Edit: the RS I worked at was across the street from a mall that had an RS in it. I very rarely made commission. reply UberFly 16 hours agoparentprevYep. And the giant plastic flashlight giveaways that took like 6 D batteries, and those round doughnut magnets that were fun to buy and sneak into school. Still have them. Fun days. reply kjhughes 15 hours agoparentprevPhoto of the Radio Shack Free Battery Club card: https://www.reddit.com/r/nostalgia/comments/8f6p9i/battery_c... reply pupppet 18 hours agoprevI still dream of getting that Robie Sr. reply Loughla 18 hours agoparentGod that thing was all My child self wanted but knew we could never afford. It was like the real future for me to play with. reply russellbeattie 14 hours agoparentprevMy deep unquenchable desire for a Realistic PocketVision 2\" battery powered portable handheld color television just took over my mind for a minute, despite me browsing the catalog on what would have been considered a mobile supercomputer with a 6\" HD screen. Our childhood dreams never really die. reply drivers99 19 hours agoprevThis is fascinating. I just started getting into radios, how they work, how to build them from scratch, history of them, etc. reply HeyLaughingBoy 5 hours agoparentYou, sir or ma'am, need to get a copy of the ARRL Radio Amateur's Handbook. Preferably an old one from the mid-late 80's when building radio receivers (or transmitters, if you're licensed) was still pure analog fun. reply Gibbon1 14 hours agoparentprevBlast from the past my dad bought the the one tube radio kit on page 67 in the 1970 catalog and used it to try and teach me some basic electronics. reply detourdog 19 hours agoprevJust today I was stunned to see a radio shack show up in my search while visiting Annapolis. reply bronson 14 hours agoparentA hedge fund bought some assets out of bankruptcy and now the locations are basically off-brand cell phone stores. reply cancerhacker 4 hours agorootparentCoast Electronics in San Louis Obispo still flys the Radio Shack marque. I didn’t have a chance to stop in, but the yelp pages show drawers of components that might date back to when it was a RadioShack proper. reply detourdog 5 hours agorootparentprevThat is what I was searching for. I had hoped some Uber geeky cell phone store might exist in the area. I was hoping to find a store that specializes in routers over cellular backbones. reply cduzz 11 hours agorootparentprevIn an alternate universe where Radio Shack still lived, wouldn't the real Radio Shack also be selling off brand cell phones? Systems like the Tandy Model 102 (cue \"Bill Gate's last coding project!\") were US localized Kyocera computers, for instance. Unrelated, even Sadly even You-Do-It closed their physical location. reply AStonesThrow 16 hours agoprevWhen my parents married, my father built a component stereo system by Heathkit, giant speakers included. He was also a DX'er who curated a nice den full of radio receiving equipment. Radio Shack was like a constant companion to us, among other outlets. When I was in high school, Grandma would take me and my sister on the bus to the shopping mall. When I wasn't flirting with the tall blonde clerks in a record shop, I was hanging out in Radio Shack having long tech convos with \"Jon\" the junior clerk. I purchased all kinds of gadgets during that time, including cool microphones for \"clandestine\" recording; a matching microcassette recorder and media; a 2\" LCD television set, handheld and battery-powered; a complete 100-project eletronics kit; an Armatron robot arm; radio-controlled sports cars; you name it! We went there like every week, and the sky was the limit for gadgets that followed me home, and Jon was quite entertaining, as he knew he'd always make that sale if he was friendly and patient with this tech-nerd teenaged boy. Always the highlight of my week. Fast-forward to 1998, and I'm in Oregon, with no car, and the only points of interest in my neighborhood are a Subway sandwich shop, and a Radio Shack, so I obtained a store credit card and picked up one of those gigantic CD changers, and a remote-controlled boat, because I lived in a lakeside apartment. Good times! reply brudgers 18 hours agoprevI have used this before and think it is awesome. I wish the site allowed searching by catalog number. reply JKCalhoun 14 hours agoparentI wish I had access to PDFs of the catalogs — didn't have to use their built-in viewer. reply mixmastamyk 17 hours agoprevThe “psycho light” and super tweeters were two of my favorites from the middle of that era. reply JKCalhoun 13 hours agoparentThe \"psycho light\" a kind of color organ? reply mixmastamyk 2 hours agorootparenthttps://www.worthpoint.com/worthopedia/vintage-1970s-s-reali... Spelled “lite”. I thought so but wasn’t confident about it. reply 01jonny01 4 hours agoprevSad to see Tai Lopez never carried on publishing the catalogue :S reply jsbg 19 hours agoprev [–] Seeing $499 VHS players in 1989 really puts in perspective all the keynesian deflation fear mongering. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "RadioShackCatalogs.com is a digital archive that preserves the history of RadioShack from 1921 to 2011, featuring catalogs from 1939 to 2011.",
      "The site showcases a variety of products, including hi-fidelity stereos, communication equipment, computers, and electronic components, highlighting brands like Tandy, Realistic, and TRS-80.",
      "The catalogs are displayed in a page-flipping format, providing a nostalgic experience of RadioShack's technological evolution, and the site invites contributions of missing catalogs or financial support for maintenance."
    ],
    "commentSummary": [
      "The Radio Shack Catalog Archive (1939-2011) has ignited nostalgia and discussions about its influence on electronics enthusiasts.",
      "The shift from DIY electronics to a cellphone store is viewed as a poor decision, contributing to Radio Shack's decline.",
      "The catalog was a source of inspiration, offering a curated list of parts and tools, a physical experience now missed in the era of online stores like Digikey and Mouser."
    ],
    "points": 199,
    "commentCount": 80,
    "retryCount": 0,
    "time": 1727820297
  },
  {
    "id": 41715747,
    "title": "Northern Ontario man solves local legend, finds vintage liquor at bottom of lake",
    "originLink": "https://www.cbc.ca/news/canada/sudbury/larder-lake-local-legend-sunken-taxi-vintage-liquor-1.7332124",
    "originBody": "Access DeniedAccess Denied You don't have permission to access \"http&#58;&#47;&#47;www&#46;cbc&#46;ca&#47;news&#47;canada&#47;sudbury&#47;larder&#45;lake&#45;local&#45;legend&#45;sunken&#45;taxi&#45;vintage&#45;liquor&#45;1&#46;7332124\" on this server. Reference&#32;&#35;18&#46;916adc17&#46;1727895719&#46;c0234ddb https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;916adc17&#46;1727895719&#46;c0234ddb",
    "commentLink": "https://news.ycombinator.com/item?id=41715747",
    "commentBody": "Northern Ontario man solves local legend, finds vintage liquor at bottom of lake (cbc.ca)193 points by colinprince 19 hours agohidepastfavorite54 comments thedailymail 18 hours agoBesides the intrinsically fun story, I really enjoyed the small-town news vibe of the whole article – the local guy who discovers the sunken taxi while fishing, takes a photo of its hubcap, samples some of the whisky, and takes a selfie showing his wincing reaction to the \"rough\" second bottle. In ye olden days, local newspapers would be full of charmingly mundane stories like these alongside town council minutes, the results of the 5K fun run, and lots of classifieds. reply joshdavham 18 hours agoparentFor all the hate that the CBC gets, I actually do think they do a pretty good job most of the time. reply xipho 17 hours agorootparentCBC gets hate perhaps because it's intellectual. Growing up in a house with no TV it was on all the time. The best news, comedy, and music, and programs like Ideas to make you think. The US has PBS, but it has never felt quite like peak CBC to me. Of course this was 40+ years ago, YRMV now. reply goalieca 17 hours agorootparentCBC is far from intellectual. There’s far more politically neutral programming about current events out there including Steve Paiken on TVO. CBC News editors seem to be very selective about chosen stories and which seem to align with the narrative of the current political party. There’s little room for playing devils advocate. While they have a mission for diversity, it’s clearly not a diversity in thought they strive to represent. reply dyauspitr 5 hours agorootparentWhenever I’ve seen “diversity in thought”, it’s usually a justification for a room full of white people in a multi ethnic society, apparently thinking differently. reply canadiantim 17 hours agorootparentprevThe CBC gets hate for being politically biased and involved, while being publicly funded. Many if not most of the people calling for defunding the cbc still believe it often produces high quality content. reply goodcanadian 7 hours agorootparentI have not watched the CBC regularly for a few years (because I no longer live in Canada), but I grew up in rural Alberta, about as conservative of an area as you can get. When I was young, I was annoyed by the slight liberal bias of the CBC. Then I met someone from Ontario who complained about the conservative bias of the CBC. It was at that point that I decided the CBC actually probably did a pretty good job of riding the line if people on both sides are complaining that it is biased towards the other side. Now, it is possible that it has changed (my politics certainly have), but I think it does a pretty good job. reply mykowebhn 6 hours agorootparentAlberta really does seem like the Texas of Canada. On another note, I did a cross-country road trip across Canada many years ago. I loved it, and people were so nice everywhere, except in Edmonton, Alberta. The people there walked around with sneers and seemed to be suspicious of all visitors, like me. I won't ever be back in Edmonton for sure. Calgary, on the other hand, was super nice and the people friendly. reply goodcanadian 4 hours agorootparentThat's interesting. Edmonton was the closest major city to me growing up. I always kind of liked it. There are definitely nicer cities in the world, but I have never had any complaints about it. reply lovethevoid 5 hours agorootparentprevCalling Alberta the Texas of Canada is exactly what it wants. It’s much more like an incompetent Michigan with an unreasonable amount of Trump supporters. Its heavy reliance on oil is a lot like Detroits heavy reliance on the automotive industry. The fact that leadership was even seriously considering abandoning one of the worlds best public pension funds is indicative of how short term greed is killing the province. reply randomdata 3 hours agorootparentAlberta wasn't seriously considering abandoning CPP, it was seriously considering taking it. reply nucleardog 5 hours agorootparentprevAre they biased or just an outlier? Almost every other news outlet in Canada has a definite slant and actively endorse one political party. In that landscape, an outlet that’s truly neutral is an outlier and would _appear_ biased. (And that’s not even getting in to how it would look next to a lot of the US “news” many people consume.) For my money, the CBC gets a lot of shit not because of bias or political activism, but because they’re one of few news outlets (certainly big ones) that _isn’t_ actively espousing a particular viewpoint. When you already own the entire media landscape, that makes it a bit of a thorn in the side. reply randomdata 4 hours agorootparent> Almost every other news outlet in Canada has a definite slant and actively endorse one political party. Unless you are counting Postmedia's 130 different brands as independent news outlets, that is quite an exaggeration. Torstar and Postmedia tend to endorse a party, as do a few other small newspapers you've probably never heard of, but that's about the extent of it. There are a lot more news outlets than that. Significantly, broadcasters, which includes the CBC, most certainly do not endorse a political party as doing so would be a clear violation of the Broadcasting Act. reply ziofill 18 hours agoprev“I was excited. I almost gave up fishing for the day.” I love how he almost gave up fishing. reply roymurdock 15 hours agoparentPossibly the most Canadian thing I've ever read reply Rinzler89 7 hours agorootparentSecond to \"housing is too damn expensive\" reply justusthane 17 hours agoprevDid not expect to see my home pop up on the front page of HN — I live in Northern Ontario, and only a ten hour drive from where this article is set! More seriously, I did actually live just an hour south of there briefly. Northern Ontario is a big place. reply OptionOfT 14 hours agoparentBeing from Belgium a 10 hour drive makes me go from Belgium -> Netherlands -> Germany -> Austria. Now that I live in the USA it's... weird. I moved from 1 city to the next city. 7 hours away. reply Tyr42 6 hours agorootparentIn Europe, 100 years is recent history; in America, 10h drive isn't too far. reply potato3732842 3 hours agorootparentprevCalais is farther from Paris in Maine than in France. reply throwup238 18 hours agoprevI'm curious if there were any way to bring up the whiskey bottles without losing the contents when they pop? Something like an underwater bag that they can place the whiskey into, then pump out any air, and pour the popped whiskey from the bag into the bottle when they're on the surface. reply Brian_K_White 17 hours agoparentI think if they are popping from coming up, that means the pressure forced lake water into the bottle around the cork, and so the contents are corrupt anyway. Still safe to drink, just not a preseved example of whatever it was originally. Destroying 3 out of 6 of something is a terrible custodial record. Especially the other 2 after they already had the 1st explode. It gives all non-professionals a bad name and gives elitist professionals ammo against anyone but themselves daring to dig or explore or even be interested in anything without a license. reply s1artibartfast 16 hours agorootparentIt's not like he was opening king tuts tomb. I don't think it it was a custodial relationship- it was basically trash reply adolph 14 hours agorootparent> it was basically trash Exactly. Just like Al Capones vaults. They just needed to wait a few several hundred more years. Then they could do the custodial thing. Maybe if they start a foundation now they can make sure nobody forgets about it until they can make bank with the historicity. reply lupusreal 8 hours agorootparentAfter enough time has passed, records and analysis of excavations may be lost and proper archeology just becomes looting again. It's possible this has already happened; for instance in Egypt where ancient people might have dug up far more ancient ruins while properly writing down and cataloging their findings, but those records have been lost to us and we remember them as looters. reply fsckboy 16 hours agorootparentprev>that means the pressure forced lake water into the bottle around the cork no, it doesn't. perhaps the cork seal was tight enough to not let water pass, but helium could get through. The lake water pressure and very trace amounts of helium in the water would slowly increase the pressure in the bottle due to helium infiltration. of course other \"air\" molecules might make it in, H2 or N2 (i'm not an expert on the size of N2) reply lupusreal 8 hours agorootparentShouldn't the partial pressure of helium in the lake water be extremely low, given the low partial pressure of helium in the atmosphere above the lake? Physics class was a long time ago but I think that's how Henry's Law works. reply 93po 2 hours agorootparentthe partial pressure of helium in the atmosphere is minimal (about 0.0005%), and the amount in the lake water would be even lower, making helium infiltration unlikely to be a significant factor. my extremely unqualified opinion is that water seeped in through the cork, but the cork was still fairly well lodged in place, so it had the high pressure of being 15 meters down despite not being originally bottled at pressure, and when brought back up, the glass shattered instead of the cork popping out reply userbinator 17 hours agoparentprevSomething like a decompression chamber. reply dekhn 18 hours agoparentprevNeedle through the cork. reply userbinator 17 hours agoprevHe says the car is \"too fragile to remove,\" so it will stay at the bottom of Larder Lake for other divers to enjoy. I'm sure that would give a few YouTubers some ideas. \"Submerged for almost 90 years, will it run?\" This is what an intact one looks like: https://www.flickr.com/photos/carphotosbyrichard/51802374832 reply Animats 15 hours agoprevForget the booze. Too bad they couldn't recover the car. The 1929 REO Flying Cloud was a cool car.[1] (Although the guy who fully restored one couldn't get more than US$22K for it.) [1] https://bringatrailer.com/listing/1929-reo-flying-cloud-mode... reply loopdoend 14 hours agoparentLosing a quart of oil every 150 miles seems bad? For the environment more so than the price of the car? reply Animats 14 hours agorootparentUntil the 1980s, most cars came with a mandatory oil leak. Look at pictures of 1970s freeways, with a dark band down the center of each lane. It wasn't until the 1980s, when Japanese cars got good, that it became abnormal for automobiles to leak their working fluids. Restoring really old, rare cars means paying for custom part manufacturing. Or having your own machine shop. There are still parts for 1957 Chevys, but a 1929 REO, no. reply OptionOfT 14 hours agorootparentWhen you drive to 'certain' parts of towns there is always an uptick in stained parking spots from oil leaks. reply bluGill 7 hours agorootparentThose cars are much more used. as a kid my dad had a car turn 100k miles - he called all his friends to see. He added oil as he left, drove off in a cloud of blue smoke (burning oil was blue) and when he returned a ten miles latter he already had to add more oil. Now I have a car with 200k miles and I rarely check the oil. reply potato3732842 6 hours agorootparentprevIt didn't have seatbelts or crumple zones either. I know that judging the past by the morals of the present is a fashionable but pretty much everyone in 1929 found oil on the road far preferable to horse excrement. reply bigbacaloa 12 hours agorootparentprevWhen I was a kid I had to keep several quarts of oil in the car in order to replenish when necessary. Also a bottle of antifreeze and several bottles of water. reply Aeolun 15 hours agoparentprevOn the plus side, if the reserve was not met, at least he still has the car :) reply potato3732842 6 hours agoprevLiquor, hazmat-ish object in a body of water, serialized property (car). Living in the US I wouldn't touch this with a 10ft pole lest some bureaucracy make me responsible cleaning it up \"the right way\" or something (and we all know they don't just let you and your buddies winch it out over a few beers). I'm glad Canada seems a little be more sensibly lassiaz-faire about these things when the actions are being taken in good faith. reply kmoser 14 hours agoprevAt what point does it become legally fair game to remove the car and/or its contents? reply bluGill 7 hours agoparentWhen the government dissapears and so can't protect the owners. Canada isn't showing sign of collapse. The car is still legally owned by someone and there are likely records so if you remove it you are stealing the car. Today the law would make the owner remove the car but the laws back then apply which didn't require that expense. reply thoroughburro 6 hours agorootparentIs it such an impoverished legal system that it has no provision for abandonment? reply nucleardog 4 hours agorootparentSort of? There’s abandonment in the sense of “I don’t want this thing anymore. It’s no longer mine.” and in the sense of “This thing is abandoned, it’s mine now.” We have the latter but not the former. Ownership of something allows you exclusive rights to exploit it for gain… but also puts on you exclusive responsibility for it. Nobody minds if you don’t want the benefits anymore, but we want someone responsible for managing that thing’s impact on society and others. So you can’t just decide to abandon things (*offer not valid in Quebec). You are the owner until someone else chooses to take on the responsibilities of ownership. But in a case where there are multiple competing claims of ownership, abandonment is a consideration. If someone else wants ownership of something you’ve practically abandoned, they can take it and the court may agree that they have become the owner. (Though usual disclaimer about lawyers being expensive.) But the thing _always_ has and had an owner—someone responsible for it. Nothing is ever unowned (*offer valid in Quebec). reply bluGill 5 hours agorootparentprevThe world doesn't generally have that concept. The titanic sank in international waters yet when its vault was opened the insurance company immediately sued for everything recovered. I don't know Canadian law at all, but I would guess things can be abandoned, but it is tricky and not automatic. When a car is abandoned in it is generally a several month process of trying to find the owners before they declare it abandoned (my cousin had a car stolen in Minnesota - it was found abandoned in Mexico and they gave him instructions on how to get it - in his case the cost to recover was more than it was worth but the point is they went through a lot of effort to find him). Particularly in cases like this if any family member wants to they can argue they just couldn't figure out how to get it out of the water but they wanted it all along. reply yieldcrv 17 hours agoprev> There was no gold, but they did spot six bottles in the back of what they now know is a 1929 REO Flying Cloud. I would also pay a publicist to create this historical record reply Simulacra 16 hours agoprevCan someone explain why the corks popped on the surface but not in the water? What is the pressure at the bottom of lake keeping the corks in? reply kadoban 14 hours agoparentThe pressure under significant amounts of water is _way_ higher than in air, raises with depth. The small amount of air in the bottles must have started close to 1 atmosphere of pressure (approx normal for just out in the air), but over time it equalized to at least some extent with its surroundings (either some water/gas infiltrated, or just the cork moved in a bit, or some other effect, nature dislikes imbalances). Then when the bottles were rapidly taken back to 1 atm of pressure, the pressure inside pushed out the corks (it had less to push against than its old equalibrium). Going more slowly almost certainly would have helped (allowed it to equalize slowly, potentially without failing), but I'm not sure if that would have meant hours or months. I'm also not sure how well the contents will have survived regardless. reply manarth 8 hours agoparentprev\"went back later with some fellow divers, going down 15 metres\" At 15 metres, the pressure is 2.5 × the surface pressure. Pressure at the surface is 1 bar, and fresh water pressure increases at 1 bar per 10 metres. 15 metres = 2.5 bar reply zoklet-enjoyer 16 hours agoprevLooking at a map, I'm surprised that's considered Northern Ontario reply peeters 14 hours agoparentIf you think of where the centre of mass of the population of Ontario is, it is insanely far north. But yeah in its official definition Northern Ontario is more of a political designation than a geographical one. https://www.reddit.com/r/Damnthatsinteresting/comments/rw4jd... reply Rendello 16 hours agoparentprevGenerally Sudbury is considered the dividing line between Northern and Southern Ontario. Keep in mind that the far north of Ontario is almost uninhabited save for a few small reserves: (map) https://en.wikivoyage.org/wiki/Ontario reply thaumasiotes 10 hours agoparentprev> Looking at a map, I'm surprised that's considered Northern Ontario Check out a map of California. Latitude of San Diego (\"Southern California\"): 32.7° Latitude of San Jose (\"Northern California\"): 37.3° Latitude of Crescent City (\"doesn't count\"): 41.8° \"Northern California\" is pretty close to being dead in the center of the state, as far as north-south goes. reply jrootabega 17 hours agoprev [–] Aaaand Far Cry 5 just became even more Canadian. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [],
    "commentSummary": [
      "A man in Northern Ontario discovered a 1929 REO Flying Cloud car with six bottles of whisky at the bottom of a lake, solving a local legend.",
      "The discovery has sparked discussions about the Canadian Broadcasting Corporation's (CBC) coverage and its perceived political bias, with commenters sharing personal experiences and opinions.",
      "The car remains underwater for divers to explore, as it is considered too fragile to remove."
    ],
    "points": 193,
    "commentCount": 54,
    "retryCount": 0,
    "time": 1727826988
  },
  {
    "id": 41714285,
    "title": "Juno for YouTube has been removed from the App Store",
    "originLink": "https://christianselig.com/2024/10/juno-removed/",
    "originBody": "Juno for YouTube has been removed from the App Store October 1, 2024 For those not aware, a few months ago after reaching out to me, YouTube contacted the App Store stating that Juno does not adhere to YouTube guidelines and modifies the website in a way they don’t approve of, and alludes to their trademarks and iconography. I don’t personally agree with this, as Juno is just a web view, and acts as little more than a browser extension that modifies CSS to make the website and video player look more “visionOS” like. No logos are placed other than those already on the website, and the “for YouTube” suffix is permitted in their branding guidelines. Juno also doesn’t block ads in any capacity, for the curious. I stated as much to YouTube, they wouldn’t really clarify or budge any, and as a result of both parties not being able to come to a conclusion I received an email a few minutes ago from Apple that Juno has been removed from the App Store. Juno was a fun hobby project for me to build. As a developer I wanted to get some experience building for the Vision Pro, and as a user I wanted a nice way to watch YouTube on this cool new device. As a result I really enjoyed building Juno, but it was always something I saw as fundamentally an app I built for fun. Because of that, I have zero desire to spin this into a massive fight (at least more than I’ve fought in emails over the last few months) akin to what happened with Reddit years ago. That’s kind of the opposite of fun. I hope that’s understandable. For those who have Juno, to my knowledge it should continue to work fine until/unless the YouTube website updates in some fashion that breaks stuff. Sorry it had to end this way, I had some really cool stuff planned for it that I think would have been a lot of fun! It’s been genuinely awesome hearing all the kind words from Vision Pro users who have loved the app. 🫡",
    "commentLink": "https://news.ycombinator.com/item?id=41714285",
    "commentBody": "Juno for YouTube has been removed from the App Store (christianselig.com)175 points by MaximilianEmel 21 hours agohidepastfavorite132 comments sonofhans 21 hours agoThis is the same developer whose Apollo app got screwed by Reddit. They seem to have a talent for finding simple ways to improve things in new contexts. Unfortunately, their improvements are typically of benefit to _actual users_, and the services in question would rather treat users as grist for the mill. It’s unjust, and I believe it’s short-sighted. reply minimaxir 21 hours agoparentA similar sequence of events happened to Jase Morrissey, who developed Alien Blue for Reddit in 2010, although in that case Reddit was more gracious and acquired the app in before killing it in favor of their own: https://en.wikipedia.org/wiki/Alien_Blue He then made Jasmine, a YouTube client which was an order of magnitude better than the official YouTube app...which was then killed for the same reasons as Juno. reply _boffin_ 18 hours agorootparentFunny enough, still have alienblue on my phone and still use. The app still works and everything. reply 3abiton 21 hours agorootparentprevI am sensing a pattern. reply m463 20 hours agorootparentThe pattern is that companies make APIs so they can control things. (never at the start) Web scraping types of apps are more democratic. reply ddtaylor 20 hours agorootparentprevThe history of Apple store abuse goes back far as well. For their own gain and others. reply johnnyanmac 21 hours agoparentprevTech's really shifted from the days where an idea like Juno would get your app acquired, and possibly get you hired under their wing to help improve the base product. That's when you can really tell the hacker mentality left big tech. reply godzillabrennus 20 hours agorootparentIt’s been said before on here that the MBAs have won in big tech and I think that’s fair. reply appendix-rock 19 hours agorootparentThis sort of tribalism is utterly insufferable. “The good decisions? They were us! And the bad ones? They were made by those idiots over there!” reply raxxorraxor 7 hours agorootparentprevIt left big tech when software stores got introduced and systems got locked down in the name of \"security\". These stores are quite different to software repositories and it left use with disabled operating systems for mobile devices. reply randomdata 21 hours agorootparentprevWhen the zero interest rates left, at least. reply namlem 21 hours agorootparentAnd Lina Kahn came in reply fhdsgbbcaA 20 hours agorootparentAre you suggesting Lina is on the side of big Tech? reply s17n 20 hours agorootparentHe's suggesting that acquisitions aren't happening because of antitrust enforcement. I'm pretty sure that has no bearing on the type of tiny acquisition we're talking about here but then again I don't actually know what I'm talking about. reply kyrra 20 hours agorootparentprevMay I recommend watching: https://www.youtube.com/watch?v=nWcoZVSx1T8, by Thomas Laffont who runs an investment fund. The FTC is blocking acquisitions, which is one major exit strategy for startups. reply Alupis 21 hours agoparentprevI still don't understand the Apollo collapse. The creator seemed to have convinced themselves that their users would not be willing to pay to continue using the app - despite the outpouring of love Apollo enjoyed. It all seemed very short sighted and emotional. reply fckgw 20 hours agorootparentApollo had a yearly subscription while switching over to the new Reddit API structure would require a monthly fee. That puts you in a spot where you may have users that are still on a yearly plan and not paying in while incurring massive monthly API costs. It was the sudden short notice of API costs increases that caused the whole thing to collapse \"One option many have suggested is to simply increase the price of Apollo to offset costs. The issue here is that Apollo has approximately 50,000 yearly subscribers at the moment. On average they paid $10/year many months ago, a price I chose based on operating costs I had at the time (server fees, icon design, having a part-time server engineer). Those users are owed service as they already prepaid for a year, but starting July 1st will (in the best case scenario) cost an additional $1/month each in Reddit fees. That's $50,000 in sudden monthly fee that will start incurring in 30 days. So you see, even if I increase the price for new subscribers, I still have those many users to contend with. If I wait until their subscription expires, slowly month after month there will be less of them. First month $50,000, second month maybe $45,000, then $40,000, etc. until everything has expired, amounting to hundreds of thousands of dollars. It would be cheaper to simply refund users.\" From: https://www.reddit.com/r/apolloapp/comments/144f6xm/apollo_w... reply Alupis 20 hours agorootparentRefund at a pro-rated rate, be frank with users and tell them the situation and why you have to raise prices - then raise prices. I doubt users would have revolted had the subscription gone up to $19.95 or even $29.95 a year. Heck, my hiking app is more than that annually, and I barely use it. I remain convinced Apollo had options, but the creator was convinced it was an impossible situation. It was not. There was an outpouring of support and people willing to spend money on an app they saw immense personal value in. reply hightrix 20 hours agorootparent> I doubt users would have revolted had the subscription gone up I don't doubt this, actually. I was a user of Apollo. I purchased the Pro Unlock for $5, and I did this only because it was a 1 time purchase. If it were a $5/mo subscription, I would have never used the app. Sure, I'm just one person and maybe many others don't feel the same way, but I have a hunch many do. Especially with the amount of subscriptions flying around these days, many people are getting frustrated by constantly having to subscribe. reply Alupis 19 hours agorootparentEven if 80% of users stopped using Apollo, the rest could have still been sustainable and/or profitable. 50,000 paying users. That's incredible. Apollo could have even gotten loans to cover the interim if needed. There were many options to continue forward. The creator took none of them. My guess is the creator was emotionally exhausted by the ordeal and was not in the head-space to deal with such a disruptive change. Unfortunately, brilliant creators/engineers are not always the best suited to operate the business, especially during troubled times. reply echelon 19 hours agorootparentReddit designed this pricing change specifically to kill off 3rd party apps. If Apollo jumped through this hoop, there would be another in the future. There wouldn't be any winning this game. reply Alupis 19 hours agorootparentMaybe, maybe not. It's unreasonable to expect a company to offer free services that make you money. Therefore it's not unreasonable to pay something for access to the content that makes your app successful. No matter what the API fees are - if Apollo provided value to it's users, it would have users willing to pay for it. Like I previously said - many apps cost $30-50+ annually to use - and the users are happy to pay. Apollo users probably on-average used the app daily. reply dialup_sounds 18 hours agorootparentAre there any 3rd party apps that did not come to the same conclusion that the fees and restrictions made their continued development untenable? reply jerlam 17 hours agorootparentNarwhal transitioned to a 3rd party, paid subscription app. It's been around for over a year in this form. https://www.theverge.com/2023/6/29/23777992/reddit-third-par... reply forrestthewoods 20 hours agorootparentprev> Refund at a pro-rated rate, be frank with users and tell them the situation and why you have to raise prices - then raise prices. I don't think the app store provides a mechanism to do this. reply Alupis 20 hours agorootparentSo refund in full and do the rest? That's what happened anyway, isn't it (the refund)? The point was there were options, but the creator didn't seek them. So many people wanted that app to continue living - I find it impossible to believe the creator couldn't get an extra $1 a month (or even a lot more!) from those users. How many apps can boast they have 50,000 paying customers? People need to appreciate just how difficult of an accomplishment that already is. The paying users loved the app, and would have paid more to continue using it - especially in light of the available information at the time. reply function_seven 19 hours agorootparentA massive proportion of us didn't request a refund. I don't know the percentage, but I would not be surprised is most users didn't ask for a refund of $10. You're probably right that there was some way for Christian to navigate this and keep Apollo up. But I also don't blame him one bit for throwing his hands up after how that whole API debacle went down. Must've been pretty stressful. reply throwaway48476 19 hours agorootparentI believe Apollo was open sourced after it's demise. You could run it yourself but then you'd have to contend with the intentionally difficulty of installing software on the iphone. reply keyle 21 hours agorootparentprevWhen things turn sour, sometimes you have to see the writing on the wall and think years in the future. It may not be something you signed up for. There is also a limit to which people are willing to put themselves through. reply Alupis 20 hours agorootparentOk, but it was inevitable Reddit wouldn't offer free services to businesses making profit off of their content forever. The creator must have wondered at some point how long the free gravy was going to continue flowing? Why no exit plan of any kind, or even an attempt? reply blendergeek 19 hours agorootparent> it was inevitable Reddit wouldn't offer free services to businesses making profit off of their content forever Their content. The audacity. Reddit is built on users' content and on free moderation. Sure it was inevitable that Reddit would lock things down for profit. But lets not pretend that this is Reddit's content. reply Alupis 19 hours agorootparentFor the 3rd time you are entirely incorrect. I won't quote the TOS again for you, as I have done twice already. The moment you post to reddit, they can do anything they want with the content. It is now theirs. It's also naïve to say reddit was built upon users' content. Yes the content is the most important bit and the reasons users are there today - but that ignores all of the software and infrastructure that made it all possible. There's a reason reddit is what it is today, and it was not an accident. reply raxxorraxor 7 hours agorootparentFor users TOS are entirely irrelevant on the internet anyway. Of course it is their decision to not embrace users in the end. reply djxfade 20 hours agorootparentprevI never understood why Reddit couldn’t just have kept the API free, and embedded ads in the feed directly. They would get their ad revenue, and third party developers would actually help them make money. reply Alupis 20 hours agorootparentProbably because it would be easy to filter those ads from the feeds. The facts were businesses like Apollo built themselves upon Reddit's value-proposition. The content is what the users wanted - and Reddit had the content. Apollo's value-add was making that content more accessible to users - at Reddit's expense. We can debate how Reddit handled the rollout - but the facts are businesses like Apollo offered little to Reddit in exchange for Reddit's content. People operating businesses based on someone else's data (moat) should have an exit plan for when the free ride ends. reply sethaurus 19 hours agorootparentFrom a legal point-of-view, yes, Reddit had control of the data and chose to alter the deal. And the app developer did have an exit plan: shutting down the app and refunding subscribers. The developer appears to have weighed his options, considered the strategy Reddit was communicating with the rollout of their API changes, and concluded that this was no longer a viable market. Many people expressed strong opinions about what the developer should do, but he appears to have remained calm and rational throughout the experience, and chose to walk away when it made sense. However: > The content is what the users wanted - and Reddit had the content... > ...in exchange for Reddit's content... > ...operating businesses based on someone else's data (moat)... Let's not fool ourselves: the data was created by and for the users, and it never belonged to Reddit in any moral sense. It's a regrettable externality of our legal framework that Reddit was able to withdraw their free API and prevent the community from accessing its own data how it saw fit. reply Alupis 19 hours agorootparentIn no way can we consider the content on reddit to be owned by the users. By using reddit and posting, you agree to their terms - the content belongs to them. It's unreasonable to believe Reddit should continue offering free services to businesses that were making money off of Reddit's content. reply blendergeek 19 hours agorootparentFrom the Reddit TOS: > 5. Your Content > The Services may contain information, text, links, graphics, photos, videos, audio, streams, software, tools, or other materials (“Content”), including Content created with or submitted to the Services by you or through your Account (“Your Content”). We take no responsibility for and we do not expressly or implicitly endorse, support, or guarantee the completeness, truthfulness, accuracy, or reliability of any of Your Content. > By submitting Your Content to the Services, you represent and warrant that you have all rights, power, and authority necessary to grant the rights to Your Content contained within these Terms. Because you alone are responsible for Your Content, you may expose yourself to liability if you post or share Content without all necessary rights. > You retain any ownership rights you have in Your Content, but you grant Reddit the following license to use that Content: https://redditinc.com/policies/user-agreement-september-25-2... reply Alupis 19 hours agorootparentTwice you have deliberately left out literally the most important bit. I'll quote it for you: > When Your Content is created with or submitted to the Services, you grant us a worldwide, royalty-free, perpetual, irrevocable, non-exclusive, transferable, and sublicensable license to use, copy, modify, adapt, prepare derivative works of, distribute, store, perform, and display Your Content and any name, username, voice, or likeness provided in connection with Your Content in all media formats and channels now known or later developed anywhere in the world. This license includes the right for us to make Your Content available for syndication, broadcast, distribution, or publication by other companies, organizations, or individuals who partner with Reddit. You also agree that we may remove metadata associated with Your Content, and you irrevocably waive any claims and assertions of moral rights or attribution with respect to Your Content. It's theirs the moment you click post - and there's nothing you can do about it. reply raxxorraxor 7 hours agorootparentThat does not equal legal ownership. > respect to Your Content I don't know if you added the capitalization or not. If not I think it was precisely written like this to drive that point home. reply AlotOfReading 19 hours agorootparentprevThe content wasn't Reddit's, it was simply hosted on Reddit. It was actually owned by the users, many of whom were using apps to benefit Reddit via additional content and moderation. reply Alupis 19 hours agorootparentSomeone didn't read the TOS. reply AlotOfReading 19 hours agorootparentI have actually. The way it's always worked for Reddit (and social media in general) is that you provide them a license to do things with the content, but the site doesn't take ownership of the content. This isn't a meaningless distinction either. It's a key part of Reddit's legal shield from all the illegal content they unknowingly host, via things like section 230. reply blendergeek 19 hours agorootparentprevFrom the TOS: > 5. Your Content > The Services may contain information, text, links, graphics, photos, videos, audio, streams, software, tools, or other materials (“Content”), including Content created with or submitted to the Services by you or through your Account (“Your Content”). We take no responsibility for and we do not expressly or implicitly endorse, support, or guarantee the completeness, truthfulness, accuracy, or reliability of any of Your Content. > By submitting Your Content to the Services, you represent and warrant that you have all rights, power, and authority necessary to grant the rights to Your Content contained within these Terms. Because you alone are responsible for Your Content, you may expose yourself to liability if you post or share Content without all necessary rights. > You retain any ownership rights you have in Your Content, but you grant Reddit the following license to use that Content: https://redditinc.com/policies/user-agreement-september-25-2... reply Alupis 19 hours agorootparent> but you grant Reddit the following license to use that Content The most important bits you left out. You grant them a license to do anything they want with the data, including sell, use, etc. ie. it's theirs now. reply hbn 20 hours agorootparentprevI'm pretty sure even the paid Reddit API had some ridiculous stipulations, like you couldn't view NSFW content. reply wilsonnb3 20 hours agorootparentAs recently as a few months ago you could see NSFW content in Narwhal 2 on iOS. Not sure if it has since changed. I do remember hearing they were planning that change, though. reply throwaway48476 19 hours agorootparentNSFW is not available via API. reply yoyohello13 19 hours agoparentprev\"short-sighted\" is a euphemism used a lot to describe company behavior. We should just call it what it is, anti-social greed. reply pixelready 18 hours agorootparentI think focusing on the timeline is correct though. There is such a thing as pro-social greed, which is to say: a desire for a product/service/company to be long lived through sustainability of their business model. The problem, I think, stems largely from “shareholder value” theories which force executives to operate solely on a quarterly mindset. When all low hanging fruit in a market has been harvested, those held accountable for value extraction are pushed into short term, unsustainable tactics so that every quarter key metrics can go up regardless of the underlying reality. Hence: layoffs and enshittification. reply throwaway48476 19 hours agoparentprevPlatforms exist for the benefit of platforms, not users. reply citizenpaul 21 hours agoprevI find it funny that at the time of this comment this Submission and this one. >Don't build your castle in other people's kingdoms (2021) Are both on the top 10 of the frontpage of HN. Also thx for apollo but it wouldn't have mattered if it stayed active since reddit has plummeted in usefulness since the time of its removal anyway. I don't see reddits direction changing ever at this point. reply jjeaff 21 hours agoparentI haven't read that article yet. But it has become extremely hard not to build in someone else's kingdom. Just ask Facebook or Uber or various other unicorns. reply like_any_other 20 hours agorootparentAnd now our own phones are \"someone else's kingdom\". The corporate noose gets tighter by the day. reply throwaway48476 19 hours agorootparentThey've already pulled the lever, the neck just hasn't snapped yet. reply rmbyrro 21 hours agoprevA 15 year old bully reaches out to the other 15 year old bully and decide to take the lunch of a 4 year old kid. reply hbn 20 hours agoparentI mean I don't think Apple wanted to do this, it was a great value add for Vision Pro. I'm pretty sure Apple has directly promoted Juno, I thought I remember seeing it in an Apple live event? Apollo certainly was - Craig Federighi mentioned it by name shortly before Reddit killed it. reply rmbyrro 8 hours agorootparentLet's not pretend Apple hasn't become a bully. I respect Jobs, his brilliance and legacy. But Apple has never been farther away from what he stood for when he started it. reply jherskovic 20 hours agoprevOh, man, Christian, are you going to do Discord next? Because it’d fit the pattern to a T. (This is a joke) I was a huge fan of Apollo and genuinely appreciate your UX design and aesthetic chops. Please make something 100% your own next time! You have the name recognition and development experience to pull it off. I can’t wait to see what you do next. Just… please not another client for someone else’s service. reply bentocorp 20 hours agoprevI'm surprised that this app was actually allowed and approved in the first place. Apple has an App Store rule against allowing apps or wrappers using an API or third party content without the express permission of the content owner. Juno was likely given a pass by Apple due to the dearth of native Vision Pro video players. For instance, both YouTube and Netflix didn't have native apps available. Perhaps Apple was a bit more lenient on Juno initially as it provided their own platform with some credibility at a critical launch stage. reply dagmx 18 hours agoparentYou don’t need explicit specific permission. You just can’t backdoor an API. A public facing API is enough, and why so many Reddit apps used to exist. reply bentocorp 18 hours agorootparentThe guideline is: 5.2.2 Third-Party Sites/Services: If your app uses, accesses, monetizes access to, or displays content from a third-party service, ensure that you are specifically permitted to do so under the service’s terms of use. Authorization must be provided upon request. So, reading from the above, if Apple thinks you are doing the dodgy then they may request specific authorization proof from you which shows that the third party is ok with what you are doing. If you can't provide it, then they will likely not approve your app submission. reply dagmx 18 hours agorootparentYes, if the site doesn’t have a public API, then you might have to prove specific authorization. But if a site does, like YouTube allows for embeds, then it falls under the “services terms of use” reply NL807 20 hours agoprevThis highlights the reason why side-loading should be a right for users on the device they bought. Users get to control what gets installed on the device. reply haunter 21 hours agoprevYattee will always work because it's using Invidious or Piped as a backend that you can even self-host https://apps.apple.com/us/app/yattee/id1595136629 https://github.com/yattee/yattee https://old.reddit.com/r/Yattee/comments/13d3lj7/how_to_set_... reply piyuv 20 hours agoparentInvidious is in a precarious position right now: https://github.com/iv-org/invidious/issues/4734#issuecomment... reply squarefoot 19 hours agorootparentYep. The Kodi/LibreElec client stopped working some days ago. FreeTube (and NewPipe on mobile) still rock, but for how long? reply shiroiushi 17 hours agorootparentI don't get it: this seems to be an issue where YouTube is blocking 3rd-party client access from datacenter IPs. Why would you want to do that in the first place? Wouldn't you normally run a YouTube client from home (or wherever you happen to be at the moment, which for most people isn't a datacenter)? FWIW, SmartTube works just fine for me. Of course, I'm running it on my TV at home, not in a datacenter... reply squarefoot 11 hours agorootparentThe YouTube client forces users to identify themselves by creating personalized API keys. reply mholt 21 hours agoprevChristian, you really don't get a break do you :( Thanks for the great apps you have made. reply megaunicorn123 21 hours agoprevFirst Reddit now YouTube. Christian is a talented developer, but his efforts are wasted building applications for closed social media. reply dewey 21 hours agoprevChristian, if you are reading this...maybe a nice HN app as the next fun project? reply davidcollantes 21 hours agoparentHack (https://apps.apple.com/us/app/hack-for-yc-hacker-news-reader...) is absolutely amazing, but competition is always a good thing. Alternatively, creating a good Fediverse (aka Mastodon) client would also be great! reply keyle 21 hours agorootparentThe website is perfectly functional on mobile though. And fast. And the data is the latest. reply skeaker 56 minutes agorootparentVote buttons are too small. \"Perfectly functional\" for mobile app to me means input methods that can be reached consistently with little effort, like swiping to vote. reply jascination 21 hours agorootparentprevI use Harmonic on android for HN and can highly recommend it reply piyuv 20 hours agorootparentprevIce Cubes is OSS and it’s amazing. Alternatively, I hear that Ivory rocks too. reply strunz 19 hours agorootparentprevOctal is another great ios app reply jjeaff 18 hours agoparentprevthere are like 12 of those already. reply dewey 12 hours agorootparentBut most of them look like they were designed by a developer. Apollo & Juno are both well designed apps. reply RIMR 20 hours agoparentprevAnd for the Android users out there, I highly recommend Glider: https://play.google.com/store/apps/details?id=nl.viter.glide... reply 12345hn6789 17 hours agoparentprevThat will not bring him significant income. reply dewey 12 hours agorootparentIt was an app for the Vision Pro for $5. I’m pretty sure that’s not a big money maker either. reply Terretta 19 hours agoprevThis less an iOS App Store dispute so much as a YouTube dispute. Selig's post makes it clear there was a process, started by YouTube, that took time, and the disagreement wasn't resolved between them. I'm going to quote here so what happened is part of the commenting narrative: For those not aware, a few months ago after reaching out to me, YouTube contacted the App Store stating that Juno does not adhere to YouTube guidelines and modifies the website in a way they don’t approve of, and alludes to their trademarks and iconography. I don’t agree ... Juno is just a web view ... that modifies CSS to make the website and video player look more “visionOS” like... Juno also doesn’t block ads in any capacity... I stated as much to YouTube, they wouldn’t really clarify or budge any, and as a result of both parties not being able to come to a conclusion I received an email a few minutes ago from Apple that Juno has been removed from the App Store. It's worth noting that the YouTubes of the world get self-hosters to take things down too. reply jjcm 21 hours agoprevThis will continue to happen as long as the incentives of the platform are misaligned with the incentives of the user. For ad-supported sites, the customer is the advertiser, not the viewer. The site will optimize the experience for the customer. 3rd party apps simply don't provide a way to control ad delivery, so there's an incentive for the platform to shut them down. It's why I've been pushing for/working on a paid social sharing site, since at that point the customer is the user. It means the incentives are aligned, and 3rd party apps are a boon not an anathema. reply forrestthewoods 21 hours agoprevThis is one of many reasons why we need alternative app stores. reply johnnyanmac 21 hours agoparentThe floodgates is slowly stating to crack, fortunately. But it'll still be some years before the US wisens up to what the EU has been doing for the past few years. reply rekttrader 21 hours agoprevPut the code on GitHub and make it open. It’s a shame, and yet you can ensure it a I’ll get used reply drpossum 21 hours agoparentMaybe not github and someplace that doesn't remove repos at corps' whims. https://news.ycombinator.com/item?id=41711709 https://www.bleepingcomputer.com/news/software/youtube-dl-re... https://reclaimthenet.org/crunchyroll-downloaded-github-copy... https://techdator.net/github-removed-mediabox-hd-for-streami... and so on reply fouc 20 hours agorootparentgithub is fine to start with imo, that's what forks are for (proper forks). reply HorizonXP 21 hours agoprevBah! Humbug! I use this all the time. Thanks for making it. reply car 20 hours agoprevThe risks of a derivative business. reply talldayo 19 hours agoparentDerivative of Apple, or Google? Given the circumstances of App Store removal only, I don't know if it's very clear. reply blackeyeblitzar 21 hours agoprevMore justification for anti trust action against Google. You can’t modify your browser’s view of your own client side data? They have absolutely no right to encroach on that, and they know it. This is just them throwing their weight around because no one can do anything about their bullying. reply DannyBee 21 hours agoparent\"More justification for anti trust action against Google.\" Antitrust is the RICO of HN, as far as i can tell. \"They have absolutely no right to encroach on that, and they know it.\" Based on what, exactly? Other than your assertion, can you actually cite any cases/law that says this? Most caselaw i'm aware of says the exact opposite - they can in fact control it, legally. At a very base level, it's a derivative work - they have the literal right to decide which derivative works they approve of and don't. Caselaw has been clear on this since the days of duke nukem levels. Heck, even time-shifting (IE not even changing the content or presentation) only survives under fair use - it is otherwise a copyright violation. Courts really haven't accepted presentation or content changes except when being done for parody or satire reasons, and are very careful not to destroy the derivative work and public performance rights. Courts are in fact, much more accepting of very transformative use than this kind of use. You may not like this - I don't actually like it, mind you, but that's different from \"are they within their rights\". I assume next you will discover you also can't just take signals going through the air around you (satellite TV, cellular, etc) and just do whatever you want with them either. reply kmeisthax 21 hours agorootparentIf third-party clients are derivative works then Google should have to negotiate a license with royalties for every search result they provide. reply DannyBee 20 hours agorootparentThird party clients that exist solely to display a certain site in a slightly different way are definitely derivative works of that site. That's not really an \"if\" question. I'm not aware of any disagreement by any court on this front, but feel free to cite cases if you've got them. This was even settled back in the days of iframing/etc. As for the rest, it turns out this particular argument has also already played out many times and reached what appears to be a fixed point - there is actually lots of caselaw on the snippets they use and how far they can/can't go, and for what purposes, before they would have to license them. This is also, to be quite honest, not a great legal argument. It helps a lot to realize the law is not logical, it just is. Particularly when it comes to copyright, which is a very weird bundle of rights applied in sometimes very specific and odd ways to different mediums. Things like copyright and how it applies end up very much the sum of the n thousand cases that apply it. While sometimes you get principles out of appeals courts or the supreme court, it's relatively rare in the scheme of things (IE happens once every 10000 cases or whatever), and it's even more rare that you get generally applicable principles that you can easily apply to a new situation. This is very different than lots of other areas of law. Some of this is an artifact of the fact that current copyright law was still mostly built for literary works and music, and concepts don't always have an easy/obvious translation to other kinds of works (so it took hundreds of cases for courts to reach a fixed point) reply makeitdouble 20 hours agorootparentprevThat's exactly the battle they fought with news publishers. reply blackeyeblitzar 20 hours agorootparentprev> Antitrust is the RICO of HN, as far as i can tell. Not sure what you mean. But I’ll be specific - big companies are abusive because they have too much capital, too many resources (like legal teams), too much protection from competition - basically too much power. YouTube would not need to be the only place for online video content except that it benefits from network effects (creators and users are stuck), bundling (with Google’s ad business), and other anti competitive aspects. I’m sure you can construct the antitrust arguments against the iOS-Android duopoly trivially as well. So yes, the need for fairness and competition is plenty of justification for antitrust action against Google (and Apple and Amazon and Microsoft). I hope that takes the form of new legislation to make it much easier to do something to fix these problems, unlike current antitrust law which just results in performative lawsuits that drag out for years only to result in a minor fine that achieves nothing. > Based on what, exactly? Other than your assertion, can you actually cite any cases/law that says this? I said they have no right in the casual sense, which has a broader meaning to most people. It’s obvious they shouldn’t have a right to control what you do client side. I don’t care what the law says, or what the technicalities are. There’s absolutely no reason to limit discourse on HN, or the outrage this deserves, to only what the law currently is. > At a very base level, it's a derivative work - they have the literal right to decide which derivative works they approve of and don't. Is me tuning the color balance on my TV a “derivative work”? Obviously changing client side code is not a derivative work. > I assume next you will discover you also can't just take signals going through the air around you (satellite TV, cellular, etc) and just do whatever you want with them either. Why not? I’m allowed to collect information from the air and do whatever I want with it, since it is just data, which I’m allowed to record in public spaces, and data is speech. reply DannyBee 5 hours agorootparent\"Not sure what you mean\" https://archive.is/mVbJP \"I said they have no right in the casual sense, which has a broader meaning to most people.\" So you said it's a antitrust violation in the casual sense? Whatever that means? This is some interesting doubling down i guess. As for the rest, i suggest you go learn a little about the law, despite your flip-flopping about whether you are complaining about the law or the \"casual sense\" \" Obviously changing client side code is not a derivative work.\" You keep using this phrase obviously, as if it makes your argument for you. It does not. You still have not made a single cogent argument here, whether we are talking about the current or whyanything should change. \"Why not? I’m allowed to collect information from the air and do whatever I want with it, since it is just data, which I’m allowed to record in public spaces, and data is speech\" Lots of legal assertions in here, can you disambiguate for me which are just \"casual\"? Hard to explain how wrong this is otherwise. reply asveikau 21 hours agoparentprevSeems like a criticism of apple too. Why does this developer need permission from Apple to change some css? reply ProfessorLayton 21 hours agorootparentPutting ethical concerns aside (I'm definitely not on Big Tech's side on this), it just makes business sense to not piss off one of your biggest app developers in favor of someone making an unofficial client. We absolutely need more regulation for these big platforms, but until then it's difficult to blame Apple for acting rationally business-wise. reply nozzlegear 20 hours agorootparentprevWhy do I need permission from my city council to build a bakery in a residential neighborhood? I shouldn't need it, it's all red tape like Apple's policies. reply asveikau 20 hours agorootparentThis is such whataboutism. You might as well have asked why the state doesn't allow you to kill people. Why is there any rule at all ever? Clearly apple has a divine right to prevent you from changing CSS and it has equal legitimacy to the state. reply nozzlegear 20 hours agorootparentMy analogy is poor but we're arguing for the same thing. Apple's App Store policies are arbitrary red tape¹ and we should be able to choose different stores. ¹ like zoning laws :p reply tough 17 hours agorootparentCan't wait next election year to vote for my Apple representatives reply nozzlegear 15 hours agorootparentThe good news is you can vote with your wallet, right now! reply afavour 21 hours agoparentprev> You can’t modify your browser’s view of your own client side data? They have absolutely no right to encroach on that Is that true? Don’t get me wrong, I absolutely believe we should have that right but is it actually specified anywhere? reply vdqtp3 21 hours agorootparentYou're questioning whether it's your right to run the code you want to, instead of the code they want you to? reply andyferris 21 hours agorootparentIt’s a fair question IMO. The YouTube APIs presumable come with “terms of service” for use, or some such. What exactly, legally speaking, can they specify? Can it be enforced (by Google lawyers and courts) to the point where Apple would be compelled to do things to force users to comply, like removing this App? I think the answer _should_ be no, but that’s different to asking what is your actual rights on your device vs their “right” to control use of their system. reply hbn 20 hours agorootparentHe isn't even using YouTube's APIs. From the dev himself: > I’ve said from the initial launch, Juno is built as a web-wrapper for YouTube, akin to a browser extension, and purposefully built with full respect for the YouTube website and experience, and as a result does not block ads in any capacity, nor does it introduce extra functionality like downloading videos offline that could facilitate that. Further, Juno doesn’t even use any YouTube APIs, as it has no need to: it just wraps the website, and uses CSS and JavaScript to style the website and functionality more in line with visionOS. This is in contrast to other third-party tools that for instance scrape the YouTube website for applicable video URLs and use those directly, or those that integrate ad-blocking functionality. https://christianselig.com/2024/06/announcing-juno-2/#lastly... reply DannyBee 21 hours agorootparentprevYes. If you separate out \"how should things be\" from \"how things are\", then from duke-nukem levels to you name it, caselaw is very clear that they can control this through fairly simple copyright law principles (derivative works, etc), without even having to resort to more complex theories. Your best argument is fair use, but it's not a particularly good fair use argument in this case. This isn't even a close case. Your only secondary argument is antitrust but it seems like a really weak one in this case as well. reply 0xcde4c3db 20 hours agorootparentNot that you're under any obligation to suffer the peanut gallery, but I'm curious as to how it is that Micro Star v. FormGen (which I assume is your Duke Nukem reference) obviously applies more readily here than Galoob v. Nintendo and Sega v. Accolade. As far as I can tell, the key distinctions are in how permanent the derivative works are and to what extent the erstwhile infringement is forced by the platform owner as a condition of interoperability, which seem like they're debatable questions for third-party client apps. Granted, maybe the DMCA makes these distinctions practically moot because a service can get away with just applying arbitrary restrictions via a \"technological measure\" now. reply DannyBee 3 hours agorootparentFirst, as a point of amusement - last i looked, companies were still suing people over duke nukem decades later: https://www.scribd.com/doc/208676148/GEARBOX-SOFTWARE-v-3D-R... (too lazy to look up the resolution, but thought you might find it amusing) So this is a totally reasonable question/debate to have. I'll mix practical and academic views, but happy to discuss more of one or the other in detail. The first answer I can give you is single-purpose apps/things have faired quite poorly in the copyright realm, any principled caselaw/etc aside. It just turns out to be really hard to convince a judge/jury (to the degree there are any fact specific questions) that an app you made with a specific purpose of displaying someone else's content, whose entire value is in displaying that content, is not a derived work of that content. It fits fairly squarely in the definition: \"A “derivative work” is a work based upon one or more preexisting works, .... [in] any other form in which a work may be recast\". But even to the degree it doesn't end up a derivative work, it almost certainly ends up a distribution or reproduction or public performance the other work. So as a defense attorney trying to defend it, you have a pretty hard non-infringement argument simply because you have to simultaneously argue \"it's not a derivative work, it's not a distribution, it's not a reproduction, it's not a public performance\" The line does get fuzzy somewhere, obviously - but one thing to keep in mind on that front is that derivative works are not like a single-parent-only structure. Something can be a derivative work of multiple works simultaneously :) They usually are. This app is a derivative work of apple's libraries/frameworks, LLVM libraries or whatever it was compiled with, etc. I also expect you'd agree that if someone copied the HTML/etc of youtube's website into the app and shipped it directly, it would a derivative work of that too. That is a clear transformation/adaption of an existing work. So what's the practical difference here? That it's dynamically loaded and then modified? that seems like a hard place to hang your hat :) Now mind you, i've actually made this argument before in the LGPL context, so i have taken both sides before depending on the facts/complexities :) As an example, if i make a book, and there is no text on the pages, instead each page says something like \"for the text of this page, please see characters - of page - of book -, ISBN number \", is my book a derivative work of the works it references? it has no text or content on its own, and is only incorporating by reference. There are reasonable arguments on both sides. All that said, the practical line that gets drawn, for better/worse, is often around usually who is the agent/controller, and what dependencies exist. IE it usually end up like this: Me loading HN in a normal web browser - i'm creating a derivative work of the HN site in my browser, on my display. The web browser, shipped alone, not a derivative work of HN. Me using an HN app that downloaded all of HN and updates it once a week on its own - the app is a derivative work of HN, and it's creative derivative works of the content on a regular basis. i'm using/ browsing these derivative works. Here we are somewhat in the middle, but given the entire point of the app, who is doing the loading/modification, and the actual modification of content/styling, i think it falls a lot more on the latter side than the former. At least for derivative works. These days, to you other point, it rarely gets to the question of derivative works at all due to TOS/DMCA enforcement. You don't have a right to access the content at all except to the degree you are licensed to, app or not. Rather than argue about derivation, they'll just sue you for unauthorized reproduction or distribution, since that is more clear. reply angoragoats 21 hours agoparentprevThe bigger problem here is Apple and the App Store. Google is run by user-hostile goons, but if there was a way to sideload apps on iOS/iPadOS/VisionOS/EIEIOS there’d still be a way for power users to use the app. Case in point: I use FreeTube on all my computers, which works just fine regardless of what Apple or Google would prefer. reply shiroiushi 16 hours agorootparentGoogle isn't great by any means, but at least Android OS (maintained by Google) lets you sideload apps all you want. So my TV running Android lets me sideload SmartTube so I can watch YouTube without ads. The root problem here isn't Google, it's Apple. Of course Google wants you to view their horrible ads, and isn't going to make it extremely easy to avoid this (which is why SmartTube isn't available on the Play Store and must be sideloaded), but they're not the ones with the super-locked-down platform. If you want some kind of freedom, stop buying Apple junk. reply angoragoats 5 hours agorootparentYou're saying mostly the same thing I'm saying :) In my opinion _both_ platforms are awful, for different reasons. Google spies on everything you do, and Apple has a smaller amount of spying but a very high-walled garden. I've made the choice to hold my nose and continue to use an Apple device for my mobile phone, but I purposely do as little as I can on it and opt to use a general purpose computer as much as possible, where I can run whatever software I want. I have an iPad, but it's collecting dust in the corner, because anything I could do on it can be done better on my Thinkpad running linux or on my Macbook. reply skybrian 21 hours agoprevWhat does this app do? reply kmeisthax 21 hours agoparentPut YouTube's website in a slightly-modified web view. There currently is no YouTube app for visionOS. If you want to watch YouTube you have to open a web browser with all the restrictions and incompatibilities Apple does to the web. Juno makes that mildly more convenient. reply daryl_martis 19 hours agoprevrelease the code then reply delduca 20 hours agoprevProbably the same will happen to Reeder. Fuck you YouTube to make a worse UI & UX. reply quercus 20 hours agoprevTime for Selig to build some original ideas instead of yet another wrapper around a popular service. reply RIMR 20 hours agoprevI love my MacBook, but this kind of App Store nonsense is exactly why you won't find me using any other Apple products. At least with MacOS I can install whatever software I want without Apple's approval, and I can write Mac OS programs and Apple doesn't get to decide if my users are allowed to run them on their machines. But iOS, iPadOS, watchOS, and visionOS are awful wall-garden hellscapes that force me to use Apple's store, or pound sand. This is a great example where a developer created a useful app in good faith, following all of the rules laid out by YouTube and Apple, and because Google didn't like it (despite it not breaking any rules or laws), the project has been killed with no recourse for the developer or the users. There's no alternative option to acquire this app, it's Apple's way, or the highway. Let me write the software I want to write, and use the software I want to use, and get the hell out of my way. reply vfclists 20 hours agoprev [–] Is this for Apple's VR thingy? I take it this is for Apple's app store and Apple removed it. I thought Youtube removed it from Play store or something, so Apple is the bad guy here. reply latexr 19 hours agoparent [–] It’s made pretty clear by the post that YouTube is to blame. Considering the poor developer adoption of the Vision Pro, I very much doubt Apple is happy about losing a popular app. reply shiroiushi 16 hours agorootparentNo one forced Apple to remove it. Google just asked and Apple happily complied. By all accounts, the app didn't break any laws or even any TOS. reply latexr 8 hours agorootparent> happily Citation needed. Look, I’m not defending Apple here, I have my fair share of gripes with them (especially under Tim Cook), but let’s not assume to know what went into this decision. If YouTube is throwing copyright law and other shit at you, even if you think they’re wrong it’s probably not worth it (in terms of cost and broken relationships) to fight it. For all we know they could’ve threatened to removed the official app on iOS, which will undoubtedly have more users. Armchair criticism is easy. reply talldayo 16 hours agorootparentprev [–] Apple really dug their own grave with the \"zero sideloading\" policy here, huh? reply latexr 8 hours agorootparent [–] That is a bad policy, yes. It’s also orthogonal to the matter. reply talldayo 2 hours agorootparent [–] That's funny, my sideloaded YouTube app on Android hasn't had any requests from Google to get removed from F-Droid. Must be... Google, targeting Apple users! reply latexr 2 hours agorootparent [–] I honestly have no idea what you’re on about. Whatever you’re arguing for doesn’t seem to be the matter being discussed. I have no interest in flamewars. reply talldayo 35 minutes agorootparent [–] Alright. =) reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Juno for YouTube, a web view app that modified YouTube's website for a \"visionOS\" look, was removed from the App Store on October 1, 2024, due to guideline violations claimed by YouTube.",
      "The app's removal was a result of unresolved disagreements between the developer and YouTube, with no plans for further escalation from the developer.",
      "Existing users can continue using Juno until potential future updates from YouTube render it non-functional, and the developer expressed gratitude for the support from Vision Pro users."
    ],
    "commentSummary": [
      "Juno for YouTube, an app developed by the creator of the Apollo app for Reddit, has been removed from the App Store due to alleged guideline violations by YouTube.",
      "The app, which was a web view and did not block ads, underscores the difficulties developers encounter with major tech companies and their stringent policies.",
      "This situation emphasizes the growing call for alternative app stores, as many users and developers feel that platforms prioritize their control over user benefits."
    ],
    "points": 175,
    "commentCount": 132,
    "retryCount": 0,
    "time": 1727817525
  },
  {
    "id": 41717050,
    "title": "NixOS is a good server OS, except when it isn't",
    "originLink": "https://sidhion.com/blog/posts/nixos_server_issues/",
    "originBody": "NixOS is a good server OS, except when it isn't published March 27, 2024 Ever since I built my first NixOS system (I started by building a custom image to upload on DigitalOcean), I’ve been bothered by one thing: the default installation size is large. To give you an idea, this simple system (using flakes): nixpkgs.lib.nixosSystem { system = \"x86_64-linux\"; modules = [ (nixpkgs.outPath + \"/nixos/modules/profiles/minimal.nix\") (nixpkgs.outPath + \"/nixos/modules/profiles/headless.nix\") { fileSystems.\"/\".device = \"/dev/sda1\"; boot.loader.systemd-boot.enable = true; } ]; } ends up taking ~900MB of disk size on my system1! Minimal and headless! When I started working on improving this, I expected the eventual blog post to be very different than what it became, but you can’t win everything in life. There’s a bit of pain ahead. The context I really like Nix and NixOS (I wouldn’t be spending time helping with their documentation otherwise). After spending some time managing NixOS servers, I really can’t see myself going back to other systems unless required by some external factor. I’m also working on a system that has worker machines which will spin up a bunch of microVMs. Naturally, I wanted to use NixOS both for the worker machines and the microVMs themselves. Currently, the system on the microVMs is taking ~210MB (including kernel) of disk space, but it’s based on Alpine. The worker machines are already using NixOS, but I’d like them to be as lean as possible. NixOS makes it very simple to manage a server from the outside. You can push an entirely new system configuration without the server changing its behaviour, and then almost atomically switch the server to the new configuration. You can easily configure the whole thing deterministically, deploy the same configuration to multiple servers, and even deploy the same configuration under a VM so you can locally test things if you wish to. I envisioned a world where all my worker machines ran the bare minimum software required for things to work, which would be an amazing help to lock the system down, prevent any escalations in case some piece of software was broken into, and would also make deployments and tests faster. And if I could achieve something like that on those machines, why not extend this to the OS running on the microVMs and keep things really lean? This would be super helpful to cut boot times as much as possible, short of using a unikernel. I knew from my previous experience with NixOS that it didn’t generate lean images by default, so a couple days ago I started looking into this to see if I could fix things, or at least significantly improve them. Important: what follows is an analysis of NixOS specifically for the purposes stated here. I don’t really care about having some runtime-flexible server OS which lets me install packages and configure things ad-hoc, I want a thin, locked-down server with the single purpose of running the software I declare, and not a single extra tool in it. (yes, I know I essentially want containers without containers. I comment on this at the end.) Figuring out package dependencies and their sizes A curious thing about the Nix ecosystem is that it has some pretty powerful tools, but they’re severely underdocumented, sometimes functionality is hidden by their naming, and/or some tools have some really specific assumptions, which makes it harder to use them more generally. One such tool is nix-store --query (to be honest, it is way more known than some other more “obscure” tools). More specifically, nix-store --query --tree will give you a tree of packages2, starting from a package you specify, and show you the dependencies of that package, and their dependencies, and so on… Running it will give you some output like this: /nix/store/g4ppw7x76dyykj33x99xzf30zq5ym29z-nixos-system-nixos-24.05.20240323.44d0940 ├───/nix/store/09fpwkb108ckhljahy7p84if7m8qh1wh-firmware ├───/nix/store/0v0wrr6ngh9d487lhwicwr5z61kz40zw-kmod-31 │ ├───/nix/store/1rm6sr6ixxzipv5358x0cmaw8rs84g2j-glibc-2.38-44 │ │ ├───/nix/store/3sxwxqzkkrgpgaibkm27ggb9kjbzdy31-xgcc-13.2.0-libgcc │ │ ├───/nix/store/n9sq1bvghs9z0qg6cmwg27y4jmszwgqi-libidn2-2.3.7 │ │ │ ├───/nix/store/77yhmwrwism02371kzyda4d127kdwdnf-libunistring-1.1 │ │ │ │ └───/nix/store/77yhmwrwism02371kzyda4d127kdwdnf-libunistring-1.1 [...] │ │ │ └───/nix/store/n9sq1bvghs9z0qg6cmwg27y4jmszwgqi-libidn2-2.3.7 [...] ... To complement that, nix-store --query --size gives you (roughly) the size that a specific package takes on disk. It’s slightly more complicated than this, but for our purposes it will be enough to understand how much disk is used. There are some tools which help visualise all this information in cool ways. Two of my favorites are nix-tree and nix-visualize. However, ideally I wanted an interactive graph so I could see each node in the graph by their size on disk, and inspect their dependencies, search things, and so on. nix-visualize was the closest of the tools to give me a graph, but it wasn’t interactive and the node sizes weren’t based on disk usage, so I decided to write my own. It took me some hours to come up with code that generated a graphviz file, with node sizes based on disk usage. Coupled with vscode-interactive-graphviz, I felt like I had a good approach to interactively working with the graph, but the visualisations turned out to be too crowded. I tried to add some more space into things, but it was kind of a hack because graphviz likes to be the one to position elements. In the end, I gave up on that idea and decided to just generate a CSV, which worked way better than I expected. No wonder we still use spreadsheets for a lot of things! The repository with the code and the final config of the NixOS system from this post is here. An investigation of a minimal, headless NixOS system With a way to see each package, its disk usage, and all its dependencies, let’s look at the minimal, headless system I mentioned in the beginning of the post. The one that takes ~900MB. A list of the heaviest packages by disk usage, viewed with the Edit csv extension for VSCode Each subsection below will be a small report of me investigating some items in this CSV3. It starts “easy” and gets progressively more complicated. Feel free to skim and skip any part if you don’t feel like it. Getting rid of Nix (~179MB reduction) The heaviest item in that list is a mysterious “source” package. A quick look into what the heck could be taking 170MB of disk space shows it’s actually a complete copy of Nixpkgs! ❯ ls /nix/store/amxd2p02wx78nyaa4bkb0hjvgwhz1dq7-source CONTRIBUTING.md README.md doc lib nixos COPYING default.nix flake.nix maintainers pkgs Searching for that package’s pos (just an identifier I used in the code that generates the CSV and the graphviz files) shows that it’s only used by this other package: That package is a single file which doesn’t have a lot in it other than a link to the “source” package. A search through Nixpkgs shows the file coming from here, the actual content of registry coming from here, and the source attribute being set here. I’m building this system with flakes and I’m using that nixosSystem function from Nixpkgs’s flake.nix, which means by default I get this extra 170MB in the system. I think it would’ve been easy to just undo what Nixpkgs’s flake.nix is doing, but if you look at the list of the heaviest packages again, you’ll see that Nix itself is the 10th heaviest package in the system. Nix also pulls a lot of dependencies, each one taking quite some space as well (for example, aws-sdk-cpp-1.11.207 eats another 5.7MB by itself, and is only used by Nix). After some thinking, I realised that I don’t need Nix in any of these systems. I definitely don’t need it in a microVM, but I also don’t need it in my servers, because I’m building their configurations in an external machine and deploying the built bits directly. So let’s add this to the system configuration: nix.enable = false; After rebuilding the system, we’re at ~733MB. Getting rid of Perl, Python (~242MB reduction) After removing Nix, the 2nd heaviest package is Python3, and 3rd is Perl. Python only comes in because of install-systemd-boot.sh (truly a shame, why waste so much disk space like this!), and Perl comes in through a bunch of perl-envs (search for perl-5.38.2-env in the CSV and you’ll see them). Those perl-envs are all used in the top-level package, so let’s figure out where they’re being used there: ❯ grep -nr 'perl-5.38.2-env' /nix/store/7z0y5sscnpx4hczzkjh3jvjgn2mq3106-nixos-system-nixos-24.05.20240323.44d0940 /nix/store/7z0y5sscnpx4hczzkjh3jvjgn2mq3106-nixos-system-nixos-24.05.20240323.44d0940/dry-activate:23:/nix/store/d3qxgm4ffhi2ixx3n9clwqlr6z21dd8i-perl-5.38.2-env/bin/perl \\ /nix/store/7z0y5sscnpx4hczzkjh3jvjgn2mq3106-nixos-system-nixos-24.05.20240323.44d0940/activate:43:/nix/store/d3qxgm4ffhi2ixx3n9clwqlr6z21dd8i-perl-5.38.2-env/bin/perl \\ /nix/store/7z0y5sscnpx4hczzkjh3jvjgn2mq3106-nixos-system-nixos-24.05.20240323.44d0940/activate:63:/nix/store/zkmm5iha0rsm4ypwfc67byq52gz0jb8b-perl-5.38.2-env/bin/perl /nix/store/rg5rf512szdxmnj9qal3wfdnpfsx38qi-setup-etc.pl /nix/store/jq5a0yw04ichvggf7dx80xc438z2v1gv-etc/etc /nix/store/7z0y5sscnpx4hczzkjh3jvjgn2mq3106-nixos-system-nixos-24.05.20240323.44d0940/bin/switch-to-configuration:1:#! /nix/store/8mlvyl3sab5hxpxz2naz5g2sfd42a40q-perl-5.38.2-env/bin/perl To make it easier to parse this bunch of text: Perl is used in the dry-activate, activate, and bin/switch-to-configuration scripts. dry-activate only needs Perl to run the update-users-groups.pl script, while the activate script runs the same script and also setup-etc.pl, and bin/switch-to-configuration is a Perl script from the beginning. Fun fact: the minimal profile disables man pages and most other documentation bits, but the perl man pages are the only thing that still get included in the system because of the perl-envs! I thought Perl was going to be hard to remove, but I was determined to at least take a look. After all, judging only by the naming, update-users-groups.pl doesn’t seem like the kind of thing I need - I don’t expect my servers to create any extra users or groups dynamically, so there’s nothing to update. (note that I have no idea what update-users-groups.pl actually does, this was just my thinking from reading its name) I decided to search Nixpkgs for that script name to get an idea of how it was being added to the system. It was through this search that I stumbled upon a Nixpkgs tracking issue called Perlless Activation - Tracking Issue. Someone decided it wasn’t a good idea to have Perl in the base NixOS system for slightly different reasons, and they did a lot of work to get rid of it! Luckily for me, I could piggyback off their work and include the following module in my system configuration: modules = [ ... (nixpkgs.outPath + \"/nixos/modules/profiles/perlless.nix\") ]; After rebuilding the system, we’re at ~491MB. As a bonus, Python is now gone as well! Deduplicating systemd (~14MB reduction) systemd is now the 2nd heaviest package. It has some stuff inside that I think could be removed, but since it’s an integral part of the system, let’s overlook it for now. Going through the list of packages, what’s this in 5th place? For some reason, our NixOS system has both systemd and systemd-minimal! A look through which packages use systemd-minimal show that only dbus uses it. It comes from here. Nixpkgs has a lot of packages, and sometimes due to circular dependencies or to keep the size of dependencies smaller, it introduces variants of packages/functions that have reduced functionality. If you contribute to Nixpkgs, chances are that at some point, someone will give some feedback on ways you can use variants that have a smaller dependency chain, or smaller size (a common example is using stdenvNoCC instead of stdenv). systemd-minimal probably exists to avoid certain circular dependencies, but I’m not sure. It’s defined here. In any case, I’d like to get rid of systemd-minimal, since we already have the full systemd in our system anyway. There is no easy way to override the package used by the NixOS module that brings in dbus, so we’ll have to add a Nixpkgs overlay to change the dbus package directly: nixpkgs.overlays = [ ( self: super: { dbus = super.dbus.override { systemdMinimal = self.systemd; }; } ) ]; After rebuilding the system, we’re now at ~477MB. Removing udev, lvm, sudo and security wrappers (~30MB reduction) This is where things start to get very messy. While looking through the list of heaviest packages, I saw an “hwdb.bin” package which seems linked to udev. I don’t know about udev too much, but it feels like it’s only needed for scenarios that won’t happen on the kind of servers I want to manage. In case it is actually used for something important and this breaks the system, I have a feeling that a workaround could be hard-coded and wouldn’t require udev anyway. I’d gladly go into that rabbit hole, but (spoiler alert) you’ll see that I gave up well before that. There’s an option to disable it: services.udev.enable = false; While looking through the stuff adjacent to udev, I noticed that lvm is also enabled by default. Similar reasoning to udev, I don’t think I’d need lvm for these servers, so I disabled it. services.lvm.enable = false; Before proceeding with more of this, I took a break and looked at some more packages in the list. At that point, it became clear that I’d have to butcher a LOT of NixOS config to remove many packages in there. I made a decision to continue with this exercise, but make it less about keeping a working system throughout and more about understanding the efforts to just get rid of some of these packages. To get to a barebones system, I’d need to remove a lot of them. While looking through the lvm stuff, I noticed fuse2 and fuse3 are hard-coded by default (and changing those gets complicated quickly). I saw they’re used by some security wrappers, which also set other security wrappers for mount, umount, sudo, and a bunch of other binaries. This is needed because Nix doesn’t support sid/gid binaries by design, so NixOS has a binary that dynamically sets some capabilities and permissions, and then executes any other binary with the elevated bits. I don’t like having this functionality. Instead of a single wrapper binary which receives an argument with the binary to execute with elevated permissions, I’d rather have X wrapper binaries with hardcoded paths and no parametrisation of any kind (one for each of the X things I want to execute), and that’s only IF I actually need this functionality. For anything I want to run in these servers, I think I can configure the proper permissions through systemd unit configs. The security wrappers module doesn’t have an enable option to toggle it off, so one way to get rid of it completely is to add it to the disabledModules attribute. This requires me to provide dummy options that were provided by the security wrappers module earlier, because when building a NixOS system, by default every module gets evaluated (most of them just won’t do anything because they’re not enabled). Some of these modules set additional wrappers, so the dummy options are needed to make the module system happy. ({ lib, pkgs, ... }: { disabledModules = [ \"security/wrappers/default.nix\" ]; options.security = { wrappers = lib.mkOption { type = lib.types.attrs; default = { }; }; wrapperDir = lib.mkOption { type = lib.types.path; default = \"/run/wrappers/bin\"; }; }; config = { # ... }; }) I think doing this could break some script that calls mount or umount or fuse (because those are hardcoded in the security wrappers module), but I also think that most scripts that use those are being run directly as root, so I’m not sure. To finish this section, let’s also disable sudo completely because it’s useless without its security wrapper. security.sudo.enable = false; We’re at ~447MB now. Some other minimal shenanigans At this point, the 10th and 11st heaviest packages are util-linux and util-linux-minimal, respectively. Well, this seems similar to that systemd-minimal thing from a while ago! Let’s look at where these are being used: util-linux system-path, a bunch of systemd services and a “mount-pstore” shell script. util-linux-minimal fuse2 and fuse3, and etc-systemd-system.conf Removing fuse is very annoying (although to be honest, with all the mess in the config so far, it wouldn’t even look that bad anymore). But we can at least try to make them use util-linux instead of util-linux-minimal, right? To get there, let’s look at how these packages are declared in all-packages.nix. We’ll need an overlay, but trying to change fusePackages to use the normal util-linux will hit an infinite recursion error, so I’ll start by overlaying fuse3: nixpkgs.overlays = [( self: super: { fuse3 = (self.lib.dontRecurseIntoAttrs (self.callPackage (nixpkgs.outPath + \"/pkgs/os-specific/linux/fuse\") { })).fuse_3; } )]; This builds nicely, but the moment I try to do this with fuse2, the infinite recursion error is back. Sigh. Whatever. Browsing through the list of packages, I also see systemd-minimal-libs sneaking in there. It’s being used by a bunch of other packages, and it’s equally difficult to add more overlays to get rid of it. Infinite recursions all around. This is where I look at the current system config, look at all the notes I made of things to look into that I haven’t yet (the list is right there in the next section), think about how much worse it’ll get by trying to fix all of this, and give up. Things I noted, but didn’t look at With Nix gone, the heaviest package was the linux kernel at ~136MB. I know I can get it down to ~50MB easily (the kernel used by default on NixOS has a lot of modules and extra things that a server doesn’t need), so I left that for later because it was easy. One disadvantage of a perlless system is that it can’t switch to a different configuration at runtime, because the script that does this is written in Perl. This isn’t an issue for most of the servers in my scenario. MicroVMs don’t need that, and I’d be perfectly ok just killing a bunch of other servers and starting new ones with the updated configuration. However, I made a note to look into that perl script and figure out how much work it would be to build a replacement. This is something that needs to happen anyway at some point, and would benefit the NixOS community at large. A bunch of packages build with all locales and some internationalisation content. Those end up taking some good space, so I made a note to look at how to simplify this and get rid of most of the locales and files I wouldn’t need. The system has both libressl and openssl packages. libressl is only used for netcat, but I don’t really need it in the servers. In fact, NixOS includes a lot of utilities by default (and marks them as required, making it super annoying to remove them) which aren’t really needed on the servers. A bunch of extra default config files that aren’t needed (such as bashrc) could be removed. This would also remove some packages that they use, such as bash-completion, which won’t ever be needed in the servers. coreutils and util-linux are both kind of heavy, but it’s very likely that the scripts and things that use them only really need a few binaries from each one. Perhaps an overlay that filters the binaries only to the list that are used would help free up quite a bunch of disk space. nix-store has a command to optimise disk space by finding identical files and hard-linking them. This could be helpful in some cases, but might not be possible in others, depending on how a server is imaged, or how new configuration gets pushed to it. It could be useful to decrease the disk space used by some of those “-minimal” packages (as long as they share exactly the same file). Leaving this to the future There is a huge audience that uses NixOS as a personal OS, and a lot of the defaults and modules present in NixOS reflect that. NixOS can still be used as a server OS, but it requires a very different set of configurations, and it still ends up not being adequate in every situation. I can (and will) still apply many of the configs I used in this post to my existing servers and make them leaner, which will already be useful, because it cuts ~300MB of stuff I don’t need. I got some experience and figured out some tools to help me investigate these issues more whenever I feel the need to. But over the 2 days I spent looking at this, I concluded that trying to mold NixOS into the shape I envisioned just isn’t the way to go, but I also don’t like the other option if I want to stick with it, which is creating a “fork” of NixOS that is very opinionated and completely focused on server scenarios. I was trying to bring NixOS to a bare minimum, which is an exercise similar to building containers with the bare minimum required for the software in the container to run. I think this is a worthy endeavour. I think we have all the tools in regular non-docker, non-kubernetes linux to get to a similar outcome, except we won’t need docker or kubernetes or whatever in this new land, thus removing quite a bunch of complexity from the systems we build. But doing it on top of NixOS currently feels like a bad path to take. actually the top-level system as given by the .config.system.build.toplevel attribute, which covers essentially everything the system needs to run. ↩︎ I’m going to use the term “package” to mean “store object” as defined by the Nix manual, because for most people this is an easier way to reason about store objects. ↩︎ If you want to look at the same CSV I used, you can download it, but you won’t be able to inspect the store paths unless you happen to build the same configuration with the same Nixpkgs version. ↩︎",
    "commentLink": "https://news.ycombinator.com/item?id=41717050",
    "commentBody": "NixOS is a good server OS, except when it isn't (sidhion.com)163 points by IrisBMeredith 14 hours agohidepastfavorite158 comments Larrikin 13 hours agoHave there been any good efforts into getting rid of the language or providing an alternative? My effort into switching and the biggest complaint I've read is that the idea behind NixOS and the ecosystem is genius but one of the biggest draw backs is writing everything in Nix. I spend a weekend every so often defining the core of what I want next time I upgrade, but just find it so annoying I'm sure I won't use anything I've written until there's a major change in the ecosystem. reply turboponyy 12 hours agoparentWhat's so bad about it? Putting aside the poor typing (the lack of proper typing is a shame, so valid criticism), I actually really like the language - it's genuinely a great DSL for the particular problems it's supposed to handle. It does take a bit of use for it to click, though. A lot of it has to do not with Nixlang itself but about learning nixpkgs' idioms. reply k_bx 12 hours agorootparentIt's not just poor typing. It's the lack of discoverability. \"What are all my options here in this expression? What are the symbols available?\" I think a good IDE integration could solve this, but not sure how much is possible. reply rendaw 9 hours agorootparentLike (iirc) systemd-resolved has `enabled` which is false by default but then gets silently turned on if you use systemd-networkd. How are you supposed to figure that out without reading the source? But I think this also stems from the fact that the default state of nixos is \"a general purpose linux system\" and so instead of just starting at 0 and adding the things you need, you have to mix adding and removing things which IMO makes things much more complicated (except maybe for newbies to linux who don't know what's necessary for a running system). reply anon291 4 hours agorootparentYou instantiate the nix config and then lookup the value `nix-instantiate --eval -A config.services.resolved.enabled /etc/nixos/configuration.nix` This is way better than a stateful package manager making a non-revertible change without even telling me. reply soraminazuki 7 hours agorootparentprevFor other distros, that kind of behind the scenes changes are triggered by package installation and ad-hoc commands. It's not always easy to figure out exactly what has changed, especially after the fact. This, in turn, makes changes difficult to revert. NixOS is much better because you can inspect the changes after the fact. You also know which code to look for, which is a luxury. If the code seems too much, there's the repl to help. Changes are also much easier to revert. reply SuperSandro2000 8 hours agorootparentprevnixos-rebuild repl and then you can inspect things like config.services.resolved.enable or :p options.services.resolved.enable.definitionsWithLocations With a default config you start with a console, systemd, dbus and some things to make it boot. There is barely anything. reply hamandcheese 12 hours agorootparentprevThe nix repl can be a very valuable tool in answering these questions. That said, I strive to structure my nix source so that portions of it can easily be pasted into a repl. ReadTree goes a long way in that regard: https://github.com/tvlfyi/kit/tree/canon/readTree More to your point, though: I think a lot is possible. Although nix is very dynamic, it is also, for all intents and purposes, side effect free. I've had this idea that a sufficiently advanced IDE should be able to evaluate your nix code and tell you exactly what the possible values (not just types, but value!) are for any particular variable. reply lloeki 10 hours agorootparent> I've had this idea that a sufficiently advanced IDE should be able to evaluate your nix code and tell you exactly what the possible values (not just types, but value!) Similarly to the REPL, I'm often using `nix-instantiate --eval -E 'somethingsomething'` so it should definitely be possible. reply amusable3539 3 hours agorootparentprevThe community has built two LSPs, and https://search.nixos.org/options (or \"man configuration.nix\", if you prefer) shows what NixOS options are available reply turboponyy 8 hours agorootparentprevThis is inherently a Hard Problem™, since completions may require evaluating arbitrary derivations (e.g. building a custom Linux kernel). For \"what symbols are available\", the nil LSP implementation[1] works for anything in scope that doesn't require evaluation. It also includes completions for the stdlib and NixOS options (in certain contexts). Another LSP implementation is nixd[2], which is trying to tackle the problem of evaluations for completion. [1] https://github.com/oxalica/nil/ [2] https://github.com/nix-community/nixd reply anon291 4 hours agorootparentprev> What are all my options here in this expression? What are the symbols available?\" Unlike most languages, the symbols available are completely determined by the scope. Just look at the let expressions in effect. There's no magic. As for nested expressions, that's a typing problem, which was already mentioned above as a pain point (although there are several efforts to fix this). reply arianvanp 11 hours agorootparentprevThere is this: https://github.com/nix-community/nixd It has jump to definition and autocomplete. Which is very nice. It's not perfect. But it's pretty good reply grumbel 8 hours agorootparentprevThere is https://search.nixos.org/ and on the command line you can play around with: $ nix repl nix-repl> :lnix-repl> {press tab for auto-complete} reply kaba0 4 hours agorootparentprevBut that’s not the fault of the language. insert another DSL would have the same issues. reply logicchains 12 hours agorootparentprevWay too much sugar/\"idioms\", which makes it hard for someone new to the language to figure out what a given piece of code is actually doing. Confusing use of semicolons for what almost every other language uses commas or newlines (or nothing) for. It's the same feeling as writing bash, and needing to always look up again exactly what the syntax is and where the semicolons go. reply soraminazuki 9 hours agorootparentHere's all the cases for using a semicolon. (estimated 30 seconds read) 1. At the end of local variables let a = 1; b = 2; in a + b result: 3 2. At the end of each attributes in an attribute set (a.k.a. dictionaries or key-value pairs) { a = 1; b = 2; } result: { a = 1; b = 2; } 3. with expressions with pkgs; coreutils result: (the coreutils attribute in the pkgs attribute set) 4. Assertions assert a != null; a result: (the value of a) Now, you'll never be confused again. reply SuperSandro2000 8 hours agorootparentprevThis sounds like a skill problem if you don't even know bash or rust or PHP syntax. reply jiripospisil 8 hours agoparentprevThe Nix language also doesn't need to exist. They want to write pure lazy declarative derivations - great, you can do that in any existing language. It's a matter of style and APIs. You don't need to spend years developing a brand new language from scratch. Not to mention that many derivations end up calling a Bash script underneath anyway because at some point you actually need to perform an action in the real world. How would a derivation looked like if written inwith lazy APIs? reply packetlost 5 hours agorootparentThe Nix language is basically what you'd get if you were designing a DSL for declarative configuration of extremely deeply nested trees. Nearly every \"feature\" in the language is for making that easier. You could probably write a Nix -> JSON compiler and end up with something completely unreadable because the language hides so much of what's actually present in the fully resolved tree. reply weatherlight 6 hours agorootparentprevThat's not true. The language needs to be declarative. if you use your favorite lang and develop a DSL around those APIS, that DSL would be declarative.. also the language itself, isn't that complicated.... it's really quite minimal. It has its roots in ML. I honestly think people expect everything to look like javascript or C++ and it's a shame honestly. reply jen20 5 hours agorootparentPulumi is a great example of declarative APIs built with imperative programming languages. SwiftUI is another. Personally I have nothing against the Nix language, and use it without issue, but it's untrue to suggest that the language itself requires uncommon support for this kind of thing. reply anon291 4 hours agorootparentOoof... Pulumi et al are terrible to write and read. Why should I care about writing 'new' in front of all my declarative configuration? What happens when an if statement depends on a concrete value? How would that even work? The leakiness of the abstraction is too terrible to even consider. Terraform et al, despite not being my favorite, have much simpler semantics than Pulumi. It's not always a good idea to write DSLs into languages with huge paradigm mismatches. reply hiatus 4 hours agorootparentprevPersonally I see it as similar to typed vs untyped languages. You can add typing to untyped languages or you can just use a typed language. The language used shapes the structure and some are easier to reason about than others (to some people). reply fsociety 4 hours agorootparentprevSome people don't want to hear this, but it is 100% true. reply anon291 4 hours agorootparentprevMeh... the nix language being as it is makes it a lot easier to write these things with less cruft. Every attempt I've seen at introducing laziness into a language like python, c++, rust, javascript, etc just seems to require a lot more unnecessary keywords and helper functions and cruft. reply tkz1312 10 hours agoparentprevI find the nix language to be quite pleasant. There are some syntax quirks and types would be nice, but in general the “json with functions” vibe is imo great and a very nice fit for the domain. Lots of other modern config languages (e.g. dhall, jsonnet) have ended up in this part of the design space too. With that said tweag has been working on a kind of nix 2.0 / nix with types for a while with the aim (I think) of being able to use it in nixpkgs: https://github.com/tweag/nickel reply the_duke 10 hours agorootparentI also quite like nixlang for config tasks - in theory! In practice its really annoying. I think the main problem is the interpreter and the bad error messages / bad debuggability. Part of that just comes from lazy evaluation, which makes debugging a lot harder in general (you feel this in Haskell...), but also just from nix not being a big popular language that gets lots of polish, and being completely dynamically typed. reply anon291 4 hours agorootparentprevMe as well. As a haskell / ML programmer, it is extremely intuitive. It's non-innovative (In a good way). Literally it's just a functional scripting language. reply poincaredisk 8 hours agorootparentprevNix is ok. I like jsonnet more, and once I've tried to write a converter from jsonnet to nix, but it turned out this is much harder than expected (some idioms don't transfer from nix to jsonnet well. reply adrian_b 12 hours agoparentprevThere is Guix, which replaces the Nix language with Scheme, but which has some limitations related to a smaller user base, e.g. a smaller package collection. Replacing the language requires duplicating all the work that went into Nix, to reach parity, so it is not easy. reply duped 12 hours agorootparent> Replacing the language requires duplicating all the work that went into Nix, to reach parity, so it is not easy. That seems like a design flaw in Nix, there's no reason the data model should be so tightly coupled to the scripting implementation that you can't reuse packages written in a different language. reply hamandcheese 12 hours agorootparentThere is no technical barrier against doing that. But much of the power and flexibility in nixpkgs arises from the nix language, not the data model (which is comparatively simple). For example, see zb: https://www.zombiezen.com/blog/2024/09/zb-early-stage-build-... Using a different language to depend on packages derived from .nix would be very much akin to depending on a docker image whose Dockerfile you can not inspect. reply duped 4 hours agorootparentThat sounds like a design flaw in the data model if the flexibility exists at a higher level. reply hamandcheese 2 hours agorootparentWhat would a better design look like? reply duped 32 minutes agorootparentOne where the \"power and flexibility\" of nixpkgs is encoded in the data model? If there is something that can be done in the nix language that can't be expressed in the underlying model that needs to be used by another frontend then it should be represented in the underlying model so another frontend can use it. To put it another way, if you're designing a client-server model where there may be multiple client implementations you don't bake big chunks of the implementation into the clients, you provide it in the server interfaces and data types. reply rollcat 9 hours agorootparentprev> Using a different language to depend on packages derived from .nix would be very much akin to depending on a docker image whose Dockerfile you can not inspect. Speaking of Docker images and Dockerfiles, that's actually a real-world example of how you can achieve this kind of effect without relying on a specific language. Ironically, you can use Nix to build Docker images; there's a bunch of other alternative builders (e.g. Kaniko, Buildah); you can also just stitch together some files&metadata into tarballs, and then 'docker import' it. Nix or Guix are of course much more powerful and expressive than Docker images, but there's always a cost to complexity. reply SuperSandro2000 8 hours agorootparentprevScheme is so much worse. It has so much repetition and is so much more verbose for no reason. reply mtndew4brkfst 7 hours agorootparentA macro-capable lisp means that this isn't permanently or definitionally true, even if it is today - which is pretty subjective. https://www.gnu.org/software/guile/manual/html_node/Macros.h... Racket is IMO a pretty compelling environment for prototyping DSLs because of how malleable it can be, so I think the ceiling for ergonomics can be pretty high. reply poincaredisk 8 hours agorootparentprevIIRC guix started off by being compatible with nix package derivations, but they broken it (i also may remember incorrectly). If nothing changed, they also have a strong ideological drive and funny support any non-free software. reply umanwizard 2 hours agorootparentWhat is a \"package derivation\"? Packages and derivations are two different things in Guix. Also, Guix supports proprietary software just fine. It's just not in the main official repo. But there are other repos that have it, e.g. nonguix. reply kkfx 8 hours agorootparentprevThe biggest limitation IMO it's that they are HPC-centric, not caring the desktop, which is the was to allow more people discovering a distro. Also the lack of a proper zfs and lvm/mdraid/luks support it's a big showstopper. reply seanhunter 10 hours agoparentprevI don't think the language is the issue here[1]. It seems inevitable to me that some of the design choices around immutability and isolation are going to result in a larger server image (both on disk and in memory) than if you are prepared to forgo those things. For most people that tradeoff is probably worth it but if you want something to run in an embedded server or with a very low disk footprint it's probably not right for you. Around 20 years ago people who wanted to do this[2] used to make tiny immutable redhat servers by remounting /usr and a few other things read-only after boot so it's certainly doable but it's a lot more of a pain than what nix does and there is no process isolation and no rollback etc when things go wrong. [1] ...or generally in fact but that's a matter of opinion and I know people feel differently about this. [2] me for one, but others also. reply maxloh 13 hours agoparentprevIt seems to be an issue with testing and debugging, rather than the language itself. The same issue would also be present if you could switch to any other language for configuration. reply umanwizard 11 hours agoparentprev> Have there been any good efforts into getting rid of the language or providing an alternative? Guix is conceptually similar to Nix but uses scheme. reply kjuulh 13 hours agoparentprevNickel lang is such an effort. Id say the syntax is a mix of json and lua and aims for a non-touring complete program. It is still a bit early but it looks promising reply pxc 12 hours agorootparentNo, Nickel is Turing-complete. That's been one of the characteristics intended to distinguish it from most other configuration languages from the start. See the 'RATIONALE' document: https://github.com/tweag/nickel/blob/378ece30b3e3c0ab488f659... reply SuperSandro2000 8 hours agoparentprevWhat do you want to replace it with? YAML? The language won't go away and you should try to look at it for more than I don't like it. reply otabdeveloper4 6 hours agoparentprevNo, writing this in any other language will definitely make for a much shittier Nix experience. The problem isn't the language, the problem is that nixpkgs (and NixOS) are just huge. reply Nathanba 5 hours agoparentprevyes, https://github.com/garnix-io/garn But weirdly there was little interest and they rebranded themselves around being a more general build system based on nix instead of what they originally said about being a nix reimplmentation in typescript. reply kstenerud 12 hours agoprevI just finished moving all of my servers off NixOS and I'm finally breathing a sigh of relief. Deterministic systems are a cool idea, but we're just not there yet. The headaches and pain involved in maintaining these systems and warping the software to obey are too great. Everything in NixOS works, until it doesn't. And when it doesn't, woe be unto you. reply judofyr 11 hours agoparentWhat did you replace it with? I've been been using NixOS for a (non-critical) server which replaces another server that was \"managed\" by Ansible. Now that's it running nicely on NixOS, and while it's far from perfect, I'm really struggling to see how I would manage it in any other way. The experience is so much nicer now. reply kstenerud 11 hours agorootparentI use Proxmox on top of Debian. Surprisingly, I'm back to Bash scripts to set things up (because Ansible wouldn't allow me to orchestrate between a host and a guest - so if I have to change container config during setup, I'm back to scripts again, AND the complications of Ansible). I basically build up Proxmox container templates, and then build upon those similar to how Docker does it (I don't use Docker because they don't allow you to specify your MAC address, so you can't control them from a separate LAN-based DHCP server - instead you have to map a bunch of ports on your host and then configure all external clients to match... so dumb). I've basically gone full circle at this point: - Docker - LXD with Bash scripts - LXD with a ton of Python - NixOS - Proxmox with Ansible - Proxmox with Bash scripts (albeit much simpler and flatter than last time) Everything is containerized and has its own IP address on the physical LAN, the templates can be regenerated with a simple script, important data is mapped to a host directory (/home/data/my-container, which gets backed up), and destroying and rebuilding an instance container is a cinch. One really nice feature of this setup is that I can tear down and rebuild a template, launch a test container from that, copy the instance data in /home/data to the new container, make sure it works with the new stuff, and then launch it for real. Now it doesn't matter what technology (container or VM) I use. Everything is a completely separate machine as far as the LAN is concerned, which greatly simplifies things. Everything, from host to software to containers & VMs is built \"deterministically\" (i.e. deterministically enough) from the scripts. Rebuilding the whole thing (server and all) from scratch takes about an hour and a half. I just use the same set of scripts on all of my servers to make management easier. Hosts have minimal software and configuration, and guests do all the real work. Migrating is an rsync /home/data away. reply gomerspiles 5 minutes agorootparentFunny, I can imagine bash is a real improvement on ansible. I once started with bash, switched to bash in ansible and then to \"good style\" ansible and then to a nixops cluster. There wasn't really a good point between bash and nix. reply koyote 10 hours agorootparentprevAs someone who uses Proxmox without bash scripts and is scared of the day I have to re-work out all the config files I (often randomly through trial and error) changed: Do you have any tips on how to get started? Do you simply make the change and then paste the commands needed into a script? Also I assume you have a script to set up the (Proxmox) host machine? I also have quite a few Proxmox specific things that I had to change (e.g. GPU pass-through) which seems to break your \"Now it doesn't matter what technology (container or VM) I use\" advantage. reply kstenerud 10 hours agorootparentEdit: I've made the repo public: https://github.com/kstenerud/proxmox-containers Here's one of my host setup files (run this immediately after installing Proxmox from the iso): DATA_SIZE=600GiB # Switch to free mode rm /etc/apt/sources.list.d/ceph.list rm /etc/apt/sources.list.d/pve-enterprise.list echo \"deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription\" >/etc/apt/sources.list.d/pve-no-subscription.list # Setup locale sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen locale-gen update-locale LANG=en_US.UTF-8 LANGUAGE=en_US LC_ALL=en_US.UTF-8 apt update apt dist-upgrade -y apt install -y software-properties-common add-apt-repository -y non-free apt install -y vainfo intel-media-va-driver-non-free lm-sensors apt install -y ansible pip python3-proxmoxer htop strace git # Setup user data area lvcreate -V ${DATA_SIZE} -T pve/data -n home_data mke2fs -t ext4 -O ^has_journal /dev/pve/home_data mkdir /home/data echo \"/dev/pve/home_data /home/data ext4 rw,discard,relatime 0 2\" >>/etc/fstab mkdir -p /mnt/containers/media echo \"//media/media /mnt/containers/media cifs uid=100000,gid=100000,ro,guest,x-systemd.automount 0 0\" >>/etc/fstab mkdir -p /mnt/containers/files echo \"//files/files /mnt/containers/files cifs uid=100000,gid=100000,ro,credentials=/etc/samba/credentials,x-systemd.automount 0 0\" >>/etc/fstab systemctl daemon-reload mount -a The host is kept VERY simple. Here's my basic Ubuntu container template: # ============ # Local config # ============ TEMPLATE_IMAGE=\"ubuntu-24.04-standard_24.04-2_amd64.tar.zst\" INSTANCE_CT=200 INSTANCE_NAME=template-ubuntu INSTANCE_MEMORY=2048 # ====== # Script # ====== pveam download local ${TEMPLATE_IMAGE} || true pct create $INSTANCE_CT local:vztmpl/${TEMPLATE_IMAGE} \\ --hostname ${INSTANCE_NAME} \\ --memory ${INSTANCE_MEMORY} \\ --rootfs local-lvm:1 \\ --net0 name=eth0,ip=dhcp,ip6=dhcp,bridge=vmbr0 \\ --ostype ubuntu \\ --start 1 \\ --timezone host \\ --features nesting=1 \\ --unprivileged 1 # Use a fast mirror pct exec $INSTANCE_CT -- sed -i 's/archive.ubuntu.com/ftp.uni-stuttgart.de/g' /etc/apt/sources.list # Set up locale pct exec $INSTANCE_CT -- sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen pct exec $INSTANCE_CT -- locale-gen pct exec $INSTANCE_CT -- update-locale LANG=en_US.UTF-8 LANGUAGE=en_US LC_ALL=en_US.UTF-8 # Bring everything up to date pct exec $INSTANCE_CT -- apt clean pct exec $INSTANCE_CT -- apt update pct exec $INSTANCE_CT -- apt dist-upgrade -y pct exec $INSTANCE_CT -- apt install -y software-properties-common curl # Turn this into a template pct stop $INSTANCE_CT pct template $INSTANCE_CT Here's my Plex template (with GPU passthrough): # ============ # Local config # ============ TEMPLATE_CT=200 INSTANCE_CT=201 INSTANCE_NAME=template-plex INSTANCE_MEMORY=2048 # ====== # Script # ====== passthrough_gpu() { local instance_id=\"$1\" echo 'lxc.cgroup2.devices.allow: c 226:0 rwm lxc.cgroup2.devices.allow: c 226:128 rwm lxc.mount.entry: /dev/dri/renderD128 dev/dri/renderD128 none bind,optional,create=file lxc.hook.pre-start: sh -c \"chown 0:108 /dev/dri/renderD128\" ' >> /etc/pve/lxc/${instance_id}.conf } pct clone $TEMPLATE_CT $INSTANCE_CT --full 1 pct resize $INSTANCE_CT rootfs 2G pct set $INSTANCE_CT \\ --hostname ${INSTANCE_NAME} \\ --memory ${INSTANCE_MEMORY} \\ --net0 name=eth0,ip=dhcp,ip6=dhcp,bridge=vmbr0 passthrough_gpu $INSTANCE_CT pct start $INSTANCE_CT pct exec $INSTANCE_CT -- apt update pct exec $INSTANCE_CT -- apt dist-upgrade -y # Install Plex apt_add_key $INSTANCE_CT plexmediaserver https://downloads.plex.tv/plex-keys/PlexSign.key CD665CBA0E2F88B7373F7CB997203C7B3ADCA79D apt_add_repo $INSTANCE_CT plexmediaserver \"https://downloads.plex.tv/repo/deb public main\" pct exec $INSTANCE_CT -- apt update pct exec $INSTANCE_CT -- apt install -y plexmediaserver # Turn this into a template pct stop $INSTANCE_CT pct template $INSTANCE_CT Here's the Plex instance script (starts a Plex instance going from the Plex template): # ============ # Local config # ============ TEMPLATE_CT=201 INSTANCE_CT=20001 INSTANCE_NAME=plex INSTANCE_ADDRESS=99 INSTANCE_MEMORY=2048 # =========== # Host config # =========== HOST_DATA=/home/data HOST_BASE_UID=100000 HOST_BASE_GID=100000 # ====== # Script # ====== pct clone $TEMPLATE_CT $INSTANCE_CT --full 1 pct set $INSTANCE_CT \\ --onboot 1 \\ --hostname ${INSTANCE_NAME} \\ --memory ${INSTANCE_MEMORY} \\ --net0 name=eth0,hwaddr=12:4B:53:00:00:${INSTANCE_ADDRESS},ip=dhcp,ip6=dhcp,bridge=vmbr0 # Mount the media dir pct set $INSTANCE_CT -mp0 /mnt/containers/media,mp=/media # Get the UID and GID of the plex user pct start $INSTANCE_CT PLEX_UID=$(pct exec $INSTANCE_CT -- id -u plex) PLEX_GID=$(pct exec $INSTANCE_CT -- id -g plex) PLEX_HOST_UID=$(($HOST_BASE_UID+$PLEX_UID)) PLEX_HOST_GID=$(($HOST_BASE_GID+$PLEX_GID)) pct stop $INSTANCE_CT # Mount the Plex config dir mkdir -p /home/data/${INSTANCE_NAME}/var-lib-plexmediaserver chown -R ${PLEX_HOST_UID}:${PLEX_HOST_GID} ${HOST_DATA}/${INSTANCE_NAME} chown -R ${PLEX_HOST_UID}:${PLEX_HOST_GID} ${HOST_DATA}/${INSTANCE_NAME}/var-lib-plexmediaserver pct set $INSTANCE_CT -mp1 ${HOST_DATA}/${INSTANCE_NAME}/var-lib-plexmediaserver,mp=/var/lib/plexmediaserver pct start $INSTANCE_CT pct exec $INSTANCE_CT -- apt update pct exec $INSTANCE_CT -- apt dist-upgrade -y IP_ADDR=$(pct exec $INSTANCE_CT -- hostname -Ixargs) set +x echo \"===========================================================\" echo \"FOR FIRST TIME SETUP (no existing config):\" echo echo \"Go to https://www.plex.tv/claim/\" echo \"pct exec $INSTANCE_CT -- curl -X POST 'http://127.0.0.1:32400/myplex/claim?token=PASTE_TOKEN_HERE'\" echo \"Then, go to ${IP_ADDR}:32400\" echo \"===========================================================\" reply justinclift 9 hours agorootparentMaybe chuck that on GitHub/gist (or some other online repo) so people can potentially suggest stuff in an easy way? :) reply kstenerud 9 hours agorootparentHmm OK. I already had it on github so I'll just make it public: https://github.com/kstenerud/proxmox-containers reply knowitnone 2 hours agorootparentThank you. I've been meaning to try out proxmox. reply rcarmo 10 hours agorootparentprevProxmox really needs to get their cloud-init story together. If they supported cloud-init for LXC a lot of automation and setup issues would just go away… reply hamandcheese 11 hours agorootparentprevI'll echo this. I can't imaging going back. And yes, I have put a lot of blood sweat and tears into making things work in nix/NixOS. The thing that keeps me invested is once I get something working, it is far easier to keep it working. If nixpkgs updates break my things, I'm one git bisect away from figuring out what happened. reply tonygiorgio 3 hours agoparentprevThe OP’s article mostly seemed to be about disk space size, specifically when creating a bunch of micro vms. As a NixOS personal dev user, I’m curious about your insights here. Do you have other issues besides the disk space one? I’ve always wanted to do a NixOS server but I only know enough nix to get by on a dev machine. I’m worried about the complexity in deploying a live server. reply kstenerud 2 hours agorootparentNixOS is EXTREMELY opaque and obtuse. The documentation also, since everything assumes that you already know everything. I thought that I could just power through it, but there's just no end to the edge cases, bizarre magic, lack of useful error feedback (if any at all - the most common result is: nothing happens), and situations where you simply cannot do what you want to do. So you either conform to their model and live with the limitations (and spend countless weekends debugging your builds), or you give up and move on. I just got tired it all. I want to spend my time USING the computer, not setting it up. So now I use Debian, because everything includes a build for Debian and drivers for Debian. And the best part is: SOMEONE ELSE is maintaining it and keeping it current with the latest security fixes. reply anon291 4 hours agoparentprevAs an opposing viewpoint, I migrated all my self hosted systems (physical machines in a data center) to use nixos and have truly reached self-hosting nirvana. Nothing breaks because I build everything before deployment, and when things do break during system build, it's fairly trivial to fix. I've successfully run all my own infrastructure on NixOS for about 5 years now. No downtime. Very easy to replace computers reply SuperSandro2000 8 hours agoparentprevSame experience with Debian. Preaching religious, unquestionable stability but a soon as you install an out of tree software, everything falls apart in your hands. Any Debian system I used fell apart on upgrades in some unrecoverable way and it was a giant pain in the ass. The last NixOS stable release I deployed in ~3 hours onto ~30 VMs with only minor issues and everything continued to just work. reply kstenerud 7 hours agorootparentI don't actually care about uncommon software stability on Debian. The hypervisor is Debian, so it runs very basic happy path software that always gets tested by the Debian team (and/or Proxmox team) for upgrade problems, and then all of my crazy-ass software runs in containers/VMs which are simple to destroy/rebuild if necessary. The Proxmox team ensures that the hypervisor stuff works, and now I don't have to worry about a basic change to a nix file resulting in \"Unknown entity flibblefrazzle\" coming from some random place 18 levels deep in the bowels of the package system/os. It really got to the point where I was afraid to touch anything anymore. Now I can run an up-to-date Plex! And Chrome Remote Desktop! Without spending 3 whole weekends knee deep in nix guts! reply Cyph0n 6 hours agoparentprevThere is a middle ground imo: run your application/services as containers on top of NixOS. Granted, this doesn’t work for all cases. reply kstenerud 6 hours agorootparentThat's basically what I was doing. But it still became too stressful to manage them. Proxmox has its own issues (they all do), but it's a much more inviting experience and nicer community. reply Cyph0n 5 hours agorootparentFair enough. I actually run Proxmox too, but have most services running on NixOS as a VM. Best of both worlds haha :) reply kstenerud 2 hours agorootparentFor me it came down to an epiphany: I'm doing all this careful setup on a tricky, esoteric platform to get reproducible builds, except actually, some of my containers have to run Debian because I can't build the software they run deterministically. So now I only sort-of have reproducible, immutable builds. So I'm jumping through all these hoops, stepping so far out of the norm that I become the effective maintainer and debugger of all of this, and ... Why was I doing this again? Oh yeah, deterministic builds and immutability. And I needed these ... why? Turns out I can get a similar effect on a mainstream platform with some scripts and a little bit of discipline. reply nextaccountic 10 hours agoparentprevWhat didn't work in your NixOS servers? reply arianvanp 11 hours agoprevI don't know any other OS where you could even go on such a trip so easily! Figuring out why things are where and being able to disable them like this is pretty cool. I was really surprised you were able to replace systemdMinimal with systemd in dbus though. I thought it was there to break the cyclic dependency between systemd and dbus reply rollcat 9 hours agoparentDepends on what you consider \"easy\"! Nix itself has a pretty high barrier to entry. Personally I believe systems that start simple (e.g. Alpine) are easier to mess with. Plus you don't have to give up all benefits of declarative configuration; for example apk has a single file (/etc/apk/world) that defines the exact package set that needs to remain installed. You can edit it and run \"apk fix\", much like you can edit /etc/nixos/configuration.nix and rerun \"nixos-rebuild switch\". It's not as powerful as Nixos, but power (and complexity) always has a price. reply pxc 12 hours agoprev> I was trying to bring NixOS to a bare minimum, which is an exercise similar to building containers with the bare minimum required for the software in the container to run. I think this is a worthy endeavour. I think we have all the tools in regular non-docker, non-kubernetes linux to get to a similar outcome, except we won’t need docker or kubernetes or whatever in this new land, thus removing quite a bunch of complexity from the systems we build. > But doing it on top of NixOS currently feels like a bad path to take. The author of this blog post might be interested in playing with not-os, another, much smaller OS built with Nix: https://github.com/cleverca22/not-os Could be a decent source of inspiration! reply niz4ts 12 hours agoparent(I'm the post author) Thanks! I have to admit that I've had the itch to build my own NixOS-inspired system more than once, and I haven't done that because I just don't have time to dedicate to this among all the other projects I'm working on. I wasn't aware of not-os before, but I'll definitely dig into the code! reply 0x1ceb00da 12 hours agoprevHe didn't mention that nix uses a lot of ram. If your server is tiny and doesn't have swap enabled, running nix command s will make it unresponsive. Are there any nixos alternative that allow you to do system wide configuration from a single source similar to configuration.nix? reply niz4ts 12 hours agoparent(I'm the post author) As others said, I've moved away from doing nix builds on servers and into a less wasteful (if you're running multiple servers) approach of building once, deploying the bits into a cache, and making the servers fetch them from a cache. I've been slowly working on my own tool to make this workflow easier (nixless-agent, you can find an early version on GitHub). reply jmholla 4 hours agorootparentDo you have a post on your setup? I'm relatively new to NixOS server management and I've been leaning on NixOps for the coordination bits. I'd love to see what you're doing as it sounds more elegant, efficient, and supported. reply TheDong 12 hours agoparentprevIf you have a different machine with more ram and compute, you can use 'nixos-rebuild --target-host= switch'. That does all the nix building on the local machine, and then just copies binaries and activates the built configuration on the remote machine. reply 0x1ceb00da 11 hours agorootparentI don't run nixos on my PC reply arianvanp 11 hours agorootparentyou don't need to have nixos to have nixos-rebuild installed. Just nix reply hamandcheese 12 hours agoparentprevYou need not perform your nix evaluation on the same device you are targeting. You can nix copy a system closure to your target and activate it, and there are a number of tools in the nix ecosystem to make this easier. Granted, if you local machine is low on RAM, or isn't Linux, then you will be in trouble. reply anon291 3 hours agoparentprevThe best thing about NixOS is that it's extremely easy to replace systems. On my infrastructure, I have a centralized server where I store all my nix artifacts in /nix/store. Then on boot for my other systems, they boot into a minimalist nixos image (via netboot) that (1) lookups up the hostname assigned to the system, (2) uses `nix copy` to move the closure of the current system from the main host where I store my builds to the local one, (3) switches into the system (explained below), and (4) then uses nixos's kexec support to switch into the proper kernel booting into the new system. How to switch into a system: every nixos closure has a top level `bin/switch-to-configuration` script that nixos-rebuild suse. Just run `/nix/store/my-hash/bin/switch-to-configuration switch` and your system will silently be replaced by the new NixOS configuration. Very easy! reply prmoustache 12 hours agoparentprevI haven't tried it personnally but Guix is similar with config in guile scheme. Have a look at the documentation [1][2]. Caveat: it is a gnu project so no proprietary stuff like firmwares and drivers included out of the box (but there is a community guix nonfree project available [3]). I believe that isn't a problem for virtual machine servers anyway. [1] guix cookbook: https://guix.gnu.org/cookbook/en/html_node/index.html#Top [3] guix manual: https://guix.gnu.org/manual/en/html_node/index.html#Top [3] https://github.com/guix-users/guix-nonfree reply umanwizard 11 hours agorootparentThe widely used nonfree guided channel is https://gitlab.com/nonguix/nonguix, not the one you linked. reply prmoustache 7 hours agorootparentThanks for the clarification. Can't seem to be able to edit my comment. reply lugu 12 hours agoparentprevNot similar to nix, but you can look into Yocto. You can use it to generate an OS. It is, much more involved than using nix, but suitable for low memory environments. reply tombl 10 hours agorootparentThe problem with nix is that compiling a system uses lots of memory, but when deployed there's little overhead. Like you would with Yocto, I just build my systems on a proper host then remotely deploy them. reply bayindirh 12 hours agorootparentprevYocto is also used by Lenovo to build their software appliances like XClarity Administrator. Also it’s very famous and loved in embedded software circles. reply xyproto 12 hours agorootparentYocto is also hated for its unnessesary complexity in embedded software circles. reply deng 11 hours agorootparentprevWell, \"loved\" is not the word I would use. It's an improvement over the chaos before, where everyone used some other bespoke tool to build their BSPs. Yocto at least is some kind of standard now, but not a particularly good one (granted, it's a really difficult problem to solve). I don't know anyone actually enjoying working with Yocto. reply clhodapp 12 hours agoparentprevIt won't necessarily do that if you deploy to your server from a remote machine over ssh reply dlahoda 12 hours agoparentprevauthor does not use nix on his nixos and removed it, so no ram issue. author does not activate new config on host machine, but deploys new host machines as needed. he evals on build/dev/ci machine only. reply exe34 12 hours agoparentprevguix? reply 0x1ceb00da 11 hours agorootparentDoesn't it use nixos underneath? reply danlitt 11 hours agorootparentguix does not use nixos underneath, it's a completely independent implementation (of the same underlying concepts) reply tkz1312 10 hours agorootparentguix is built on top of the nix daemon reply tmtvl 9 hours agorootparentIt does have the nix daemon in-tree: https://git.savannah.gnu.org/cgit/guix.git/tree/nix reply poincaredisk 8 hours agorootparentprevNot anymore, I think. reply danieldk 13 hours agoprevThe post is much more interesting than the title suggests. Great deep dive into slimming a NixOS system. reply koito17 13 hours agoparentI agree. The title made me expect a low-quality, clickbait article. The actual article provides a lot of educational value to users of Nix and those interested in trying to build the smallest Linux distribution that can run Nix. Despite using Nix (the package manager) for so long, I haven't considered what it would take to get this. The article answers the question perfectly. reply flurie 2 hours agoprevI'm not sure if this approach is being used already or even viable, but there are good tools for the following: - creating minimal OCI images from Nix packages - creating microvms from OCI images There are certainly some tradeoffs with this approach, but given that the author is trying to optimize for size, in addition to one of the primary benefits to this approach being a really clean, structured build/deploy loop, it seems like it could be worth exploring. reply c1yd3i 1 hour agoparentYes: https://nix.dev/tutorials/nixos/building-and-running-docker-... They OCI images generated are super light weight. reply evgpbfhnr 13 hours agoprevCouple of things spring to mind: - didn't check if nixos uses it, but coreutil has a single binary mode (like busybox, a single binary is built and symlinks or hardlinks are used to provide all the commands); that might save some space - instead of trying to strip down the system, maybe go the other way around: only include the command you need with its closure? closure computation is done in a few places (apparmor profile or systemd.confinement come to mind) and it should be possible to just copy whatever your server binary needs, your kernel (since microVM and not container), and run the binary directly as init (maybe with a simple wrapper that hardcodes network or whatsnot) good luck! reply pxc 13 hours agoparent> - didn't check if nixos uses it, but coreutil has a single binary mode (like busybox, a single binary is built and symlinks or hardlinks are used to provide all the commands); that might save some space It does. If you have coreutils from Nixpkgs installed you can check this with basename \"$(realpath \"$(which ls)\")\" If you see 'ls', you're looking at separate binaries. If you see 'coreutils', it's a symlink to a singular 'coreutils' binary. reply yjftsjthsd-h 12 hours agoparentprev> go the other way around I'm not sure about just the one closure since the result needs to boot, but more generally that looks reasonable if your use case fits. There's a couple efforts, IIRC, mostly centered around router firmware where \"real\" nixos doesn't fit, ex. https://gti.telent.net/dan/liminix reply hamandcheese 12 hours agoparentprev2 is very interesting to me. I'd love to see an example of a \"scratch\" vm build, in a similar spirit to scratch docker builds. Assume I have all my software and kernel built, what is the minimal filesystem that will boot? How much easier can it get when I am only targeting a VM? reply rkeene2 12 hours agorootparentThis might be something you're interested in: https://appfs.rkeene.org/web/dir?ci=trunk&name=build/qemu It's for running AppFS inside a VM on QEMU. It uses a statically linked Tcl (which AppFS is written in) to bring the system up. reply contrarian1234 10 hours agoprevHow \"stable\" are these kinds of slimming tweaks though? In a rolling release setup, aren't you going to have extraneous packages semi-regularly drag in all of Python or Perl accidentally? The setup might break and you'd not even notice? I find the premise of a carefully re-compilable/re-creatable system very appealing, but not having a stable LTS style release rather incongruous. It takes a huge effort to get all the pieces working together - and if it's rolling and the sand is shifting/breaking underneath you it feels you never reach a meaningful stable system. Sure you can recreate your well tested working configuration, but the configurations is effectively immediately out of date and unmaintained once any packages are updated I think this is why they effectively only target x64. I'm not a \"distro guy\" so maybe I'm missing something. It seems it'd be sensible to just 1-to-1 copy Ubuntu LTS package versions (+ patches) and build a NixOS \"stable\" version that can be patched and updated as people find issues reply soraminazuki 9 hours agoparent> I think this is why they effectively only target x64 Nix and Nixpkgs is the best in class when it comes to cross platform & cross architecture support. It has good support for x86_64 / aarch64 /macOS / Linux. Getting Musl or static variants of existing packages just work for many packages. There's even some work on BSD / Windows support. Cross compiling is far easier to setup compared to other package managers. If anything, other projects should be copying what Nix is doing. reply mst 8 hours agorootparentNetBSD's pkgsrc has always done extremely well for me for that. I'm not sure how feasible it would be to compare nixpkgs and pkgsrc given how different they are, but I'd encourage people who need that to poke around at both and see which one feels like a better fit for their use case. reply viraptor 9 hours agoparentprevAlmost all of the changes flip an official setting. Those stay around for a long time and get a proper deprecation notice when they go away, so you won't be surprised. Replacing systemd-minimal with the full version may potentially cause some edge case issues, but it's the same package with more features enabled, so I wouldn't really expect any. Nothing will break when the package gets updated as long as you keep to your specific release - backported changes are backwards compatible. reply tkz1312 10 hours agoparentprevNixOS has stable releases built every 6 months. reply hamandcheese 12 hours agoprevOne technique employed by microvm.nix[0] is to mount the hosts /nix/store into the guest. This won't shrink the size of the system, but should allow it to be amortized across many different VMs. I'm not sure how exploitable a read-only virtiofs share is, so this is perhaps not appropriate in some circumstances. [0]: https://github.com/astro/microvm.nix reply astro1 1 hour agoparentIf you don't, microvm.nix will create an erofs/squashfs image for /nix/store. reply ahachete 9 hours agoparentprevI was thinking of a similar approach, but mounting /nix/store from the host into the guest will only work if you have a single guest. For multiple guests, you should rely instead on: * A snapshot-able filesystem with the option to create clones (like ZFS). I think this is a great idea actually. * Exporting /nix/store via NFS, so you can have multiple writers (but this creates some tight coupling in that accidentally deleting stuff there may disrupt all guests). reply evgpbfhnr 5 hours agorootparentmounting /nix/store from the host into the guest works with as many guests as you like - this is what the nixos tests framework does all the time, you just need a different \"system\" derivation for each (different) VM. The problem with that is that the VM can see all the needless software, so if your goal is isolation, having a smaller closure is much better from a security point of view: if there's no coreutils bash etc then there's no risk of getting a shell spawned by an attack... reply steeleduncan 10 hours agoprevWhat is the security update policy with NixOS? I've always had the impression that I would need to upgrade every 6 months to keep getting critical security fixes, which is unappealing compared to e.g. Debian + Nix I know I can revert easily if there are problems when upgrading, but that doesn't really apply if security fixes only land in the new branch reply viraptor 9 hours agoparentYou get backported security fixes in release channels as well. Unless anything changed recently, there's no explicit guarantee around them, but the core packages typicaly land just as fast or faster then other distros. Keep in mind though that more esoteric software with a small number of users and auto-update disabled may lag a bit. reply steeleduncan 8 hours agorootparentMaybe I'm missing something, but the only branch in github:nixos/nixpkgs I can see receiving fixes is the 24.05 branch getting fixes backported from unstable. The last commit I can see to the 23.11 branch is about 3 months ago This would imply only 9 months of security patches before I would need to upgrade the server. That is of course a far less risky process with NixOS, so perhaps that is ok, but it is a lot more work than the 5 years you get (free) with Ubuntu/Debian https://github.com/NixOS/nixpkgs/branches/active reply amusable3539 3 hours agorootparentIt's more like 7 months of patches. Release (n-1) gets EOL'd 1 month after release (n), and releases are 6 months apart (in May and November). So 23.11 would've been EOL in July 2024. And since a release happens every 6 months, while you do have an extra month's window, you still have to upgrade... every 6 months. reply viraptor 7 hours agorootparentprevYou're correct, it's 9 months max, there's no lts equivalent. The updates are much less risky, but in business context you'd really need to discuss the decision. (I'd still prefer that way) reply SuperSandro2000 8 hours agorootparentprevUpdating on NixOS is so much less painful that doing an update every 6 months is actually viable. Also the update already contains large parts of your config and can be easily tested in a VM. reply yjftsjthsd-h 13 hours agoprevDisk space is why one of my laptops doesn't run NixOS; 16GB soldered storage fit one generation passably, but it was clear that it wasn't gonna work (of course, that's with X and a browser; totally different use case). I vaguely recall that locales were shockingly large and I couldn't figure out how to trim them down. So that box runs Alpine now, which easily fits with no effort. reply shim__ 11 hours agoparentHave you tried putting /nix on an filesystem with compression? I've experienced >50% in storage savings with Bcachefs + zstd and dedupe reply GianFabien 11 hours agoparentprevI too use Alpine. I like how you start small and add what you need. The option of having a read-only root FS is convenient on flaky SBCs. reply SuperSandro2000 8 hours agoparentprevThe locale default seeing has been fixed by me over a year ago but 16GB is pretty small to fit two systems which you need to switch. reply heavensteeth 13 hours agoprevGood stuff! From the title I thought this would be about sysadmin woes, but this is interesting too :) Another little addendum: you can trivially create bootable custom NixOS installer images with whatever configuration you want pre-applied[0]. [0] https://nix.dev/tutorials/nixos/building-bootable-iso-image reply rendaw 9 hours agoparentYou can just use them as immutable live systems too, with the unfortunate requirement that it'll call your system an installer: https://github.com/NixOS/nixpkgs/issues/338738 reply aos 11 hours agoprevHave you taken a look at https://github.com/nix-community/srvos ? It’s a collection of profiles for servers by the Numtide folks. reply johnklos 12 hours agoprevTaking the time to delve in to things like this can teach you more about the OS you run than many other things can. It's not too unlike making a crunchgen OS, or even just a read-only OS with overlays. It's sometimes quite enlightening to see what will work with much less than we assumed it needs. Having just installed the entirety of NetBSD on an i386 system (a 200 MHz Pentium), I see it weighs in at around 1 gig. But that's everything including X11 with WM and the toolchain (gcc 10). That's not bad, but it's really amazing how much of that isn't necessary for running the OS on a server. Particularly where you might want tiny VM images reply wg0 10 hours agoprevOn borderline, thinking to learn nix. Few questions: Can I define VM images with nix? Can those VM images be loaded into VirtualBox? Also, possible to do similar to build AMIs or other cloud VMs such as Hetzner where my \"Dockerfile\" is a nix file which defines the system to be built and then it has everything in place once built including tools, libraries, configuration and such? Thoughts? EDIT: Typos reply JamesSwift 2 hours agoparentYes but with an asterisk. Nixos generators linked elsewhere is a really great tool to take a given nix configuration and build it for consumption in many contexts (eg i use the same one to both build initial proxmox vm images and then also update those running images). The problem is that you will need a hardware-configuration.nix that caters to the end environment. Ive worked around this by pre-generating it and then copying it into the result but I wish there was a better, less manual, process. reply tkz1312 10 hours agoparentprevyes to all. https://github.com/nix-community/nixos-generators reply gallexme 10 hours agorootparentAnd for cloud/dedicated servers perhaps https://github.com/nix-community/nixos-anywhere (There's also a terraform module ) And for state changes https://github.com/serokell/deploy-rs Or Colmena /nixops/ and x other For secret handling perhaps https://github.com/ryantm/agenix/ + https://github.com/oddlama/agenix-rekey The ecosystem is in my experience very well fleshed out (7 yrs of use), as long as you don't require a knowledgebase/wiki/ up2date documentation, it's not been a issue for me since I could always fall back on Linux knowledge and just looking for how other distributions do x / how the thing itself is configured , and looking at how perhaps a existing nix module wraps that reply wg0 7 hours agorootparentOh I am converted! Will try to setup system using nix instead of packer. reply arianvanp 10 hours agoparentprevYep for sure! We even have a neat upload-ami cli tool: https://github.com/NixOS/amis reply wg0 7 hours agorootparentThat's awesome! I think all the missing pieces are in place. :) reply gunalx 8 hours agoprevBut why would you run nixos as a micro vm os. It is not really designed for that purpose. Nixos as a general purpose headless server OS with nix defined services, or as a desktop system with declarative and portable config is pretty neat. reply mipselaer 13 hours agoprevCould you run ’nix store optimise’ before you remove ’nix’? reply rendaw 9 hours agoprevAfter the blog post the system was around 600mb, but what would be a reasonable image size for a server? Also is this bare metal or in the cloud (for the worker machines)? reply a_t48 11 hours agoprevThis reminds me a little bit of trying to slim Docker images. reply eptcyka 12 hours agoprevThis is highly relevant for me, will probably end up using some of the same tricks they've done to trim the size of some of my micro VMs. reply jokethrowaway 6 hours agoprevNix tries to be too many things with too little resources. As a language it's plagued by very sparse documentation. As an package manager, it still has the same issues with documentation, (compounded by tools providing the same functionality superseding each other) and then it requires maintaining EVERY software package ever created. I think the base idea is great, the language is a little weird (but manageable), the DX is unintuitive and badly documented. The killer reason that made me abandon NixOs is packages not being up to date. I can't fix that and I don't want to spend my life writing my own derivations when the alternative is to use Arch repos + AUR for exotic stuff. reply kkfx 8 hours agoprevNixOS IME have few issues: - a language friendly as Haskell, so while fit for purpose definitively it's not well digested by most, also by various longtime NixOS users; - an unclear direction, there are countless of \"side projects\" and no clear path, most are not even indexed in a wiki page so you just discover by accident interacting with someone else or after a search; - a terrible documentation probably due to the lack of a clear direction stated above. The biggest \"mean install\" is true, but it's not that much impacting in the real world, NixOS real purpose is AVOIDING containers in designing an infra, not being wrapped by them or wrapping them and true x86 zero-overhead virtualization does not exists. So far only IBM Power Systems with AiX seems to have something nearly-zero-overhead built-in in the (big)iron. IMVO that's the main point: most people, NixOS devs included, fails to see a world different than the current one. A possible answer could be keeping up the evolution of zfs and mirror some IllumOS features so we can have light paravirtualization thanks to zones on zfs clones. But as per NixOS most people fails to see a different storage than the most common today, a relict model from the '80s (does anyone remember the infamous \"zfs is a rampant layer violation\" phrase?). A damn real modern system should be: a SINGLE application, yes, the OS as a framework, development environment who produce a running system live out of itself. A coupled package-manager/installer/storage, because those are effectively a unique thing so we do not need a network of symlinks or containers, we have a storage behind that simply expose needed software pieces together, also a system who manage in-memory stuff the same way. Zfs was the first step in this direction, with boot environments, clones, zones glued by the Image Package System, lacking the language for a proper system integration, unfortunately almost nobody have taken care of that. NixOS and Guix System offer another piece, the language to integrate package management, installers but they lack the storage integration to generate a unique new system model. Rediscover IllumOS (OpenSolaris) would bridge the gap providing all needed piece to start a new kind of distro and infra management for a FLOSS world where there is no need of monsters to deploy simple infra and those simple tools could scale at monster level, killing the commercial IT model of the giants and given the humanity the desktop model, the \"pioneering internet\" of interconnected personal system model a new start. The lack of independent universities, big labs, is probably the root cause but as always good things tend to happen anyway sooner or later, it's the interim the bad part. reply mtndew4brkfst 7 hours agoparentRe: unclear direction - I have never encountered another ecosystem more prone than Nix is to have people (and startups) trying to build their own little technical/commercial/social fiefdoms around some specific idea that X is the One True Way to do Y. Fragmentation is pervasive and detrimental and one of the major reasons I'm moving away from the tech, second only to governance. reply SuperSandro2000 8 hours agoparentprevHaskell is so much worse with its custom operators. So a vibrant community is now bad? Also there where big improvements in the last years like freeform settings. Try reading Debians Postgres Documentation and you get a sense what terrible doc is. Not only do they point to each withput instructions but they are also about 9.5 which is stone age old. reply kkfx 7 hours agorootparent> So a vibrant community is now bad? It's not bad experimenting, but a thing is experimenting and have a mainline with a clear path, another is having only experiments, mostly undocumented, hard to discover, and so on. What most people want from a distro? Being rock solid and functional with the minimum effort for anything. NixOS offer that formally, well, stating it's legacy because Flakes are the future, but their are still not there, than NixOps/Disnix and so on, this does not play with this other etc etc etc. Essentially a generic user, not a developer, have hard time to craft a stable infra with stable tech and so most fear the change reducing the community to a nearly devs-only show and enterprise player show. Debian docs in general aren't excellent but Debian is a well known dinosaurs so most of it's users already know it, there is no need to teach anything to most, those who do not know simply ask their side friend. NixOS while not new it's still unknown to many so it have to teach well from zero various people, who aren't interested in NixOS development itself but only in it's use, model, that will contribute with return of experience, translations, casual patches and no more. They might be seen as a burden to devs, but they are \"the base\" that grant any distro enough popularity to really thrive. Ubuntu back than succeed over Debian because of that. They gives a sane, ready-to-work base. There is no need to a NixOS GUI installer or so, that's not a potential target, but there is a damn need to tell anyone \"start with that, learn that, in 5 and 10 years it will be the same evolved properly\" No one want to learn and relearn things. reply amusable3539 3 hours agorootparentNixOS and flakes are orthogonal. Flakes are not a replacement for NixOS, they are simply a _lockfile specification_, akin to your requirements.txt or Cargo.toml or such. NixOS is not legacy. reply kkfx 2 hours agorootparentI mean NixOS classic config instead of flakes. reply goodpoint 12 hours agoprev [–] Any OS without stable releases and a security team is not a server OS. reply Diti 10 hours agoparenthttps://status.nixos.org/ https://nixos.org/community/teams/security/ Welcome to NixOS, then! :) reply goodpoint 2 hours agorootparentyeah, not quite... reply bpye 11 hours agoparentprevNixOS does have \"stable\" releases every 6 months, but they don't have long term support. reply goodpoint 2 hours agorootparentI mean stable without quotes, or LTS if you prefer :) NixOS gives you a month of time to move to a new release. Most LTS distros 5 to 10 years. reply ladyanita22 11 hours agoparentprevThen you only have Ubuntu, Fedora, Red Hat/CentOS/Alma/Rocky and Suse/OpenSuse. reply goodpoint 2 hours agorootparentand Debian. reply SuperSandro2000 8 hours agoparentprev [–] You mean rot and forget LTS? reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author discusses the challenge of reducing the default installation size of NixOS, a server operating system, which initially takes up about 900MB of disk space.- Efforts to minimize NixOS involved removing unnecessary components like Nix, Perl, Python, and certain services, achieving a reduction of approximately 300MB.- Despite these reductions, the author concludes that creating a minimal NixOS system is complex and suggests that a dedicated \"fork\" of NixOS for server scenarios might be more effective."
    ],
    "commentSummary": [
      "NixOS is recognized as a robust server operating system, but its dependency on the Nix language is seen as a drawback due to its complexity and lack of user-friendly features.",
      "Users appreciate NixOS for its easy system replacement and rollback capabilities, yet some have transitioned to simpler systems like Debian or Proxmox due to maintenance challenges.",
      "NixOS provides stable releases every six months but does not offer long-term support, which can be a concern for users seeking stability over extended periods."
    ],
    "points": 163,
    "commentCount": 158,
    "retryCount": 0,
    "time": 1727841977
  },
  {
    "id": 41716975,
    "title": "Nvidia releases NVLM 1.0 72B open weight model",
    "originLink": "https://huggingface.co/nvidia/NVLM-D-72B",
    "originBody": "NVLM 1.0 Collection A family of frontier-class multimodal large language models (LLMs) that achieve state-of-the-art results on vision-language tasks and text-only tasks. • 1 item • Updated 2 days ago • 14",
    "commentLink": "https://news.ycombinator.com/item?id=41716975",
    "commentBody": "Nvidia releases NVLM 1.0 72B open weight model (huggingface.co)145 points by mirekrusin 15 hours agohidepastfavorite53 comments imjonse 12 hours agoIt is a family of multimodal models based on pretrained Qwen2-72B-Instruct LLM and InterViT vision encoder. There are three variants differentiated by the way the vision tokens are used: decoder-only (like the majority of existing VLM), using cross-attention, and a hybrid. Only the first seems to be on huggingface at the moment. Also they seem to only train on publically available data, concluding that quality is more important than scale. reply keyboardsamurai 13 hours agoprevIt has a non-commercial cc-by-nc-4.0 license, I would guess the only way to use this in production is to use Nvidias data centers to host it? Or are there other ways? reply orlp 12 hours agoparentNot a lawyer, not legal advice, but... the legal status quo is that neural network outputs are not copyrightable. They are currently considered not made by humans nor considered a derivative work from the training material / network weights (assuming it's not regurgitating copyrighted material verbatim). The cc-by-nc-4.0 license applies to the network weights. The only thing non-commercial about the license is that it restricts how you may reproduce the licensed material: > reproduce and Share the Licensed Material, in whole or in part, for NonCommercial purposes only; and As long as you are not selling the network weights themselves, nothing in the license prevents you from evaluating the neural network for commercial purposes and selling the outputs. In 'production' you will have to directly download the weights from Nvidia themselves (or another 3rd party which is distributing the network weights non-commercially in good faith) though, you can't share the network weights onto your commercial inference server from another one of your commercial deployment servers. Or at least, it gets more dicy there and may be considered commercial reproduction so better avoid it. For similar reasons you may 3D print a CC-BY-NC model of a tool and use that tool in your commercial workshop, you may use a CC-BY-NC compiler of a language to compile commercial programs, etc. reply SonOfLilit 10 hours agorootparentNot a lawyer, but work with lawyers a lot, and this type of rules-lawyering doesn't tend to work in the legal profession. Consult a lawyer before trying any of this. reply Majromax 6 hours agorootparentprev> The cc-by-nc-4.0 license applies to the network weights. I'm not even sure if network weights are copyrightable independently of the code and data used to generate them. In my personal (not a lawyer) view, the weights of a neural network are the product of a mechanical transformation process much like a compiler or assembler, and we don't consider a compiled binary to have a copyright independent of its source code. I still wouldn't notoriously try to violate a purported weights license, mind you, both because it's rude to ignore the authors' wishes and because it would not be fun being used by NVidia or any other deep-pocket AI company. reply dindresto 11 hours agorootparentprevFirst time I read this interpreation regarding CC-BY-NC model weights, are there any sources to back it? reply Tepix 10 hours agorootparentprevIt's an interesting question indeed! Creative Commons themselves write at https://creativecommons.org/faq/#can-i-apply-a-creative-comm... : \"Can I apply a Creative Commons license to software? We recommend against using Creative Commons licenses for software. Instead, we strongly encourage you to use one of the very good software licenses which are already available.\" Of course, LLM weights aren't traditional software... reply impossiblefork 9 hours agorootparentprevEven selling the network weights shouldn't matter, since there's no copyright. The problem is if you happen to sign any agreement with NVIDIA in order to get the weights. The problem is whatever contracts you may be bound by. reply resource_waste 8 hours agorootparentprev> the legal status quo is that neural network outputs are not copyrightable. Can't this flip on a dime and a billion dollar company lose billions? reply rd42 10 hours agoprevI think the only relevant part to note here is that this model showed improved text-only performance after multimodal training. Wonder if this translates to Llama models also ? Is it possible to extend Llama 3.1 405b with multi-modal training to create another SOTA large model ? reply reissbaker 7 hours agoparentI think the answer here is \"it depends.\" The Llama-3.2 series is an extended version of the Llama-3.1 series with multimodal (image) training, but they kept the language model weights frozen and only updated the new image weights. So in the end, the 3.2 series benchmarks identically to 3.1 on text-only tasks; the image weights provided no value to the language model weights. Allowing the language model weights to be updated during training could potentially result in better performance on both tasks, though, if Nvidia's result replicates. I could believe that it might: after all, more diverse data is more diverse data, and the model will be forced during training to generalize more. reply imjonse 10 hours agoparentprevLlama-3-V models do that, but are not published. reply jftuga 9 hours agoprevHow much GPU RAM would be needed to run this with just one GPU? reply reissbaker 7 hours agoparent144GB VRAM to load the weights at FP16, 72GB quantized to FP8. To figure out the KV cache size you'll need for an LLM, you can use the following formula: https://x.com/AlpinDale/status/1841305040545329535 Simplified for posterity: kv_bytes = kv_bits / 8 hidden_per_head = hidden_size // num_attention_heads total_heads = hidden_per_head * num_key_value_heads kv_bytes_per_token = 2 * kv_bytes * num_hidden_layers * total_heads (Edit: I accidentally swapped in some of the vision config bytes in my original calculation; these are the corrected numbers.) So, for NVLM 1.0 72B, that works out to 640kb per token assuming FP16 KV cache. If you use the entire 32k context length, that's an extra ~20GB of overhead for the KV cache. Then depending on how you're running the LLM, there might be extra overhead e.g. compiled CUDA graphs. You can cut this down lower by using grouped query attention as described here: https://medium.com/@plienhar/llm-inference-series-4-kv-cachi... This allows you to divide that number by the number of grouped heads, although it trades off accuracy for VRAM usage. But TLDR, a minimum of around 164GB of VRAM at full accuracy. To me that seems fairly low, and I think vLLM would OOM without significantly more than that, but that's about as low as you could go in theory if you're running everything at FP16. Half that, of course, for FP8. You'll typically need to have a copy of the KV cache per GPU, if you're using multiple GPUs, so multiply the KV cache overhead by the number of GPUs you're using. This will depend on what the specs for the GPUs you're using are; for example, you'll need 3 H100s (really four, since vLLM wants the number of heads to be evenly divisible by the number of GPUs); if you're using L40Ses, you'll need eight of them; but most likely only a single AMD MI300x. reply paulluuk 9 hours agoparentprevI haven't tested it, but likely around 170GB, regardless of if you're using only one GPU or spreading it out over several ones. reply optimalsolver 13 hours agoprevReminder that Nvidia is still the only company making any money out of the \"AI revolution\". reply danpalmer 13 hours agoparentThat's natural given that they mostly produce hardware several layers of abstraction distant from the end user value, companies need to buy the hardware before they can start delivering their own value. AI model training is not value by itself if there's no use-case for the model that can be charged for. I see it playing out one of two ways. Either Nvidia are selling shovels in a gold rush, the rush will end, and the business will dry up (after they have made a lot of money!). Or AI sticks/takes off, and Nvidia are selling a commodity too far from the value, like most electronic component manufacturers, and they'll maintain significant market share but have their margins reduced to a fraction of what they were before (after they made a lot of money!). The human value doesn't come from ML training or inference, it comes from taking a better photo. The business value comes from drafting a better email. Those companies closer to that value will likely do better in the long run, as they always have done. reply Bloedcoins 9 hours agoparentprevI'm pretty sure https://www.topazlabs.com/ is also making money with the AI revolution. Also Klarna threw out 700 people, they probably make money with AI. And i found this article: https://www.ft.com/content/a9a192e3-bfbc-461e-a4f3-112e63d0b... reply Bloedcoins 9 hours agoparentprevIts an revolution. Don't undersell this. There was never ever any technology like LLMs close to what chatgpt and co can do in regards of understanding random human input. My startup doesn't need to make money with it directly, but for us it increased our data quality on text and images. I'm also quite happy to pay 10-20$ per month for random things LLMs do quite well for different use cases like creating some scripts etc. reply Der_Einzige 12 hours agoparentprevWrong Midjourney is profitable. All the acquired startups (i.e. Streamlit or MosaicML) who made millions per employee \"made money\" for the people who cared. reply dartos 10 hours agorootparentMidjourney is one, but the others are not. Plenty of people “made money” at Twitter, but the company is a money pit. OP was likely talking about profitability. FWIW I wouldn’t really count streamlit as an ai company reply saagarjha 10 hours agorootparentTwitter was (mildly) profitable. reply a2128 13 hours agoparentprev\"When there is a gold rush, sell shovels\" reply amelius 10 hours agorootparentThey started the gold rush. reply jiggawatts 9 hours agorootparentI'm pretty sure OpenAI started it, they just used NVIDIA shovels to dig the first mines. reply throwaway48476 9 hours agorootparentNvidia created CUDA and seeded the ML industry for a decade before chatgpt. They aren't given enough credit for their foresight and strategy. Most companies would have choked the community to death with greed before it ever took off. There is a reason why CUDA works on every NV gpu but ROCm support is spotty at best and only guaranteed on data center GPUs. reply jiggawatts 9 hours agorootparentMy analogy still holds. NVIDIA just created good shovels that are useful in both the garden and in a gold mine. AMD and Intel insisted on selling only flimsy garden shovels. reply throwaway48476 9 hours agorootparentAMD and intels shovels (hardware) are fine. The ecosystem is the problem. The fundamental difference is AMD/intel see it as an upsell whereas nvidia is willing to invest in long term organic growth. The problem is the C suite and the difference between companies run by founders and bean counters. reply jiggawatts 9 hours agorootparentWe're actually in agreement, it's just that analogies are a blunt instrument. I'm saying that Intel and AMD made single-purpose GPUs useful only for graphics. Whether that's because of the software or hardware is immaterial. Effectively, it's one product in the same sense that an iPhone is one product to a consumer, but technically it's the iPhone device + iOS the software + Apple services such as iCloud, music, etc... reply throwaway48476 9 hours agorootparentIt's not single purpose hardware or software. If you crawl over enough broken glass you can get anything to work on AMD/intel. The distinction is one of business strategy not technology. reply GaggiX 13 hours agoparentprevThat's not true, there are plenty of companies that make a profit, Midjourney, for example, an obvious one. reply dartos 10 hours agorootparentAre there others? reply GaggiX 6 hours agorootparentI use NovelAI and that's also profitable. I would be surprised if Elevenlabs wasn't profitable right now. reply Refusing23 12 hours agoparentprevi have yet to hear of anyone actually using AI for something properly only exception im excited about is the non-main characters from video games, where a lot of the random NPCs, can now actually bring some more fun to the game. reply PeterStuer 10 hours agorootparentI run in production a system that uses LLM translation and summerization from hundreds of sources in dozens of languages. Users are extremely satisfied by the results that are far cheaper and far higher quality than what was available before reply Filligree 3 hours agorootparentWhich system is this? reply Bloedcoins 9 hours agorootparentprevI have seen plenty of very good internal AI Demos which we are adding to our products. From GenAI stuff, to image analysis, lightweight agents who answer proper questions. I used chatgpt 3 days ago to generate a script for me. Saved me probably an hour too. We use it also in my startup for tasks which we wouldn't even tried without ML models because the quality of old libraries were to bad. Like pdf catalog to text, image classification and segmentation. reply lynx23 12 hours agorootparentprevVision models are a godsent for blind user. I use a vision model to sort my laundry, for instance... And translation and grammar/spell checking is also at a level which was unthinkable before LLMs hit. But thats it, really. The \"talking machine\" aspect of it is more and more uncovered as totally useless. reply riffraff 12 hours agorootparent> I use a vision model to sort my laundry you built a robot that sorts laundry? Tell us more! reply lynx23 12 hours agorootparentNo, I never said that. But you already know that. The robot in this case is me holding a smart phone. reply indigo945 11 hours agorootparentIs that faster than just determining by touch what type of garment something is? Or is this about sorting by color? reply lynx23 11 hours agorootparentIts for sorting by color/print. Some things you remember instantly by touch, others not so much. reply 1dom 10 hours agorootparentThis sounds really cool - so you point it at individual items of clothing and it reads out the type of clothing and colour? Do you have any more info or links about the setup? reply Bloedcoins 9 hours agorootparenthttps://www.bemyeyes.com/ you can scroll down to the new AI version. reply lynx23 8 hours agorootparentprevIts basically a gpt4o in disguise. The feature is called BeMyAI, and it is being released via BeMyEyes. I would have answered earlier, but the silly HN rate limiter prevented me from passing the link to you. I dont want to look it up yet agan. And I dont want to use HN anymore,, this rate limit time-waster really just killed my sympathy for this site. reply tourmalinetaco 10 hours agorootparentprevClaiming no one is using MLMs “properly” despite the various scientific and industrial use cases (vision systems, robots, protein folding, drug simulation, etc) while being “excited” for something as pathetically trivial as a text generator with a text-to-speech tacked on for your mass-produced open world games. Truly peak HN. reply cjtrowbridge 13 hours agoprev [–] I love how they include a helpful chart that shows this model scores worse than everything else. reply kibibu 12 hours agoparentAm I looking at the wrong table? It dominates everything on visual interpretation benchmarks. Edit: specifically ocrbench and VQAv2 reply butterfly42069 13 hours agoparentprevAll jokes aside (and that did make me laugh) at least they're not training just to hit the benchmarks, which seem to be more meaningless as a quality indicator with each passing day. reply miffy900 12 hours agoparentprevI see at a few models (3 models in MMMU) that score lower than Nvidia's. But putting that aside, they at least get points for apparent objectivity. At least they probably aren't fudging numbers. reply Der_Einzige 13 hours agoparentprevIt's not that bad, and I'd much rather that they be honest instead of lying like everyone else does. reply GaggiX 13 hours agoparentprev [–] Well but it actually doesn't, unless you're looking only at MMMU. reply dr_kiszonka 3 hours agorootparent [–] Exactly. On some benchmarks it is close to or better than GPT 4o. I wonder if one of the reasons they released it was to respond to OpenAI's plans to enter the chipmaking market. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "NVLM 1.0 Collection introduces frontier-class multimodal large language models that perform exceptionally well in both vision-language and text-only tasks.",
      "This collection represents a significant advancement in the integration of visual and textual data processing, highlighting the evolving capabilities of AI models.",
      "The update, made just two days ago, suggests ongoing improvements and interest in the development of these sophisticated models."
    ],
    "commentSummary": [
      "Nvidia has launched the NVLM 1.0 72B open weight model on Hugging Face, derived from the Qwen2-72B-Instruct LLM and InterViT vision encoder, with a focus on quality over scale.- The model comes in three variants: decoder-only, cross-attention, and hybrid, but only the decoder-only version is available on Hugging Face.- It is licensed under a non-commercial cc-by-nc-4.0 license, allowing for evaluation but not commercial use, and requires substantial GPU RAM, approximately 164GB, for full accuracy."
    ],
    "points": 145,
    "commentCount": 53,
    "retryCount": 0,
    "time": 1727840933
  },
  {
    "id": 41714361,
    "title": "The Simple Guide to Building and Breaking Habits",
    "originLink": "https://alexy.tech/posts/the-simple-guide-to-building-and-breaking-habits/",
    "originBody": "The Simple Guide to Building and Breaking Habits October 1, 2024 👉 Creating or breaking habits doesn’t have to be an overwhelming process. Whether you aim to adopt a healthier lifestyle or let go of a not-so-good habit, understanding the basics and applying straightforward strategies can make all the difference. Here's how you can approach habit formation and cessation with ease and effectiveness. The Essence of Habit Formation Habit development can either be goal-oriented (\"I want to lose weight\") or identity-focused (\"I am someone who values health\"). While traditional wisdom suggests a 21-day timeline for habit formation, research indicates it could take anywhere from 18 to 254 days. The key is consistency and the habit becoming almost automatic. Understanding Limbic Friction At the heart of habit formation lies the concept of \"limbic friction,\" which essentially is the effort it takes to start a new behavior. Factors like fatigue or stress can increase this friction, making habit formation more challenging. The goal is to minimize this friction to make new habits easier to adopt. Strategies for Forming Habits Task Bracketing: Define clear start and end points for your habit. This helps in mentally preparing for the habit and making it a distinct part of your routine. Optimize Your Day: Divide your day into phases and assign habits to when you're most likely to perform them effectively, considering your energy and mood throughout the day. Leverage Dopamine: Pay attention to the feel-good moments before and after the habit. This positive reinforcement makes the habit more appealing. 21-Day Trial: List six habits you wish to adopt, assign them to different times of the day, and aim to consistently perform at least four. This flexible approach encourages consistency without the pressure of perfection. Breaking Bad Habits Shifting away from undesired habits involves weakening the neural pathways that fuel them. Instead of relying solely on penalties for engaging in a bad habit, introduce a positive action right after to replace it. This method gradually diminishes the unwanted habit's hold over you. TLDR Motivation gets you started. Habit keeps you going - Jim Ryun By employing simple, actionable strategies like visualization, task bracketing, and positive reinforcement, you can make lasting changes to your habits. Whether you're building new ones or breaking old ones, the journey is about progress, not perfection. Remember, the ultimate goal is to align your habits with the person you aspire to be, making each day a step towards a better you.",
    "commentLink": "https://news.ycombinator.com/item?id=41714361",
    "commentBody": "The Simple Guide to Building and Breaking Habits (alexy.tech)142 points by alexander2002 21 hours agohidepastfavorite67 comments sheepolog 10 hours agoThe #1 thing that has helped me stick to habits over the long term is starting out as easy as I possibly can. I've been exercising consistently for years now, and what finally got me to stick with it was doing 1 pushup per day. That's it. I did one pushup per day for 5 days, then I moved to 2 per day, and started ramping up faster as time went on. I've applied the same \"make it as easy as humanly possible\" to other habits (working on something for 5 minutes, for example) and it seems to work really well. I believe the reason this works for me is because 1) it's laughably easy at the start, and I can knock it out in practically no time, and 2) I ramp up slowly enough that by the time it actually starts feeling difficult, I already have the habit established. The surest way for me to abandon a habit is by trying to do too much early on. Another thing that is death to my habits is feeling guilt/shame about missing a day. If you miss a day, don't beat yourself up. It happens. Just remind yourself why you picked the habit, and try again. Maybe lower the difficulty a bit next time. reply aenis 8 hours agoparent+1. Plus, in my experience it helps to develop an easy habit first, reestablish one's belief in oneself, and then do the harder habit(s). When I was struggling with dieting - cutting out the unhealthy stuff - I first started playing the piano daily, and after hitting something like a 50 day streak it was a whole lot easier for me to start dieting (and keeping at it). As someone on the spectrum, though, it takes very little to break a habit - as someoneone else has posted here as well. Just one or two days where I am travelling and it's very difficult to get back, and one broken habit often leads to all of the habits-in-progress being dropped all at once. (So, I bought a travel piano, for instance). reply james_anderson 59 minutes agoparentprevSame. When I started running 5 years ago, I started with under 1km runs. Slowly built up to 5km runs over a 3 or so years. The hardest bit is getting out bed, once that habit is in the rest is easy. I also found that not timing myself worked really well. Too many times I would finish a run feeling good, check my time and then feel bad that I didn't beat my pb. Stopped that and every run was positive. reply mmarian 1 hour agoparentprevExactly, make things as convenient as possible. That's why I have weights and a yoga mat, no excuse to take 30 minutes from the day to do a HIIT workout. reply dddw 9 hours agoparentprevI find it helpful in those situations to remember what David Allen said about when that happens: \"you may have fallen off the horse, but you can always saddle up again\" reply aenis 8 hours agorootparentThose things come with a cost. Erode self esteem and reinforce the idea that failure is a very real option, since \"its easy to get back on the horse later\". My piano teacher tells me that every single mistake takes two successes to undo, and I think this is the same with habit forming. Keep failing and you are not going to get better at getting back on the horse, you will get better at quitting and accepting defeat. reply DavidPiper 7 hours agorootparent> Erode self esteem and reinforce the idea that failure is a very real option I feel differently about failure. I think failure failure is always, constantly, an option. But that doesn't mean it should erode my self esteem. I don't want to negate your piano teacher's advice, because I think there's an element of truth in there, and I'm not sure what your goals are. But as a fellow (hobby) pianist who gave it away for 5 years from burnout, I now prefer to follow Stephen King's advice: \"If there’s no joy in it, it’s just no good.\" reply thierrydamiba 6 hours agorootparentThere’s also the problem where avoiding failure leads to more conservative goals. If you look at failure as a thing to avoid, you won’t try as hard as songs when you’re learning piano. You might get good, but you’ll never reach your potential. reply aziaziazi 6 hours agorootparentReaching your potential may not be compatible with experiencing joy through. In my experience I’ve been happier and better at doing things I like doing. Always wanted to learn playing guitar, interact socially or starting a business but boy those makes me so bored. reply Etheryte 10 hours agoparentprevBreaking the chain of habit is something everyone will run into at one point and it's important to understand that it's the natural order of things that it will happen. Inevitably at one point you will either be sick, or have something important, or life will throw a wrench at you — and that's okay. The important thing is that if you still want it, you get back at it. I've been lifting weights nearly all my life and I can't even begin to count the times I've missed days, weeks, sometimes months because of various reasons. What matters is that you get back to it after. reply herrvogel- 7 hours agoparentprevThere is this saying which helps me a lot. “Motivation follows action!” reply taneq 9 hours agoparentprevI did something similar with HIIT workouts (don’t be fooled, the intensity wasn’t super high to begin with!) which worked because I couldn’t possibly tell myself I “didn’t have time” for a 10 minute workout. reply noemit 10 hours agoprevI don't think this guy has really built or broken many habits. None of what he says is wrong per se, it's just wordy. You don't need such a deep understanding of the brain to build/break habits. You just need a reason. If you really wanted to do that habit or get rid of a habit, you just would. Most of you live high agency lives and are making decisions every day that are creating your life exactly how you have decided to make it. A lot of stuff feels \"hard\" but you just don't want it bad enough. One example is how easy it is for 99% of women to quit social drinking when they get pregnant. These same people, without such a clear and strong motivation, would probably \"slip up\" and struggle with 9 months of sobriety. reply kqr 9 hours agoparentYou're almost right. Habits don't just show up – we engage in them because they give us something useful back. The trouble is this useful thing is often optimised for the short-term, and habits can have negative long-term consequences. The alcohol thing is a good example: when not pregnant, it gives us short-term pleasure, at long-term cost. When pregnant, the cost of alcohol is moved up to the now and so it's easier to get out of the habit. It's not about strength of motivation, it's about immediacy of consequences. I have heard rumours that some people are able to channel motivation to pursue what's good in the long term even when it goes against short-term gains, but I believe this ability is more rare than it may appear. For many, it's more effective to try to re-arrange the environment such that the consequence profile aligns with the long-term goals. reply bitbasher 2 hours agoparentprev> A lot of stuff feels \"hard\" but you just don't want it bad enough. Reminds me of the Eric Thomas speech where he tells the class they don't want it bad enough. https://www.youtube.com/watch?v=6vuetQSwFW8 reply bippihippi1 10 hours agoparentprev\"just try harder\" isn't a strategy or good advice. reply davisoneee 5 hours agorootparentI don't think the parent's advice is anything to do with \"just try harder\"...I think he's saying that we try to create habits for things we don't really care about...just stuff we think we should do for productivity or health or whatever. You don't need to 'try harder'; you need to question your motivation for the habit in the first place. Either a thought will click that clarifies why a habit is actually important, or you'll realise you are pressuring yourself to take on a habit that doesn't really matter to you (when you strip away the bullshit) edit: and if the importance finally clicks for you, you'll generally just start working on the habit. I struggled with weight for years, and then eventually motivation/understanding clicked and I lost 6stone/40kg/90lb in around 18 months (and have lost a little more since, and kept it off for years). reply hashtag-til 10 hours agoparentprevYou could copy/paste this paragraph and create the shortest book on self-motivation ever created. Jokes apart, what you wrote is really true and made really think about it. reply doix 9 hours agorootparentMost motivation/self-help books are reiterating the same things in different ways. And it's probably okay, because each wording/phrasing can make the message \"click\" for different people. Same thing with the timing. Reading something when you're 18 and when you're 30 can be totally different. reply taneq 9 hours agorootparentprevI think Shia LeBouf has this beat with “do itttt!” reply zigman1 5 hours agoparentprevYeah, I was a recreational amateur beer drinker, to the point where it was almost my social identity. Would lie if I'd say i never tried to tone down After I was diagnosed with gluten intolerance, I stopped drinking it overnight without any problem. Very interesting, but it just comes down that the consequence overweight the immediate gain. Hangovers were never a big enough reason for me to stop drinking, but the overall negative consequences of being glutened overweighted that reply globular-toast 9 hours agoparentprev> If you really wanted to do that habit or get rid of a habit, you just would. This is ridiculously naïve. You seem to be completely forgetting the existence of addiction. > One example is how easy it is for 99% of women to quit social drinking when they get pregnant. Because they weren't addicted to drinking, like most healthy people. Do you think a single fat person wants to be fat? It's uncomfortable, inconvenient and embarrassing; nobody wants it, and they know exactly what causes it. The reason more than half of our population is overweight is they are addicted to food and our society not only enables it but encourages and reinforces it. They can't \"just stop\". reply NoGravitas 6 hours agorootparentI think about when I quit smoking. I failed several times because I didn't really want to quit smoking. But then, when I really had had enough of smoking, and actually wanted to quit, addiction was in the way. I failed a couple of times because the consequences of stopping were so severe (headaches, anxiety, fatigue). Then I added a non-rewarding nicotine replacement (patches) to prevent the withdrawal symptoms, and suddenly quitting was manageable. You can't just quit food, though. reply davisoneee 5 hours agorootparentprev...and you seem to have quickly conflated habit with *addiction*. It could be a valid point to bring up, but being combative/aggressive with it doesn't benefit the conversation. You could word it as something \"perhaps some people need to question if something is a bad habit, or if they are addicted...\", rather than calling parent 'ridiculously naive' reply niam 3 hours agorootparentThis seems a semantic carving of the discussion to match the argument though. > Person 1: Just stop it. Want harder. > Person 2: I can't. > Person 1: Well, you have an addiction then, not just a bad habit; my point was about habits. If we grant this: then the great-grandparent's response fails to inform us of anything beyond merely how we choose to define words. The advice works until it doesn't, which is tautologically true but not useful. reply davisoneee 1 hour agorootparentYou seem to have taken the message 'want harder' from the original comment. I took the original comment as question if you actually want the habit or are just doing it out of social or self pressure, or just for the sake of 'that seems like a good thing'. Emphasising that you are free to drop habits, rather than pressuring yourself to achieve something that you might not really want. reply watwut 6 hours agoparentprev> Most of you live high agency lives and are making decisions every day that are creating your life exactly how you have decided to make it. Most of us dont. I certainly have very little choice over my day to day life. reply FranklinMaillot 6 hours agoprevA distinction that is rarely mentioned when talking about habit forming is the one between building a new habit, like exercising every day, and breaking a bad habit, like quitting junk food. The latter is much harder in my experience but the article hardly acknowledges it. The former implies building up the willpower to exercise and once it's done, you don't have to think about it for the rest of the day. Quitting a bad habit, on the other hand, is a constant struggle to resist the urge a thousand times per day. When grocery shopping, when out for dinner, when bombarded with ads for ultra processed food... The slightest patch of hardship in your day can make you trip up. I find the identity-focused strategy can help. Other strategies that somewhat work for me: - I condition myself to associate the bad habit with the worst things I can think of. Anytime the temptation to eat junk food creeps up, I picture the fat building up in my arteries, I convince myself that the processed food industry is evil, etc. - I remind myself that the road to success will not be straightforward and I should focus on the general trend instead of the day to day success and failures. Having some kind of habit tracker can help with that. reply xtiansimon 6 hours agoparentI’ve had some success compromising with myself to trade a related good for a related bad. The bad thing you’re trying to quit needs to have some relation to the good thing, so they both come to mind—even if only tenuously. reply pugio 19 hours agoprevI'm just doing a reread of Tiny Habits by BJ Fogg (one of the OG researchers on the topic). It's really good, and I'm already thinking of dozens of ways to apply this to myself and my kids. (He presents his framework as a model for human behavior, not just what we normally think of as habits.) I think the key with any kind of self-help advice or book is that you have to study it, not just read it. I plan to be working with this book for at least the next six months. I read too many other \"inspirational\" books that didn't have a lasting impact; the first read is just research to decide whether it's worth devoting time to. Then the real work begins. reply locuscoeruleus 13 hours agoparentI made flash cards when I read atomic habits as an exercise as I wanted to put some of the ideas from Andy Matuschak to the test. I remember and have internalized more from this book than any other self help book I have read. I can barely remember the titles of the other books I've read. For some reason, I never read a self help book like this again despite how successful it was. reply treetalker 18 hours agoparentprevSeconded. I picked up a copy a few years ago when Costco was selling it. It’s pretty good and seems based on fundamentals and actual research. reply mmarian 59 minutes agoprevOn a related note - what can be a good habit for coming up with a successful bootstrapped business? reply justgaurav 17 hours agoprevI have finally been able to form a habit that I wanted for more than a few decades and the book which helped me finally get it was \"Awaken the Giant Within\" by Anthony Robbins. This was my third or so reading of the book and this time it clicked! It's a bit dense book which seems to have aged well (and you may have to look past some of marketing for his other events). \"Tiny Habits\" by BJ Fogg is another one which I find very useful. Just the basic idea of having tiny/baby steps to take is a powerful one. \"Loop Habit Tracker\" app is a great app to keep track of your habits especially the ones where you want to record yes/no responses. It's free app available on android (I am still looking for something similar for iPhone for my wife!). reply konto 2 hours agoparentThere is basically copy paste iphone app of “Loop habit tracker”: https://apps.apple.com/app/id1471303896 I’ve spent so much time trying to find Loop replacement and somehow stumbled upon this one. You can even use exports from Loop with some script I found on reddit. It works ok, but I would love official Loop app for ios. reply Full_Clark 13 hours agoparentprevStreaks is similar on iOS, but unfortunately not free. reply konto 2 hours agorootparentCan Loop data export be used in Streaks? reply justgaurav 12 hours agorootparentprevThanks for the suggestion. One time payment is not a problem for such apps (though not a big fan of subscriptions). Will try it out. reply dgs_sgd 16 hours agoparentprevif you don't mind sharing, what was the habit? reply justgaurav 12 hours agorootparentGetting up early in the morning! It's not a big deal for those who can get up easily, but I struggle to get up even at 8 AM and then have to rush things. I have also tried \"The 5 AM Club\" by Robin Sharma and excellent \"The Miracle Morning\" by Hal Elrod but to no avail. Currently, on a 57 day streak! Please don't ask what time I get up as it's still late from the point of view of morning people :) reply polotics 10 hours agorootparentif I may suggest something: instead of setting an alarm to ring for when you have to get up, set an alarm to get you to turn off all screens, quieten down, and get ready for sleep asap, ten hours before when you have to get up. reply slowcooked12_ 16 hours agoprev\"Error 1034: The host (alexy.tech) resolved to an IP address that the owner of the website does not have access to.\" is what I'm seeing after clicking that link, it seems to work fine for others in the comments? reply small_scombrus 16 hours agoparentMe too, according to [1] from 2022 its likely because they've got a misconfigured DNS record? [1] - https://dashways.com/blog/cloudflare-error-1034-edge-ip-rest... EDIT: Its available on Archive.org: https://web.archive.org/web/20241001232008/https://alexy.tec... reply degosuke 12 hours agorootparentIs the webarchive snapshot complete? I saw people in the comments referencing 4-6 habits but I don't see it in the snapshot. EDIT: nvm found it in the text. reply scrollbar 15 hours agoprev> Instead of relying solely on penalties for engaging in a bad habit, introduce a positive action right after to replace it. This seems counterintuitive as I would expect this to reinforce the bad habit. No citation or explanation given. Any ideas? reply Full_Clark 13 hours agoparentI understood it as \"do the bad habit, regret it, do a new good habit right afterwards.\" The aim is to rob the bad habit of whatever reward is attached to it and mentally transfer the reward to the good habit instead. reply n_ary 11 hours agorootparentHow about a third mindset, where after a bad habit, I do a good habit and feel that my bad is compensated by good one? It will continue to encourage subconsciously that bad habits are o.k. if I do something else to compensate it. For a simple example, I eat a lot of sugar and then do a 10minute exercise. Then feel good about it that my sugar eating is fine, as I will exercise afterwards anyways. But the exercise is separated from any rewards or motivation and will likely often get skipped when my willpower is low(time when bad habits set their claws on mind). reply Kirth 8 hours agorootparentYou could do that, but then you're being wilfully dishonest with yourself. At which point you'll find that you're not getting any closer to your goals (assuming those who switch out eating sugar for doing exercise want to lose weight). And if you're being (subconsciously) dishonest and self sabotaging, then the level of mind/abstraction this guide targets is not relevant reply abound 19 hours agoprevMy go-to for habit formation/breaking stuff is \"Atomic Habits\" by James Clear, highly recommend. It's one of those books I find useful to re-read every few years. reply DontchaKnowit 14 hours agoparentThis is the only self help book that ever actually helped me. Also there was one about habit forming that focused heavily on the power of compounding returns in terms of habits. Cant remember the name, if anyone can help me out, but that one was great too reply halfcat 12 hours agorootparentThe Compound Effect by Darren Hardy? reply DontchaKnowit 7 hours agorootparentThats the one, thank you! reply calmbonsai 19 hours agoparentprevPreach! \"Atomic Habits\" is the only self-help book that I can recommend for everyone regardless of their particular life circumstances. reply grisha322 18 hours agorootparentWanted to buy an audio book, but some reviews there suggest that printed version is better. Will audio book work? reply zephyreon 18 hours agoparentprevI’ll echo this, I found Atomic Habits to be one of the only self help books whose strategies I actually use on a daily basis. Required a lot of work but I really improved myself after first reading this book. reply treetalker 18 hours agorootparentAlthough I don’t agree with everything the author says (particularly his unrelated political views) I use Scott Adams’s “systems beat goals” idea (from “How to Fail at Almost Everything and Still Win Big”) almost every day. reply fifilura 7 hours agoprevI have a 2+ year long run streak ( https://www.runeveryday.com/ ) .Before that not doing a lot of exercise. The first 3-4 weeks are a bit heavy, but after that your mind switches over from \"Should I run today?\" to \"When should I run today?\". And from that point it is mostly downhill really. reply komali2 9 hours agoprevNo habit book I've read, including this article, has included effective strategies for habit forming for whatever funky funk my brain has going on - most psychs say ADHD, recently one said maybe a spritz of autism. Medicated or otherwise, the typical habit forming tactics don't work. Reward systems, identity based habit forming, habit trackers, leaving the gym shorts on top of my phone at night so I have to put them on before anything else, I can still kill a year long consistent habit overnight with a single disruption like an early meeting or by straight up forgetting. Gym shorts are there but I have to pee. Boom it's 10pm and I'm doing my habit tracker and damn I completely forgot to go to the gym today. Or I successfully pushed it off again and again until it was too late. I have no solutions to offer. I keep thinking I've solved it and get ready to write my magnum opus how-to-have-adhd-and-still-be-a-productive-member-of-society blog post and then lose a habit again. Probably pre planning times to do a habit a day ahead of time would help but I fail to do that daily, lol. Oh well. I've managed to track my calories for 278 days consistently, but only because I can go fill in the previous day if I forget the day of. One day I'll forget two days in a row and that streak will die too. reply dextrous 19 hours agoprev“List six habits you wish to adopt, assign them to different times of the day, and aim to consistently perform at least four.” SIX? Um, how about we start with, like, one? That aside, a concise article with good advice IMO, but I would add “find a partner and be accountable”, especially for eliminating addictive / tempting bad habits or replacing them with good ones. reply qrian 16 hours agoparentLooks like the article is saying goal of 4 out of 6 is better than just setting 1 goal because missing 1 out of 1 really demotivates you. reply layer8 7 hours agoprevRecent related thread: https://news.ycombinator.com/item?id=41609139 reply nullandvoid 11 hours agoprevJust a heads up I had to go on VPN with a US IP for this to load, strangely a resential UK one didn't reply hooverd 20 hours agoprevHmm... >? You've requested a page on a website that is part of the Cloudflare network. The host (alexy.tech) resolved to an IP address that the owner of the website does not have access to. reply joshdavham 18 hours agoparentI'm getting the same thing. Might be a country restriction thing? I'm in Canada, for example. reply rishikeshs 13 hours agoparentprevSame here, trying from UAE reply globular-toast 7 hours agoprev [–] I think this puts too much emphasis on making habits and not enough on breaking them. First of all we have to remember that everyone has habits. Unless you wake up every day as if you were just born with no idea what to do yet, then you have habits. Quite likely you'll do something like wash, change your clothes, imbibe fluids etc. In fact, your entire day will likely consist almost entirely of habits. So when we say \"make habits\" what we really mean is replacing some habits with other habits. If you want to start running you'll need to make time for that. Some other habit will have to give. It's a zero-sum game. If the habit that gives is \"mindless scrolling of social media\" then that's generally considered a good thing, but if the habit that gives is cleaning your house or sleep then it's probably not. It's easy to replace a habit like cleaning your house with a habit like running because cleaning your house sucks. It's less easy to replace mindless scrolling, though. Making the habit is not the difficult thing here, breaking the habit is. So what's difficult about breaking habits? Well, if we know something is bad for us, it should be easy to stop doing it. If, for some reason, you had a habit of banging your head on a wall and it hurt and was unpleasant, you'd just stop doing it. But we know this isn't the case for a lot of bad habits. Things that you can't stop doing despite knowing they are harmful to you are called addictions. Any talk about habits without even mentioning addiction is not going to get anywhere. The article seems to be like a \"can't beat 'em, join 'em\" attitude where you try to make the \"good things\" just as addictive as the bad things. I don't think this will work. I think you need to identify and attack addictions first. reply tgaj 6 hours agoparent [–] Huh, for some reason I'm one of these people who wake up every day with no plan. I am not sure if that's because of ADHD or CPTSD but I start every day with empty head and a bit of anxiety. It takes me at least 15 minutes to remind myself that I have to go to work. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Habit formation can be either goal-oriented or identity-focused, requiring consistency to become automatic.- \"Limbic friction\" refers to the effort needed to start a new behavior, which can be reduced by minimizing stress and fatigue.- Strategies for building and breaking habits include task bracketing, optimizing your day, leveraging dopamine, and trying a 21-day trial with flexible goals."
    ],
    "commentSummary": [],
    "points": 142,
    "commentCount": 67,
    "retryCount": 0,
    "time": 1727817995
  },
  {
    "id": 41714858,
    "title": "SlateDB – An embedded database built on object storage",
    "originLink": "https://slatedb.io/",
    "originBody": "Object Store Durability SlateDB inherits your object store's durability. Yup, 99.999999999% durability. Zero-Disk Architecture SlateDB runs without disks. No more disk failures, no more disk corruption. Simple Replication Why write complex replication protocols when you can let your object store handle it? Tunable Performance Configure SlateDB to optimize for low latency, low cost, or high durability. Scalable Readers Supports a single writer and multiple readers. SlateDB detects and fences zombie writers. Built in Rust SlateDB is an embeddable library built in Rust. Use SlateDB with the language of your choice. Get Started Add SlateDB to your dependencies and you are off to the races! See a Full Example Cargo.toml [dependencies] slatedb = \"*\"",
    "commentLink": "https://news.ycombinator.com/item?id=41714858",
    "commentBody": "SlateDB – An embedded database built on object storage (slatedb.io)138 points by notamy 20 hours agohidepastfavorite42 comments rehevkor5 32 minutes agoI don't see how it's embedded if it relies on nonlocal services... on the contrary it says specifically, \"no local state\". It appears to be more analogous to a \"lakehouse architecture\" implementation (similar to, for example, Apache Iceberg), where your app includes a library that knows how to interact with the data in cloud object storage. reply drodgers 9 hours agoprevIt looks like writes are buffered in an in-memory write ahead log before being written to object storage, which means that if the writer box dies, then you lose acknowledged writes. I've built something similar for low-cost storage of infrequently accessed data, but it uses our DBMS (MySQL) for the WAL (+ cache of hot reads), so you get proper durability guarantees. The other cool trick to use is to use Bε-trees (a relatively recent innovation from Microsoft Research) for the object storage compaction to minimise the number of write operations needed when flushing the WAL. reply quadrature 5 hours agoparentYou have the ability to choose your durability guarantee. You can choose to have synchronous writes, in which case the client blocks until the write is acknowledged. https://docs.rs/slatedb/latest/slatedb/config/struct.WriteOp... reply 0x1ceb00da 1 hour agoparentprevIs there something similar that caches recent changes locally if the device is offline and uploads them when it comes online? reply nmca 15 hours agoprev> Object storage is an amazing technology. It provides highly-durable, highly-scalable, highly-available storage at a great cost. I don’t know if this was intended to be intentional funny, but there is a little ambiguity in the expression “great cost”, typically great cost means very expensive. Very cool and useful shim otherwise :) reply OJFord 3 hours agoparentThat's funny actually - 'great cost', great takes meaning of large; 'great price', great takes meaning of very good (i.e. small in this context). Always that way around, ESL's a minefield! reply notthistime12 31 minutes agoparentprevNative English speaker here. \"At a great cost\" means \"at a good price\". \"At great cost\" would mean \"expensive\". reply unshavedyak 4 hours agoparentprevIs there an alternate meaning that you first took it as? Monetary cost was my take as well hah. reply paulgb 3 hours agorootparentMonetary cost in both cases, but it's the two meanings of “great”, which can either mean “large” or “good”. reply raybb 3 hours agorootparentprevThe other meaning it could have is that it's a good price/deal. reply anon291 20 hours agoprevThis seems to be a key value store built atop object storage. Which is to say, it seems completely redundant. Not sure if there's some feature I'm missing, but all of the six features mentioned on the front page are things you'd have if you used the key value store directly (actually, you get more because then you get multiple writers). I was excited at first and thought this was SQL atop S3 et al. I've jerryrigged a solution to this using SQLite with a customized VFS backend, and would suggest that as an alternative to this particular project. You get the benefit of ACID transactions across multiple tables and a distributed backend. reply aseipp 17 hours agoparentPeople want object storage as the backend because in practice it means that you can decouple compute and storage entirely, it has no requirement to provision space up front, and robust object storage systems with (de facto) standardized APIs like S3's are widely available for all kinds of deployments and from many providers, in many forms. In other words: it works with what people already have and want. Essentially every standalone or embedded key-value storage solution treats the KV store and its operation like a database, from what I can tell -- which is sensible because that's what they are! But people use object stores exactly because they don't operate like traditional databases. Now there are problems with object stores (they are very coarse grained and have high per-object overhead, necessitating some design that can reconcile the round hole and the square peg) -- but this is just the reality of what people are working with. If there is some other key-value store server/implementation you know of, one that performs and offers APIs like an actual database (e.g. multi writer, range scans, atomic writes) but with unlimited storage, no provisioning, and it's got over 10+ different widespread implementations across every major compute and cloud provider -- I'm interested in what that project is. reply necubi 19 hours agoparentprevThis is a low-level embedded db that would be used by sql databases/query engines/streaming engines/etc rather than something that's likely to make sense for you to use as an application developer. It sits in a similar space to RocksDB and LevelDB. You generally can't use object storage directly for this stuff; if you have a high volume of writes, it's incredibly slow (and expensive) to write them individually to s3. Similarly, on the read side you want to be able to cache data on local disk & memory to reduce query latency and cost. reply iudqnolq 19 hours agoparentprevUsing an s3 object per key would be too expensive for many use cases. The website is a bit fancy but the readme seems to pretty straightforwardly explain why you might want this. It seems to me like a nice little (13k loc) project that doesn't fit my needs but might come in handy for someone else? reply vineyardmike 17 hours agoparentprev> I was excited at first and thought this was SQL atop S3 et al. You can check out Neon.tech who makes an OS Postgres-on-s3 and DuckDB who makes an embedded DB with transaction support that can operate over S3 reply abound 19 hours agoparentprevIf you want SQLite backed by S3, maybe something like SQLite in :memory: mode with Litestream would work? Edit: actually not sure if you can use :memory: mode since Litestream uses the WAL (IIRC), so maybe a ramfs instead reply candiddevmike 6 hours agorootparentIn my experience, SQLite on S3 is ridiculously slow. The round trip for writes is horrendous, so you end up doing batch saves, but you need a WAL, which has the same problem as the main DB file. reply anon291 19 hours agorootparentprevThere are many solutions. The particular example I was using SQLite via webassembly and then resorting to HTTP's fetch api for a read-only solution. reply jitl 18 hours agoprevFrom the docs https://slatedb.io/docs/introduction/ > NOTE > Snapshot isolation and transactions are planned but not yet implemented. reply quadrature 5 hours agoparentMight have been older docs. They now say that transactions are supported “ Snapshot isolation: SlateDB supports snapshot isolation, which allows readers and writers to see a consistent view of the database. Transactions: Transactional writes are supported.“ reply remon 10 hours agoprevI've read the introduction and descriptions two times now and I still don't understand what this adds to the proceedings. It appears to be an extremely thin abstraction over object storage solutions rather than an actual DB which the name and their texts imply. reply shenli3514 10 hours agoprevWent thru the document: https://slatedb.io/docs/introduction/#use-cases I can not understand why are they targeting the following use cases with this architecture. * Stream processing * Serverless functions * Durable execution * Workflow orchestration * Durable caches * Data lakes reply hantusk 13 hours agoprevSince writes to object storage are going to be slow anyway, why not double down on read optimized B-trees rather than write optimized LSM's? reply chipdart 12 hours agoparentI think slow writes are not a major concern, as most databases already use some fast log-type data structure to persist writes, and then merge/save these logs to a higher-capacity and slower medium on specific events. reply yawnxyz 18 hours agoprevis this an easier to do the \"store parquet on s3 > stream to duckdb\" pattern that's popping up more and more? reply kosmozaut 10 hours agoparentDo you know any resources/examples about the setup you mean? It sound interesting but from a quick search I didn't find anything straight forward. reply vineyardmike 18 hours agoparentprev> MemTables are flushed periodically to object storage as a string-sorted table (SST). The flush interval is configurable. Looks like it has a pretty similar structure under the hood, but DuckDB would get you more powerful queries. FYI duckdb directly supports writes (and transactions) so you don’t necessarily even need the separate store step. reply jitl 17 hours agoparentprevThis is more targeted at OLTP style workloads with mutable data and potentially multiple writers reply epolanski 18 hours agoprevNot a db guy, just asking, what does it mean \"embedded\" database? I'm confused here, because Google says it's a db bundled with the application, but that's not really what I get from the landing page. What problem does it solve? reply leetrout 18 hours agoparentEmbedded means it runs in your application process not a standalone server / service. reply demarq 11 hours agoprevEmbed cloud Sounds like they just cancel each other out. Not sure what advantage embedding will yield here reply tgdn 12 hours agoprev\"It doesn't currently ship with any language bindings\" Rust is needed to use SlateDB at the moment reply loxias 18 hours agoprevCan I please, please, please, have C++ or at least C bindings? :) Or the desired way to call Rust from another runtime? I don't know any Rust. reply jitl 17 hours agoparentRust is just another programming language that’s quite similar to C++. The main difference is there’s like 4 types for String (some are references and some are owned) and methods for a struct go in a `impl StructName` block after the struct definition instead of inside it. I don’t really know rust either but I’m currently writing some bindings to expose Rust libraries to NodeJS and not having too much trouble. For rust -> c++ I googled one time and found this tool which Mozilla seems to use to call Rust from C++ in their web browser, maybe it would “just work”: https://github.com/mozilla/cbindgen?tab=readme-ov-file reply sebastianconcpt 17 hours agorootparentAlthough the borrowing rules will make you feel is quite a different language than others. reply goodpoint 12 hours agoprev [–] Despite the name this is not a database. reply mtndew4brkfst 7 hours agoparent [–] What definition/criteria do you feel it does not satisfy? reply goodpoint 2 hours agorootparent [–] Pretty much the usual definition. https://en.wikipedia.org/wiki/Database reply jitl 1 hour agorootparent> Formally, a \"database\" refers to a set of related data accessed through the use of a \"database management system\" (DBMS), which is an integrated set of computer software that allows users to interact with one or more databases and provides access to all of the data contained in the database (although restrictions may exist that limit access to particular data). The DBMS provides various functions that allow entry, storage and retrieval of large quantities of information and provides ways to manage how that information is organized. What makes SlateDB not qualify for this definition? It seems to qualify for me. reply mtndew4brkfst 1 hour agorootparentprev [–] Do you feel that e.g. Redis fails to satisfy the same definition in basically the same ways? If it does fulfill the criteria, what do you see as the distinction? reply rehevkor5 17 minutes agorootparentCalling Redis a database is a generous generalization. For example, Redis does not necessarily provide the same kind of durability as a database does, nor the capabilities one would expect from an RDBMS. In many cases, depending on configuration, it might be more appropriate to instead refer to Redis as a cache, an in-memory database, or a NoSQL database. reply notthistime12 29 minutes agorootparentprev [–] Redis is a key-value store. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "SlateDB provides extremely high durability (99.999999999%) by utilizing the durability of your existing object store, eliminating the need for disks and associated failures.",
      "It offers tunable performance options for low latency, cost efficiency, or enhanced durability, and supports a single writer with multiple readers, preventing issues with zombie writers.",
      "Developed in Rust, SlateDB is an embeddable library compatible with multiple programming languages, and can be easily integrated by adding it to your dependencies in Cargo.toml."
    ],
    "commentSummary": [
      "SlateDB is an embedded database designed for object storage, resembling a \"lakehouse architecture\" similar to Apache Iceberg, and is used for stream processing and serverless functions.",
      "It buffers writes in an in-memory log before committing to object storage, which can lead to data loss if the writer fails, though it offers configurable durability options, including synchronous writes.",
      "Critics argue that SlateDB is more of a thin abstraction over object storage than a true database, and it currently requires Rust for implementation, lacking support for other programming languages."
    ],
    "points": 138,
    "commentCount": 42,
    "retryCount": 0,
    "time": 1727821083
  },
  {
    "id": 41721567,
    "title": "American WWII bomb explodes at Japanese airport, causing large crater in taxiway",
    "originLink": "https://www.cnn.com/2024/10/02/travel/wwii-bomb-miyazaki-airport-japan-scli-intl/index.html",
    "originBody": ":root{--base-space-48:48px;--base-font-letter-spacing-100:1px;--base-size-36:36px;--base-color-transparent-black-20:#0c0c0c33;--base-font-text-transform-uppercase:uppercase;--base-font-text-decoration-none:none;--base-font-line-height-12:12px;--base-color-transparent-black-70:#0c0c0cb3;--base-font-line-height-14:14px;--base-font-letter-spacing-50:0.5;--base-color-transparent-black-10:#0c0c0c1a;--base-font-line-height-10:10px;--base-color-transparent-black-60:#0c0c0c99;--base-font-letter-spacing-1200:12px;--base-size-04:4px;--base-color-transparent-black-50:#0c0c0c80;--base-font-letter-spacing-150:1.5;--base-color-transparent-black-40:#0c0c0c66;--base-font-letter-spacing-125:1.25;--base-size-28:28px;--base-color-transparent-black-30:#0c0c0c4d;--base-font-letter-spacing-25:0.25;--base-size-32:32px;--base-color-transparent-black-0:#0c0c0c00;--base-font-style-italic:italic;--base-size-08:8px;--base-color-brand-travel-500:#f06c00ff;--base-font-style-normal:normal;--base-font-size-18:18px;--base-size-02:2px;--base-font-letter-spacing-none:0;--base-font-text-decoration-underline:underline;--base-font-size-24:24px;--base-size-16:16px;--base-color-red-100:#ffd5d5ff;--base-font-size-20:20px;--base-font-line-height-48:48px;--base-font-size-16:16px;--base-border-radius-04:4px;--base-color-transparent-black-100:#0c0c0cff;--base-font-line-height-40:40px;--base-font-size-10:10px;--base-size-20:20px;--base-color-transparent-black-90:#0c0c0ce6;--base-font-text-transform-sentence-case:capitalize;--base-font-family-cnn-sans-display:cnn_sans_display,helveticaneue,Helvetica,Arial,Utkal,sans-serif;--base-border-radius-08:8px;--base-space-72:72px;--base-border-radius-32:32px;--base-size-none:0;--base-border-radius-20:20px;--base-space-64:64px;--base-border-radius-12:12px;--base-border-radius-16:16px;--base-color-brand-travel-700:#ffffffff;--base-space-32:32px;--base-font-size-12:12px;--base-space-56:56px;--base-space-28:28px;--base-font-line-height-56:56px;--base-space-24:24px;--base-color-blue-100:#d7dbfcff;--base-color-red-800:#450000ff;--base-border-radius-24:24px;--base-font-size-64:64px;--base-space-20:20px;--base-color-brand-travel-80:#ffffffff;--base-color-red-700:#720000ff;--base-border-radius-circle:9999px;--base-font-size-56:56px;--base-space-16:16px;--base-color-brand-travel-300:#ffffffff;--base-space-12:12px;--base-color-brand-travel-600:#ffffffff;--base-color-black:#000000ff;--base-space-36:36px;--base-space-08:8px;--base-space-04:4px;--base-color-brand-travel-400:#ffffffff;--base-space-02:2px;--base-color-blue-300:#7b8ff7ff;--base-space-none:0;--base-color-blue-600:#173da4ff;--base-size-80:80px;--base-color-transparent-white-40:#ffffff66;--base-size-72:72px;--base-color-blue-400:#3061f2ff;--base-size-64:64px;--base-color-transparent-white-100:#ffffffff;--base-color-red-600:#a20000ff;--base-font-size-48:48px;--base-font-line-height-64:64px;--base-size-56:56px;--base-color-blue-200:#aeb8faff;--base-color-red-500:#d50000ff;--base-font-size-40:40px;--base-border-radius-28:28px;--base-font-text-transform-none:none;--base-border-radius-02:2px;--base-size-48:48px;--base-color-blue-500:#2152d5ff;--base-color-white:#ffffffff;--base-font-size-14:14px;--base-size-40:40px;--base-color-red-400:#ff3f3fff;--base-font-size-36:36px;--base-size-12:12px;--base-color-red-300:#ff7979ff;--base-size-24:24px;--base-font-size-32:32px;--base-color-red-200:#ffaaaaff;--base-font-size-30:30px;--base-border-radius-none:0;--base-color-transparent-black-80:#0c0c0ccc;--base-color-brand-underscored-300:#ffffffff;--base-color-brand-politics-700:#ffffffff;--base-color-brand-politics-300:#ffffffff;--base-color-brand-business-800:#ffffffff;--base-color-brand-business-700:#ffffffff;--base-color-green-200:#97fbc3ff;--base-color-neutral-800:#0c0c0cff;--base-color-blue-800:#041443ff;--base-color-neutral-700:#262626ff;--base-color-neutral-300:#e6e6e6ff;--base-color-brand-underscored-800:#ffffffff;--base-color-yellow-400:#f0b100ff;--base-font-line-height-32:32px;--base-font-line-height-16:16px;--base-color-yellow-300:#ffc248ff;--base-color-brand-underscored-600:#ffffffff;--base-color-yellow-200:#ffd088ff;--base-font-line-height-24:24px;--base-color-transparent-white-60:#ffffff99;--base-color-yellow-100:#ffe4c3ff;--base-font-line-height-36:36px;--base-font-line-height-18:18px;--base-font-line-height-20:20px;--base-color-teal-800:#0a2927ff;--base-color-teal-700:#164541ff;--base-font-size-42:42px;--base-color-teal-600:#346a66ff;--base-color-teal-500:#4d9791ff;--base-color-brand-underscored-100:#ffffffff;--base-color-teal-400:#60b9b1ff;--base-color-brand-travel-100:#ffffffff;--base-color-teal-300:#73dcd3ff;--base-color-brand-underscored-700:#ffffffff;--base-color-teal-200:#92f8f0ff;--base-font-line-height-30:30px;--base-color-teal-100:#c6fbf6ff;--base-color-brand-travel-200:#ffffffff;--base-color-brand-politics-100:#ffffffff;--base-color-purple-800:#2d1444ff;--base-color-brand-politics-400:#ffffffff;--base-color-purple-700:#462166ff;--base-color-brand-underscored-400:#ffffffff;--base-color-purple-600:#62318eff;--base-color-purple-500:#8143b8ff;--base-color-brand-underscored-200:#ffffffff;--base-color-purple-400:#9656d1ff;--base-font-text-transform-lowercase:lowercase;--base-color-brand-underscored-500:#6a29d5ff;--base-color-purple-300:#b28ae0ff;--base-color-brand-business-600:#ffffffff;--base-color-purple-200:#cdb6f1ff;--base-color-brand-politics-600:#ffffffff;--base-color-purple-100:#e5dbf8ff;--base-color-brand-business-400:#ffffffff;--base-color-brand-politics-200:#ffffffff;--base-color-pink-800:#44010fff;--base-color-brand-politics-500:#3061f3ff;--base-color-pink-700:#6f041eff;--base-color-brand-politics-800:#ffffffff;--base-color-pink-600:#9e092fff;--base-color-green-400:#4bc88aff;--base-color-brand-cnn-600:#a4001eff;--base-color-orange-600:#984700ff;--base-color-green-700:#1b5437ff;--base-color-brand-cnn-500:#cc0000ff;--base-color-transparent-white-90:#ffffffe6;--base-color-brand-cnn-200:#ffffffff;--base-color-orange-500:#cd6200ff;--base-color-neutral-400:#b1b1b1ff;--base-space-40:40px;--base-color-transparent-white-0:#ffffff00;--base-color-neutral-500:#6e6e6eff;--base-space-80:80px;--base-color-transparent-white-10:#ffffff1a;--base-color-neutral-600:#404040ff;--base-color-green-800:#0b2f1dff;--base-color-brand-cnn-400:#ff3f3fff;--base-color-green-500:#3da672ff;--base-color-brand-cnn-300:#ffffffff;--base-color-transparent-white-70:#ffffffb3;--base-color-green-600:#2b7a53ff;--base-color-yellow-600:#9a7100ff;--base-color-yellow-700:#6c4e00ff;--base-color-green-300:#58e59eff;--base-color-orange-400:#ff7c00ff;--base-color-brand-business-200:#ffffffff;--base-color-pink-200:#fdaab2ff;--base-color-orange-300:#ff9360ff;--base-color-brand-cnn-800:#ffffffff;--base-color-pink-500:#d00f40ff;--base-color-blue-700:#0c266eff;--base-color-orange-200:#ffb9a1ff;--base-color-pink-300:#fc7989ff;--base-color-brand-cnn-700:#ffffffff;--base-color-pink-400:#fc2f59ff;--base-color-orange-100:#ffdbd0ff;--base-color-brand-business-300:#ffffffff;--base-color-pink-100:#fed6d9ff;--base-color-brand-business-500:#66c9afff;--base-font-family-noto-serif:\"Noto Serif\";--base-color-transparent-white-20:#ffffff33;--base-color-neutral-200:#f8f8f8ff;--base-color-yellow-500:#c99400ff;--base-color-green-100:#c9fdddff;--base-color-orange-800:#401a00ff;--base-color-brand-cnn-100:#ffffffff;--base-font-family-cnn-stencil:cnn_stencil_display;--base-color-transparent-white-50:#ffffff80;--base-font-family-cnn-condensed:cnn_sans_condensed;--base-color-transparent-white-80:#ffffffcc;--base-font-family-cnn-sans:cnn_sans;--base-color-transparent-white-30:#ffffff4d;--base-color-brand-business-100:#ffffffff;--base-color-orange-700:#612b00ff;--base-color-yellow-800:#463100ff;--base-color-neutral-100:#ffffffff;--base-font-line-height-28:28px;--base-font-line-height-26:26px;--base-color-transparent-black-05:#0c0c0c1a;--base-color-transparent-white-05:#ffffff1a;--base-size-01:1px;--base-font-line-height-22:22px;--base-font-weight-regular:400px;--base-font-weight-medium:500px;--base-font-weight-light:300px;--base-font-weight-bold:700px;--base-font-weight-heavy:800px;--appr-color-button-bg-secondary-hovered:var(--appr-color-bg-action-transparent-hovered);--appr-color-button-text-secondary-disabled:var(--appr-color-text-action-disabled);--appr-color-button-bg-secondary-default:var(--appr-color-bg-action-transparent-default);--appr-color-button-icon-secondary-pressed:var(--appr-color-icon-action-pressed);--appr-color-button-icon-primary-pressed:var(--base-color-white);--appr-color-button-border-secondary-pressed:var(--appr-color-border-action-pressed);--appr-color-button-icon-primary-disabled:var(--base-color-white);--appr-color-button-icon-secondary-hovered:var(--appr-color-icon-action-hovered);--appr-color-button-bg-primary-disabled:var(--appr-color-bg-action-disabled);--appr-color-icon-tertiary:var(--base-color-neutral-500);--appr-color-button-text-secondary-pressed:var(--appr-color-text-action-pressed);--appr-color-button-text-primary-disabled:var(--base-color-white);--appr-color-icon-primary:var(--base-color-neutral-800);--appr-color-button-border-secondary-default:var(--appr-color-border-action-default);--appr-color-icon-secondary:var(--base-color-neutral-600);--appr-color-button-text-primary-pressed:var(--base-color-white);--appr-color-icon-secondary-inverse:var(--base-color-neutral-200);--appr-color-button-text-secondary-hovered:var(--appr-color-text-action-hovered);--appr-color-button-text-primary-focused:var(--base-color-white);--appr-color-button-border-secondary-focused:var(--appr-color-border-action-default);--appr-color-button-border-secondary-hovered:var(--appr-color-border-action-hovered);--appr-color-icon-primary-inverse:var(--base-color-neutral-100);--appr-color-button-text-primary-hovered:var(--base-color-white);--appr-color-button-border-secondary-disabled:var(--appr-color-border-action-disabled);--appr-color-icon-tertiary-inverse:var(--base-color-neutral-300);--appr-color-button-text-primary-default:var(--base-color-white);--appr-color-button-bg-secondary-focused:var(--appr-color-bg-action-transparent-focused);--appr-color-text-link-secondary-default:var(--base-color-neutral-500);--appr-color-button-bg-primary-focused:var(--appr-color-bg-action-focused);--appr-color-button-icon-primary-focused:var(--base-color-white);--appr-color-button-text-secondary-default:var(--appr-color-text-action-default);--appr-color-button-bg-primary-pressed:var(--appr-color-bg-action-pressed);--appr-color-button-bg-secondary-pressed:var(--appr-color-bg-action-transparent-pressed);--appr-color-text-tertiary-inverse:var(--base-color-neutral-300);--appr-color-text-tertiary:var(--base-color-neutral-500);--appr-color-button-icon-secondary-focused:var(--appr-color-icon-action-focused);--appr-color-button-icon-primary-hovered:var(--base-color-white);--appr-color-button-text-secondary-focused:var(--appr-color-text-action-focused);--appr-color-button-bg-primary-hovered:var(--appr-color-bg-action-hovered);--appr-color-text-primary-inverse:var(--base-color-neutral-100);--appr-color-button-bg-secondary-disabled:var(--appr-color-bg-action-transparent-disabled);--appr-color-button-icon-secondary-default:var(--appr-color-icon-action-default);--appr-color-bg-action-default:var(--theme-color-action-default);--appr-color-text-primary:var(--base-color-neutral-800);--appr-color-button-bg-primary-default:var(--appr-color-bg-action-default);--appr-color-text-secondary:var(--base-color-neutral-600);--appr-color-button-icon-secondary-disabled:var(--appr-color-icon-action-disabled);--appr-color-button-icon-primary-default:var(--base-color-white);--appr-color-text-accent:var(--theme-color-accent);--appr-color-border-primary-inverse:var(--base-color-neutral-500);--appr-color-border-primary-inverse-persistent:var(--base-color-neutral-500);--appr-color-border-primary-persistent:var(--base-color-neutral-300);--appr-color-border-secondary-inverse:var(--base-color-neutral-400);--appr-color-border-tertiary-inverse:var(--base-color-neutral-300);--appr-color-border-primary:var(--base-color-neutral-300);--appr-color-border-tertiary:var(--base-color-neutral-500);--appr-color-border-secondary-inverse-persistent:var(--base-color-neutral-400);--appr-color-border-tertiary-inverse-persistent:var(--base-color-neutral-300);--appr-color-border-secondary-persistent:var(--base-color-neutral-400);--appr-color-border-secondary:var(--base-color-neutral-400);--appr-color-border-tertiary-persistent:var(--base-color-neutral-500);--appr-color-icon-accent:var(--theme-color-accent);--appr-color-border-action-default:var(--base-color-neutral-500);--appr-color-icon-action-hovered:var(--base-color-neutral-700);--appr-color-border-action-focused:var(--theme-color-action-focused);--appr-color-icon-action-pressed:var(--base-color-neutral-600);--appr-color-text-action-pressed:var(--base-color-neutral-600);--appr-color-text-action-default:var(--base-color-neutral-800);--appr-color-icon-action-default:var(--base-color-neutral-800);--appr-color-text-action-focused:var(--base-color-neutral-800);--appr-color-border-action-hovered:var(--base-color-neutral-600);--appr-color-text-action-hovered:var(--base-color-neutral-700);--appr-color-icon-action-focused:var(--base-color-neutral-800);--appr-color-bg-action-pressed:var(--theme-color-action-pressed);--appr-color-bg-action-focused:var(--theme-color-action-focused);--appr-color-bg-action-hovered:var(--theme-color-action-hovered);--appr-color-border-action-pressed:var(--base-color-neutral-700);--appr-color-text-link-primary-pressed:var(--theme-color-action-pressed);--appr-color-text-action-disabled:var(--base-color-neutral-400);--appr-color-text-link-primary-hovered:var(--theme-color-action-hovered);--appr-color-text-link-primary-focused:var(--theme-color-action-focused);--appr-color-text-link-primary-disabled:var(--base-color-neutral-400);--appr-color-icon-action-disabled:var(--base-color-neutral-400);--appr-color-text-link-primary-default:var(--theme-color-action-default);--appr-color-border-action-disabled:var(--base-color-neutral-400);--appr-color-bg-primary:var(--base-color-white);--appr-color-button-icon-tertiary-disabled:var(--appr-color-icon-action-disabled);--appr-color-button-bg-tertiary-default:var(--appr-color-bg-action-transparent-default);--appr-color-button-bg-tertiary-focused:var(--appr-color-bg-action-transparent-focused);--appr-color-button-bg-tertiary-pressed:var(--appr-color-bg-action-transparent-pressed);--appr-color-button-bg-tertiary-hovered:var(--appr-color-bg-action-transparent-hovered);--appr-color-button-bg-tertiary-disabled:var(--appr-color-bg-action-transparent-disabled);--appr-color-button-icon-tertiary-hovered:var(--appr-color-icon-action-hovered);--appr-color-button-icon-tertiary-default:var(--appr-color-icon-action-default);--appr-color-button-icon-tertiary-focused:var(--appr-color-icon-action-focused);--appr-color-button-icon-tertiary-pressed:var(--appr-color-icon-action-pressed);--appr-color-button-text-tertiary-pressed:var(--appr-color-text-action-pressed);--appr-color-button-text-tertiary-disabled:var(--appr-color-text-action-disabled);--appr-color-button-text-tertiary-default:var(--appr-color-text-action-default);--appr-color-button-text-tertiary-hovered:var(--appr-color-text-action-hovered);--appr-color-button-text-tertiary-focused:var(--appr-color-text-action-focused);--appr-color-bg-action-transparent-pressed:var(--base-color-transparent-black-10);--appr-color-bg-action-transparent-focused:var(--base-color-transparent-black-0);--appr-color-bg-action-transparent-disabled:var(--base-color-transparent-black-0);--appr-color-bg-action-transparent-default:var(--base-color-transparent-black-0);--appr-color-bg-action-transparent-hovered:var(--base-color-transparent-black-05);--appr-color-bg-tertiary:var(--base-color-neutral-300);--appr-color-bg-secondary:var(--base-color-neutral-200);--appr-color-bg-surface:var(--base-color-white);--appr-color-bg-action-surface-disabled:var(--base-color-neutral-200);--appr-color-bg-action-surface-default:var(--base-color-white);--appr-color-bg-action-surface-focused:var(--base-color-neutral-100);--appr-color-bg-action-surface-hovered:var(--base-color-neutral-200);--appr-color-bg-action-surface-pressed:var(--base-color-neutral-300);--appr-color-shadow-action-disabled:var(--base-color-transparent-black-0);--appr-color-shadow-action-default:var(--base-color-transparent-black-10);--appr-color-shadow-high:var(--base-color-transparent-black-10);--appr-color-shadow-action-pressed:var(--base-color-transparent-black-10);--appr-color-shadow-low:var(--base-color-transparent-black-10);--appr-color-shadow-action-focused:var(--base-color-transparent-black-10);--appr-color-shadow-action-hovered:var(--base-color-transparent-black-10);--appr-color-shadow-lowest:var(--base-color-transparent-black-10);--appr-color-bg-accent:var(--theme-color-accent);--appr-color-border-accent:var(--theme-color-accent);--appr-color-icon-live:var(--base-color-red-500);--appr-color-text-live:var(--base-color-red-500);--appr-color-bg-live:var(--base-color-red-500);--appr-color-border-live:var(--base-color-red-500);--appr-color-bg-tertiary-inverse:var(--base-color-neutral-600);--appr-color-bg-primary-inverse:var(--base-color-neutral-800);--appr-color-bg-secondary-inverse:var(--base-color-neutral-700);--appr-color-text-link-secondary-pressed:var(--base-color-neutral-700);--appr-color-text-link-secondary-disabled:var(--base-color-neutral-400);--appr-color-text-link-secondary-hovered:var(--base-color-neutral-600);--appr-color-text-link-secondary-focused:var(--base-color-neutral-800);--appr-color-text-secondary-inverse:var(--base-color-neutral-200);--appr-color-bg-action-disabled:var(--base-color-neutral-400);--appr-color-avatar-border:var(--base-color-white);--appr-color-bg-action-transparent-disabled-inverse:var(--base-color-transparent-white-0);--appr-color-bg-action-transparent-pressed-inverse:var(--base-color-transparent-white-60);--appr-color-bg-action-transparent-default-inverse:var(--base-color-transparent-white-0);--appr-color-bg-action-transparent-hovered-inverse:var(--base-color-transparent-white-50);--appr-color-bg-action-transparent-focused-inverse:var(--base-color-transparent-white-50);--appr-color-bg-overlay-persistent:var(--base-color-transparent-black-50);--appr-color-bg-overlay-inverse:var(--base-color-transparent-white-50);--appr-color-bg-overlay:var(--base-color-transparent-black-50);--appr-color-text-secondary-inverse-persistent:var(--base-color-neutral-200);--appr-color-text-primary-inverse-persistent:var(--base-color-neutral-100);--appr-color-text-tertiary-inverse-persistent:var(--base-color-neutral-300);--appr-color-text-primary-persistent:var(--base-color-neutral-800);--appr-color-text-secondary-persistent:var(--base-color-neutral-600);--appr-color-icon-primary-inverse-persistent:var(--base-color-neutral-100);--appr-color-icon-secondary-inverse-persistent:var(--base-color-neutral-200);--appr-color-icon-tertiary-inverse-persistent:var(--base-color-neutral-300);--appr-color-icon-secondary-persistent:var(--base-color-neutral-600);--appr-color-icon-tertiary-persistent:var(--base-color-neutral-500);--appr-color-text-tertiary-persistent:var(--base-color-neutral-500);--appr-color-icon-primary-persistent:var(--base-color-neutral-800);--appr-color-bg-overlay-inverse-persistent:var(--base-color-transparent-white-50);--appr-color-border-input-selected-focused:var(--base-color-neutral-800);--appr-color-border-input-selected-hovered:var(--base-color-neutral-600);--appr-color-border-input-selected-disabled:var(--base-color-neutral-400);--appr-color-border-input-focused:var(--base-color-neutral-500);--appr-color-bg-input-selected-default:var(--base-color-neutral-800);--appr-color-border-input-default:var(--base-color-neutral-500);--appr-color-bg-input-disabled:var(--base-color-transparent-black-0);--appr-color-bg-input-hovered:var(--base-color-transparent-black-05);--appr-color-border-input-hovered:var(--base-color-neutral-600);--appr-color-border-input-selected-pressed:var(--base-color-neutral-700);--appr-color-border-input-pressed:var(--base-color-neutral-700);--appr-color-border-input-disabled:var(--base-color-neutral-400);--appr-color-border-input-selected-default:var(--base-color-neutral-800);--appr-color-text-input-pressed:var(--base-color-neutral-600);--appr-color-text-input-placeholder:var(--base-color-neutral-400);--appr-color-text-input-default:var(--base-color-neutral-800);--appr-color-icon-input-hovered:var(--base-color-neutral-700);--appr-color-bg-input-selected-focused:var(--base-color-neutral-800);--appr-color-bg-input-selected-pressed:var(--base-color-transparent-black-30);--appr-color-icon-input-focused:var(--base-color-neutral-800);--appr-color-bg-input-selected-hovered:var(--base-color-transparent-black-20);--appr-color-text-input-disabled:var(--base-color-neutral-400);--appr-color-icon-input-default:var(--base-color-neutral-800);--appr-color-icon-input-placeholder:var(--base-color-neutral-400);--appr-color-bg-input-selected-disabled:var(--base-color-neutral-400);--appr-color-bg-input-default:var(--base-color-transparent-black-0);--appr-color-bg-input-focused:var(--base-color-transparent-black-0);--appr-color-icon-input-pressed:var(--base-color-neutral-600);--appr-color-text-input-hovered:var(--base-color-neutral-700);--appr-color-bg-input-pressed:var(--base-color-transparent-black-10);--appr-color-text-input-focused:var(--base-color-neutral-800);--appr-color-icon-input-disabled:var(--base-color-neutral-400);--theme-font-family-header:var(--base-font-family-cnn-sans-display);--theme-font-family-body:var(--base-font-family-cnn-sans-display);--theme-font-family-ui:var(--base-font-family-cnn-sans-display);--theme-color-action-focused-dark:var(--base-color-neutral-100);--theme-color-action-focused:var(--base-color-neutral-800);--theme-color-action-pressed-dark:var(--base-color-neutral-300);--theme-color-action-hovered-dark:var(--base-color-neutral-200);--theme-color-action-default-dark:var(--base-color-neutral-100);--theme-color-action-default:var(--base-color-neutral-800);--theme-color-accent:var(--base-color-brand-cnn-500);--theme-color-accent-dark:var(--base-color-brand-cnn-400);--theme-color-action-pressed:var(--base-color-neutral-600);--theme-color-action-hovered:var(--base-color-neutral-500);--theme-font-weight-ui-all-caps:var(--base-font-weight-bold);--theme-headline__text-color:var(--appr-color-text-primary);--theme-link-color-hover:var(--appr-color-text-link-primary-hovered);--theme-paragraph__hover-link-decoration:var(--base-font-text-decoration-none);--theme-paragraph__link-color:var(--appr-color-text-link-primary-default);--theme-paragraph__link-decoration:var(--base-font-text-decoration-underline);--theme-paragraph__hover-link-offset:var(--base-space-04);--theme-paragraph__font-family:var(--theme-font-family-body);--theme-paragraph__font-size:var(--appr-font-size-body-md);--theme-paragraph__line-height:var(--appr-font-line-height-body-md);--theme-primary:#cc0000;--theme-copy:#404040;--theme-searchbox-border:#b1b1b1;--theme-article-spacing-top:0px;--theme-color-link:#0c0c0c;--theme-button-color:#6e6e6e;--theme-button-color-hover:#cc0000;--theme-underline-skip-ink:auto;--theme-paragraph__font-size--from-small:var(--theme-paragraph__font-size);--theme-paragraph__line-height--from-small:var(--theme-paragraph__line-height);--theme-paragraph__link-decoration-color:var(--theme-color-link);--theme-paragraph__link-decoration-thickness:1px;--theme-header__hover-item-hover:var(--theme-background);--theme-header__item-link-color:#e6e6e6;--theme-header__item-link-hover-background-color:transparent;--theme-header__mobile-dropdown-border-color:var(--theme-divider);--theme-header__mobile-dropdown-background:#0c0c0c;--theme-header__item-link-line-height:40px;--theme-header__dropdown-background:#0c0c0c;--theme-header__dropdown-border-color:var(--theme-divider);--theme-headline-sponsorship__lateral-margin:0;--theme-headline__margin-bottom:16px;--theme-headline__padding-bottom:48px;--theme-headline__padding-bottom-viewport-large:64px;--theme-headline__teaser-font-size:16px;--theme-headline__teaser-line-height:normal;--theme-headline__teaser-margin-top:0;--theme-headline__teaser-margin-botton:0;--theme-section-headline__text-color:#0c0c0c;--theme-section-headline__margin-bottom:0;--theme-section-headline-text__margin-top:16px;--theme-section-headline-text__margin-bottom:18px;--theme-section-headline-teaser__font-size:inherit;--theme-section-headline-teaser__color:inherit;--theme-subheader-h2__font-size:24px;--theme-subheader-h3__font-size:20px;--theme-subheader-h4__font-size:18px;--theme-subheader-h5__font-size:16px;--theme-subheader-h6__font-size:14px;--theme-subheader-h2__line-height:30px;--theme-subheader-h3__line-height:26px;--theme-subheader-h4__line-height:24px;--theme-subheader-h5__line-height:22px;--theme-subheader-h6__line-height:20px;--theme-iframe__display:block;--theme-list__link-decoration:underline;--theme-container__font-family:cnn_sans_display,helveticaneue,Helvetica,Arial,Utkal,sans-serif;--theme-container__font-weight:400;--theme-container-color--hover:#0c0c0c;--theme-container-image-color--hover:rgba(12, 12, 12, 0.4);--theme-container-text-decoration--hover:underline;--theme-container-image-opacity--hover:0.5;--theme-container-margin-bottom-default:24px;--theme-container-margin-bottom-600:48px;--theme-container-title__border-color:#e6e6e6;--theme-container-title__border-decorator-color:#cc0000;--theme-container-title__border-decorator-initial-width:16px;--theme-container-title__margin-bottom:0;--theme-container-title__margin-bottom-grid-4:0;--theme-container-title__text-size:12px;--theme-container-title__arrow-color--initial:#ffffff;--theme-container-title__arrow-size:16px;--theme-container-title__arrow-top-pos:0;--theme-container-link__background-color:inherit;--theme-container-item__margin-bottom-feature-list:32px;--theme-container__margin-bottom-grid-3:24px;--theme-container__margin-bottom-feature-grid-3:24px;--theme-header-mobile-nav-border-color:transparent;--theme-header-item-container-color:#262626;--theme-header-subnav-section-title-color:#ffffff;--theme-text-banner__gradient-1:#cdb6f1;--theme-text-banner__gradient-2:#e5dbf8;--theme-zone__padding-bottom-default:64px;--theme-zone__padding-bottom-small:64px;--theme-zone__margin-bottom-default:48px;--theme-zone__margin-top:-32px;--theme-zone-title__link-decoration:none;--theme-zone-title__hover-link-decoration:underline;--social-sharing-display:block;--social-sharing-margin-top:16px;--social-sharing-open-close-fill:#4d4d4d;--social-sharing-facebook-fill:#0c0c0c;--social-sharing-twitter-fill:#0c0c0c;--social-sharing-email-fill:#0c0c0c;--social-sharing-link-fill:#0c0c0c;--theme-disclaimer-background:#e6e6e6;--theme-disclaimer-color:#4d4d4d;--theme-disclaimer-style:normal;--theme-disclaimer-link-color:#6a29d5;--theme-disclaimer-link-weight:400;--theme-disclaimer-fontsize-sm:14px;--theme-disclaimer-fontsize-xl:16px;--theme-disclaimer-lineheight-sm:22.75px;--theme-disclaimer-lineheight-xl:25.6px;--theme-newsletter-form-disable-button:#c0c0c0;--theme-paragraph-fontsize-sm:14px;--theme-paragraph-fontsize-xl:16px;--theme-paragraph-lineheight-sm:22.75px;--theme-paragraph-lineheight-xl:25.6px;--theme-main-wrapper-rail-width:360px;--theme-main-wrapper-right-rail-width:300px;--theme-main-wrapper-column-gap-medium-width:40px;--theme-main-wrapper-column-gap-large-width:50px;--theme-primary-logo-fill:#cc0000;--theme-subheader-anchor-display:inline;--theme-primary-layout-color:#fafafa;--theme-secondary-layout-color:#fff;--theme-video-playlist-status-label-color:rgba(12, 12, 12, 0.7);--theme-video-playlist-item-hover-color:#0c0c0c;--theme-footer-disclaimer-color:#6e6e6e;--theme-footer-disclaimer-weight:700;--theme-background:#ffffff;--theme-icon-color:#0c0c0c;--theme-icon-color-hover:#0c0c0c;--theme-copy-accent:#0c0c0c;--theme-copy-accent-hover:#0c0c0c;--theme-divider:#e6e6e6;--theme-ad-slot-background-color:#0c0c0c;--theme-ad-slot-text-color:#b1b1b1;--theme-ad-slot-text-hover:#ffffff;--theme-font-family:cnntravel,Palatino,Georgia,Times New Roman,serif;--theme-copy-follow:#262626;--theme-edition-picker-link:#404040;--theme-headline__font-family:cnntravel,Palatino,Georgia,Times New Roman,serif;--theme-headline__font-size:26px;--theme-headline__line-height:32px;--theme-headline__font-weight:400;--theme-section-headline__font-family:cnntravel,Palatino,Georgia,Times New Roman,serif;--theme-section-headline__font-weight:400;--theme-section-headline__font-size:38px;--theme-section-headline__line-height:44px;--theme-zone-title__font-family:cnntravel,Palatino,Georgia,Times New Roman,serif;--theme-zone-title__font-weight:400;--theme-zone-title__font-size:24px;--theme-zone-title__line-height:30px;--theme-zone-title__font-size-medium-plus:30px;--theme-zone-title__line-height-medium-plus:30px;--theme-container-lead-title__font-family:cnntravel,Palatino,Georgia,Times New Roman,serif;--theme-container-lead-title__font-weight:400;--theme-container-lead-title__font-size:24px;--theme-container-lead-title__line-height:32px;--theme-container-lead-title-mobile__font-size:24px;--theme-header__login-button:#0c0c0c;--theme-header__item-link-hover-color:#262626;--theme-subheader__font-weight:400;--theme-subheader__font-family:cnntravel,Palatino,Georgia,Times New Roman,serif;--theme-container-text-decoration-color--hover:var(--theme-color-link);--theme-container-title__arrow-color--hover:var(--theme-color-link);--theme-container-title-emphatic__font-size:26px;--theme-container-title-emphatic__line-height:32px;--theme-hero-headline__font-size:38px;--theme-hero-headline__line-height:44px;--theme-secondary-logo-fill:#000}@media (min-width:1360px){:root{--appr-font-letter-spacing-label-emphasis-lg:1px;--appr-font-letter-spacing-label-emphasis-md:1px;--appr-font-letter-spacing-label-emphasis-sm:1px;--breakpoint:1360px;--appr-font-size-header-xxlg:var(--base-font-size-42);--appr-font-size-header-xlg:var(--base-font-size-36);--appr-font-size-header-lg:var(--base-font-size-24);--appr-font-size-header-md:var(--base-font-size-20);--appr-font-size-header-sm:var(--base-font-size-18);--appr-font-size-header-xsm:var(--base-font-size-16);--appr-font-size-header-xxsm:var(--base-font-size-14);--appr-font-line-height-header-xxlg:var(--base-font-line-height-48);--appr-font-line-height-header-xlg:var(--base-font-line-height-40);--appr-font-line-height-ui-lg:var(--base-font-line-height-32);--appr-font-line-height-ui-md:var(--base-font-line-height-26);--appr-font-line-height-ui-sm:var(--base-font-line-height-20);--appr-font-line-height-ui-xsm:var(--base-font-line-height-16);--appr-font-line-height-ui-emphasis-lg:var(--base-font-line-height-20);--appr-font-line-height-ui-emphasis-md:var(--base-font-line-height-18);--appr-font-line-height-ui-emphasis-sm:var(--base-font-line-height-16);--appr-font-line-height-header-lg:var(--base-font-line-height-30);--appr-font-line-height-header-md:var(--base-font-line-height-26);--appr-font-line-height-header-sm:var(--base-font-line-height-24);--appr-font-line-height-header-xsm:var(--base-font-line-height-22);--appr-font-line-height-header-xxsm:var(--base-font-line-height-20);--appr-font-line-height-body-lg:var(--base-font-line-height-32);--appr-border-width-xlg:var(--base-size-08);--appr-font-line-height-body-md:var(--base-font-line-height-26);--appr-border-width-lg:var(--base-size-04);--appr-border-width-md:var(--base-size-02);--appr-border-width-sm:var(--base-size-01);--appr-border-width-action-md-focused:var(--appr-border-width-lg);--appr-border-width-action-sm-focused:var(--appr-border-width-md);--appr-border-width-quote-lg:var(--base-size-08);--appr-border-radius-lg:var(--base-border-radius-08);--appr-space-xxxxxxlg:var(--base-space-48);--appr-border-radius-md:var(--base-border-radius-04);--appr-size-icon-lg:var(--base-size-28);--appr-size-icon-md:var(--base-size-24);--appr-size-icon-sm:var(--base-size-20);--appr-size-icon-xsm:var(--base-size-16);--appr-space-xxxxxlg:var(--base-space-40);--appr-size-button-height-xlg:var(--base-size-56);--appr-size-button-height-lg:var(--base-size-48);--appr-space-xxxxlg:var(--base-space-32);--appr-size-button-height-md:var(--base-size-40);--appr-size-button-height-sm:var(--base-size-32);--appr-size-button-height-xsm:var(--base-size-28);--appr-space-xxxlg:var(--base-space-28);--appr-space-xxlg:var(--base-space-24);--appr-space-xlg:var(--base-space-20);--appr-space-lg:var(--base-space-16);--appr-space-md:var(--base-space-12);--appr-space-sm:var(--base-space-08);--appr-space-xsm:var(--base-space-04);--appr-space-xxsm:var(--base-space-02);--appr-size-icon-button-height-xlg:var(--base-size-56);--appr-size-icon-button-height-lg:var(--base-size-48);--appr-size-icon-button-height-md:var(--base-size-40);--appr-size-icon-button-height-sm:var(--base-size-32);--appr-size-icon-button-height-xsm:var(--base-size-28);--appr-size-image-description-max-width:781px;--appr-size-tab-height:var(--base-size-36);--appr-size-dropdown-height:var(--base-size-48);--appr-size-label-height-lg:var(--base-size-32);--appr-size-image-description-min-width:693px;--appr-size-label-height-sm:var(--base-size-24);--appr-font-size-ui-lg:var(--base-font-size-18);--appr-font-size-ui-md:var(--base-font-size-16);--appr-font-size-ui-sm:var(--base-font-size-14);--appr-font-size-ui-xsm:var(--base-font-size-12);--appr-font-size-ui-emphasis-lg:var(--base-font-size-16);--appr-font-size-ui-emphasis-md:var(--base-font-size-14);--appr-font-size-ui-emphasis-sm:var(--base-font-size-12);--appr-font-size-body-lg:var(--base-font-size-18);--appr-font-size-body-md:var(--base-font-size-16);--appr-border-radius-sm:var(--base-border-radius-02);--appr-font-line-height-body-sm:var(--base-font-line-height-20);--appr-font-line-height-body-xsm:var(--base-font-line-height-16);--appr-border-radius-circle:var(--base-border-radius-circle);--appr-font-size-body-sm:var(--base-font-size-14);--appr-font-size-body-xsm:var(--base-font-size-12);--appr-size-icon-button-width-xlg:var(--base-size-56);--appr-size-icon-button-width-lg:var(--base-size-48);--appr-size-icon-button-width-md:var(--base-size-40);--appr-size-icon-button-width-sm:var(--base-size-32);--appr-size-icon-button-width-xsm:var(--base-size-28);--appr-size-image-max-width:1026px;--appr-size-image-min-width:966px;--appr-size-video-player-playhead:var(--base-size-64);--appr-size-dropdown-menu-row-height:var(--base-size-48);--appr-scale-global-page-max-width:1440px;--appr-scale-global-page-min-width:1360px;--appr-scale-global-leaf-article-max-width:1026px;--appr-scale-global-leaf-article-min-width:966px;--appr-scale-gallery-max-width:var(--appr-scale-global-leaf-article-max-width);--appr-scale-gallery-min-width:var(--appr-scale-global-leaf-article-min-width);--appr-scale-gallery-gap:var(--base-space-08);--appr-scale-gallery-metadata_group-credit-padding-right:var(--base-space-32);--appr-scale-gallery-metadata_group-caption-padding-right:var(--base-space-40);--appr-scale-gallery-image_preview_group-max-width:704px;--appr-scale-gallery-image_preview_group-min-width:698px;--appr-scale-gallery-metadata_group-gap:var(--base-space-24);--appr-scale-gallery-button_group-gap:var(--base-space-08);--appr-scale-gallery-button_group-show_buttons?:true;--appr-scale-gallery-metadata_group-text_-_btn_container-gap:var(--base-space-08);--appr-space-quote-padding-left-lg:var(--appr-space-xxxxlg)}}@media (min-width:1280px) and (max-width:1359px){:root{--appr-font-letter-spacing-label-emphasis-lg:1px;--appr-font-letter-spacing-label-emphasis-md:1px;--appr-font-letter-spacing-label-emphasis-sm:1px;--breakpoint:1280px;--appr-font-size-header-xxlg:var(--base-font-size-42);--appr-font-size-header-xlg:var(--base-font-size-36);--appr-font-size-header-lg:var(--base-font-size-24);--appr-font-size-header-md:var(--base-font-size-20);--appr-font-size-header-sm:var(--base-font-size-18);--appr-font-size-header-xsm:var(--base-font-size-16);--appr-font-size-header-xxsm:var(--base-font-size-14);--appr-font-line-height-header-xxlg:var(--base-font-line-height-48);--appr-font-line-height-header-xlg:var(--base-font-line-height-40);--appr-font-line-height-ui-lg:var(--base-font-line-height-32);--appr-font-line-height-ui-md:var(--base-font-line-height-26);--appr-font-line-height-ui-sm:var(--base-font-line-height-20);--appr-font-line-height-ui-xsm:var(--base-font-line-height-16);--appr-font-line-height-ui-emphasis-lg:var(--base-font-line-height-20);--appr-font-line-height-ui-emphasis-md:var(--base-font-line-height-18);--appr-font-line-height-ui-emphasis-sm:var(--base-font-line-height-16);--appr-font-line-height-header-lg:var(--base-font-line-height-30);--appr-font-line-height-header-md:var(--base-font-line-height-26);--appr-font-line-height-header-sm:var(--base-font-line-height-24);--appr-font-line-height-header-xsm:var(--base-font-line-height-22);--appr-font-line-height-header-xxsm:var(--base-font-line-height-20);--appr-font-line-height-body-lg:var(--base-font-line-height-32);--appr-border-width-xlg:var(--base-size-08);--appr-font-line-height-body-md:var(--base-font-line-height-26);--appr-border-width-lg:var(--base-size-04);--appr-border-width-md:var(--base-size-02);--appr-border-width-sm:var(--base-size-01);--appr-border-width-action-md-focused:var(--appr-border-width-lg);--appr-border-width-action-sm-focused:var(--appr-border-width-md);--appr-border-width-quote-lg:var(--base-size-08);--appr-border-radius-lg:var(--base-border-radius-08);--appr-space-xxxxxxlg:var(--base-space-48);--appr-border-radius-md:var(--base-border-radius-04);--appr-size-icon-lg:var(--base-size-28);--appr-size-icon-md:var(--base-size-24);--appr-size-icon-sm:var(--base-size-20);--appr-size-icon-xsm:var(--base-size-16);--appr-space-xxxxxlg:var(--base-space-40);--appr-size-button-height-xlg:var(--base-size-56);--appr-size-button-height-lg:var(--base-size-48);--appr-space-xxxxlg:var(--base-space-32);--appr-size-button-height-md:var(--base-size-40);--appr-size-button-height-sm:var(--base-size-32);--appr-size-button-height-xsm:var(--base-size-28);--appr-space-xxxlg:var(--base-space-28);--appr-space-xxlg:var(--base-space-24);--appr-space-xlg:var(--base-space-20);--appr-space-lg:var(--base-space-16);--appr-space-md:var(--base-space-12);--appr-space-sm:var(--base-space-08);--appr-space-xsm:var(--base-space-04);--appr-space-xxsm:var(--base-space-02);--appr-size-icon-button-height-xlg:var(--base-size-56);--appr-size-icon-button-height-lg:var(--base-size-48);--appr-size-icon-button-height-md:var(--base-size-40);--appr-size-icon-button-height-sm:var(--base-size-32);--appr-size-icon-button-height-xsm:var(--base-size-28);--appr-size-image-description-max-width:772px;--appr-size-tab-height:var(--base-size-36);--appr-size-dropdown-height:var(--base-size-48);--appr-size-label-height-lg:var(--base-size-32);--appr-size-image-description-min-width:488px;--appr-size-label-height-sm:var(--base-size-24);--appr-font-size-ui-lg:var(--base-font-size-18);--appr-font-size-ui-md:var(--base-font-size-16);--appr-font-size-ui-sm:var(--base-font-size-14);--appr-font-size-ui-xsm:var(--base-font-size-12);--appr-font-size-ui-emphasis-lg:var(--base-font-size-16);--appr-font-size-ui-emphasis-md:var(--base-font-size-14);--appr-font-size-ui-emphasis-sm:var(--base-font-size-12);--appr-font-size-body-lg:var(--base-font-size-18);--appr-font-size-body-md:var(--base-font-size-16);--appr-border-radius-sm:var(--base-border-radius-02);--appr-font-line-height-body-sm:var(--base-font-line-height-20);--appr-font-line-height-body-xsm:var(--base-font-line-height-16);--appr-border-radius-circle:var(--base-border-radius-circle);--appr-font-size-body-sm:var(--base-font-size-14);--appr-font-size-body-xsm:var(--base-font-size-12);--appr-size-icon-button-width-xlg:var(--base-size-56);--appr-size-icon-button-width-lg:var(--base-size-48);--appr-size-icon-button-width-md:var(--base-size-40);--appr-size-icon-button-width-sm:var(--base-size-32);--appr-size-icon-button-width-xsm:var(--base-size-28);--appr-size-image-max-width:965px;--appr-size-image-min-width:906px;--appr-size-video-player-playhead:var(--base-size-40);--appr-size-dropdown-menu-row-height:var(--base-size-48);--appr-scale-global-page-max-width:1359px;--appr-scale-global-page-min-width:1280px;--appr-scale-global-leaf-article-max-width:965px;--appr-scale-global-leaf-article-min-width:906px;--appr-scale-gallery-max-width:var(--appr-scale-global-leaf-article-max-width);--appr-scale-gallery-min-width:var(--appr-scale-global-leaf-article-min-width);--appr-scale-gallery-gap:var(--base-space-08);--appr-scale-gallery-metadata_group-credit-padding-right:var(--base-space-none);--appr-scale-gallery-metadata_group-caption-padding-right:var(--base-space-40);--appr-scale-gallery-image_preview_group-max-width:662px;--appr-scale-gallery-image_preview_group-min-width:542px;--appr-scale-gallery-metadata_group-gap:var(--base-space-24);--appr-scale-gallery-button_group-gap:var(--base-space-08);--appr-scale-gallery-button_group-show_buttons?:true;--appr-scale-gallery-metadata_group-text_-_btn_container-gap:var(--base-space-08);--appr-space-quote-padding-left-lg:var(--appr-space-xxxxlg)}}@media (min-width:960px) and (max-width:1279px){:root{--appr-font-letter-spacing-label-emphasis-lg:1px;--appr-font-letter-spacing-label-emphasis-md:1px;--appr-font-letter-spacing-label-emphasis-sm:1px;--breakpoint:960px;--appr-font-size-header-xxlg:var(--base-font-size-42);--appr-font-size-header-xlg:var(--base-font-size-36);--appr-font-size-header-lg:var(--base-font-size-24);--appr-font-size-header-md:var(--base-font-size-20);--appr-font-size-header-sm:var(--base-font-size-18);--appr-font-size-header-xsm:var(--base-font-size-16);--appr-font-size-header-xxsm:var(--base-font-size-14);--appr-font-line-height-header-xxlg:var(--base-font-line-height-48);--appr-font-line-height-header-xlg:var(--base-font-line-height-40);--appr-font-line-height-ui-lg:var(--base-font-line-height-30);--appr-font-line-height-ui-md:var(--base-font-line-height-26);--appr-font-line-height-ui-sm:var(--base-font-line-height-20);--appr-font-line-height-ui-xsm:var(--base-font-line-height-16);--appr-font-line-height-ui-emphasis-lg:var(--base-font-line-height-20);--appr-font-line-height-ui-emphasis-md:var(--base-font-line-height-18);--appr-font-line-height-ui-emphasis-sm:var(--base-font-line-height-16);--appr-font-line-height-header-lg:var(--base-font-line-height-30);--appr-font-line-height-header-md:var(--base-font-line-height-26);--appr-font-line-height-header-sm:var(--base-font-line-height-24);--appr-font-line-height-header-xsm:var(--base-font-line-height-22);--appr-font-line-height-header-xxsm:var(--base-font-line-height-20);--appr-font-line-height-body-lg:var(--base-font-line-height-32);--appr-border-width-xlg:var(--base-size-08);--appr-font-line-height-body-md:var(--base-font-line-height-26);--appr-border-width-lg:var(--base-size-04);--appr-border-width-md:var(--base-size-02);--appr-border-width-sm:var(--base-size-01);--appr-border-width-action-md-focused:var(--appr-border-width-lg);--appr-border-width-action-sm-focused:var(--appr-border-width-md);--appr-border-width-quote-lg:var(--base-size-08);--appr-border-radius-lg:var(--base-border-radius-08);--appr-space-xxxxxxlg:var(--base-space-48);--appr-border-radius-md:var(--base-border-radius-04);--appr-size-icon-lg:var(--base-size-28);--appr-size-icon-md:var(--base-size-24);--appr-size-icon-sm:var(--base-size-20);--appr-size-icon-xsm:var(--base-size-16);--appr-space-xxxxxlg:var(--base-space-40);--appr-size-button-height-xlg:var(--base-size-56);--appr-size-button-height-lg:var(--base-size-48);--appr-space-xxxxlg:var(--base-space-32);--appr-size-button-height-md:var(--base-size-40);--appr-size-button-height-sm:var(--base-size-32);--appr-size-button-height-xsm:var(--base-size-28);--appr-space-xxxlg:var(--base-space-28);--appr-space-xxlg:var(--base-space-24);--appr-space-xlg:var(--base-space-20);--appr-space-lg:var(--base-space-16);--appr-space-md:var(--base-space-12);--appr-space-sm:var(--base-space-08);--appr-space-xsm:var(--base-space-04);--appr-space-xxsm:var(--base-space-02);--appr-size-icon-button-height-xlg:var(--base-size-56);--appr-size-icon-button-height-lg:var(--base-size-48);--appr-size-icon-button-height-md:var(--base-size-40);--appr-size-icon-button-height-sm:var(--base-size-32);--appr-size-icon-button-height-xsm:var(--base-size-28);--appr-size-image-description-max-width:906px;--appr-size-tab-height:var(--base-size-36);--appr-size-dropdown-height:var(--base-size-48);--appr-size-label-height-lg:var(--base-size-32);--appr-size-image-description-min-width:666px;--appr-size-label-height-sm:var(--base-size-24);--appr-font-size-ui-lg:var(--base-font-size-18);--appr-font-size-ui-md:var(--base-font-size-16);--appr-font-size-ui-sm:var(--base-font-size-14);--appr-font-size-ui-xsm:var(--base-font-size-12);--appr-font-size-ui-emphasis-lg:var(--base-font-size-16);--appr-font-size-ui-emphasis-md:var(--base-font-size-14);--appr-font-size-ui-emphasis-sm:var(--base-font-size-12);--appr-font-size-body-lg:var(--base-font-size-18);--appr-font-size-body-md:var(--base-font-size-16);--appr-border-radius-sm:var(--base-border-radius-02);--appr-font-line-height-body-sm:var(--base-font-line-height-20);--appr-font-line-height-body-xsm:var(--base-font-line-height-16);--appr-border-radius-circle:var(--base-border-radius-circle);--appr-font-size-body-sm:var(--base-font-size-14);--appr-font-size-body-xsm:var(--base-font-size-12);--appr-size-icon-button-width-xlg:var(--base-size-56);--appr-size-icon-button-width-lg:var(--base-size-48);--appr-size-icon-button-width-md:var(--base-size-40);--appr-size-icon-button-width-sm:var(--base-size-32);--appr-size-icon-button-width-xsm:var(--base-size-28);--appr-size-image-max-width:906px;--appr-size-image-min-width:666px;--appr-size-video-player-playhead:var(--base-size-40);--appr-size-dropdown-menu-row-height:var(--base-size-48);--appr-scale-global-page-max-width:1279px;--appr-scale-global-page-min-width:960px;--appr-scale-global-leaf-article-max-width:803px;--appr-scale-global-leaf-article-min-width:589px;--appr-scale-gallery-max-width:var(--appr-scale-global-leaf-article-max-width);--appr-scale-gallery-min-width:var(--appr-scale-global-leaf-article-min-width);--appr-scale-gallery-gap:var(--base-space-08);--appr-scale-gallery-metadata_group-credit-padding-right:var(--base-space-none);--appr-scale-gallery-metadata_group-caption-padding-right:var(--base-space-40);--appr-scale-gallery-image_preview_group-max-width:541px;--appr-scale-gallery-image_preview_group-min-width:512px;--appr-scale-gallery-metadata_group-gap:var(--base-space-16);--appr-scale-gallery-button_group-gap:var(--base-space-08);--appr-scale-gallery-button_group-show_buttons?:true;--appr-scale-gallery-metadata_group-text_-_btn_container-gap:var(--base-space-08);--appr-space-quote-padding-left-lg:var(--appr-space-xxxxlg)}}@media (min-width:480px) and (max-width:959px){:root{--appr-font-letter-spacing-label-emphasis-lg:1px;--appr-font-letter-spacing-label-emphasis-md:1px;--appr-font-letter-spacing-label-emphasis-sm:1px;--breakpoint:480px;--appr-font-size-header-xxlg:var(--base-font-size-36);--appr-font-size-header-xlg:var(--base-font-size-24);--appr-font-size-header-lg:var(--base-font-size-20);--appr-font-size-header-md:var(--base-font-size-18);--appr-font-size-header-sm:var(--base-font-size-16);--appr-font-size-header-xsm:var(--base-font-size-14);--appr-font-size-header-xxsm:var(--base-font-size-12);--appr-font-line-height-header-xxlg:var(--base-font-line-height-40);--appr-font-line-height-header-xlg:var(--base-font-line-height-30);--appr-font-line-height-ui-lg:var(--base-font-line-height-30);--appr-font-line-height-ui-md:var(--base-font-line-height-26);--appr-font-line-height-ui-sm:var(--base-font-line-height-20);--appr-font-line-height-ui-xsm:var(--base-font-line-height-16);--appr-font-line-height-ui-emphasis-lg:var(--base-font-line-height-20);--appr-font-line-height-ui-emphasis-md:var(--base-font-line-height-18);--appr-font-line-height-ui-emphasis-sm:var(--base-font-line-height-16);--appr-font-line-height-header-lg:var(--base-font-line-height-26);--appr-font-line-height-header-md:var(--base-font-line-height-24);--appr-font-line-height-header-sm:var(--base-font-line-height-22);--appr-font-line-height-header-xsm:var(--base-font-line-height-20);--appr-font-line-height-header-xxsm:var(--base-font-line-height-18);--appr-font-line-height-body-lg:var(--base-font-line-height-32);--appr-border-width-xlg:var(--base-size-08);--appr-font-line-height-body-md:var(--base-font-line-height-26);--appr-border-width-lg:var(--base-size-04);--appr-border-width-md:var(--base-size-02);--appr-border-width-sm:var(--base-size-01);--appr-border-width-action-md-focused:var(--appr-border-width-lg);--appr-border-width-action-sm-focused:var(--appr-border-width-md);--appr-border-width-quote-lg:var(--base-size-04);--appr-border-radius-lg:var(--base-border-radius-08);--appr-space-xxxxxxlg:var(--base-space-48);--appr-border-radius-md:var(--base-border-radius-04);--appr-size-icon-lg:var(--base-size-28);--appr-size-icon-md:var(--base-size-24);--appr-size-icon-sm:var(--base-size-20);--appr-size-icon-xsm:var(--base-size-16);--appr-space-xxxxxlg:var(--base-space-40);--appr-size-button-height-xlg:var(--base-size-56);--appr-size-button-height-lg:var(--base-size-48);--appr-space-xxxxlg:var(--base-space-32);--appr-size-button-height-md:var(--base-size-40);--appr-size-button-height-sm:var(--base-size-32);--appr-size-button-height-xsm:var(--base-size-28);--appr-space-xxxlg:var(--base-space-28);--appr-space-xxlg:var(--base-space-24);--appr-space-xlg:var(--base-space-20);--appr-space-lg:var(--base-space-16);--appr-space-md:var(--base-space-12);--appr-space-sm:var(--base-space-08);--appr-space-xsm:var(--base-space-04);--appr-space-xxsm:var(--base-space-02);--appr-size-icon-button-height-xlg:var(--base-size-56);--appr-size-icon-button-height-lg:var(--base-size-48);--appr-size-icon-button-height-md:var(--base-size-40);--appr-size-icon-button-height-sm:var(--base-size-32);--appr-size-icon-button-height-xsm:var(--base-size-28);--appr-size-image-description-max-width:927px;--appr-size-tab-height:var(--base-size-36);--appr-size-dropdown-height:var(--base-size-48);--appr-size-label-height-lg:var(--base-size-32);--appr-size-image-description-min-width:448px;--appr-size-label-height-sm:var(--base-size-24);--appr-font-size-ui-lg:var(--base-font-size-18);--appr-font-size-ui-md:var(--base-font-size-16);--appr-font-size-ui-sm:var(--base-font-size-14);--appr-font-size-ui-xsm:var(--base-font-size-12);--appr-font-size-ui-emphasis-lg:var(--base-font-size-16);--appr-font-size-ui-emphasis-md:var(--base-font-size-14);--appr-font-size-ui-emphasis-sm:var(--base-font-size-12);--appr-font-size-body-lg:var(--base-font-size-18);--appr-font-size-body-md:var(--base-font-size-16);--appr-border-radius-sm:var(--base-border-radius-02);--appr-font-line-height-body-sm:var(--base-font-line-height-20);--appr-font-line-height-body-xsm:var(--base-font-line-height-16);--appr-border-radius-circle:var(--base-border-radius-circle);--appr-font-size-body-sm:var(--base-font-size-14);--appr-font-size-body-xsm:var(--base-font-size-12);--appr-size-icon-button-width-xlg:var(--base-size-56);--appr-size-icon-button-width-lg:var(--base-size-48);--appr-size-icon-button-width-md:var(--base-size-40);--appr-size-icon-button-width-sm:var(--base-size-32);--appr-size-icon-button-width-xsm:var(--base-size-28);--appr-size-image-max-width:927px;--appr-size-image-min-width:448px;--appr-size-video-player-playhead:var(--base-size-32);--appr-size-dropdown-menu-row-height:var(--base-size-48);--appr-scale-global-page-max-width:959px;--appr-scale-global-page-min-width:480px;--appr-scale-global-leaf-article-max-width:927px;--appr-scale-global-leaf-article-min-width:448px;--appr-scale-gallery-max-width:var(--appr-scale-global-leaf-article-max-width);--appr-scale-gallery-min-width:var(--appr-scale-global-leaf-article-min-width);--appr-scale-gallery-gap:var(--base-space-08);--appr-scale-gallery-metadata_group-credit-padding-right:var(--base-space-none);--appr-scale-gallery-metadata_group-caption-padding-right:var(--base-space-none);--appr-scale-gallery-image_preview_group-max-width:959px;--appr-scale-gallery-image_preview_group-min-width:448px;--appr-scale-gallery-metadata_group-gap:var(--base-space-16);--appr-scale-gallery-button_group-gap:var(--base-space-08);--appr-scale-gallery-button_group-show_buttons?:true;--appr-scale-gallery-metadata_group-text_-_btn_container-gap:var(--base-space-08);--appr-space-quote-padding-left-lg:var(--appr-space-xxlg)}}@media (max-width:479px){:root{--appr-font-letter-spacing-label-emphasis-lg:1px;--appr-font-letter-spacing-label-emphasis-md:1px;--appr-font-letter-spacing-label-emphasis-sm:1px;--breakpoint:300px;--appr-font-size-header-xxlg:var(--base-font-size-24);--appr-font-size-header-xlg:var(--base-font-size-20);--appr-font-size-header-lg:var(--base-font-size-18);--appr-font-size-header-md:var(--base-font-size-16);--appr-font-size-header-sm:var(--base-font-size-14);--appr-font-size-header-xsm:var(--base-font-size-12);--appr-font-size-header-xxsm:var(--base-font-size-12);--appr-font-line-height-header-xxlg:var(--base-font-line-height-30);--appr-font-line-height-header-xlg:var(--base-font-line-height-26);--appr-font-line-height-ui-lg:var(--base-font-line-height-30);--appr-font-line-height-ui-md:var(--base-font-line-height-26);--appr-font-line-height-ui-sm:var(--base-font-line-height-20);--appr-font-line-height-ui-xsm:var(--base-font-line-height-16);--appr-font-line-height-ui-emphasis-lg:var(--base-font-line-height-20);--appr-font-line-height-ui-emphasis-md:var(--base-font-line-height-18);--appr-font-line-height-ui-emphasis-sm:var(--base-font-line-height-16);--appr-font-line-height-header-lg:var(--base-font-line-height-24);--appr-font-line-height-header-md:var(--base-font-line-height-22);--appr-font-line-height-header-sm:var(--base-font-line-height-20);--appr-font-line-height-header-xsm:var(--base-font-line-height-18);--appr-font-line-height-header-xxsm:var(--base-font-line-height-18);--appr-font-line-height-body-lg:var(--base-font-line-height-32);--appr-border-width-xlg:var(--base-size-08);--appr-font-line-height-body-md:var(--base-font-line-height-26);--appr-border-width-lg:var(--base-size-04);--appr-border-width-md:var(--base-size-02);--appr-border-width-sm:var(--base-size-01);--appr-border-width-action-md-focused:var(--appr-border-width-lg);--appr-border-width-action-sm-focused:var(--appr-border-width-md);--appr-border-width-quote-lg:var(--base-size-04);--appr-border-radius-lg:var(--base-border-radius-08);--appr-space-xxxxxxlg:var(--base-space-48);--appr-border-radius-md:var(--base-border-radius-04);--appr-size-icon-lg:var(--base-size-28);--appr-size-icon-md:var(--base-size-24);--appr-size-icon-sm:var(--base-size-20);--appr-size-icon-xsm:var(--base-size-16);--appr-space-xxxxxlg:var(--base-space-40);--appr-size-button-height-xlg:var(--base-size-56);--appr-size-button-height-lg:var(--base-size-48);--appr-space-xxxxlg:var(--base-space-32);--appr-size-button-height-md:var(--base-size-40);--appr-size-button-height-sm:var(--base-size-32);--appr-size-button-height-xsm:var(--base-size-28);--appr-space-xxxlg:var(--base-space-28);--appr-space-xxlg:var(--base-space-24);--appr-space-xlg:var(--base-space-20);--appr-space-lg:var(--base-space-16);--appr-space-md:var(--base-space-12);--appr-space-sm:var(--base-space-08);--appr-space-xsm:var(--base-space-04);--appr-space-xxsm:var(--base-space-02);--appr-size-icon-button-height-xlg:var(--base-size-56);--appr-size-icon-button-height-lg:var(--base-size-48);--appr-size-icon-button-height-md:var(--base-size-40);--appr-size-icon-button-height-sm:var(--base-size-32);--appr-size-icon-button-height-xsm:var(--base-size-28);--appr-size-image-description-max-width:447px;--appr-size-tab-height:var(--base-size-36);--appr-size-dropdown-height:var(--base-size-48);--appr-size-label-height-lg:var(--base-size-32);--appr-size-image-description-min-width:268px;--appr-size-label-height-sm:var(--base-size-24);--appr-font-size-ui-lg:var(--base-font-size-18);--appr-font-size-ui-md:var(--base-font-size-16);--appr-font-size-ui-sm:var(--base-font-size-14);--appr-font-size-ui-xsm:var(--base-font-size-12);--appr-font-size-ui-emphasis-lg:var(--base-font-size-16);--appr-font-size-ui-emphasis-md:var(--base-font-size-14);--appr-font-size-ui-emphasis-sm:var(--base-font-size-12);--appr-font-size-body-lg:var(--base-font-size-18);--appr-font-size-body-md:var(--base-font-size-16);--appr-border-radius-sm:var(--base-border-radius-02);--appr-font-line-height-body-sm:var(--base-font-line-height-20);--appr-font-line-height-body-xsm:var(--base-font-line-height-16);--appr-border-radius-circle:var(--base-border-radius-circle);--appr-font-size-body-sm:var(--base-font-size-14);--appr-font-size-body-xsm:var(--base-font-size-12);--appr-size-icon-button-width-xlg:var(--base-size-56);--appr-size-icon-button-width-lg:var(--base-size-48);--appr-size-icon-button-width-md:var(--base-size-40);--appr-size-icon-button-width-sm:var(--base-size-32);--appr-size-icon-button-width-xsm:var(--base-size-28);--appr-size-image-max-width:447px;--appr-size-image-min-width:268px;--appr-size-video-player-playhead:var(--base-size-24);--appr-size-dropdown-menu-row-height:var(--base-size-48);--appr-scale-global-page-max-width:479px;--appr-scale-global-page-min-width:300px;--appr-scale-global-leaf-article-max-width:447px;--appr-scale-global-leaf-article-min-width:268px;--appr-scale-gallery-max-width:var(--appr-scale-global-leaf-article-max-width);--appr-scale-gallery-min-width:var(--appr-scale-global-leaf-article-min-width);--appr-scale-gallery-gap:var(--base-space-08);--appr-scale-gallery-metadata_group-credit-padding-right:var(--base-space-none);--appr-scale-gallery-metadata_group-caption-padding-right:var(--base-space-none);--appr-scale-gallery-image_preview_group-max-width:338px;--appr-scale-gallery-image_preview_group-min-width:268px;--appr-scale-gallery-metadata_group-gap:var(--base-space-16);--appr-scale-gallery-button_group-gap:var(--base-space-08);--appr-scale-gallery-button_group-show_buttons?:true;--appr-scale-gallery-metadata_group-text_-_btn_container-gap:var(--base-space-08);--appr-space-quote-padding-left-lg:var(--appr-space-xxlg)}}body{font-family:cnn_sans_display,helveticaneue,Helvetica,Arial,Utkal,sans-serif}@media (min-width:480px){:root{--theme-section-headline-text__margin-bottom:20px;--theme-container__margin-bottom-grid-3:32px;--theme-container__margin-bottom-feature-grid-3:0}}@media (max-width:959px){:root{--social-sharing-display:none}}h1,h2,h3,h4,h5{font-family:cnntravel,Palatino,Georgia,Times New Roman,serif;font-weight:400}@media (min-width:960px){:root{--theme-section-headline__margin-bottom:16px;--theme-subheader-h2__font-size:30px;--theme-subheader-h3__font-size:24px;--theme-subheader-h4__font-size:20px;--theme-subheader-h2__line-height:36px;--theme-subheader-h3__line-height:30px;--theme-subheader-h4__line-height:26px;--theme-container-margin-bottom-600:0;--theme-container__margin-bottom-feature-grid-3:0;--theme-headline__font-size:44px;--theme-headline__line-height:48px;--theme-section-headline__font-size:44px;--theme-section-headline__line-height:48px}}@media (min-width:1280px){:root{--theme-section-headline-text__margin-bottom:22px;--theme-hero-headline__font-size:44px;--theme-hero-headline__line-height:48px}} window.env={\"AD_SLOT_CLIENT_INJECTOR_REGISTRY\":\"https://cdn.cnn.com/ads/cnn/cnn_quantum_leaf.json\",\"AD_SLOT_CLIENT_INJECTOR_REGISTRY_EDITION\":\"https://cdn.cnn.com/ads/cnni/cnni_quantum_leaf.json\",\"AD_SLOT_CLIENT_INJECTOR_LIVE_STORY_REGISTRY\":\"https://i.cdn.turner.com/ads/cnn_2/cnn_livestory_leaf.json\",\"AD_SLOT_CLIENT_INJECTOR_LIVE_STORY_REGISTRY_EDITION\":\"https://i.cdn.turner.com/ads/cnni_2/cnni_livestory_leaf.json\",\"ADFUEL_BUSINESS_SRC\":[\"/media/sites/js/bundles/business-adfuel-38c3a51cb1880858b1308ec1a14d8de5c696b1b35fe7d6abb0a383df00dd8547.min.js\",\"/media/sites/js/bundles/business-adfuel-body-91c313323a672473cdfbcb00f55af4039da029b40bc3a12d45d05a8c29dc29c3.min.js\",\"/media/sites/js/bundles/business-adfuel-lite-b4cfab886b3b7451976d6bde345569312ea77e771af75f616022333ddf700cff.min.js\"],\"ADFUEL_BUSINESS_EDITION_SRC\":[\"/media/sites/js/bundles/business-edition-adfuel-0b7addfe5972af083cc854d53286920d9ab4ac90d2916a8efedac8de79d491b2.min.js\",\"/media/sites/js/bundles/business-edition-adfuel-body-28aede2ce001b8f0b44489ae0fcfab51f9ee829d2fd94312de6005dde936311f.min.js\",\"/media/sites/js/bundles/business-edition-adfuel-lite-3bb657d113040bd3efa9e47b84e0086cc2ab7d270b1f5c481612d144e3ee9193.min.js\"],\"ADFUEL_CNN_SRC\":[\"/media/sites/js/bundles/cnn-adfuel-72c4d6ac8cba76b42d66c53fdf9da961e808ba194d54e14cb089d0db020f59d1.min.js\",\"/media/sites/js/bundles/cnn-adfuel-body-33700b31f265ed582725d697cc87c4c02f7bcc2fe37e27f29faac3ee296d8b95.min.js\",\"/media/sites/js/bundles/cnn-adfuel-lite-13eace68da8e6b4244fdf3dfbdf64e3c7bf01cdfd42c00f436454e01819117f9.min.js\"],\"ADFUEL_CNN_EDITION_SRC\":[\"/media/sites/js/bundles/cnn-edition-adfuel-b3a035158b6e369456f2e1a3ed7d6c934ef4f54ebcfe5a4c8b0100dfe6b53337.min.js\",\"/media/sites/js/bundles/cnn-edition-adfuel-body-d41ccb193ab9d4fe8c814d7dc94a7d3416edb9647584caf9600f9864d4286006.min.js\",\"/media/sites/js/bundles/cnn-edition-adfuel-lite-3fdbc6999e6016dac8723e6e433591672f4fc0104f206826e62310d158a510ad.min.js\"],\"ADFUEL_ESPANOL_SRC\":[\"/media/sites/js/bundles/espanol-adfuel-848385c6a2b7d4bd6a04127e2f6f9a9de65b8573cde2e78abf8413f8ca7d8c32.min.js\",\"/media/sites/js/bundles/espanol-adfuel-9751563d0fbf7584761794d4d756bedae22d035b3050a5586fdc697d3bf07cfb.min.js\",\"/media/sites/js/bundles/espanol-adfuel-body-6b8adf5401ab514b72f7d764828c4cc6611edd5cc3d6a57b5a590ed852911327.min.js\",\"/media/sites/js/bundles/espanol-adfuel-body-d50390c69936d46c17b43900b4a3504debb4589cea41c903b2dea97ca9b05160.min.js\",\"/media/sites/js/bundles/espanol-adfuel-lite-5f3a2d2f41c1272500c3929c97ebc34516cabeaa708e18fd6b8d5f27531bb1b8.min.js\",\"/media/sites/js/bundles/espanol-adfuel-lite-f1aff7e64d790b76b83638eb0001e095839fd1250478d4dd6d3090bccffd4525.min.js\"],\"ADOBE_LAUNCH_SRC\":\"https://lightning.cnn.com/launch/7be62238e4c3/97fa00444124/launch-2878c87af5e3.min.js\",\"ADOBE_LAUNCH_BUSINESS_ENABLED_SECTIONS\":[\"business\",\"markets\"],\"ADVANCED_VIDEO_ENABLED\":true,\"AIRSHIP_APP_KEY\":\"3wrwsS87S6OIW06Lq4MVIQ\",\"AIRSHIP_ENABLED\":false,\"AIRSHIP_SRC\":\"https://aswpsdkus.com/notify/v1/ua-sdk.min.js\",\"AIRSHIP_TOKEN\":\"MTozd3J3c1M4N1M2T0lXMDZMcTRNVklROmRSb3lkd0lHZ0NHanFMeElRYVpjaGNQQVBrd2k5NGRKa1NobWR2SjBIUjg\",\"AIRSHIP_VAPID_PUBLIC_KEY\":\"BHJLBg0NxOGDHKXf0Bepz55qLpKT674Z6XiGZxVbW0p67B6cpiBzvOo2vSWTtnEGHjmILIuDmWkldwLOv4bwwz8=\",\"AIRSHIP_WEB_SITE_PUSH_ID\":\"web.com.cnn.redalert\",\"AIRSHIP_WORKER\":\"/service-worker.js\",\"AIRSHIP_CORE_ENABLED\":true,\"APPLE_NEWS_MANAGER_ENABLED\":true,\"ALERTS_HUB_ENABLED\":{\"cnn\":true,\"es\":false,\"ar\":false},\"ALERTS_HUB_BASIC_REPORTING_ENABLED\":true,\"ALERTS_HUB_AMPLIFY_ENABLED\":false,\"ALERT_BANNER_ENABLED\":{\"cnn\":false,\"es\":true,\"ar\":false},\"APPLE_NEWS_LOGO_NAME_TRAVEL\":\"https://media.cnn.com/api/v1/images/cnn/apple-news/cnn-travel-light.png\",\"APPLE_NEWS_LOGO_NAME_STYLE\":\"https://media.cnn.com/api/v1/images/stellar/prod/cnn-style-light.png\",\"APPLE_NEWS_LOGO_NAME_QUOTE\":\"https://media.cnn.com/api/v1/images/cnn/apple-news/quote-light.png\",\"ARKOSE_LOGIN_KEY\":\"A81F9530-112A-47B2-BA4B-8CB41D7C6DD6\",\"ARKOSE_LOGIN_SRC\":\"https://wbd-api.arkoselabs.com/v2/A81F9530-112A-47B2-BA4B-8CB41D7C6DD6/api.js\",\"ARKOSE_NEWSLETTERS_KEY\":\"12FB7448-F055-4621-BC01-1DDF7CB3945A\",\"ARKOSE_NEWSLETTERS_SRC\":\"https://wbd-api.arkoselabs.com/v2/12FB7448-F055-4621-BC01-1DDF7CB3945A/api.js\",\"ARKOSE_REGISTRATION_KEY\":\"95218C8B-B84E-413C-B875-785B35F92134\",\"ARKOSE_REGISTRATION_SRC\":\"https://wbd-api.arkoselabs.com/v2/95218C8B-B84E-413C-B875-785B35F92134/api.js\",\"AUTO_REFRESH_INTERVAL\":\"20\",\"BREAKING_NEWS_BANNER_CMS_ENABLED\":true,\"NATIVO_SRC\":\"https://s.ntv.io/serve/load.js\",\"CHARTBEAT_SRC\":\"https://static.chartbeat.com/js/chartbeat_mab.js\",\"CLAY_SITE_HOSTS_MAP\":{\"cnn\":\"cms.cnn.com\",\"es\":\"es.cms.cnn.com\"},\"RENDER_SITE_HOSTS_MAP\":{\"render00.prod.clay.cnn.io\":\"cms.cnn.com\",\"render00-es.prod.clay.cnn.io\":\"es.cms.cnn.com\"},\"CMS_EVENT_BUS_BATCH_SIZE\":\"10\",\"CNN_DATAVIZ_API\":\"https://production.dataviz.cnn.io\",\"CNN_DIGITAL_PROFILE_PUBLICIST\":\"Emily Kuhn\",\"COLLABORATION_PORT\":\"4001\",\"COLLABORATION_SITE_HOSTS_MAP\":{\"cms.cnn.com\":\"collaboration-prod-rn0925a8-cnn.content-hub.cnn-cms.com\",\"es.cms.cnn.com\":\"collaboration-prod-rn0925a8-es.content-hub.cnn-cms.com\"},\"COLLABORATION_EXCLUDED_TYPES\":[\"audio\",\"custom\",\"feed\",\"interactive\",\"livestory\",\"profile\",\"scratchpad\",\"search\",\"static\",\"unknown\",\"user_management\"],\"ENABLE_REALTIME_COLLABORATION_SERVICE\":true,\"CONTENT_HUB_APP_VERSION\":\"v5.13.0\",\"CONTENT_HUB_ENV\":\"prod\",\"CONTENT_HUB_PROJECT_NAME\":\"content-hub\",\"CONTENT_HUB_UNIQUE_DEPLOYMENT_KEY\":\"rn0925a8\",\"ENABLE_CONTENT_RECS\":true,\"CONTENT_RECS_API\":\"https://prod.di.api.cnn.io/recommendations\",\"CONTENT_RECS_RELATED_TENANT_ID\":\"read-next-from-article.mobileweb\",\"CONTENT_RECS_YOUR_TENANT_ID\":\"your-cnn.web\",\"CONTENT_RECS_POPULAR_TENANT_ID\":\"popular.content-recs\",\"CONVIVA_CUSTOMER_KEY\":\"a6709203f34992a5095d2bc7ceaf2ec504f651a8\",\"DALTON_ENV\":\"production\",\"DALTON_COOKIE_VERSION\":\"v1.1\",\"DAM_API_HOST\":\"https://dam2.cms.cnn.com\",\"DAM_ACCESS_KEY\":\"b28f4002267c430b85918a3fdf75c0ea\",\"DAM_DEFAULT_PATH\":\"/stellar/prod\",\"DAM_SERVING_HOST\":\"https://media.cnn.com\",\"DALTON_API_HOST\":\"https://audience.cnn.com\",\"DALTON_TKN_HEADER_CHECK_ENABLED\":true,\"DALTON_SHARED_DATA_ENABLED\":true,\"DISTROSCALE_SRC\":\"https://a.jsrdn.com/creatives/23053/cw.js\",\"EDIT_MODE_DATADOG_CLIENT_TOKEN\":\"pub64c258ed09bbe1a3712a8692522a5fbf\",\"DEDUPLICATION_ENABLED\":false,\"DIANOMI_SCRIPT_SRC\":\"https://www.dianomi.com/js/contextfeed.js\",\"DISPLAY_WORDCOUNT_ON_CARDS\":true,\"DISPLAY_VIDEO_DURATION_ON_CARDS\":true,\"ELECTION_MAP_PROOF_OF_CONCEPT_COMPONENT_ENABLED\":false,\"ENABLE_AD_LAZY_LOADING\":true,\"ENABLE_AD_FEEDBACK_DISPLAY_ADS\":true,\"ENABLE_AD_FEEDBACK_VIDEO_ADS\":true,\"ADFUEL_CONFIGS\":{\"domestic\":{\"ADFUEL\":{\"AUTO_DISPATCH\":true,\"DEFAULT_TIMEOUT\":800,\"DEFAULT_DESKTOP_TIMEOUT\":800,\"DEFAULT_MOBILE_TIMEOUT\":800,\"IFRAME_TITLE\":\"advertisement\",\"NETWORK_ID\":\"8663477\",\"REFRESH_ON_FOCUS_ONLY\":false,\"LAZY_LOAD_FETCH_PERCENT\":500,\"LAZY_LOAD_RENDER_PERCENT\":200,\"LAZY_LOAD_MOBILE_SCALING\":2,\"COLLAPSE_EMPTY_DIVS\":true,\"DEBUG\":false,\"SITE_OBJECT\":\"CNN\",\"ACTIVE_MODULES\":[]},\"A9\":{\"SLOTNAMES\":{\"PREPEND_ADUNIT\":false,\"MIDROLL\":\"aps-midroll\",\"PREROLL\":\"aps-preroll\"},\"TIMEOUTS\":{\"MOBILE\":{\"VIDEO\":{\"MIDROLL\":750,\"REFRESH\":750,\"INITIAL\":500},\"DISPLAY\":{\"REFRESH\":750,\"INITIAL\":750}},\"DESKTOP\":{\"VIDEO\":{\"MIDROLL\":750,\"REFRESH\":750,\"INITIAL\":500},\"DISPLAY\":{\"REFRESH\":1150,\"INITIAL\":1150}}},\"DEBUG\":false,\"ACCOUNT_IDS\":{\"INTL\":\"3288\",\"DOM\":\"3159\"}},\"AUI\":{\"SITE_VENDORS\":{\"DOM\":[\"AppNexus\",\"Freewheel\",\"LiveRamp\",\"PubMatic\",\"Rubicon\",\"Telaria\"],\"INTL\":[\"AppNexus\",\"Freewheel\",\"LiveRamp\",\"PubMatic\",\"Rubicon\",\"Telaria\"]},\"VENDORS\":{\"AppNexus\":{\"COOKIE_NAME\":\"zwmc\",\"URL\":\"https://ib.adnxs.com/getuid?https://umto.{{domain}}/user-sync?zwmc=$UID&domain={{domain}}\"},\"Freewheel\":{\"COOKIE_NAME\":\"bea4\",\"URL\":\"https://bea4.v.fwmrm.net/ad/u?mode=echo&cr=https://umto.{{domain}}/user-sync?bea4=#{user.id}&domain={{domain}}\"},\"LiveRamp\":{\"COOKIE_NAME\":\"orev\",\"URL\":\"https://idsync.rlcdn.com/712348.gif?partner_uid=${fwuid}\"},\"ID5\":{\"COOKIE_NAME\":\"\",\"URL\":\"\"},\"PubMatic\":{\"COOKIE_NAME\":\"kfyn\",\"URL\":\"https://ads.pubmatic.com/AdServer/js/userSync.js\"},\"Rubicon\":{\"COOKIE_NAME\":\"ifyr\",\"URL\":\"https://pixel-us-east.rubiconproject.com/exchange/sync.php?p={{brand}}\"},\"SpotX\":{\"COOKIE_NAME\":\"hkgc\",\"URL\":\"https://sync.search.spotxchange.com/audience_id\"},\"Telaria\":{\"COOKIE_NAME\":\"goiz\",\"URL\":\"https://eq97f.publishers.tremorhub.com/pubsync?redir=https://umto.{{domain}}/user-sync?goiz=%5Btvid%5D&domain={{domain}}\"}}},\"BEEMRAY\":{\"DEBUG\":false,\"CUSTOMER_ID\":\"cnn\",\"API_KEY\":\"39a34d8d-dd1d-4fbf-aa96-fdc5f0329451\"},\"BLOCKTHROUGH\":{\"DEBUG\":false},\"CEP\":{\"DEBUG\":false},\"CONSOLE_TOOL\":{\"DEBUG\":false,\"HOTKEY\":[\"Control\",\"Shift\",\"Z\"]},\"CREATIVE_REVIEW\":{\"DEBUG\":false,\"HOTKEY\":\"^ d o h $\"},\"CRITEO\":{\"DEBUG\":false,\"DESKTOP_TIMEOUT\":750,\"DESKTOP_ZONES\":{},\"MOBILE_TIMEOUT\":750,\"MOBILE_ZONES\":{},\"MULTISIZE_FIRST\":\"F\",\"MULTISIZE_LARGEST\":\"L\",\"MULTISIZE_ALL\":\"A\",\"MULTISIZE_METHOD\":\"L\",\"TIMEOUT\":750},\"FASTLANE\":{\"DEBUG\":false,\"DESKTOP_TIMEOUT\":750,\"DOM_ACCOUNT_ID\":11078,\"INTL_ACCOUNT_ID\":11016,\"MOBILE_TIMEOUT\":750,\"TIMEOUT\":750},\"GUID\":{\"DEBUG\":false},\"IAS\":{\"ACCOUNT_IDS\":{\"DOM\":925660,\"INTL\":925660},\"DEBUG\":false},\"IX\":{\"DEBUG\":false,\"SCRIPT_KEY\":{\"DOM\":null,\"INTL\":null},\"IDENTITY\":\"\"},\"IVR\":{\"DEFAULT_DISPLAY_PERCENT\":50,\"DEFAULT_DISPLAY_MILLISECONDS\":35000,\"DEBUG\":false},\"KRUX\":{\"DEBUG\":false,\"DOM_CONTROLTAG\":\"ITb_4eqO\",\"INTL_CONTROLTAG\":\"teff71jyu\"},\"MALVERTISING\":{\"DEBUG\":false,\"SITE_VENDOR\":\"CleanIO\",\"SCRIPT_SRC\":\"//cadmus.script.ac/d2uap9jskdzp2/script.js\"},\"PREBID\":{\"SEND_ALL_BIDS\":{\"INTL\":true,\"DOM\":true},\"VENDOR\":{\"IX\":{\"IDENTITY\":\"\",\"SITE_ID\":{\"DOM\":{\"DESKTOP\":{\"atf\":{\"728x90\":\"423255\",\"970x250\":\"423255\",\"970x90\":\"423255\",\"300x600\":\"423257\",\"300x250\":\"423257\"},\"btf\":{\"300x600\":\"423258\",\"300x250\":\"423258\",\"728x90\":\"423256\",\"970x250\":\"423256\",\"970x90\":\"423256\"}},\"MOBILE\":{\"atf\":{\"320x50\":\"423259\",\"300x250\":\"423261\"},\"btf\":{\"300x250\":\"423260\",\"320x50\":\"423262\"}},\"VIDEO\":0,\"OUTSTREAM\":{\"DESKTOP\":0,\"MOBILE\":0}},\"INTL\":{\"DESKTOP\":{\"atf\":{\"728x90\":\"341959\",\"970x250\":\"341960\",\"970x90\":\"341961\",\"300x600\":\"341962\",\"300x250\":\"341963\"},\"btf\":{\"300x600\":\"341965\",\"300x250\":\"341966\",\"728x90\":\"341967\",\"970x250\":\"341968\",\"970x90\":\"341969\"}},\"MOBILE\":{\"atf\":{\"320x50\":\"341964\",\"300x250\":\"341970\"},\"btf\":{\"320x50\":\"341957\",\"300x250\":\"341971\"}},\"VIDEO\":0,\"OUTSTREAM\":{\"DESKTOP\":0,\"MOBILE\":0}}},\"OUTSTREAM\":{\"SITE_ID\":{\"DOM\":{\"DESKTOP\":0,\"MOBILE\":0},\"INTL\":{\"DESKTOP\":0,\"MOBILE\":0}}},\"VIDEO\":{\"WIDTH\":640,\"HEIGHT\":480,\"MIMES\":[\"video/mp4\"],\"PROTOCOLS\":[2,3,5,6],\"SITE_ID\":{\"DOM\":{\"DESKTOP\":\"829396\",\"MOBILE\":\"829397\"},\"INTL\":{\"DESKTOP\":\"829396\",\"MOBILE\":\"829397\"}},\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":15,\"INTL\":15}}}}},\"RUBICON\":{\"ACCOUNT_ID\":{\"DOM\":\"11078\",\"INTL\":\"11016\"},\"SITE_ID\":{\"DOM\":{\"DESKTOP\":\"26792\",\"MOBILE\":\"42244\",\"VIDEO\":{\"DESKTOP\":0,\"MOBILE\":0}},\"INTL\":{\"DESKTOP\":\"78582\",\"MOBILE\":\"78584\",\"VIDEO\":{\"DESKTOP\":\"415330\",\"MOBILE\":\"430362\"}}},\"ZONE_MAPPING\":{\"DOM\":{\"DESKTOP\":{\"HP\":{\"btf\":\"154308\",\"atf\":\"106536\"},\"ROS\":{\"btf\":\"107752\",\"atf\":\"106830\"}},\"MOBILE\":{\"HP\":{\"btf\":\"2801022\",\"atf\":\"2801020\"},\"ROS\":{\"btf\":\"2801026\",\"atf\":\"2801024\"}},\"VIDEO\":{\"DESKTOP\":{\"HP\":{\"atf\":\"2319232\",\"btf\":\"2319232\"},\"ROS\":{\"atf\":\"2319232\",\"btf\":\"2319232\"}},\"MOBILE\":{\"HP\":{\"atf\":\"2419502\",\"btf\":\"2419502\"},\"ROS\":{\"atf\":\"2419502\",\"btf\":\"2419502\"}}}},\"INTL\":{\"DESKTOP\":{\"HP\":{\"btf\":\"650178\",\"atf\":\"650178\"},\"ROS\":{\"btf\":\"369850\",\"atf\":\"369850\"}},\"MOBILE\":{\"HP\":{\"btf\":\"369856\",\"atf\":\"369856\"},\"ROS\":{\"btf\":\"369856\",\"atf\":\"369856\"}},\"VIDEO\":{\"DESKTOP\":{\"HP\":{\"atf\":\"2341606\",\"btf\":\"2341606\"},\"ROS\":{\"atf\":\" 2341606\",\"btf\":\"2341606\"}},\"MOBILE\":{\"HP\":{\"atf\":\"2460344\",\"btf\":\"2460344\"},\"ROS\":{\"atf\":\"2460344\",\"btf\":\"2460344\"}}}}},\"LANGUAGE\":{\"DOM\":\"en\",\"INTL\":\"en\"},\"VIDEO\":{\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":15}}},\"LANGUAGE\":\"en\"}},\"PANGAEA\":{\"ACCOUNT_ID\":{\"INTL\":\"8613\",\"DOM\":0}},\"CRITEO\":{\"ACCOUNT_ID\":{\"INTL\":9264,\"DOM\":\"4157\"}},\"APPNEXUS\":{\"ACCOUNT_ID\":{\"DOM\":\"7745\",\"INTL\":\"8353\"},\"VIDEO_INVCODE\":{\"DOM\":\"cnn_homepage_video1\",\"INTL\":\"cnni_homepage_video1\"},\"PLAYBACK_METHOD\":{\"DOM\":{\"DESKTOP\":\"auto_play_sound_off\",\"MOBILE\":\"click_to_play\"},\"INTL\":{\"DESKTOP\":\"auto_play_sound_off\",\"MOBILE\":\"click_to_play\"}},\"VIDEO\":{\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":15}}}},\"RESERVE\":{\"DOM\":0.9,\"INTL\":0.9},\"SUPPLY_TYPE\":{\"DOM\":{\"WEB\":true,\"MOBILE_WEB\":true},\"INTL\":{\"WEB\":true,\"MOBILE_WEB\":true}},\"CONTEXT\":{\"DOM\":\"instream\",\"INTL\":\"instream\"}},\"TRUSTX\":{\"UID\":{\"DOM\":{\"DESKTOP\":{\"atf\":{\"970x250\":\"15218\",\"970x90\":\"15219\",\"728x90\":\"15220\",\"300x250\":\"15224\",\"300x600\":\"15225\"},\"btf\":{\"970x250\":\"15221\",\"970x90\":\"15222\",\"728x90\":\"15223\",\"300x250\":\"15226\",\"300x600\":\"15227\"}},\"MOBILE\":{\"atf\":{\"320x50\":\"15228\",\"300x250\":\"15229\"},\"btf\":{\"320x50\":\"15230\",\"300x250\":\"15231\"}}},\"INTL\":{\"DESKTOP\":{\"atf\":{},\"btf\":{}},\"MOBILE\":{\"atf\":{},\"btf\":{}}}}},\"PUBMATIC\":{\"PUBLISHER_ID\":{\"DOM\":\"162932\",\"INTL\":\"160262\"},\"MAPPINGS\":{\"DOM\":{\"DESKTOP\":{},\"MOBILE\":{}},\"INTL\":{\"DESKTOP\":{},\"MOBILE\":{}}}},\"SPOTX\":{\"CHANNEL_ID\":{\"DOM\":{\"DESKTOP\":\"\",\"MOBILE\":\"\"},\"INTL\":{\"DESKTOP\":\"325241\",\"MOBILE\":\"328164\"}},\"VIDEO\":{\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":5,\"INTL\":5},\"MAX\":{\"DOM\":15,\"INTL\":15}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}}}}},\"TELARIA\":{\"AD_CODE\":{\"DOM\":\"\",\"INTL\":\"\"},\"SUPPLY_CODE\":{\"DOM\":\"\",\"INTL\":\"\"}},\"TRIPLELIFT\":{\"MAPPINGS\":{\"DOM\":{\"DESKTOP\":{\"HP\":{\"970x250\":\"CNN_leaderboard_Prebid\",\"970x90\":\"CNN_leaderboard_Prebid\",\"728x90\":\"CNN_leaderboard_Prebid\",\"300x600\":\"CNN_300x600_300x250_DeskTab_Prebid\",\"300x250\":\"CNN_Desktop_HPUpper2_InFeed_300x250_Prebid\"},\"ROS\":{\"970x250\":\"CNN_leaderboard_Prebid\",\"970x90\":\"CNN_leaderboard_Prebid\",\"728x90\":\"CNN_leaderboard_Prebid\",\"300x600\":\"CNN_300x600_300x250_DeskTab_Prebid\"}},\"MOBILE\":{\"HP\":{\"300x250\":\"CNN_300x250_Mobile_Prebid\"},\"ROS\":{\"300x250\":\"CNN_300x250_Mobile_Prebid\"}}},\"INTL\":{\"DESKTOP\":{\"HP\":{},\"ROS\":{}},\"MOBILE\":{\"HP\":{},\"ROS\":{}}}}},\"SHARETHROUGH\":{\"UNIT_MAPPING\":{\"DOM\":{\"DESKTOP\":{},\"MOBILE\":{}},\"INTL\":{\"DESKTOP\":{\"300x600\":\"35zgzLEa9bGmYyQoYpG5bFqW\",\"728x90\":\"7H5wtn8ji86Z4Ew4s7pQZQ3s\",\"300x250\":\"mMvTwgZ1k5vgw5dWWg4E9fs3\"},\"MOBILE\":{\"300x250\":\"mMvTwgZ1k5vgw5dWWg4E9fs3\"}}}},\"MEDIANET\":{\"CUSTOMER_ID\":{\"DOM\":\"8CUTGDN33\",\"INTL\":\"\"},\"SLOT_ID\":{\"DOM\":{\"bnr\":{\"atf\":\"102325203\",\"btf\":\"845950312\"},\"rect\":{\"atf\":\"147027733\",\"btf\":\"197708286\"},\"qtm\":\"147027733\"},\"INTL\":{\"bnr\":{\"atf\":\"\",\"btf\":\"\"},\"rect\":{\"atf\":\"\",\"btf\":\"\"},\"qtm\":\"\"}}},\"FLEDGE\":{\"BIDDERS\":[\"openweb\",\"ix\",\"concert\",\"criteo\",\"medianet\",\"pubmatic\",\"rubicon\",\"triplelift\",\"trustx\"]},\"TEADS\":{\"PAGE_ID\":{\"DOM\":0,\"INTL\":0},\"PLACEMENT_ID\":{\"DOM\":0,\"INTL\":0}},\"CONCERT\":{\"PARTNER_ID\":{\"DOM\":\"CNN\",\"INTL\":\" \"}},\"OPENWEB\":{\"ORG\":{\"DOM\":\"pub_mM0DBXIIardI\",\"INTL\":\"\"},\"FLOOR_PRICE\":{\"DOM\":0,\"INTL\":0},\"PLACEMENT_ID\":{\"DOM\":{\"DESKTOP\":{\"atf\":\"sp_4hCVuB3p_Desktop_ATF\",\"btf\":\"sp_4hCVuB3p_Desktop_BTF\"},\"MOBILE\":{\"atf\":\"sp_4hCVuB3p_Mobile_ATF\",\"btf\":\"sp_4hCVuB3p_Mobile_BTF\"}},\"INTL\":{\"DESKTOP\":{\"atf\":\"\",\"btf\":\"\"},\"MOBILE\":{\"atf\":\"\",\"btf\":\"\"}}}}},\"TIMEOUTS\":{\"VIDEO\":{\"REFRESH\":1000,\"MIDROLL\":750,\"DEFAULT\":\"750\"},\"DISPLAY\":{\"MOBILE\":750,\"DESKTOP\":1150}},\"DEBUG\":false,\"APPROVED_BIDDERS\":{\"S2S\":{\"INTL\":[\"pangaea\",\"sharethrough\",\"ix\"],\"DOM\":[\"ix\"]},\"NATIVE\":{\"INTL\":[\"appnexus\",\"pangaea\"],\"DOM\":[\"appnexus\"]},\"CLIENT\":{\"INTL\":[\"appnexus\",\"pangaea\",\"ix\",\"rubicon\",\"sharethrough\",\"criteo\"],\"DOM\":[\"appnexus\",\"rubicon\",\"criteo\",\"ix\",\"trustx\"]}},\"BIDDERS\":{\"S2S\":{\"INTL\":[],\"DOM\":[]},\"NATIVE\":{\"INTL\":[],\"DOM\":[]},\"CLIENT\":{\"INTL\":[\"appnexus\",\"criteo\",\"ix\",\"pubmatic\",\"rubicon\",\"sharethrough\"],\"DOM\":[\"concert\",\"criteo\",\"ix\",\"medianet\",\"openweb\",\"pubmatic\",\"rubicon\",\"triplelift\",\"trustx\"]},\"OUTSTREAM\":{\"DOM\":[],\"INTL\":[]},\"VIDEO\":{\"DOM\":[],\"INTL\":[]}},\"PRICE_BUCKETS\":{\"DOM\":{\"DISPLAY\":[{\"precision\":2,\"min\":0,\"max\":5,\"increment\":0.01},{\"precision\":2,\"min\":5,\"max\":30,\"increment\":0.05},{\"precision\":2,\"min\":30,\"max\":115,\"increment\":1}],\"VIDEO\":[{\"precision\":2,\"min\":1.5,\"max\":30,\"increment\":0.5},{\"precision\":2,\"min\":30,\"max\":115,\"increment\":1}],\"NATIVE\":[{\"precision\":2,\"min\":0,\"max\":5,\"increment\":0.01},{\"precision\":2,\"min\":5,\"max\":30,\"increment\":0.05},{\"precision\":2,\"min\":30,\"max\":115,\"increment\":1}],\"OUTSTREAM\":[{\"precision\":2,\"min\":1,\"max\":50,\"increment\":1}]},\"INTL\":{\"DISPLAY\":[{\"precision\":2,\"min\":0,\"max\":5,\"increment\":0.01},{\"precision\":2,\"min\":5,\"max\":30,\"increment\":0.05},{\"precision\":2,\"min\":30,\"max\":50,\"increment\":1}],\"VIDEO\":[{\"precision\":2,\"min\":1.5,\"max\":30,\"increment\":0.5},{\"precision\":2,\"min\":30,\"max\":50,\"increment\":1}],\"NATIVE\":[{\"precision\":2,\"min\":0,\"max\":5,\"increment\":0.01},{\"precision\":2,\"min\":5,\"max\":30,\"increment\":0.05},{\"precision\":2,\"min\":30,\"max\":50,\"increment\":1}],\"OUTSTREAM\":[{\"precision\":2,\"min\":1,\"max\":50,\"increment\":1}]}},\"LIBRARY\":{\"VENDORS\":[\"criteo\",\"ix\",\"pubmatic\",\"rubicon\",\"triplelift\",\"trustx\",\"sharethrough\",\"medianet\",\"teads\",\"concert\",\"appnexus\"],\"MODULES\":[\"categoryTranslation\",\"consentManagement\",\"prebidServerBidAdapter\",\"adpod\",\"consentManagementUsp\",\"id5IdSystem\",\"identityLinkIdSystem\",\"debugging\",\"categpryTranslation\",\"freewheelAdserverVideo\",\"userId\",\"fledgeForGpt\"]},\"FLOORS\":{\"DISPLAY\":{\"DOM\":{\"DESKTOP\":0.01,\"MOBILE\":0.01},\"INTL\":{\"DESKTOP\":0.01,\"MOBILE\":0.01}},\"VIDEO\":{\"DOM\":{\"DESKTOP\":0.01,\"MOBILE\":0.01},\"INTL\":{\"DESKTOP\":0.01,\"MOBILE\":0.01}}}},\"PROXIMIC\":{\"DEBUG\":false},\"SOURCEPOINT\":{\"DEBUG\":false},\"SSAI\":{\"VENDORS\":{\"Telaria\":{\"COOKIE_NAME\":\"goiz\",\"URL\":\"https://eq97f.publishers.tremorhub.com/pubsync?redir=https://umto.{{domain}}/user-sync?goiz=%5Btvid%5D&domain={{domain}}\"},\"Rubicon\":{\"COOKIE_NAME\":\"ifyr\",\"URL\":\"https://pixel-us-east.rubiconproject.com/exchange/sync.php?p={{brand}}\"},\"Freewheel\":{\"COOKIE_NAME\":\"bea4\",\"URL\":\"https://bea4.v.fwmrm.net/ad/u?mode=echo&cr=https://umto.{{domain}}/user-sync?bea4=#{user.id}&domain={{domain}}\"},\"AppNexus\":{\"COOKIE_NAME\":\"zwmc\",\"URL\":\"https://ib.adnxs.com/getuid?https://umto.{{domain}}/user-sync?zwmc=$UID&domain={{domain}}\"},\"PubMatic\":{\"COOKIE_NAME\":\"kfyn\",\"URL\":\"https://ads.pubmatic.com/AdServer/js/userSync.js\"},\"LiveRamp\":{\"COOKIE_NAME\":\"orev\",\"URL\":\"https://idsync.rlcdn.com/712348.gif?partner_uid=${fwuid}\"}},\"SITE_VENDORS\":[\"AppNexus\",\"Freewheel\",\"LiveRamp\",\"PubMatic\",\"Rubicon\",\"Telaria\"],\"DEBUG\":false},\"TRANSACTION_ID\":{\"DEBUG\":false},\"USER_CONSENT\":{\"ONETRUST_SRC\":\"\",\"ONETRUST_GUID\":\"\",\"COOKIE_DOMAIN\":\"\",\"DEBUG\":false,\"ENABLED\":false},\"VERSION\":\"v2.0\",\"NAME\":\"CNN_2\",\"TIMESTAMP\":[\"1\",\"727\",\"884\",\"749\",\"544\"],\"DESCRIPTION\":\"CNN Stellar Migration\",\"ENVIRONMENT\":\"PRODUCTION\"},\"international\":{\"ADFUEL\":{\"AUTO_DISPATCH\":true,\"DEFAULT_TIMEOUT\":800,\"DEFAULT_DESKTOP_TIMEOUT\":800,\"DEFAULT_MOBILE_TIMEOUT\":800,\"IFRAME_TITLE\":\"advertisement\",\"NETWORK_ID\":\"8663477\",\"REFRESH_ON_FOCUS_ONLY\":false,\"LAZY_LOAD_FETCH_PERCENT\":500,\"LAZY_LOAD_RENDER_PERCENT\":200,\"LAZY_LOAD_MOBILE_SCALING\":2,\"COLLAPSE_EMPTY_DIVS\":true,\"DEBUG\":false,\"SITE_OBJECT\":\"CNN\",\"ACTIVE_MODULES\":[]},\"A9\":{\"SLOTNAMES\":{\"PREPEND_ADUNIT\":false,\"MIDROLL\":\"aps-midroll\",\"PREROLL\":\"aps-preroll\"},\"TIMEOUTS\":{\"MOBILE\":{\"VIDEO\":{\"MIDROLL\":750,\"REFRESH\":750,\"INITIAL\":500},\"DISPLAY\":{\"REFRESH\":750,\"INITIAL\":750}},\"DESKTOP\":{\"VIDEO\":{\"MIDROLL\":750,\"REFRESH\":750,\"INITIAL\":500},\"DISPLAY\":{\"REFRESH\":1150,\"INITIAL\":1150}}},\"DEBUG\":false,\"ACCOUNT_IDS\":{\"INTL\":\"3288\",\"DOM\":\"3159\"}},\"AUI\":{\"SITE_VENDORS\":{\"DOM\":[\"AppNexus\",\"Freewheel\",\"LiveRamp\",\"Rubicon\",\"Telaria\"],\"INTL\":[\"AppNexus\",\"Freewheel\",\"LiveRamp\",\"Rubicon\",\"Telaria\"]},\"VENDORS\":{\"AppNexus\":{\"COOKIE_NAME\":\"zwmc\",\"URL\":\"https://ib.adnxs.com/getuid?https://umto.{{domain}}/user-sync?zwmc=$UID&domain={{domain}}\"},\"Freewheel\":{\"COOKIE_NAME\":\"bea4\",\"URL\":\"https://bea4.v.fwmrm.net/ad/u?mode=echo&cr=https://umto.{{domain}}/user-sync?bea4=#{user.id}&domain={{domain}}\"},\"LiveRamp\":{\"COOKIE_NAME\":\"orev\",\"URL\":\"https://idsync.rlcdn.com/712348.gif?partner_uid=${fwuid}\"},\"PubMatic\":{\"COOKIE_NAME\":\"kfyn\",\"URL\":\"https://ads.pubmatic.com/AdServer/js/userSync.js\"},\"Rubicon\":{\"COOKIE_NAME\":\"ifyr\",\"URL\":\"https://pixel-us-east.rubiconproject.com/exchange/sync.php?p={{brand}}\"},\"SpotX\":{\"COOKIE_NAME\":\"hkgc\",\"URL\":\"https://sync.search.spotxchange.com/audience_id\"},\"Telaria\":{\"COOKIE_NAME\":\"goiz\",\"URL\":\"https://eq97f.publishers.tremorhub.com/pubsync?redir=https://umto.{{domain}}/user-sync?goiz=%5Btvid%5D&domain={{domain}}\"}}},\"BEEMRAY\":{\"DEBUG\":false,\"CUSTOMER_ID\":\"\",\"API_KEY\":\"\"},\"BLOCKTHROUGH\":{\"DEBUG\":false},\"CEP\":{\"DEBUG\":false},\"CONSOLE_TOOL\":{\"DEBUG\":false,\"HOTKEY\":[\"Control\",\"Shift\",\"Z\"]},\"CREATIVE_REVIEW\":{\"DEBUG\":false,\"HOTKEY\":\"^ d o h $\"},\"CRITEO\":{\"DEBUG\":false,\"DESKTOP_TIMEOUT\":750,\"DESKTOP_ZONES\":{},\"MOBILE_TIMEOUT\":750,\"MOBILE_ZONES\":{},\"MULTISIZE_FIRST\":\"F\",\"MULTISIZE_LARGEST\":\"L\",\"MULTISIZE_ALL\":\"A\",\"MULTISIZE_METHOD\":\"L\",\"TIMEOUT\":750},\"FASTLANE\":{\"DEBUG\":false,\"DESKTOP_TIMEOUT\":750,\"DOM_ACCOUNT_ID\":11078,\"INTL_ACCOUNT_ID\":11016,\"MOBILE_TIMEOUT\":750,\"TIMEOUT\":750},\"GUID\":{\"DEBUG\":false},\"IAS\":{\"ACCOUNT_IDS\":{\"DOM\":925660,\"INTL\":925660},\"DEBUG\":false},\"IX\":{\"DEBUG\":false,\"SCRIPT_KEY\":{\"DOM\":null,\"INTL\":null},\"IDENTITY\":\"\"},\"IVR\":{\"DEFAULT_DISPLAY_PERCENT\":50,\"DEFAULT_DISPLAY_MILLISECONDS\":35000,\"DEBUG\":false},\"KRUX\":{\"INTL_CONTROLTAG\":\"\",\"DOM_CONTROLTAG\":\"\",\"DEBUG\":false},\"MALVERTISING\":{\"SCRIPT_SRC\":\"//cadmus.script.ac/d2uap9jskdzp2/script.js\",\"SITE_VENDOR\":\"CleanIO\",\"DEBUG\":false},\"PREBID\":{\"SEND_ALL_BIDS\":{\"INTL\":true,\"DOM\":true},\"VENDOR\":{\"IX\":{\"IDENTITY\":\"\",\"SITE_ID\":{\"DOM\":{\"DESKTOP\":{\"atf\":{\"728x90\":\"423255\",\"970x250\":\"423255\",\"970x90\":\"423255\",\"300x600\":\"423257\",\"300x250\":\"423257\"},\"btf\":{\"300x600\":\"423258\",\"300x250\":\"423258\",\"728x90\":\"423256\",\"970x250\":\"423256\",\"970x90\":\"423256\"}},\"MOBILE\":{\"atf\":{\"320x50\":\"423259\",\"300x250\":\"423261\"},\"btf\":{\"300x250\":\"423260\",\"320x50\":\"423262\"}},\"VIDEO\":0,\"OUTSTREAM\":{\"DESKTOP\":0,\"MOBILE\":0}},\"INTL\":{\"DESKTOP\":{\"atf\":{\"728x90\":\"341959\",\"970x250\":\"341960\",\"970x90\":\"341961\",\"300x600\":\"341962\",\"300x250\":\"341963\"},\"btf\":{\"300x600\":\"341965\",\"300x250\":\"341966\",\"728x90\":\"341967\",\"970x250\":\"341968\",\"970x90\":\"341969\"}},\"MOBILE\":{\"atf\":{\"320x50\":\"341964\",\"300x250\":\"341970\"},\"btf\":{\"320x50\":\"341957\",\"300x250\":\"341971\"}},\"VIDEO\":0,\"OUTSTREAM\":{\"DESKTOP\":0,\"MOBILE\":0}}},\"OUTSTREAM\":{\"SITE_ID\":{\"DOM\":{\"DESKTOP\":0,\"MOBILE\":0},\"INTL\":{\"DESKTOP\":0,\"MOBILE\":0}}},\"VIDEO\":{\"WIDTH\":640,\"HEIGHT\":480,\"MIMES\":[\"video/mp4\"],\"PROTOCOLS\":[2,3,5,6],\"SITE_ID\":{\"DOM\":{\"DESKTOP\":\"829396\",\"MOBILE\":\"829397\"},\"INTL\":{\"DESKTOP\":\"829396\",\"MOBILE\":\"829397\"}},\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":15,\"INTL\":15}}}}},\"RUBICON\":{\"ACCOUNT_ID\":{\"DOM\":\"11078\",\"INTL\":\"11016\"},\"SITE_ID\":{\"DOM\":{\"DESKTOP\":0,\"MOBILE\":0,\"VIDEO\":{\"DESKTOP\":0,\"MOBILE\":0}},\"INTL\":{\"DESKTOP\":\"78582\",\"MOBILE\":\"78584\",\"VIDEO\":{\"DESKTOP\":\"415330\",\"MOBILE\":\"430362\"}}},\"ZONE_MAPPING\":{\"DOM\":{\"DESKTOP\":{\"HP\":{\"btf\":0,\"atf\":0},\"ROS\":{\"btf\":0,\"atf\":0}},\"MOBILE\":{\"HP\":{\"btf\":0,\"atf\":0},\"ROS\":{\"btf\":0,\"atf\":0}},\"VIDEO\":{\"DESKTOP\":{\"HP\":{\"atf\":\"0\",\"btf\":\"0\"},\"ROS\":{\"atf\":\"0\",\"btf\":\"0\"}},\"MOBILE\":{\"HP\":{\"atf\":\"0\",\"btf\":\"0\"},\"ROS\":{\"atf\":\"0\",\"btf\":\"0\"}}}},\"INTL\":{\"DESKTOP\":{\"HP\":{\"btf\":\"369850\",\"atf\":\"369850\"},\"ROS\":{\"btf\":\"369850\",\"atf\":\"369850\"}},\"MOBILE\":{\"HP\":{\"btf\":\"369856\",\"atf\":\"369856\"},\"ROS\":{\"btf\":\"369856\",\"atf\":\"369856\"}},\"VIDEO\":{\"DESKTOP\":{\"HP\":{\"atf\":\"2341606\",\"btf\":\"2341606\"},\"ROS\":{\"atf\":\" 2341606\",\"btf\":\"2341606\"}},\"MOBILE\":{\"HP\":{\"atf\":\"2460344\",\"btf\":\"2460344\"},\"ROS\":{\"atf\":\"2460344\",\"btf\":\"2460344\"}}}}},\"LANGUAGE\":{\"DOM\":\"en\",\"INTL\":\"en\"},\"VIDEO\":{\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":15,\"INTL\":15}}},\"LANGUAGE\":\"en\"}},\"PANGAEA\":{\"ACCOUNT_ID\":{\"INTL\":\"8613\",\"DOM\":0}},\"CRITEO\":{\"ACCOUNT_ID\":{\"INTL\":9264,\"DOM\":4157}},\"APPNEXUS\":{\"ACCOUNT_ID\":{\"DOM\":\"7745\",\"INTL\":\"8353\"},\"VIDEO_INVCODE\":{\"DOM\":\"cnn_homepage_video1\",\"INTL\":\"cnni_homepage_video1\"},\"PLAYBACK_METHOD\":{\"DOM\":{\"DESKTOP\":\"auto_play_sound_off\",\"MOBILE\":\"click_to_play\"},\"INTL\":{\"DESKTOP\":\"auto_play_sound_off\",\"MOBILE\":\"click_to_play\"}},\"VIDEO\":{\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":5,\"INTL\":5},\"MAX\":{\"DOM\":15,\"INTL\":15}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}}}},\"RESERVE\":{\"DOM\":0.9,\"INTL\":0.9},\"SUPPLY_TYPE\":{\"DOM\":{\"WEB\":true,\"MOBILE_WEB\":true},\"INTL\":{\"WEB\":true,\"MOBILE_WEB\":true}},\"CONTEXT\":{\"DOM\":\"instream\",\"INTL\":\"instream\"}},\"PUBMATIC\":{\"PUBLISHER_ID\":{\"DOM\":\"162932\",\"INTL\":\"160262\"},\"MAPPINGS\":{\"DOM\":{\"DESKTOP\":{},\"MOBILE\":{}},\"INTL\":{\"DESKTOP\":{},\"MOBILE\":{}}}},\"SHARETHROUGH\":{\"UNIT_MAPPING\":{\"DOM\":{\"DESKTOP\":{},\"MOBILE\":{}},\"INTL\":{\"DESKTOP\":{\"300x250\":\"mMvTwgZ1k5vgw5dWWg4E9fs3\",\"300x600\":\"35zgzLEa9bGmYyQoYpG5bFqW\",\"728x90\":\"7H5wtn8ji86Z4Ew4s7pQZQ3\",\"970x250\":\"r99VVje1tPxSLmvMdbemDVKq\"},\"MOBILE\":{\"300x250\":\"mMvTwgZ1k5vgw5dWWg4E9fs3\"}}}},\"TEADS\":{\"PAGE_ID\":{\"DOM\":0,\"INTL\":\"124050\"},\"PLACEMENT_ID\":{\"DOM\":0,\"INTL\":\"134874\"}},\"FLEDGE\":{\"BIDDERS\":[\"ix\"]}},\"TIMEOUTS\":{\"VIDEO\":{\"REFRESH\":1000,\"MIDROLL\":750,\"DEFAULT\":500},\"DISPLAY\":{\"MOBILE\":750,\"DESKTOP\":1150}},\"DEBUG\":false,\"APPROVED_BIDDERS\":{\"S2S\":{\"INTL\":[\"pangaea\",\"sharethrough\",\"ix\"],\"DOM\":[\"ix\"]},\"NATIVE\":{\"INTL\":[\"appnexus\",\"pangaea\"],\"DOM\":[\"appnexus\"]},\"CLIENT\":{\"INTL\":[\"appnexus\",\"pangaea\",\"ix\",\"rubicon\",\"sharethrough\",\"criteo\"],\"DOM\":[\"appnexus\",\"rubicon\",\"criteo\",\"ix\",\"trustx\"]}},\"BIDDERS\":{\"S2S\":{\"INTL\":[],\"DOM\":[]},\"NATIVE\":{\"INTL\":[],\"DOM\":[]},\"CLIENT\":{\"INTL\":[\"appnexus\",\"criteo\",\"ix\",\"pubmatic\",\"rubicon\",\"sharethrough\"],\"DOM\":[]},\"OUTSTREAM\":{\"DOM\":[],\"INTL\":[\"appnexus\",\"pubmatic\",\"teads\"]},\"VIDEO\":{\"DOM\":[],\"INTL\":[]}},\"FLOORS\":{\"DISPLAY\":{\"DOM\":{\"DESKTOP\":0.01,\"MOBILE\":0.01},\"INTL\":{\"DESKTOP\":0.01,\"MOBILE\":0.01}},\"VIDEO\":{\"DOM\":{\"DESKTOP\":0.01,\"MOBILE\":0.01},\"INTL\":{\"DESKTOP\":0.01,\"MOBILE\":0.01}}},\"PRICE_BUCKETS\":{\"DOM\":{\"DISPLAY\":[{\"precision\":2,\"min\":0,\"max\":5,\"increment\":0.01},{\"precision\":2,\"min\":5,\"max\":30,\"increment\":0.05},{\"precision\":2,\"min\":30,\"max\":115,\"increment\":1}],\"VIDEO\":[{\"precision\":2,\"min\":4,\"max\":50,\"increment\":1},{\"precision\":2,\"min\":50,\"max\":100,\"increment\":5}],\"OUTSTREAM\":[{\"precision\":2,\"min\":1,\"max\":50,\"increment\":1}]},\"INTL\":{\"DISPLAY\":[{\"precision\":2,\"min\":0,\"max\":5,\"increment\":0.01},{\"precision\":2,\"min\":5,\"max\":30,\"increment\":0.05},{\"precision\":2,\"min\":30,\"max\":50,\"increment\":1}],\"VIDEO\":[{\"precision\":2,\"min\":4,\"max\":50,\"increment\":1},{\"precision\":2,\"min\":50,\"max\":100,\"increment\":5}],\"OUTSTREAM\":[{\"precision\":2,\"min\":1,\"max\":50,\"increment\":1}]}},\"LIBRARY\":{\"VENDORS\":[\"appnexus\",\"criteo\",\"rubicon\",\"pubmatic\",\"ix\",\"sharethrough\",\"teads\"],\"MODULES\":[\"categoryTranslation\",\"consentManagement\",\"id5IdSystem\",\"identityLinkIdSystem\",\"prebidServerBidAdapter\",\"fledgeForGpt\"]}},\"PROXIMIC\":{\"DEBUG\":false},\"SOURCEPOINT\":{\"DEBUG\":false},\"SSAI\":{\"VENDORS\":{\"Telaria\":{\"COOKIE_NAME\":\"goiz\",\"URL\":\"https://eq97f.publishers.tremorhub.com/pubsync?redir=https://umto.{{domain}}/user-sync?goiz=%5Btvid%5D&domain={{domain}}\"},\"Rubicon\":{\"COOKIE_NAME\":\"ifyr\",\"URL\":\"https://pixel-us-east.rubiconproject.com/exchange/sync.php?p={{brand}}\"},\"Freewheel\":{\"COOKIE_NAME\":\"bea4\",\"URL\":\"https://bea4.v.fwmrm.net/ad/u?mode=echo&cr=https://umto.{{domain}}/user-sync?bea4=#{user.id}&domain={{domain}}\"},\"AppNexus\":{\"COOKIE_NAME\":\"zwmc\",\"URL\":\"https://ib.adnxs.com/getuid?https://umto.{{domain}}/user-sync?zwmc=$UID&domain={{domain}}\"},\"PubMatic\":{\"COOKIE_NAME\":\"kfyn\",\"URL\":\"https://ads.pubmatic.com/AdServer/js/userSync.js\"},\"LiveRamp\":{\"COOKIE_NAME\":\"orev\",\"URL\":\"https://idsync.rlcdn.com/712348.gif?partner_uid=${fwuid}\"}},\"SITE_VENDORS\":[\"AppNexus\",\"Freewheel\",\"Rubicon\",\"Telaria\"],\"DEBUG\":false},\"TRANSACTION_ID\":{\"DEBUG\":false},\"USER_CONSENT\":{\"ONETRUST_SRC\":\"\",\"ONETRUST_GUID\":\"\",\"COOKIE_DOMAIN\":\"\",\"DEBUG\":false,\"ENABLED\":false},\"VERSION\":\"v2.0\",\"NAME\":\"CNNi_2\",\"TIMESTAMP\":[\"1\",\"727\",\"884\",\"749\",\"594\"],\"DESCRIPTION\":\"CNN International Stellar Migration\",\"ENVIRONMENT\":\"PRODUCTION\"},\"espanol\":{\"ADFUEL\":{\"AUTO_DISPATCH\":true,\"DEFAULT_TIMEOUT\":800,\"DEFAULT_DESKTOP_TIMEOUT\":800,\"DEFAULT_MOBILE_TIMEOUT\":800,\"IFRAME_TITLE\":\"advertisement\",\"NETWORK_ID\":\"21756062855\",\"REFRESH_ON_FOCUS_ONLY\":false,\"LAZY_LOAD_FETCH_PERCENT\":500,\"LAZY_LOAD_RENDER_PERCENT\":200,\"LAZY_LOAD_MOBILE_SCALING\":2,\"COLLAPSE_EMPTY_DIVS\":true,\"DEBUG\":false,\"SITE_OBJECT\":\"CNNEspanol\",\"ACTIVE_MODULES\":[\"\"]},\"A9\":{\"SLOTNAMES\":{\"PREPEND_ADUNIT\":false,\"MIDROLL\":\"aps-midroll\",\"PREROLL\":\"aps-preroll\"},\"TIMEOUTS\":{\"MOBILE\":{\"VIDEO\":{\"MIDROLL\":750,\"REFRESH\":750,\"INITIAL\":500},\"DISPLAY\":{\"REFRESH\":750,\"INITIAL\":750}},\"DESKTOP\":{\"VIDEO\":{\"MIDROLL\":750,\"REFRESH\":750,\"INITIAL\":500},\"DISPLAY\":{\"REFRESH\":1150,\"INITIAL\":1150}}},\"DEBUG\":false,\"ACCOUNT_IDS\":{\"INTL\":\"3288\",\"DOM\":\"3159\"}},\"AUI\":{\"SITE_VENDORS\":{\"DOM\":[],\"INTL\":[]},\"VENDORS\":{\"AppNexus\":{\"COOKIE_NAME\":\"zwmc\",\"URL\":\"https://ib.adnxs.com/getuid?https://umto.{{domain}}/user-sync?zwmc=$UID&domain={{domain}}\"},\"Freewheel\":{\"COOKIE_NAME\":\"bea4\",\"URL\":\"https://bea4.v.fwmrm.net/ad/u?mode=echo&cr=https://umto.{{domain}}/user-sync?bea4=#{user.id}&domain={{domain}}\"},\"LiveRamp\":{\"COOKIE_NAME\":\"orev\",\"URL\":\"https://idsync.rlcdn.com/712348.gif?partner_uid=${fwuid}\"},\"PubMatic\":{\"COOKIE_NAME\":\"kfyn\",\"URL\":\"https://ads.pubmatic.com/AdServer/js/userSync.js\"},\"Rubicon\":{\"COOKIE_NAME\":\"ifyr\",\"URL\":\"https://pixel-us-east.rubiconproject.com/exchange/sync.php?p={{brand}}\"},\"SpotX\":{\"COOKIE_NAME\":\"hkgc\",\"URL\":\"https://sync.search.spotxchange.com/audience_id\"},\"Telaria\":{\"COOKIE_NAME\":\"goiz\",\"URL\":\"https://eq97f.publishers.tremorhub.com/pubsync?redir=https://umto.{{domain}}/user-sync?goiz=%5Btvid%5D&domain={{domain}}\"}}},\"BEEMRAY\":{\"DEBUG\":false,\"CUSTOMER_ID\":\"\",\"API_KEY\":\"\"},\"BLOCKTHROUGH\":{\"DEBUG\":false},\"CEP\":{\"DEBUG\":false},\"CONSOLE_TOOL\":{\"DEBUG\":false,\"HOTKEY\":[\"Control\",\"Shift\",\"Z\"]},\"CREATIVE_REVIEW\":{\"DEBUG\":false,\"HOTKEY\":\"^ d o h $\"},\"CRITEO\":{\"DEBUG\":false,\"DESKTOP_TIMEOUT\":750,\"DESKTOP_ZONES\":{},\"MOBILE_TIMEOUT\":750,\"MOBILE_ZONES\":{},\"MULTISIZE_FIRST\":\"F\",\"MULTISIZE_LARGEST\":\"L\",\"MULTISIZE_ALL\":\"A\",\"MULTISIZE_METHOD\":\"L\",\"TIMEOUT\":750},\"FASTLANE\":{\"DEBUG\":false,\"DESKTOP_TIMEOUT\":750,\"DOM_ACCOUNT_ID\":11078,\"INTL_ACCOUNT_ID\":11016,\"MOBILE_TIMEOUT\":750,\"TIMEOUT\":750},\"GUID\":{\"DEBUG\":false},\"IAS\":{\"ACCOUNT_IDS\":{\"DOM\":925660,\"INTL\":925660},\"DEBUG\":false},\"IX\":{\"DEBUG\":false,\"SCRIPT_KEY\":{\"DOM\":null,\"INTL\":null},\"IDENTITY\":\"\"},\"IVR\":{\"DEFAULT_DISPLAY_PERCENT\":50,\"DEFAULT_DISPLAY_MILLISECONDS\":35000,\"DEBUG\":false},\"KRUX\":{\"INTL_CONTROLTAG\":\"\",\"DOM_CONTROLTAG\":\"\",\"DEBUG\":false},\"MALVERTISING\":{\"SCRIPT_SRC\":\"//d9esmwyn3ffr1.cloudfront.net/script.js\",\"SITE_VENDOR\":\"CleanIO\",\"DEBUG\":false},\"PREBID\":{\"SEND_ALL_BIDS\":{\"INTL\":true,\"DOM\":true},\"VENDOR\":{\"IX\":{\"IDENTITY\":\"\"},\"RUBICON\":{\"ZONE_MAPPING\":{\"INTL\":{\"MOBILE\":{\"ROS\":{\"btf\":0,\"atf\":0},\"HP\":{\"btf\":0,\"atf\":0}},\"DESKTOP\":{\"ROS\":{\"btf\":0,\"atf\":0},\"HP\":{\"btf\":0,\"atf\":0}}},\"DOM\":{\"MOBILE\":{\"ROS\":{\"btf\":0,\"atf\":0},\"HP\":{\"btf\":0,\"atf\":0}},\"DESKTOP\":{\"ROS\":{\"btf\":0,\"atf\":0},\"HP\":{\"btf\":0,\"atf\":0}}}},\"SITE_ID\":{\"INTL\":{\"MOBILE\":0,\"DESKTOP\":0},\"DOM\":{\"MOBILE\":0,\"DESKTOP\":0}},\"ACCOUNT_ID\":{\"INTL\":\"11016\",\"DOM\":\"11078\"}},\"PANGAEA\":{\"ACCOUNT_ID\":{\"INTL\":\"8613\",\"DOM\":0}},\"CRITEO\":{\"ACCOUNT_ID\":{\"INTL\":9264,\"DOM\":4157}},\"APPNEXUS\":{\"ACCOUNT_ID\":{\"INTL\":\"8353\",\"DOM\":\"7745\"}}},\"TIMEOUTS\":{\"VIDEO\":{\"REFRESH\":1000,\"MIDROLL\":750,\"DEFAULT\":500},\"DISPLAY\":{\"MOBILE\":750,\"DESKTOP\":1150}},\"DEBUG\":false,\"APPROVED_BIDDERS\":{\"S2S\":{\"INTL\":[\"pangaea\",\"sharethrough\",\"ix\"],\"DOM\":[\"ix\"]},\"NATIVE\":{\"INTL\":[\"appnexus\",\"pangaea\"],\"DOM\":[\"appnexus\"]},\"CLIENT\":{\"INTL\":[\"appnexus\",\"pangaea\",\"ix\",\"rubicon\",\"sharethrough\",\"criteo\"],\"DOM\":[\"appnexus\",\"rubicon\",\"criteo\",\"ix\",\"trustx\"]}},\"BIDDERS\":{\"S2S\":{\"INTL\":[],\"DOM\":[]},\"NATIVE\":{\"INTL\":[],\"DOM\":[]},\"CLIENT\":{\"INTL\":[],\"DOM\":[]}}},\"PROXIMIC\":{\"DEBUG\":false},\"SOURCEPOINT\":{\"DEBUG\":false},\"SSAI\":{\"VENDORS\":{\"Telaria\":{\"COOKIE_NAME\":\"goiz\",\"URL\":\"https://eq97f.publishers.tremorhub.com/pubsync?redir=https://umto.{{domain}}/user-sync?goiz=%5Btvid%5D&domain={{domain}}\"},\"Rubicon\":{\"COOKIE_NAME\":\"ifyr\",\"URL\":\"https://pixel-us-east.rubiconproject.com/exchange/sync.php?p={{brand}}\"},\"Freewheel\":{\"COOKIE_NAME\":\"bea4\",\"URL\":\"https://bea4.v.fwmrm.net/ad/u?mode=echo&cr=https://umto.{{domain}}/user-sync?bea4=#{user.id}&domain={{domain}}\"},\"AppNexus\":{\"COOKIE_NAME\":\"zwmc\",\"URL\":\"https://ib.adnxs.com/getuid?https://umto.{{domain}}/user-sync?zwmc=$UID&domain={{domain}}\"},\"PubMatic\":{\"COOKIE_NAME\":\"kfyn\",\"URL\":\"https://ads.pubmatic.com/AdServer/js/userSync.js\"},\"LiveRamp\":{\"COOKIE_NAME\":\"orev\",\"URL\":\"https://idsync.rlcdn.com/712348.gif?partner_uid=${fwuid}\"}},\"SITE_VENDORS\":[\"AppNexus\",\"Freewheel\",\"Rubicon\",\"Telaria\"],\"DEBUG\":false},\"TRANSACTION_ID\":{\"DEBUG\":false},\"USER_CONSENT\":{\"ONETRUST_SRC\":\"\",\"ONETRUST_GUID\":\"\",\"COOKIE_DOMAIN\":\"\",\"DEBUG\":false,\"ENABLED\":false},\"VERSION\":\"v2.0\",\"NAME\":\"Espanol\",\"TIMESTAMP\":[\"1\",\"727\",\"884\",\"749\",\"625\"],\"DESCRIPTION\":\"Site for CNNe on Stellar\",\"ENVIRONMENT\":\"PRODUCTION\"},\"business-domestic\":{\"ADFUEL\":{\"AUTO_DISPATCH\":true,\"DEFAULT_TIMEOUT\":800,\"DEFAULT_DESKTOP_TIMEOUT\":800,\"DEFAULT_MOBILE_TIMEOUT\":800,\"IFRAME_TITLE\":\"advertisement\",\"NETWORK_ID\":\"8663477\",\"REFRESH_ON_FOCUS_ONLY\":false,\"LAZY_LOAD_FETCH_PERCENT\":500,\"LAZY_LOAD_RENDER_PERCENT\":200,\"LAZY_LOAD_MOBILE_SCALING\":2,\"COLLAPSE_EMPTY_DIVS\":true,\"DEBUG\":false,\"SITE_OBJECT\":\"CNN\",\"ACTIVE_MODULES\":[\"\"]},\"A9\":{\"SLOTNAMES\":{\"PREPEND_ADUNIT\":false,\"MIDROLL\":\"aps-midroll\",\"PREROLL\":\"aps-preroll\"},\"TIMEOUTS\":{\"MOBILE\":{\"VIDEO\":{\"MIDROLL\":750,\"REFRESH\":750,\"INITIAL\":500},\"DISPLAY\":{\"REFRESH\":750,\"INITIAL\":750}},\"DESKTOP\":{\"VIDEO\":{\"MIDROLL\":750,\"REFRESH\":750,\"INITIAL\":500},\"DISPLAY\":{\"REFRESH\":1150,\"INITIAL\":1150}}},\"DEBUG\":false,\"ACCOUNT_IDS\":{\"INTL\":\"3288\",\"DOM\":\"3159\"}},\"AUI\":{\"SITE_VENDORS\":{\"DOM\":[\"AppNexus\",\"Freewheel\",\"LiveRamp\",\"PubMatic\",\"Rubicon\",\"SpotX\",\"Telaria\"],\"INTL\":[\"AppNexus\",\"Freewheel\",\"LiveRamp\",\"PubMatic\",\"Rubicon\",\"SpotX\",\"Telaria\"]},\"VENDORS\":{\"AppNexus\":{\"COOKIE_NAME\":\"zwmc\",\"URL\":\"https://ib.adnxs.com/getuid?https://umto.{{domain}}/user-sync?zwmc=$UID&domain={{domain}}\"},\"Freewheel\":{\"COOKIE_NAME\":\"bea4\",\"URL\":\"https://bea4.v.fwmrm.net/ad/u?mode=echo&cr=https://umto.{{domain}}/user-sync?bea4=#{user.id}&domain={{domain}}\"},\"LiveRamp\":{\"COOKIE_NAME\":\"orev\",\"URL\":\"https://idsync.rlcdn.com/712348.gif?partner_uid=${fwuid}\"},\"PubMatic\":{\"COOKIE_NAME\":\"kfyn\",\"URL\":\"https://ads.pubmatic.com/AdServer/js/userSync.js\"},\"Rubicon\":{\"COOKIE_NAME\":\"ifyr\",\"URL\":\"https://pixel-us-east.rubiconproject.com/exchange/sync.php?p={{brand}}\"},\"SpotX\":{\"COOKIE_NAME\":\"hkgc\",\"URL\":\"https://sync.search.spotxchange.com/audience_id\"},\"Telaria\":{\"COOKIE_NAME\":\"goiz\",\"URL\":\"https://eq97f.publishers.tremorhub.com/pubsync?redir=https://umto.{{domain}}/user-sync?goiz=%5Btvid%5D&domain={{domain}}\"}}},\"BEEMRAY\":{\"DEBUG\":false,\"CUSTOMER_ID\":\"\",\"API_KEY\":\"\"},\"BLOCKTHROUGH\":{\"DEBUG\":false},\"CEP\":{\"DEBUG\":false},\"CONSOLE_TOOL\":{\"DEBUG\":false,\"HOTKEY\":[\"Control\",\"Shift\",\"Z\"]},\"CREATIVE_REVIEW\":{\"DEBUG\":false,\"HOTKEY\":\"^ d o h $\"},\"CRITEO\":{\"DEBUG\":false,\"DESKTOP_TIMEOUT\":750,\"DESKTOP_ZONES\":{},\"MOBILE_TIMEOUT\":750,\"MOBILE_ZONES\":{},\"MULTISIZE_FIRST\":\"F\",\"MULTISIZE_LARGEST\":\"L\",\"MULTISIZE_ALL\":\"A\",\"MULTISIZE_METHOD\":\"L\",\"TIMEOUT\":750},\"FASTLANE\":{\"DEBUG\":false,\"DESKTOP_TIMEOUT\":750,\"DOM_ACCOUNT_ID\":11078,\"INTL_ACCOUNT_ID\":11016,\"MOBILE_TIMEOUT\":750,\"TIMEOUT\":750},\"GUID\":{\"DEBUG\":false},\"IAS\":{\"ACCOUNT_IDS\":{\"DOM\":925660,\"INTL\":925660},\"DEBUG\":false},\"IX\":{\"DEBUG\":false,\"SCRIPT_KEY\":{\"DOM\":null,\"INTL\":null},\"IDENTITY\":\"\"},\"IVR\":{\"DEFAULT_DISPLAY_PERCENT\":50,\"DEFAULT_DISPLAY_MILLISECONDS\":35000,\"DEBUG\":false},\"KRUX\":{\"INTL_CONTROLTAG\":\"teff9xc7i\",\"DOM_CONTROLTAG\":\"IWzCuclz\",\"DEBUG\":false},\"MALVERTISING\":{\"SCRIPT_SRC\":\"//cadmus.script.ac/d2uap9jskdzp2/script.js\",\"SITE_VENDOR\":\"CleanIO\",\"DEBUG\":false},\"PREBID\":{\"SEND_ALL_BIDS\":{\"INTL\":true,\"DOM\":true},\"VENDOR\":{\"IX\":{\"IDENTITY\":\"\",\"SITE_ID\":{\"DOM\":{\"DESKTOP\":{\"atf\":{\"728x90\":\"423255\",\"970x250\":\"423255\",\"970x90\":\"423255\",\"300x600\":\"423257\",\"300x250\":\"423257\"},\"btf\":{\"300x600\":\"423258\",\"300x250\":\"423258\",\"728x90\":\"423256\",\"970x250\":\"423256\",\"970x90\":\"423256\"}},\"MOBILE\":{\"atf\":{\"320x50\":\"423259\",\"300x250\":\"423261\"},\"btf\":{\"300x250\":\"423260\",\"320x50\":\"423262\"}},\"VIDEO\":{\"DESKTOP\":0,\"MOBILE\":0},\"OUTSTREAM\":{\"DESKTOP\":0,\"MOBILE\":0}},\"INTL\":{\"DESKTOP\":{\"atf\":{\"728x90\":\"341959\",\"970x250\":\"341960\",\"970x90\":\"341961\",\"300x600\":\"341962\",\"300x250\":\"341963\"},\"btf\":{\"300x600\":\"341965\",\"300x250\":\"341966\",\"728x90\":\"341967\",\"970x250\":\"341968\",\"970x90\":\"341969\"}},\"MOBILE\":{\"atf\":{\"320x50\":\"341964\",\"300x250\":\"341970\"},\"btf\":{\"320x50\":\"341957\",\"300x250\":\"341971\"}},\"VIDEO\":{\"DESKTOP\":0,\"MOBILE\":0},\"OUTSTREAM\":{\"DESKTOP\":0,\"MOBILE\":0}}},\"OUTSTREAM\":{\"SITE_ID\":{\"DOM\":{\"DESKTOP\":0,\"MOBILE\":0},\"INTL\":{\"DESKTOP\":0,\"MOBILE\":0}}},\"VIDEO\":{\"WIDTH\":640,\"HEIGHT\":480,\"MIMES\":[\"video/mp4\"],\"PROTOCOLS\":[2,3,5,6],\"SITE_ID\":{\"DOM\":{\"DESKTOP\":0,\"MOBILE\":0},\"INTL\":{\"DESKTOP\":\"829396\",\"MOBILE\":\"829397\"}},\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":15,\"INTL\":15}}}}},\"RUBICON\":{\"ACCOUNT_ID\":{\"DOM\":\"11078\",\"INTL\":\"11016\"},\"SITE_ID\":{\"DOM\":{\"DESKTOP\":\"26792\",\"MOBILE\":\"42244\",\"VIDEO\":{\"DESKTOP\":0,\"MOBILE\":0}},\"INTL\":{\"DESKTOP\":\"78582\",\"MOBILE\":\"78584\",\"VIDEO\":{\"DESKTOP\":\"415330\",\"MOBILE\":\"430362\"}}},\"ZONE_MAPPING\":{\"DOM\":{\"DESKTOP\":{\"HP\":{\"btf\":\"154308\",\"atf\":\"106536\"},\"ROS\":{\"btf\":\"107752\",\"atf\":\"106830\"}},\"MOBILE\":{\"HP\":{\"btf\":\"185914\",\"atf\":\"185914\"},\"ROS\":{\"btf\":\"185914\",\"atf\":\"185914\"}},\"VIDEO\":{\"DESKTOP\":{\"HP\":{\"atf\":\"0\",\"btf\":\"0\"},\"ROS\":{\"atf\":\"0\",\"btf\":\"0\"}},\"MOBILE\":{\"HP\":{\"atf\":\"0\",\"btf\":\"0\"},\"ROS\":{\"atf\":\"0\",\"btf\":\"0\"}}}},\"INTL\":{\"DESKTOP\":{\"HP\":{\"btf\":\"650178\",\"atf\":\"650178\"},\"ROS\":{\"btf\":\"369850\",\"atf\":\"369850\"}},\"MOBILE\":{\"HP\":{\"btf\":\"369856\",\"atf\":\"369856\"},\"ROS\":{\"btf\":\"369856\",\"atf\":\"369856\"}},\"VIDEO\":{\"DESKTOP\":{\"HP\":{\"atf\":\"2341606\",\"btf\":\"2341606\"},\"ROS\":{\"atf\":\" 2341606\",\"btf\":\"2341606\"}},\"MOBILE\":{\"HP\":{\"atf\":\"2460344\",\"btf\":\"2460344\"},\"ROS\":{\"atf\":\"2460344\",\"btf\":\"2460344\"}}}}},\"LANGUAGE\":{\"DOM\":\"en\",\"INTL\":\"en\"},\"VIDEO\":{\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":15,\"INTL\":15}}},\"LANGUAGE\":\"en\"}},\"PANGAEA\":{\"ACCOUNT_ID\":{\"INTL\":\"8613\",\"DOM\":0}},\"CRITEO\":{\"ACCOUNT_ID\":{\"INTL\":9264,\"DOM\":4157}},\"APPNEXUS\":{\"ACCOUNT_ID\":{\"DOM\":\"7745\",\"INTL\":\"8353\"},\"VIDEO_INVCODE\":{\"DOM\":\"cnn_homepage_video1\",\"INTL\":\"cnni_homepage_video1\"},\"PLAYBACK_METHOD\":{\"DOM\":{\"DESKTOP\":\"auto_play_sound_off\",\"MOBILE\":\"click_to_play\"},\"INTL\":{\"DESKTOP\":\"auto_play_sound_off\",\"MOBILE\":\"click_to_play\"}},\"VIDEO\":{\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":15,\"INTL\":15}}}},\"RESERVE\":{\"DOM\":0.9,\"INTL\":null},\"SUPPLY_TYPE\":{\"DOM\":{\"WEB\":true,\"MOBILE_WEB\":true},\"INTL\":{\"WEB\":true,\"MOBILE_WEB\":true}},\"CONTEXT\":{\"DOM\":\"instream\",\"INTL\":\"instream\"}},\"PUBMATIC\":{\"PUBLISHER_ID\":{\"DOM\":\"162932\",\"INTL\":\"160262\"},\"MAPPINGS\":{\"DOM\":{\"DESKTOP\":{},\"MOBILE\":{}},\"INTL\":{\"DESKTOP\":{},\"MOBILE\":{}}}},\"TRUSTX\":{\"UID\":{\"DOM\":{\"DESKTOP\":{\"atf\":{\"970x250\":\"15218\",\"970x90\":\"15219\",\"728x90\":\"15220\",\"300x250\":\"15224\"},\"btf\":{\"970x250\":\"15221\",\"970x90\":\"15222\",\"728x90\":\"15223\",\"300x250\":\"15226\"}},\"MOBILE\":{\"atf\":{\"320x50\":\"15228\"},\"btf\":{\"320x50\":\"15230\"}}},\"INTL\":{\"DESKTOP\":{\"atf\":{},\"btf\":{}},\"MOBILE\":{\"atf\":{},\"btf\":{}}}}},\"TRIPLELIFT\":{\"MAPPINGS\":{\"DOM\":{\"DESKTOP\":{\"HP\":{\"970x250\":\"CNN_leaderboard_Prebid\",\"970x90\":\"CNN_leaderboard_Prebid\",\"728x90\":\"CNN_leaderboard_Prebid\",\"300x600\":\"CNN_300x600_300x250_DeskTab_Prebid\"},\"ROS\":{\"970x250\":\"CNN_leaderboard_Prebid\",\"970x90\":\"CNN_leaderboard_Prebid\",\"728x90\":\"CNN_leaderboard_Prebid\",\"300x600\":\"CNN_300x600_300x250_DeskTab_Prebid\"}},\"MOBILE\":{\"HP\":{\"300x250\":\"CNN_300x250_Mobile_Prebid\"},\"ROS\":{\"300x250\":\"CNN_300x250_Mobile_Prebid\"}}},\"INTL\":{\"DESKTOP\":{\"HP\":{},\"ROS\":{}},\"MOBILE\":{\"HP\":{},\"ROS\":{}}}}},\"SPOTX\":{\"CHANNEL_ID\":{\"DOM\":{\"DESKTOP\":\"\",\"MOBILE\":\"\"},\"INTL\":{\"DESKTOP\":\"325241\",\"MOBILE\":\"328164\"}},\"VIDEO\":{\"DURATION\":{\"DESKTOP\":{\"MIN\":{\"DOM\":5,\"INTL\":5},\"MAX\":{\"DOM\":15,\"INTL\":15}},\"MOBILE\":{\"MIN\":{\"DOM\":6,\"INTL\":6},\"MAX\":{\"DOM\":30,\"INTL\":30}}}}},\"FLEDGE\":{\"BIDDERS\":[\"ix\"]}},\"TIMEOUTS\":{\"VIDEO\":{\"REFRESH\":1000,\"MIDROLL\":750,\"DEFAULT\":500},\"DISPLAY\":{\"MOBILE\":750,\"DESKTOP\":1150}},\"DEBUG\":false,\"APPROVED_BIDDERS\":{\"S2S\":{\"INTL\":[\"pangaea\",\"sharethrough\",\"ix\"],\"DOM\":[\"ix\"]},\"NATIVE\":{\"INTL\":[\"appnexus\",\"pangaea\"],\"DOM\":[\"appnexus\"]},\"CLIENT\":{\"INTL\":[\"appnexus\",\"pangaea\",\"ix\",\"rubicon\",\"sharethrough\",\"criteo\"],\"DOM\":[\"appnexus\",\"rubicon\",\"criteo\",\"ix\",\"trustx\"]}},\"BIDDERS\":{\"S2S\":{\"INTL\":[],\"DOM\":[]},\"NATIVE\":{\"INTL\":[],\"DOM\":[]},\"CLIENT\":{\"INTL\":[\"criteo\",\"ix\",\"pubmatic\",\"rubicon\"],\"DOM\":[\"criteo\",\"ix\",\"rubicon\",\"triplelift\",\"trustx\"]},\"OUTST",
    "commentLink": "https://news.ycombinator.com/item?id=41721567",
    "commentBody": "American WWII bomb explodes at Japanese airport, causing large crater in taxiway (cnn.com)136 points by impish9208 3 hours agohidepastfavorite113 comments ortusdux 2 hours agoLink to the video - https://www.youtube.com/watch?v=O9GDn-cl1og reply pimlottc 31 minutes agoparentIt's funny how often these videos are from a camera pointed at a monitor, instead of a direct digital copy. I assume extracting the actual file is logistically tricky due to both technical and bureaucratic reasons. reply ortusdux 5 minutes agorootparentAre there any denoising algorithms that remove Moiré patterns? It would be a welcome addition to the stock iPhone and Android cameras. reply denysvitali 24 minutes agorootparentprevThis assumes that it's available in digital form. Knowing Japan, there is a chance this is an analog CCTV reply accrual 22 minutes agorootparentprevYeah, similar for interesting events caught on security cameras. I assume these videos tend to come from the operator who only has access to view but not to export. Plus, they'd need to get the export into a phone-native format for upload onto social media, so the uploader may need admin access, familiarity with formats and/or ffmpeg, and a way to transfer to a phone or personal PC. reply globalise83 2 hours agoparentprevThat was pretty impressive! Thanks for finding it. reply louthy 50 minutes agoprevLondon fairly regularly has WWII unexploded bombs to deal with. When you look at all the bombs dropped [1] on the city, it's hardly surprising! [1] http://bombsight.org/#13/51.5008/-0.0536 reply Dansvidania 30 minutes agoparentthis is mind-boggling. I struggle to imagine how the city must have looked. reply jrnichols 2 hours agoprevWe have a bunch of those here in our area still from a train accident in 1973. https://en.wikipedia.org/wiki/1973_Roseville_Yard_Disaster It's believed that many of them are still buried and likely under homes & businesses. We just assisted detonating one of the mark 81s last week. reply karlzt 36 minutes agoprevIn Germany, unexploded bombs are discovered on a weekly basis. reply sjm 3 minutes agoparentIn Cambodia too, where the US dropped 540,000 tons of bombs during the Vietnam war. reply Clubber 22 minutes agoparentprevVerdun, France too, though I don't think they build an airstrip on top of one. reply rtkwe 2 minutes agorootparentOdds are the airport is on the same land an old Imperial Japanese airfield was on. reply SoftTalker 2 hours agoprevI'm always a little surprised to realize that the explosives are chemically stable enough to still explode nearly 100 years later. reply SapporoChris 29 minutes agoparent“We seem to have a compulsion these days to bury time capsules in order to give those people living in the next century or so some idea of what we are like. I have prepared one of my own. I have placed some rather large samples of dynamite, gunpowder, and nitroglycerin. My time capsule is set to go off in the year 3000. It will show them what we are really like.” ― Alfred Hitchcock reply arduanika 26 minutes agorootparentThat is an excellent quote, thanks for sharing it. But I'm not sure why he told us the exact date of detonation. Wasn't he supposed to be the master of suspense? reply smiley1437 2 hours agoparentprevOver time, the explosive chemicals in the both the detonator and the main charge can frequently get MORE sensitive to disturbance, which is kind of perverse. That's why if you ever come across any old UXO (UneXploded Ordnance) you should call the bomb squad and never touch it reply retrac 1 hour agorootparentEven if it's inert many explosives decompose into toxic compounds. Other explosives use mercury compounds for detonators, which at the worst can make the soil itself toxic to the touch. There are also gas shells, some of which had arsenic. Areas affected in that way will be poisonous for a very long time. reply bell-cot 2 hours agorootparentprevThis. Though I would not call explosives \"chemically stable\", nor their degrading with time \"perverse\". They are capable of energetically exploding because they are not chemically stable. And \"shelf-stable and safe for many decades\" is never a priority feature for high-volume wartime production of explosives. reply genocidicbunny 59 minutes agorootparent> And \"shelf-stable and safe for many decades\" is never a priority feature for high-volume wartime production of explosives. Maybe not on the order of decades, but 'shelf-stable and safe for handling' is a definite concern in any ordnance production. Last thing you want is your whole ammo stockpile blowing up because a tired soldier set an artillery shell down a little too hard. Many of the explosives used are actually fairly stable chemically and require either severe degradation to become unstable, or an external force applied to them that is sufficient to trigger their explosive effects. C4, as long as it hasn't been sitting around too long, is pretty safe to light on fire. And yet it's one of the more energetic commonly used explosives out there. reply tetha 7 minutes agorootparentprevMh, chemical stability is usually meant in a more delicate way. There are explosives that need other explosives to set them off. If someone gave you a pound of C4 and then evacuated your neighbors, you would probably need to do some research to set it off. With the amount of explosives moved around in the world wars, easy storage and fairly safe logistics even by minimally trained soldiers are very much a priority. On the flipside, there are explosives which won't let you finish a sneeze in the same room. Or which decompose into the latter. You wouldn't want to move thousands of tons of these around. reply jdietrich 1 hour agoparentprevHundreds of tonnes of unexploded ordnance from the First World War are collected every year in Belgium and Northern France. https://en.wikipedia.org/wiki/Iron_harvest reply rwmj 22 minutes agorootparentHere's one in Oxfordshire 4 days ago, although I'm a little confused how a First World War bomb got all the way there. Dropped from a Zeppelin? (It's also sadly possible that the news reporter got the wrong war.) https://www.itv.com/news/meridian/2024-09-28/bomb-disposal-t... reply julienchastang 1 hour agorootparentprev> Since 1946, approximately 630 French ordnance disposal workers have died handling unexploded munitions. Incredible. reply kibwen 46 minutes agorootparentIt would be interesting to see a graph over time, because presumably the vast majority of those happened in the immediate years following the war. That Wikipedia link mentions two deaths in 2014, which may be the most recent fatalities. reply svieira 35 minutes agorootparentprevI can recommend a lovely short video in French documenting the work that I recently watched: Meet the team still cleaning up after World War IZone Rouge (https://www.youtube.com/watch?v=mB-Ncob1gDk) reply jowdones 2 hours agoparentprevLots of unexploded ordnance. Reminds me of the story of the guy who tried to weld an artillery shell (and blew up), he was sure it's safe coze his father used it for 40 years as a gardening tool: https://stirileprotv.ro/stiri/eveniment/accident-stupid-a-mu... reply hilux 2 hours agoprevIt's not the same thing at all, but if you enjoy reading about \"abandoned military hardware,\" you'll love this: https://en.wikipedia.org/wiki/1989_Belgium_MiG-23_crash reply delichon 25 minutes agoparentI'm lucky to live in a place where the abandoned military hardware is not explosive or toxic. https://www.projectilepoints.net/Search/ASearch_Desert.html reply giarc 1 hour agoparentprevDidn't that happen in DC recently? Remember that US military plane that went missing and was found many kms away from where the pilot ejected? reply jackdh 2 hours agoparentprevHa, that is definitely not type of abandoned that I was expecting. That poor chap who was killed, what an incredibly unlucky event for him. reply hilux 2 hours agorootparentCan you imagine the odds? Literally ... any of us could go, at any time. That's what gets me whenever I think about this. reply card_zero 37 minutes agorootparentprevÇa plane pour moi reply Der_Einzige 2 hours agoparentprevI have an irrational fear of dying from an airplane crashing into me. It doesn't help that friends of friends of mine were victims in this from just a few weeks ago: https://www.opb.org/article/2024/09/03/fairview-plane-crash-... reply karlzt 1 hour agorootparent>> I have an irrational fear of dying from an airplane crashing into me. I don't, but sometimes I have dreams like that, whether it's an aeroplane or a helicopter or whatever. reply ccozan 10 minutes agorootparentI live near am airfield and just recently I asked my assurance company if they would assure agains airplane crash which they indeed do! But alas, if it crashes while inside, it does not really matter... reply bluetidepro 2 hours agoprevSlightly off topic but when I read the headline, I assumed \"large crater\" would be much more large than you see in the picture. The article reports \"7 meters (23 feet) in diameter and 1 meter (3 feet) deep.\" For a bomb that doesn't seem that \"large.\" Luckily no one was hurt or nearby when it went off. reply aidenn0 2 hours agoparentThe US 500lb bombs had about 270lbs of explosives in them. If this location were a WW-II airfield, it is the sort of bomb that would have been dropped on airplanes on the ground to destroy them. Most of the damage to Japan's cities was actually done by napalm-filled bomblets combined into cluster-bombs[1], partly because weather made precision bombing difficult. 1: https://en.wikipedia.org/wiki/M69_incendiary reply rtkwe 2 hours agorootparentAlso Japanese construction was conveniently, for the US, extremely flammable so you could do way more damage starting a firestorm than you could with the same number of bombers filled with traditional bombs. There was also the incredible plan to fill a bomb with bats strapped with tiny incendiary charges on timers so they would be dropped, go roost somewhere, and hopefully start even wider spread fires. They spent about 2 million dollars on it before it was cancelled because the atomic bomb was showing much better progress. They also accidentally proved it's effectiveness and burned down part of the testing facility. https://en.wikipedia.org/wiki/Bat_bomb reply pnw 2 hours agorootparentSimilarly, the Japanese launched over 9000 incendiary balloon bombs against the US & Canada, but they were generally ineffective. Six civilians were killed in Oregon in 1945. https://en.wikipedia.org/wiki/Fu-Go_balloon_bomb reply rtkwe 1 hour agorootparentYeah one of the few instances of damage on the US side of the world from WW2 and it barely did anything. The US was incredibly fortunate to not have to fight basically any of the war on the home front. We rode that wave for a couple decades as Europe and Japan etc rebuilt. reply HarryHirsch 2 hours agorootparentprevIt was the great success of the Allied firebombing campaign that inflicted suburbia on the United States. US construction is just as flammable but fire is less likely to spread when the houses are farther apart. (Let's rephrase the success part. The campaign was destructive and deadly for the civilian population but did nothing to end the war earlier. Bomber Harris and the Lord Lindemann got a career boost, though.) reply aidenn0 56 minutes agorootparentThere are many contemporary sources on the Japanese side that suggest the firebombings did hasten the (inevitable at this point) surrender. The US certainly had a strategic desire for Japan to surrender to the US rather than the USSR. reply rtkwe 49 minutes agorootparentprevYeah it turns out the whole idea of morale bombing is pretty flawed, it largely just galvanizes the population it turns out; Japan, England and Germany all reacted similarly, maybe for different cultural reasons but it was ineffective everywhere. reply pfdietz 1 hour agorootparentprev> but did nothing to end the war earlier Really? To assert this, you need to show not that Axis production didn't decline, but that the damage done didn't prevent production from increasing even more. How does one show that? reply greiskul 1 hour agorootparentHere is a good critique of the concept of strategic airpower: https://acoup.blog/2022/10/21/collections-strategic-airpower... Axis production continued increasing, according to this, it tripled after the bombing campaign started. reply pfdietz 1 hour agorootparentWhich, of course, proves nothing. What matters is how much it would have increased without the bombing. Actually, it's even worse than that, since one must also subtract from this production the resources Germany was putting into air defense. This effort was massive. reply WorkerBee28474 31 minutes agoparentprevA crater that size can hold 80,000lb of dirt. reply 0cf8612b2e1e 2 hours agoparentprevDid historical bombs typically make big explosions? Reading some numbers from the war, it seemed like the strategy was more to dump enormous volume of ordinance and hope to get lucky hitting something vital. reply SoftTalker 2 hours agorootparentThat strategy was not because the bombs weren't very destructive, but because they just could not be placed accurately. So they had to drop a lot of bombs and hope a few of them hit the strategically important targets. reply skriticos2 2 hours agorootparentprevYep. The US did drop around 160,800 tons of conventional bombs on Japan during WWII, thought that's still relatively tame compared to the 623,000 tons they drop on Germany. Though the two nukes more than made up for it, I guess. Bomb findings during construction is nothing especially rare in these countries. reply pfdietz 1 hour agorootparentThe conventional bombing of Japan was scheduled for massive increase. To quote Ian Toll's \"Twilight of the Gods\": > If the war had lasted any longer than it did, the scale and ferocity of the conventional bombing campaign would have risen to inconceivable new heights. [...] At the height of the bombing campaign, between May and August 1945, a monthly average of 34,402 tons of high explosive and incendiary bombs were dropped on Japan. According to USAAF chief Hap Arnold, the monthly total would have reached 100,000 tons in September 1945, and then risen steadily month by month. By early 1946, if the Japanese were still fighting, eighty USAAF combat groups would be operating against Japan, a total of about 4,000 bombers. In January 1946, they would drop 170,000 tons of bombs on Japan, surpassing in one month the cumulative tonnage actually dropped on the country during the entire Pacific War. By March 1946, the anticipated date of the CORONET landings on the Tokyo plain, the monthly bombing figure would surpass 200,000 tons. reply 0cf8612b2e1e 1 hour agorootparentProfessionals talk logistics indeed. To imagine what kind is pipeline would be required to enable such a venture. Producing, assembling, and shipping millions of tons of explosives as a continual operation. reply eesmith 2 hours agorootparentprev'Between 1965 and 1975, the United States and its allies dropped more than 7.5 million tons of bombs on Vietnam, Laos, and Cambodia—double the amount dropped on Europe and Asia during World War II.' - https://storymaps.arcgis.com/stories/2eae918ca40a4bd7a55390b... reply Scoundreller 2 hours agorootparentprevSo like, is “no unexploded ordinances detected” a checkbox/service for those “call before you dig” organizations in those places? reply ornornor 44 minutes agorootparentIn some parts of France, you can’t dig without getting a specialized surveyor inspection and certificate it’s safe to dig this deep in that place first. reply sholladay 2 hours agoparentprevIt would have done considerably more damage if it had gone off when and where it was intended. The runway is designed to have enormous, heavy planes takeoff and land on it routinely, it undoubtedly absorbed a lot of the bomb’s energy. Not to mention the earth underneath it. reply bell-cot 2 hours agorootparent> It would have done... Real WWII historians could probably determine the date on which the bomb was dropped, its intended target, etc., etc. But with the condition that most of Japan was in, later in WWII - I'm thinking that \"gone off where & when intended\" would probably have had little effect. Most of the country was burned-out rubble. reply marshray 30 minutes agoparentprevApparently it was sized appropriately to shut down the airport. A larger probability of a small crater(s) requiring repair would seem better for this purpose than a smaller probability of a large crater. reply kragen 29 minutes agoparentprevthat's a little bigger than my old apartment. i think it doesn't look big in the picture because nothing is visible nearby to give it scale reply cynicalpeace 53 minutes agoparentprevWatch the video- it was a large bomb reply bradgessler 2 hours agoparentprevAgreed, seems very very small for 5000lb of explosives. Guessing it didn't reach its full yield given that its been buried under ground for decades. reply aidenn0 2 hours agorootparent~270lbs of explosives in a US 500lb bomb. reply Oarch 2 hours agorootparentprevArticle says 500lb. reply lupusreal 2 hours agorootparentprevIf the crater is only 1 meter deep then the bomb was likely more shallow than that (although some of the ejected dirt will fall back into the crater). So much of the bomb's energy went into the atmosphere. reply MengerSponge 2 hours agoparentprevThat's a lot of earth though. Most bombs detonate above the ground because rock is really heavy. reply riffic 2 hours agoparentpreva large crater the size of a small crater. the reference: https://time.com/5772944/large-small-boulder/ reply onemoresoop 52 minutes agoprevIts surprising to me that bombs explode after being buried for such a long time. The chemicals remain contained but I imagined the fuse would rust away. reply indrora 46 minutes agoparentThe irony here is that nuclear weapons are actually safer to have lying around than conventional weapons; The amount of work that it takes to actually arm and activate a warhead is higher and you get basically one chance to get it right or it locks you out and self-defeats. For anyone who is curious, there's a wonderful short video on PALs and how they isolate a nuclear warhead from the outside world: https://www.youtube.com/watch?v=F1LPmAF2eNA reply fluoridation 42 minutes agorootparentEveryone knows about PALs. You have to warm them up in the steel mill and then cool them down in the freezer room. reply colechristensen 46 minutes agoparentprevIt can be caused by the explosives degrading over decades into much more unstable compounds which begin the explosive reaction and detonate the rest. In other words degrading into a new sort of fuse which spontaneously triggers. reply jajko 7 minutes agoprevSlightly off topic - if you want to see how explosion looks like in vacuum, here is recent (less than 1 day old) Iranian ICBM interception (either by Israeli Arrow 2/3 or Patriot) in cca outer space [1]. Expanse wasn't so far off [1] https://www.reddit.com/r/CombatFootage/comments/1fu1bc1/iran... reply genezeta 1 minute agoparentFor those without a reddit account: https://old.reddit.com/r/CombatFootage/comments/1fu1bc1/iran... reply 1317 1 hour agoprevalready back open - https://www3.nhk.or.jp/nhkworld/en/news/20241002_20/ reply partiallypro 1 hour agoprevThe first time I ever went to Munich there was a bomb that had been discovered from WW2 under one of the buildings during a renovation and they had to do a controlled detonation. Despite their efforts there was visible damage everywhere, broken glass, etc. I feel terrible for Ukraine, Gaza and others, have unexploded ordinances that (probably more so in Ukraine than Gaza, just given scale/age of munitions) will be there for generations. https://www.munichre.com/en/insights/infrastructure/munich-b... reply bluGill 39 minutes agoparentModern bombs tend to be more reliable about exploding when we want them to, and we now have some bombs that if they don't explode will degrade. So not quite as bad as you would guess. However still going to be a big problem for decades. reply AStonesThrow 2 hours agoprevHeadline says \"taxiway\" and the crater is located on the edge, but runway 9/27 markings are very close by. Aircraft should not be at speed, departing or landing on a taxiway. \"Taxi\" is how they go between gate and runway at low speed. reply bmitc 2 hours agoprevWhen I read the headline, I was wondering why in the world a bomb was being taxied on a runway, like on a cargo plane. However, now I'm wondering how a bomb wasn't discovered when the airport was built. From the video posted elsewhere in the comments, it looks like the bomb was buried under the runway. Are there no ground surveys done with radar before building a plane runway? reply bityard 2 hours agoparentI haven't fact-checked anything about this, but this bomb (and its friends) were probably dropped here because it was an active military airport during WW2 and the US was desperate to put a dent in Japan's air power. After the war, thorough ordinance disposal was very likely a secondary consideration rebuilding the country. (And its runways.) reply opencl 2 hours agoparentprevThe airport was built in 1943. reply bmitc 2 hours agorootparentAh, I guess that makes sense. According to a quick search, it seems ground-penetrating radar didn't reach common use until the 70s. reply ImJamal 2 hours agoprev> Officials said an investigation by the Self-Defense Forces and police confirmed that the explosion was caused by a 500-pound US bomb The article was a bit lacking. How do they know that it was a 500 pound bomb from WW2? Is it the shrapnel or is there a different way to determine it? reply aidenn0 2 hours agoparentThousands of tons of bombs were dropped on Japan in WW2. Many of them didn't explode. This airport was apparently an active airfield at the time the US was bombing Japan and 500lb bombs were the sort of thing used to destroy parked planes. Yes, someone could have snuck into an airport and buried a bomb underneath the runway, then cleaned up the digging operation so as to not be noticed, but horses, not zebras. reply karaterobot 1 hour agorootparentThey're just asking on what basis the article is confident that it's a specific bomb from a specific era. Is it based on a forensic analysis of the shrapnel, something like that? If it's just an assumption based on the context, you'd want to say \"an explosion, believed to have been caused by an unexploded WWII-era bomb...\". reply ImJamal 2 hours agorootparentprevIf it wasn't from the war, then the more likely scenario is the bomb feel off a plane after the war than somebody snuck into the airfield. Bombs do fall off planes. My question was more of, how do they determine this sort of thing or is it just an assumption because it is the most likely scenario? reply kayodelycaon 56 minutes agorootparentYou’re assuming the bombs like this were removed after the war. They weren’t. No one knew they were there. We are still finding unexploded artillery shells from the first world war in France. Germans are still finding bombs in cities. The chemicals in the fuses mix and become unstable over time. The explosives don’t degrade as much. If you wanted further verification, the bomb casing leaves fragments and explosives leave residue. reply ImJamal 2 minutes agorootparentI'm not doing anything of the sort. I know bombs are still there from WW2. Just because there are still bombs from WW2 does not mean that every bomb that goes off is from WW2. While it is likely that the bomb is from the war, I haven't seen what evidence they have confirming that. That is all I am asking for. jazzyjackson 2 hours agoparentprevLikely because no one's dropped bombs on Japan since then reply ImJamal 2 hours agorootparentSomebody could have planted a bomb (if it was actually a WW2 bomb that doesn't seem likely) or it could have fallen off a plane before (not sure if there 500 pound bombs before the war?) or after the war. reply kayodelycaon 1 hour agorootparentThat absolutely can be a WWII bomb. They are still finding unexploded artillery shells from the first world war in France! Let me repeat that, hundred-year-old shells are still underground, intact, and the explosives in them are just as powerful as when they were manufactured. Chemicals in fuse can slowly combine until they detonate. The odds of someone planting more explosives in a field potentially containing a dozen WWII bombs from multiple attacks are remote. reply ImJamal 0 minutes agorootparentYou are not addressing anything of my question. I don't care if 99.9999999% of bombs that go off are from WW2. Not every bomb that goes off is from WW2. How did they determine if this bomb was actually from WW2? Is it just an assumption or did they check something? The article did not clarify that point and just stated it as a fact. tonymet 2 hours agoprev [–] Similar to software, sometimes it’s safer to leave the bombs buried to avoid accidental detonation from attempted removal. reply timr 2 hours agoparentThis bomb was buried. Nobody knew it was there...which is sort of crazy, considering that they built a runway over it and it didn't detonate until now. reply MichaelNolan 2 hours agoparentprevDo they (Japan, Germany) ever purposely leave unexploded ordnance in place? I see a news story about once a year about them finding a bomb, and in every case they have their bomb squad disarm and remove it. I’ve never heard of them knowingly leaving a bomb in place. reply lostlogin 2 hours agorootparentA load has been left in the Thames. The risk of accidental detonation causing a tsunami is one factor. https://en.m.wikipedia.org/wiki/SS_Richard_Montgomery reply thyristan 2 hours agorootparentprevI know of some remote¹ forest in Germany that used to be a training area. It is so bullet- and bomb-riddled that they just decided clearing it wasn't worth it, put a fence around it and declared it off-limits. ¹ in Germany, \"remote\" means something like \"2km from the next settlement\". reply eep_social 43 minutes agorootparentSimilar in France from WW1: https://en.m.wikipedia.org/wiki/Zone_rouge reply SoftTalker 2 hours agorootparentprevSame in some parts of France, from WW-I bombs that are still there. reply potato3732842 2 hours agorootparentprevOnce there's any sort of record that there's UXO somewhere it pretty much has to be removed because nobody wants the liability that would be incurred by being the party that dropped the ball. Even if that wasn't the case they generally get found because they're in the way of some construction. You have to remove it for the same reason you have to get every other rock out of the hole you're digging. That said, I'm sure there's a few farmers who have a pretty strong inkling where one is and are actively not looking to disturb that problem. reply aloer 2 hours agorootparentprevI don’t think so. Bombs are usually found during construction so leaving them in place would not work if they block progress on a hole/tunnel etc For reference the state of NRW (Germany) alone found 2811 bombs in 2018 so it’s much more common than you’d think. Laws seem to differ by state but afaik new construction must include some kind of bomb assessment, often done via aerial photos to quickly filter out areas that were not bombed at all reply detaro 2 hours agorootparentprevAnd you only hear about the more problematic cases. Hundreds or thousands of WW2 bombs get removed in Germany every year. reply Kuinox 2 hours agorootparentprevhttps://en.wikipedia.org/wiki/Unexploded_ordnance reply lupusreal 2 hours agorootparentprevThis sunken ship in the Thames estuary is packed full of explosives, and they don't dare mess with it: https://en.wikipedia.org/wiki/SS_Richard_Montgomery reply 0cf8612b2e1e 2 hours agorootparentWhoa! One of the reasons that the explosives have not been removed was the unfortunate outcome of a similar operation in July 1967, to neutralize the contents of the Polish cargo ship Kielce, that sank in 1946, off Folkestone in the English Channel. During preliminary work, Kielce exploded with a force equivalent to an earthquake measuring 4.5 on the Richter scale, digging a 20-foot-deep (6 m) crater in the seabed and bringing \"panic and chaos\" to Folkestone, although there were no injuries.[5]: 2000 survey, p21–22 Kielce was at least 3 or 4 miles (4.8 or 6.4 km) from land, had sunk in deeper water than Richard Montgomery, and had \"just a fraction\" of the load of explosives.[10] According to a BBC News report in 1970,[12] it was determined that if the wreck of Richard Montgomery exploded, it would throw a 300 metres (980 feet)-wide column of water and debris nearly 3,000 metres (9,800 feet) into the air and generate a wave 5 metres (16 feet) high. Almost every window in Sheerness (population circa 20,000) would be broken and buildings would be damaged by the blast. reply bityard 2 hours agorootparentThat's amazing. Very surprised I haven't heard of a movie involving this, or a least a Doctor Who episode. reply dmix 2 hours agorootparentIt's all over youtube, I've seen a number of recommended videos about it https://www.youtube.com/results?search_query=Richard+Montgom... Might just be my algorithm reply ruined 2 hours agorootparentprevoooo, free explosives! reply HarryHirsch 2 hours agorootparentprevin every case they have their bomb squad disarm and remove it They would do that, the pencil detonators the Allies used to disrupt rescue and firefighting efforts after a carpet-bombing run become ever more touchy as time wears on. A bomb that is found is disarmed or exploded, else there will be a repeat of this incident down the line. reply FpUser 2 hours agoparentprevUnder active runway, 1 meter deep, intentionally? That would be the most moronic \"safety measure\" I can imagine. reply gwbas1c 56 minutes agorootparentLooking at the article, this was a WWII air base converted to a civilian airport. The bomb was not paved over due to laziness; no one knew the bomb was there. Hindsight being 20/20, maybe they (the Japanese) could have used metal detectors when they were updating the runway? But, given that they didn't find this, I suspect it wasn't practical back then. Perhaps now there will be an effort to use modern technology to find these? reply bmitc 2 hours agoparentprevI'm not sure. What is to be gained over leaving a bomb buried, if you know about it? Because then, it could go off at any time versus doing a controlled detonation or remotely disarm it. reply bluGill 35 minutes agorootparentIt was probably buried during WWII where the concern was get this airport working fast so it can be used and deal with the consequences latter. Of course nobody bothered to write down where hidden bombs are (that would take time they didn't have) and so they couldn't deal with it latter. reply dvngnt_ 2 hours agoparentprev [–] we have the machines to sacrifice now reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [],
    "commentSummary": [
      "An unexploded American WWII bomb detonated at a Japanese airport, causing a large crater on a taxiway, but fortunately, no injuries were reported.",
      "The incident has reignited discussions about the challenges of retrieving digital footage from security cameras and the widespread issue of unexploded ordnance in countries like Japan, London, Germany, and France.",
      "Concerns were raised about the stability of old explosives, as they can become more sensitive over time, posing significant risks."
    ],
    "points": 136,
    "commentCount": 115,
    "retryCount": 0,
    "time": 1727882531
  }
]
