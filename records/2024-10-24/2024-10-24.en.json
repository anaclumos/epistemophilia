[
  {
    "id": 41929174,
    "title": "Everything I built with Claude Artifacts this week",
    "originLink": "https://simonwillison.net/2024/Oct/21/claude-artifacts/",
    "originBody": "Simon Willison’s Weblog Subscribe Everything I built with Claude Artifacts this week 21st October 2024 I’m a huge fan of Claude’s Artifacts feature, which lets you prompt Claude to create an interactive Single Page App (using HTML, CSS and JavaScript) and then view the result directly in the Claude interface, iterating on it further with the bot and then, if you like, copying out the resulting code. I was digging around in my Claude activity export (I built a claude-to-sqlite tool to convert it to SQLite I could explore it in Datasette) and decided to see how much I’d used artifacts in the past week. It was more than I expected! Being able to spin up a full interactive application—sometimes as an illustrative prototype, but often as something that directly solves a problem—is a remarkably useful tool. Here’s most of what I’ve used Claude Artifacts for in the past seven days. I’ve provided prompts or a full transcript for nearly all of them. URL to Markdown with Jina Reader SQLite in WASM demo Extract URLs Clipboard viewer Pyodide REPL Photo Camera Settings Simulator LLM pricing calculator YAML to JSON converter OpenAI Audio QR Code Decoder Image Converter and Page Downloader HTML Entity Escaper text-wrap-balance-nav ARES Phonetic Alphabet Converter URL to Markdown with Jina Reader # I got frustrated at how hard it was to copy and paste the entire text of a web page into an LLM while using Mobile Safari. So I built a simple web UI that lets me enter a URL, calls the Jina Reader API to generate Markdown (which uses Puppeteer under the hood) and gives me that Markdown with a convenient “Copy” button. Try it out: https://tools.simonwillison.net/jina-reader (Code) I wrote more about that project here. SQLite in WASM demo # A Hacker News conversation about SQLite’s WASM build lead me to the @sqlite.org/sqlite-wasm package on NPM, and I decided to knock together a quick interactive demo. Try it out here: tools.simonwillison.net/sqlite-wasm Code, Claude transcript Extract URLs # I found myself wanting to extract all of the underlying URLs that were linked to from a chunk of text on a web page. I realized the fastest way to do that would be to spin up an artifact that could accept rich-text HTML pastes and use an HTML parser to extract those links. https://tools.simonwillison.net/extract-urls Code, Claude transcript Clipboard viewer # Messing around with a tool that lets you paste in rich text reminded me that the browser clipboard API is a fascinating thing. I decided to build a quick debugging tool that would let me copy and paste different types of content (plain text, rich text, files, images etc) and see what information was available to me in the browser. https://tools.simonwillison.net/clipboard-viewer Code, Claude transcript Pyodide REPL # I didn’t put a lot of effort into this one. While poking around with Claude Artifacts in the browser DevTools I spotted this CSP header: content-security-policy: default-src https://www.claudeusercontent.com; script-src 'unsafe-eval' 'unsafe-inline' https://www.claudeusercontent.com https://cdnjs.cloudflare.com https://cdn.jsdelivr.net/pyodide/; connect-src https://cdn.jsdelivr.net/pyodide/; worker-src https://www.claudeusercontent.com blob:; style-src 'unsafe-inline' https://www.claudeusercontent.com https://cdnjs.cloudflare.com https://fonts.googleapis.com; img-src blob: data: https://www.claudeusercontent.com; font-src data: https://www.claudeusercontent.com; object-src 'none'; base-uri https://www.claudeusercontent.com; form-action https://www.claudeusercontent.com; frame-ancestors https://www.claudeusercontent.com https://claude.ai https://preview.claude.ai https://claude.site https://feedback.anthropic.com; upgrade-insecure-requests; block-all-mixed-content The https://cdn.jsdelivr.net/pyodide/ in there caught my eye, because it suggested that the Anthropic development team had deliberately set it up so Pyodide—Python compiled to WebAssembly—could be loaded in an artifact. I got Claude to spin up a very quick demo to prove that this worked: https://claude.site/artifacts/a3f85567-0afc-4854-b3d3-3746dd1a37f2 I’ve not bothered to extract this one to my own tools.simonwillison.net site yet because it’s purely a proof of concept that Pyodide can load correctly in that environment. Photo Camera Settings Simulator # I was out on a photo walk and got curious about whether or not JavaScript could provide a simulation of camera settings. I didn’t get very far with this one (prompting on my phone while walking along the beach)—the result was buggy and unimpressive and I quickly lost interest. It did expose me to the Fabric.js library for manipulating canvas elements though. https://claude.site/artifacts/e645c231-8c13-4374-bb7d-271c8dd73825 LLM pricing calculator # This one I did finish. I built this pricing calculator as part of my experiments with Video scraping using Google Gemini, because I didn’t trust my own calculations for how inexpensive Gemini was! Here are detailed notes on how I built that. https://tools.simonwillison.net/llm-prices YAML to JSON converter # I wanted to remind myself how certain aspects of YAML syntax worked, so I span up a quick YAML to JSON converter tool that shows the equivalent JSON live as you type YAML. https://claude.site/artifacts/ffeb439c-fc95-428a-9224-434f5f968d51 Claude transcript OpenAI Audio # This is my most interesting artifact of the week. I was exploring OpenAI’s new Audio APIs and decided to see if I could get Claude to build we a web page that could request access to my microphone, record a snippet of audio, then base64 encoded that and send it to the OpenAI API. Here are the full details on how I built this tool. https://tools.simonwillison.net/openai-audio Claude Artifacts can’t make API requests to external hosts directly, but it can still spin up enough of a working version that it’s easy to take that, move it to different hosting and finish getting it working. I wrote more about this API pattern in Building a tool showing how Gemini Pro can return bounding boxes for objects in images. QR Code Decoder # I was in a meeting earlier this week where one of the participants shared a slide with a QR code (for joining a live survey tool). I didn’t have my phone with me, so I needed a way to turn that QR code into a regular URL. https://tools.simonwillison.net/qr Knocking up this QR decoder in Claude Artifacts took just a few seconds: Build an artifact (no react) that lets me paste in a QR code and displays the decoded information, with a hyperlink if necessary [ ... ] have a file open box that also lets you drag and drop and add a onpaste handler to the page that catches pasted images as well Full conversation here. Image Converter and Page Downloader # Another very quick prototype. On Hacker News someone demonstrated a neat idea for a tool that let you drop photos onto a page and it would bake them into the page as base64 URLs such that you could “save as HTML” and get a self-contained page with a gallery. I suggested they could add a feature that generated a “Download link” with the new page baked in—useful on mobile phones that don’t let you “Save as HTML”—and got Claude to knock up a quick prototype: In this case I shared the code in a Gist and then used the new-to-me https://gistpreview.github.io/?GIST_ID_GOES_HERE trick to render the result: https://gistpreview.github.io/?14a2c3ef508839f26377707dbf5dd329 gistpreview turns out to be a really quick way to turn a LLM-generated demo into a page people can view. Code, Claude transcript HTML Entity Escaper # Another example of on-demand software: I needed to escape the HTML entities in a chunk of text on my phone, so I got Claude to build me a tool for that: https://claude.site/artifacts/46897436-e06e-4ccc-b8f4-3df90c47f9bc Here’s the prompt I used: Build an artifact (no react) where I can paste text into a textarea and it will return that text with all HTML entities - single and double quotes and less than greater than ampersand - correctly escaped. The output should be in a textarea accompanied by a \"Copy to clipboard\" button which changes text to \"Copied!\" for 1.5s after you click it. Make it mobile friendly Claude transcript text-wrap-balance-nav # Inspired by Terence Eden I decided to do a quick experiment with the text-wrap: balance CSS property. I got Claude to build me an example nav bar with a slider and a checkbox. I wrote about that here. https://tools.simonwillison.net/text-wrap-balance-nav ARES Phonetic Alphabet Converter # I was volunteering as a HAM radio communications operator for the Half Moon Bay Pumpkin Run and got nervous that I’d mess up using the phonetic alphabet—so I had Claude build me this tool: https://claude.site/artifacts/aaadab20-968a-4291-8ce9-6435f6d53f4c Claude transcript here. Amusingly it built it in Python first, then switched to JavaScript after I reminded it that I wanted “an interactive web app”. This is so useful, and so much fun! # As you can see, I’m a heavy user of this feature—I just described 14 projects produced in a single week. I’ve been using artifacts since they were released on 20th June (alongside the excellent Claude 3.5 Sonnet, still my daily-driver LLM) and I’m now at a point where I fire up a new interactive artifact several times a day. I’m using artifacts for idle curiosity, rapid prototyping, library research and to spin up tools that solve immediate problems. Most of these tools took less than five minutes to build. A few of the more involved ones took longer than that, but even the OpenAI Audio one took 11:55am to 12:07pm for the first version and 12:18pm to 12:27pm for the second iteration—so 21 minutes total. Take a look at my claude-artifacts tag for even more examples, including SVG to JPG/PNG, Markdown and Math Live Renderer and Image resize and quality comparison. I also have a dashboard of every post that links to my tools.simonwillison.net site, and the underlying simonw/tools GitHub repo includes more unlisted tools, most of which link to their Claude conversation transcripts in their commit history. I’m beginning to get a little frustrated at their limitations—in particular the way artifacts are unable to make API calls, submit forms or even link out to other pages. I’ll probably end up spinning up my own tiny artifacts alternative based on everything I’ve learned about them so far. If you’re not using artifacts, I hope I’ve given you a sense of why they’re one of my current favourite LLM-based tools. Posted 21st October 2024 at 2:32 pm · Follow me on Mastodon or Twitter or subscribe to my newsletter More recent articles Initial explorations of Anthropic's new Computer Use capability - 22nd October 2024 Running Llama 3.2 Vision and Phi-3.5 Vision on a Mac with mistral.rs - 19th October 2024 This is Everything I built with Claude Artifacts this week by Simon Willison, posted on 21st October 2024. Part of series How I use LLMs and ChatGPT Building a tool showing how Gemini Pro can return bounding boxes for objects in images - Aug. 26, 2024, 4:55 a.m. Notes on using LLMs for code - Sept. 20, 2024, 3:10 a.m. Video scraping: extracting JSON data from a 35 second screen capture for less than 1/10th of a cent - Oct. 17, 2024, 12:32 p.m. Everything I built with Claude Artifacts this week - Oct. 21, 2024, 2:32 p.m. javascript 683 projects 428 tools 20 ai 856 generative-ai 722 llms 714 ai-assisted-programming 70 anthropic 84 claude 89 claude-artifacts 15 claude-3-5-sonnet 31 Next: Initial explorations of Anthropic's new Computer Use capability Previous: Running Llama 3.2 Vision and Phi-3.5 Vision on a Mac with mistral.rs Colophon © 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024",
    "commentLink": "https://news.ycombinator.com/item?id=41929174",
    "commentBody": "Everything I built with Claude Artifacts this week (simonwillison.net)592 points by recvonline 22 hours agohidepastfavorite417 comments rty32 20 hours agoI'm sure there are plenty of examples like this, but one thing that I find really hard to deal with is to integrate such tools into existing codebase -- you can make all these things as standalone pages, but for a professional developer, you have certain standards and conventions, and often it takes a lot of work to review/revise the code to make it work with existing codebase, so much that you end up using inline completion just to help with obvious stuff or boilerplate. I woule rather spend 20% extra amount of time to write the code myself yet have confidence, than spend time tweaking the prompt or giving follow up instructions. reply Buttons840 19 hours agoparentWith a sufficiently advanced type system, you could lay out high level building blocks, such as function definitions, and let the LLM go wild, and then if things compile there's a high chance it's correct. Or maybe even a formal proof things are correct. I was blown away when I realized some Haskell functions have only one possible definition, for example. I think most people haven't worked with type systems like this, and there are type systems far more powerful than Haskell's, such as dependant types. There's not much reason to worry about low level quality standards so long as you know it's correct from a high level. I don't think we've seen what a deep integration between a LLM and a programming language can do, where the type system helps validate the LLM output, and the LLM has a type checker integrated into its training process. reply oblio 18 hours agorootparent> With a sufficiently advanced type system Is this a brother or a cousin of the \"sufficiently advanced compiler\"? :-) reply zahlman 17 hours agorootparentA component, if I correctly understand the proponents of such type systems. reply inopinatus 17 hours agorootparentprevif there is only one valid translation of the type constraints into executable code then what you have is a slow, expensive, and occasionally argumentative compiler it merely remains to build a debugger for your Turing-complete type system, and the toolchain will be ready for production reply tessierashpool9 7 hours agorootparentprevit certainly is a sister or niece of the \"sufficiently advanced technology\". reply MichaelBurge 18 hours agorootparentprevAnything on top of the Calculus of Constructions is usually enough. So it's not a moving target, and there are multiple implementations. reply fhdsgbbcaA 19 hours agorootparentprevThings I never want to hear about flight control systems before I board a plane: “if things compile there's a high chance it's correct” reply literalAardvark 18 hours agorootparentVery odd comment, since that's exactly what you do want to hear reply gloflo 13 hours agorootparentI'd rather hear: \"The compiled code has gone through all tests in the comprehensive, human-expert-written, standardized test suite correctly\" Compiling does not differentiate between True and False, so no safety for that escape pod door. reply literalAardvark 11 hours agorootparentI took that as part of the build process. But I definitely want as much as possible to be automated and formally correct, which is why I wrote what I wrote. reply xmprt 13 hours agorootparentprevThere's a lot of code that compiles but isn't correct. reply literalAardvark 11 hours agorootparentBecause we're using languages with flexibility but no correctness, but the vast performance advantage AI programming has over us could be used to manage the formal proofs for a verified toolchain. We're not quite there yet, but while regular programming is quite tough for AI due to how fuzzy it is, formal proofs are something AI is already very good at. reply ziggyzecat 10 hours agorootparentprevif-then-high-chance logic is for sex education & prototypes, not for airplanes carrying insured passengers reply skybrian 17 hours agorootparentprevThe functions for which there's only one implementation are trivial examples. It's not going to work for anything even slightly more complicated, like a function that returns a float. Even if you could, you probably wouldn't want to make any change a breaking change by exposing implementation details. reply rq1 11 hours agorootparentprevI did just that actually to: * build a codegen for Idris2 and a rust RT (a parallel stack \"typed\" VM) * a full application in Elm, while asking it to borrow from DT to have it \"correct-by-construction\", use zippers for some data structures… etc. And it worked! * Whilst at it, I built Elm but in Idris2, while improving on the rendering part (this is WIP) * data collators and iterators to handle some ML trainings with pausing features so that I can just Ctrl-C and continue if needed/possible/makes sense. * etc. At the end I had to rewrite completely some parts, but I would say 90% of the boring work was correctly done and I only had to focus on the interesting bits. However it didn’t deliver the kind of thorough prep work a painter would do before painting a house when asked for. It simply did exactly what I asked, meaning, it did the paint and no more. (Using 4o and o1-preview) reply anonzzzies 6 hours agorootparentany code to see? I like Idris so this would be interesting. reply rapind 14 hours agorootparentprevOh this is an interesting take. Haskell, F#, possibly Elm, etc. reply halfmatthalfcat 19 hours agorootparentprevI'm not sure how much things have changed but I tried to use GPT-4 when it first came out to build a library on top of Scala + Shapeless and it utterly failed. Unless you can somehow wire in an LSP per language as an agent and have it work through the type errors as it tries to create code, I can't see where we'll ever get to a place where LLMs can work with strongly typed languages and produce compliant code. Even with, the aforementioned \"have an LSP agent work through type errors\", it may be faster to just do it yourself than wait for an LLM to spit out what may be correct. reply nycdatasci 18 hours agorootparentDefinitely try Claude 3.5 Sonnet and o1-preview. They have succeeded for me where other models have failed. Also, use Cursor IDE. reply mlhpdx 13 hours agorootparentOh, I’ve found Claude 3.5 to be better but still pointless. To be specific, it generates code that does what I ask (roughly) but… - Has obvious bugs, many at runtime - Has subtle bugs. - Is inefficient. All of which it will generally fix when asked. But how useful is it if I need to know all the problems with its code beforehand? Then it responds with the same-ish wrong answer the next time. Still a long way to go IMO. reply csomar 13 hours agorootparentprevClaude 3.5 is good, however, it's \"Type comprehension\" is really basic. That was my experience with it when using Rust. It still can't create an internal mental model of the types and how to link them together. It'll also, at some points, start to heavily hallucinate functions and stuff. reply cft 17 hours agorootparentprevo1-mini is even higher in coding benchmarks than o1-preview. That has been my experience also. reply szundi 13 hours agorootparentprevYou know people work with what they work with. reply TechDebtDevin 13 hours agorootparentprevI'm sort of playing around with something like this in go for fun. reply fny 18 hours agoparentprevI find it helps if you treat the code generated as a third-party package with a well defined API. Then your role becomes gluing things together. It’s an approach similar to how I’ve dealt with junior devs in the past. You specify an interface for a class, provide examples as a spec, and you get what you want without colliding with the main project. For sanity’s sake, I keep these AI generated modules in single files just so it’s an easy copy and paste into ChatGPT. reply cube2222 19 hours agoparentprevWith something like the AI assistant in Zed you’d generally provide a few files the assistant can use as a reference. I’ve had good luck in having it follow the codebase’s style and standards this way. reply benwilber0 19 hours agorootparent+1 to the completions/inferences in Zed. It's the first editor that I feel (mostly) confident about just tabbing-through the AI completions with minimal prompting/re-editing. reply salviati 20 hours agoparentprevHave you tried https://aider.chat ? reply vbezhenar 19 hours agorootparentI tried it yesterday and wasn't successful. I spent like 30 minutes trying to explain to it to make a simple change. Every time it made this change and several others as well which I didn't ask for. I asked to undo those several other changes and it undoes everything or does other unrelated things. It works good until it doesn't. It's definitely a useful tool and I'll continue to learn to use it. However it is absolutely stupid at times. I feel there's very high bar to use it, much higher than traditional IDEs. reply ripley12 16 hours agorootparentWhich LLM were you using? I’ve had a great experience with Aider and Claude Sonnet 3.5 (which is not coincidentally at the top of the Aider leaderboard). reply esperent 16 hours agorootparentI've been using Claude dev VSCode extension (which just got renamed but I forget the new name), I think it's similar to Aider except that it works via a gui. I do find it very useful, but I agree that one of the main issues is preventing it from making unnecessary changes. For example, this morning I asked it to help me fix a single specific type error, and it did so (on the third attempt, but to be fair it was a tricky error). However, it persistently deleted all of the comments, including the standard licensing info and explanation at the top of the file, even when I end my instructions with \"DO NOT DELETE MY COMMENTS!!\". reply kbaker 14 hours agorootparentYou may want to peek at the system prompts Aider uses. I think this is part of the secret sauce that makes it so good. https://github.com/Aider-AI/aider/blob/main/aider/coders/edi... excerpt: \"\"\" Act as an expert software developer. Always use best practices when coding. Respect and use existing conventions, libraries, etc that are already present in the code base. {lazy_prompt} Take requests for changes to the supplied code. If the request is ambiguous, ask questions. Always reply to the user in the same language they are using. Once you understand the request you MUST: \"\"\" ... etc... reply freediver 19 hours agorootparentprevI am a big fan! reply kridsdale3 20 hours agorootparentprevCan those kinds of things work in monorepos with 50 million files? reply syntaxing 19 hours agorootparentThey use this thing called repo map[1]. I only used it for personal projects and it’s been great. You need to add the files you care about yourself, it’ll do its best and add additional files from the repo map if needed. Since it’s git based, it makes it very easy to keep track of the LLMs output. The agents is really well done too. I like to skip auto commit so I can “git reset —hard HEAD^1” if needed but aider has built in “undo” command too. [1] https://aider.chat/docs/repomap.html reply cdchn 18 hours agorootparentThats a cool idea, kind of reminds me of ctags. reply imjonse 13 hours agorootparentAider had actually used ctags to implement that feature before they switched to tree-sitter. reply ctoth 19 hours agorootparentprevCan you work in a repo with fifty million files? Can Git? I just checked on my Windows machine using Everything and there are 15,960,619 files total including every executable, image, datafile, &c. Out of curiosity what does your IDE do when you do a global symbol rename in a repository with fifty million files? I'm absolutely a real human, and I think this just might be too much context for me! Perhaps I am not general enough. reply dexwiz 17 hours agorootparentHaving worked on a codebase like that, you need to use some extra plugins to get git to work. And even then, it’s very slow. Like 15-30 seconds for a git status to run even with caching. Global renames with an IDE are impossible but tools like sed and grep still work well. Usually there is a module system that maps to the org structure and you don’t venture outside of your modules or dependency modules very often. reply achierius 17 hours agorootparentprevI thought this was common knowledge but I guess not: Google's monopoly famously has over a billion files. No, Git cannot handle it. Their whole software stack is developed around this from the ground up. But they are one of the largest software employers in the world, so quite a few engineers evidently do make do with 200x more than 50 million files. reply nasmorn 13 hours agorootparentMonopolyMonorepo This is the funniest typo possible in the context of google reply adamtaylor_13 19 hours agorootparentprevNo and neither can you. Like you, it works best with small, focused context. These tools aren’t magic. But they do certain tasks remarkably well. reply dartos 18 hours agorootparent> No and neither can you. People do work on monorepos with 50 million+ files, though… reply paradite 16 hours agorootparentprevI made a tool that allows you to use LLMs on large codebases. You can select which files are relevant and embed them into the prompt: https://prompt.16x.engineer/ Based on my personal experience it works well as long as each file is not too long. reply salviati 20 hours agorootparentprevI believe they can as long as you're able to identify a contained task that touches no more than a handful of files. Still very useful to automate some tedious work or refactoring if you ask me. reply jprete 20 hours agorootparentThat's effectively an answer of \"no\". reply sthatipamala 20 hours agorootparentI used to work in a monorepo of that size. All of the PRs I ever submitted touched a handful of files in my project’s subdirectory. reply raincole 19 hours agorootparentprevThat's effectively an answer of \"yes\". Or what \"yes\" looks like to you? It can do all the work itself, for a 50m-file monorepo, without a human guiding it which files to look at? If it were true then human programmers would have been considered obsoleted today. There would be exactly zero human programmers who make any money in 2025. reply rorytbyrne 19 hours agorootparentprevIt doesn't take the whole repo as context, it tries to guess which files to look at. So if you prompt with that in mind, it works well. Haven't tried it on a very large codebase though. You can also explicitly add files, if you know where work should be done. reply ziggyzecat 10 hours agorootparentprevyou can make it work. just think of the many approaches and you'll see that there are actually quite many viable ways to work around pseudo-infinite context. reply Volrath89 14 hours agoparentprevYou are right, except on the part about tweaking the prompt to get your desired code styling. The easier way to integrate into an existing code base is just to refactor the code yourself. AI gives a working version, you refactor and move on. For me this has been a huge productivity boost from writing everything from scratch reply inciampati 12 hours agoparentprevExactly. Use aider to do this. Tell claude or your favorite LLM to write a full plan to implement what you need in such a way that your coworker can implement it. Copy the result into aider, and check the results! reply richardw 19 hours agoparentprevDrag in a couple files and say “make a class that does X but use this format”. I absolutely don’t rely on it for lots of things but it’s absolutely capable of working with existing code. Claude is far better than OpenAI when dealing with sets of existing files. I also like that it’s outside of my IDE so I make the final changes. LLM’s love to just write tokens so I keep a fairly short leash. reply beefnugs 15 hours agoparentprevThis isn't for professional software developers. This is for managers, so they can shit out a one week test and then feel superior enough to pay software engineers less for the \"easy\" job they do. reply paradite 16 hours agoparentprevI built a tool specifically for integrating LLMs like Claude into existing codebase and daily coding workflow: https://prompt.16x.engineer/ reply hackernewds 13 hours agoparentprevYou spend 40-100 hours/wk at work. Ok to spend 2 hours to give Claude the info around those conventions. It should then save you 20-40 hours/wk reply codingwagie 20 hours agoparentprevcursor.sh, add context to the prompt reply rty32 15 hours agorootparentI haven't spent enough time with cursor specifically, but with other similar coding assistants, adding context can take some time. And often, even if it does save time, the action of \"adding context\" itself gets tiring and tedious so that you don't want to bother but instead just write the code yourself. It's about mental affordability. reply bboygravity 13 hours agoparentprevYou can feed it a bunch of your code style as part of a project and it will just adhere to that. reply Atotalnoob 17 hours agoparentprevJust tell it those conventions or standards. Using GitHub copilot, I just tell it to style its code like an example and it gets pretty close. reply M4v3R 21 hours agoprevIt's funny how we went from \"it's impossible for a computer to write meaningful code by itself\" to \"yawn, another one of these\" in like 2 years. reply HaZeust 21 hours agoparentI said this last year[1] and still FIRMLY believe it: \"It's even crazier to me that we've just... Accepted it, and are in the process of taking it for granted. This type of technology was a moonshot 2 years ago, and many experts didn't expect it in the lifetimes of ANYONE here - and who knew the answer was increasing transformers and iterating attention? And golly, there are a LOT of nay-sayers of the industry. I've even heard some folks on podcasts and forums saying this will be as short-lived and as meaningless as NFTs. NFTs couldn't re-write my entire Python codebase into Go, NFTs weren't ever close to passing the bar or MCAT. This stuff is crazy!\" 1 - https://news.ycombinator.com/item?id=37879730 reply cloogshicer 20 hours agorootparent> NFTs couldn't re-write my entire Python codebase into Go Neither can LLMs. They can produce output that looks like a plausible re-write of your codebase, but on closer inspection turns out to have many minor and major errors everywhere. The problem is that the closer inspection part is very often more work than writing the code by hand in the first place. There hasn't been enough evidence for me that this will be possible to fix. reply devjab 13 hours agorootparentI disagree with you on this. If you go through my history on LLM’s you’ll see that I didn’t consider them more than fancy auto-complete. I still think of it mainly as fancy auto-compete for a lot of things, but we’ve begun using Claude in our porting of our C to Rust. Claude does it really, really, well. You have to look it over, but it’s far more efficient than any one of us can without the assistance. I don’t have the exact numbers but we’re close to a 90% accuracy on what is accepted without corrections. We follow a YAGNI approach to our code architecture and abstractions, meaning it’s very straight forward with things happening where they are written and not in 9 million places like Clean Code lovers try to do. Our C services and Libraries are also fairly small and “one purpose”. I’m not sure you would be wrong on larger code bases, at least not right now. With what we see Claude do now though, I don’t think we’re far from a world where Software Developers are going to do significantly different work. I also think quite a lot of the stuff we do today will no longer exist. reply HaZeust 20 hours agorootparentprevI've used GPT-4 to do what I had said. I pasted the errors I was given, and did so for 2-3 more iterations, and it successfully ported critical in-house infrastructure from Python 3 to Go. reply tharant 19 hours agorootparentI feel like I’ve been gaslit by the entire GenAI industry that I’m just bad at prompt engineering. When I’m talking to an LLM about stuff unrelated to code-generation, I can get sane and reasonable responses—engaging and useful even. The same goes for image generation and even the bit of video generation I’ve tried. For me however, getting any of these models to produce reasonably sane code has proven elusive. Claude is a bit better than others IME but I can’t even get it to describe a usable project template and directory structure for anything other than very simple Scala, Java, or Python projects. The code I’m able to generate always needs dramatic and manual changes; even trying to get a model to refactor a method in the code it wrote within the current context window results in bugs and broken business logic. I dearly wish I knew how others are able to accomplish things like “it successfully ported critical in-house infrastructure from Python 3 to Go.”. To date, I’ve seen no actual evidence (aside from what are purported to be LLM-generated artifacts) that anything beyond generating (or RAG-ing existing code) is even possible. What am I missing? Is it unrealistic for me to assume that prompt engineering such a seemingly dramatic LLM-generated code rewrite is something that I could learn by example from others? If not, can somebody recommend resources related to learning how to accomplish non-trivial code generation? reply devjab 12 hours agorootparent> usable project template and directory structure This caught my eye and I’m genuinely curious about what you mean by it. Part of our success with Claude is that we don’t do abstractions, “perfect architecture”, DRY, SOLID and other religions that were written by people who sell consulting in their principles. If we ask LLMs to do any form of “Clean Code” or give them input on how we want the structure, they tend to be bad it. Hell, if you want to “build from the bottom” you’re going to have to do it over several prompts. I had Claude build a blood bowl game for me, for the fun of it. It took maybe 50 prompts. Each focusing on different aspects. Like, I wanted it to draw the field and add mouse clickable and movable objects with SDL2, and that was one prompt. Then you feed it your code in a new prompt and let it do the next step based on what you have. If the code it outputs is bad, you’ll need to abandon the prompt again. It’s nothing like getting an actual developer to do things. They can think for themselves and the probability engine won’t do any of that even if it pretends to. Their history for building things from scratch also seems to be quickly “tarnished” within the prompt context. Once they’ve done the original tasks I find it hard to get them to continue on it. reply tharant 11 hours agorootparent> This caught my eye and I’m genuinely curious about what you mean by it. Part of our success with Claude is that we don’t do abstractions, “perfect architecture”, DRY, SOLID and other religions Within my environment, some of those “religions” are more than a requirement; they’re also critical to the long-term maintenance of a large collection of active repositories. I think one of the problems folks tend to have with following or implementing a “religion” (by which I mean specific structural and/or stylistic patterns within a codebase) comes down to a fear of being stuck forever with a given pattern that may not fit future needs. There’s nothing wrong with iterating on your religion’s patterns as long as you have good documentation with thorough change logs; granted, that can be difficult or even out of reach for smaller shops. reply devjab 10 hours agorootparentMy personal problem with them is that after decades in enterprise software I’ve never seen them be beneficial to long-term maintenance. People like Uncle Bob (who haven’t actually worked in software engineering since 20 years before Python was invented) will respond to that sort of criticism with a “they misunderstood the principles”. Which is completely correct in many cases, but if so many people around the world misunderstand the principles then maybe the principles simply aren’t good? I don’t think any of them are inherently bad, but they lead to software engineering where people over complicate things. Building abstractions they might never need. I’ve specialised in the field of taking startups into enterprise, and 90% of the work is removing the complexity which has made their software development teams incapable of delivering value in a timely manner. Some of this is because they build infrastructures as though they were Netflix or Google, but a lot of times it’s because they’ve followed Clean Code principles religiously. Abstractions aren’t always bad, but you should never abstract until you can’t avoid it. Because two years down into your development you’ll end up with code bases that are so complex that it makes them hard to work with. Especially when you get the principles wrong. Which many people do. Over all though, we’ve had 20 years of Clean Code, SOLID, DRY and so on, and if you look at our industry today, there is no less of a mess in software engineering than there were before. In fact some systems still run on completely crazy Fortran or COBOL because nobody using “modern” software engineering have been capable of replacing them. At least that’s the story in Denmark, and it hasn’t been for a lock of trying. I think the main reason many of these principles have become religions is because they’ve created an entire industry of pseudo-jobbers who manage them, work as consultants and what not. All people who are very good at marketing their bullshit, but also people who have almost no experience actually working with code. Like I said, nothing about them are inherently bad. If you know when to use which parts, but almost nobody does. So to me the only relevant principle is YAGNI. If you’re going to end up with a mess of a code base anyway, you might as well keep it simple and easy to change. I say this as someone who works as an external examiner for CS students, where we still teach all these things that so often never work. In fact a lot of these principles were things I was thought when I took my degree, and many haven’t really undergone any meaningful changes with the lessons learned since their initial creation. reply HaZeust 18 hours agorootparentprev> If not, can somebody recommend resources related to learning how to accomplish non-trivial code generation? Learn how to think ontologically and break down your requests first by what you're TRULY looking for, and then understand what parts would need to be defined in order to build that system -- that \"whole\". Here's some guides: 1.) https://platform.openai.com/docs/guides/prompt-engineering 2.) https://www.promptingguide.ai/ reply tharant 17 hours agorootparentThank you for the links! > Learn how to think ontologically and break down your requests first by what you're TRULY looking for, and then understand what parts would need to be defined in order to build that system -- that \"whole\". Since I’m dealing with models rather than other engineers should I expect the process of breaking down the problem to be dramatically different from that of writing design documents or API specs? I rarely have difficulty prompting (or creating useful system prompts for) models when chatting or doing RAG work with plain English docs but once I try to get coherent code from a model things fall apart pretty quickly. reply HaZeust 17 hours agorootparentThat's actually a solid question! You can probably ask GPT to AI-optimize a standard technical spec you have and to \"ask clarifying questions in order to optimize for the best output\". I've done that several times with past specs I've had and it was quite a fruitful process! reply tharant 17 hours agorootparentGreat idea. I’ve used that tactic in the past for non-code related prompts; not sure why I didn’t think of trying it with my code-generation prompting. I’ll give it a shot. reply hackernewds 13 hours agorootparentthe \"ask me what info you're missing\" strategy works very well, since the AI will usually start the task every time to avoid false positives of asking a question. and then it also asks very good questions, I then realize were necessary info reply galaxyLogic 12 hours agorootparentprevSounds a bit like how Agile used to be. If it's not working, you're not doing it right. reply joquarky 15 hours agorootparentprevI find it to be very useful for functional programming since the limited scope aligns with the limited LLM context. reply tharant 14 hours agorootparentAssuming you mean the paradigm often known as FP (which makes use of concepts from the Lambda Calculus and Category Theory) and languages like Scala and Haskell that support Pure FP, well… my experience in trying to get LLMs to generate non-trivial FP (regardless the purity) has been entirely useless. I’d love to see an example of how you’re able to get useful code that is non-trivial—by which I mean code that includes useful business logic instead of what’s found in your typical “Getting Started” tutorial. reply galaxyLogic 12 hours agorootparentThat's probabaly because AI has read all those \"Getting Started\" -tutorials. reply worthless-trash 15 hours agorootparentprevYou and me both man, Either I'm speaking a different language or I'm simply really bad at explaining what I need. I'd love to see someone actually do this on video. reply tharant 14 hours agorootparentIndeed. I’ve yet to run across an actual demonstration of an LLM that can produce useful, non-trivial code. I’m not suggesting (yet) that the capabilities don’t exist or that everyone is lying—the web is a big place after all and finding things can be difficult—but I am slowly losing faith in the capability of what the industry is selling. It seems right now one must be deeply knowledgeable of and specialized in the ML/AI/NLP space before being capable of doing anything remotely useful with LLM-based code generation. reply grbsh 6 hours agorootparentI think there is something deeper going on: “coding” is actually 2 activities: the act of implementing a solution, and the act of discovering the solution itself. Most programmers are used to doing both at once. But to code effectively with an LLM, you need to have already discovered the solution before you attempt to implement it! I’ve found this to be the difference between writing 50+ prompts / back and for the to get something useful, and when I can get something useful in 1-3 prompts. If you look at Simon’s post, you’ll see that these are all self-contained tools, whose entire scope has been constrained from the outset of the project. When you go into a large codebase and have to change some behavior, 1) you usually don’t have the detailed solution articulated in your mind before looking at the codebase. 2) That “solution” likely consists of a large number of small decisions / judgements. It’s fundamentally difficult to encode a large number of nuanced details in a concise prompt, making it not worth it to use LLMs. On the other hand, I built this tool: https://github.com/gr-b/jsonltui that I now use every day almost entirely using Claude. “CLI tool to visualize JSONL with textual interface, localizing parsing errors” almost fully qualifies this. In contrast, my last 8 line PR at my company, while it would appear much simpler on the surface level, contains many more decisions, not just of my own, but reflecting team conversations and expectations that are not written down anywhere. To communicate this shared implicit context with Claude would be so much more difficult than to perform the change myself. reply simonw 14 hours agorootparentprevI think https://tools.simonwillison.net/openai-audio is useful and non-trivial. reply tharant 13 hours agorootparentYou’re probably right but I’m far more interested in seeing things like how you prompted the model to produce your audio tool’s code. Did you have a design doc or did you collaborate with the model to come up with a design and its implementation ad-hoc? How much manual rewriting did you do. How much worked with little to no editing? How much did you prompt the model to fix any bugs it created? How successful was it? Did you specify a style guide up front or just use what it spat out and try to refactor later? How did that part go? You see where I’m going? Oh, wow, it honestly just occurred to me that examples of how to prompt a model to produce a certain kind of content might be considered, more or less, some kind of trade secret vaguely akin to a secret recipe. That would be a bit depressing but I get it. reply simonw 12 hours agorootparentHere are the full Claude transcripts I used to build the OpenAI Audio app: - https://gist.github.com/simonw/0a4b826d6d32e4640d67c6319c7ec... - most of the work - https://gist.github.com/simonw/a04b844a5e8b01cecd28787ed375e... - some tweaks Lots more details in my full post about it here: https://simonwillison.net/2024/Oct/18/openai-audio/ reply fragmede 13 hours agorootparentprevdetails at: https://simonwillison.net/2024/Oct/18/openai-audio/ reply malfist 18 hours agorootparentprevI think it's level of expertise. You are an expert in coding (10,000 hours and all that) so you know when the code is wrong. Everything else you put into it and get plausible sounding response is just as incorrect as the plausible sounding responses to coding questions, just you know enough to spot the errors. LLMs are insidious, it feeds into \"everything is simple\" concept a lot of us have of the world. We ask an LLM for a project plan and it looks so good we're willing to fire our TPM, or a TPM asks the LLM for code and it gives them code that looks so good they question the value of an engineer. In reality, the LLM cannot do either role's job well. reply tharant 18 hours agorootparent> You are an expert in coding (10,000 hours and all that) so you know when the code is wrong. While I appreciate the suggestion that I might be an expert, I am decidedly not. That said, I’ve been writing what the companies I’ve worked for would consider “mission critical” code (mostly Java/Scala, Python, and SQL) for about twenty years, I’ve been a Unix/Linux sysadmin for over thirty years, and I’ve been in IT for almost forty years. Perhaps the modernity and/or popularity of the languages are my problem? Are the models going to produce better code if I target “modern” languages like Go/Rust, and the various HTML/JS/FE frameworks instead of “legacy” languages like Java or SQL? Or maybe my experience is too close to bare metal and need to focus on more trivial projects with higher-level or more modern languages? (fwiw, I don’t actually consider Go/Rust/JS/etc to be higher-level or more “modern” languages than the JVM languages with which I’m experienced; I’m open to arguments though) > LLMs are insidious, it feeds into \"everything is simple\" concept a lot of us have of the world. Yah, that’s what I mean when I say I feel gaslit. > In reality, the LLM cannot do either role's job well. I am aware of this. I’m not looking for an agent. That said, am I being too simplistic or unreasonable in expecting that I too could leverage these models (albeit perhaps after acquiring some missing piece of knowledge) as assistants capable of reasoning about my code or even the code they generate? If so, how are others able to get LLMs to generate what they claim are “deployable” non-trivial projects or refactorings of entire “critical” projects from the Python language to Go? Is someone lying or do I just need (seemingly dramatically) deeper knowledge of how to “correctly” prompt the models? Have I simply been victim of (again, seemingly dramatically) overly optimistic marketing hype? reply vessenes 17 hours agorootparentWe have a similar amount of IT experience, although I haven't been a daily engineer for a long time. I use aider.chat extensively for fun projects, preferring the Claude backend right now, and it definitely works. This site is 90% aider, give or take, the rest my hand edits: https://beta.personacollective.ai -- and it involves solidity, react, typescript and go. Claude does benefit from some architectural direction. I think it's better at extending than creating from whole-cloth. My workflow looks like: 1) Rough out some code, say a smart contract with the key features 2) Tell claude to finish it and write extensive testing. 3) Run abigen on the solidity to get a go library 4) Tell claude to stub out golang server event handlers for every event in the go library 5) Create a react typescript site myself with a basic page 6) Tell claude to create an admin endpoint on the react site that pulls relevant data from the smart contracts into the react site. 6.5) Tell claude to redesign the site in a preferred style. 7) Go through and inspect the code for bugs. There will be a bunch. 8) For bugs that are simple, prompt Claude to fix: \"You forgot x,y,z in these files. fix it.\" 9) For bugs that are a misunderstanding of my intent, either code up the core loop directly that's needed, or negotiate and explain. Coding is generally faster. Then say \"I've fixed the code to work how it should, update X, Y, Z interfaces / etc.\" 10) for really difficult bugs or places I'm stumped, tar the codebase up, go to the chat interface of claude and gpto1-preview, paste the codebase in (claude can take a longer paste, but preview is better at holistic bugfixing), and explain the problem. Wait a minute or two and read the comments. 95% of the time one of the two LLMS is correct. This all pretty much works. For these definitions of works: 1) It needs handholding to maintain a codebase's style and naming. 2) It can be overeager: \"While I was in that file, I ...\" 3) If it's more familiar with an old version of a library you will be constantly fighting it to use a new API. How I would describe my experience: a year ago; it was like working with a junior dev that didn't know much and would constantly get things wrong. It is currently like working with a B+ senior-ish dev. It will still get things wrong, but things mostly compile, it can follow along, and it can generate new things to spec if those requests are reasonable. All that to say, my coding projects went from \"code with pair coder / puppy occasionally inserting helpful things\" to \"most of my time is spent at the architect level of the project, occasionally up to CTO, occasionally down to dev.\" Is it worth it? If I had a day job writing mission critical code, I think I'd be verrry cautious right now, but if that job involved a lot of repetition and boiler plate / API integration, I would use it in a HEARTBEAT. It's so good at that stuff. For someone like me who is like \"please extend my capacity and speed me up\" it's amazing. I'd say I'm roughly 5-8x more productive. I love it. reply tharant 17 hours agorootparentThis is very good insight, the likes of which I’ve needed; thank you. Your workflow is moderately more complex and definitely less “agentic” than I’d expected/hoped but it’s absolutely not out of line with the kind of complexity I’m willing to tackle nor what I’d personally expect from pairing with or instructing a knowledgeable junior-to-mid level developer/engineer. reply vessenes 11 hours agorootparentTotally. It’s actually an interesting philosophical question: how much can we expect at different levels of precision in requirements, and when is code itself the most efficient way to be precise? I definitely feel my communication limits more with this workflow, and often feel like “well, that’s a fair, totally wrong, but fair interpretation.” Claude has the added benefit that you can yell at it, and it won’t hold it against you. You know, speaking of pairing with a junior dev. reply namanyayg 14 hours agorootparentprevReplace all this with Cursor, chat to Claude inside the project directory and talk to multiple files at once It can also index docs pages of newer APIs and/or search the web to find latest info of newer libraries, so you won't struggle with issue #3 reply vessenes 11 hours agorootparentAgreed cursor is good to very good, I’m just extremely tied to my old man vi workflow. reply swat535 19 hours agorootparentprevGPT-4 has no understanding of logic what-so-ever, let's stop pretending it does. If it gives you a solution that is wrong, you have to point it at, then it will give you a second version , if that is also wrong, it will then slightly modify the same solutions over and over again instead of actually fixing the issue. It gets stuck in a loop of giving you 2-3 versions of the same solution with the slightly different outputs. It's only useful for boilerplate code and even then, you have to clean it up.. reply GaggiX 18 hours agorootparentThen you should try Claude, I have never seen it get stuck in a loop, at some point it would just rewrite everything if it came to that. reply ants_everywhere 18 hours agorootparentprevGPT-4 is pretty bad at generating Python. It kind of works as well as combining 2-3 stack overflow questions, but it can't tell that the combination is sane. I mostly agree with what the others are saying. It can generate boilerplate and it can generate simple API calls when there are lots of examples in the training set. Generating Go is probably easier because at least you get compiler feedback. Right now the only place it saves me time are with languages I don't know at all and with languages like Bash and SQL where I just can't bring myself to care enough to remember the long tail of more esoteric points that I don't use every day. reply fhdsgbbcaA 19 hours agorootparentprevThat just means the bugs are so subtle you haven’t found them yet, they are there and unspooling the damage may be very painful. reply HaZeust 18 hours agorootparentThat's rather assuming of you, they're there no less than they would be for a human's programming - and VERY likely no more. reply kuhewa 17 hours agorootparentBut one is trying to write good-enough code. The other is trying to write good-enough-looking code. The probability of pain arising from the bugs of the latter is probably greater. reply HaZeust 17 hours agorootparentI'd actually love to see a benchmark on this - we're just speculating now. reply kuhewa 17 hours agorootparentThe work demonstrating the Frankfurtian Bullshit nature of generated prose would suggest as much, given the architecture is the same for code outputs it seems like a fair assumption until it is demonstrated otherwise. reply IshKebab 19 hours agorootparentprevI have also tried to do this and it didn't work as smoothly as you claim. I don't think either of you are wrong; it just heavily depends on the complexity of the app and how familiar LLMs are with it. E.g. rewriting a web scraper, CRUD backend or a build script? Sure, maybe. Rewriting a bootloader, compiler or GUI app? No chance. reply josephg 18 hours agorootparentIts funny seeing the goalposts move in real time. \"Yes, AI can make human sounding sentences, but can it play chess?\" \"Well yes, it can play chess. But no computer can beat a human grandmaster at chess.\" \"Well it beat Kasperov - but it has no hope of beating a human at Go.\" \"Its funny - it can beat humans at go but still can't speak as well as a toddler.\" \"Alright it can write simple problems, but it introduces bugs in anything nontrivial, and it can't fix those bugs!\" I write bugs in anything nontrivial too! My human advantages are currently that I'm better at handling a large context, and I can iterate better than the computer can. But - seriously, do you think innovation will stop here? Did the improvements ever stop? It seems like a pretty trivial engineering problem to hook an AI up to a compiler / runtime so it can iterate just like we can. Anthropic is clearly already starting to try that. I agree with you, today. I used claude to help translate some rust code into typescript. I needed to go through the output with a fine toothed comb to fix a lot of obvious bugs and clean up the output. But the improvement over what was possible with GPT3.5 is totally insane. At the current rate of change, I give it 5-10 years before we can ask chatgpt to make a working compiler from scratch for a novel language. reply simonw 18 hours agorootparentYou may appreciate this quote about constantly moving the goalposts for AI: \"There is superstition about creativity, and for that matter, about thinking in every sense, and it's part of the history of the field of artificial intelligence that every time somebody figured out how to make a computer do something - play good checkers, solve simple but relatively informal problems - there was a chorus of critics to say, but that's not thinking.\" That's from 1979! https://simonwillison.net/2024/Sep/13/pamela-mccorduck-in-19... reply zahlman 16 hours agorootparentI side with Roger Penrose on this one. I'm still not convinced it's \"thinking\", and don't expect I ever will be, any more than a book titled \"I am Thinking\" would convince me that it's thinking. reply budgi4 13 hours agorootparentSeparate thinking from conscious. I.e. We have built machines which are processing data similar to our thinking process. They are not conscious. reply zahlman 12 hours agorootparentMy point is that I don't accept the concept of unconscious thought. \"Processing data similar to our thinking process\" doesn't make it \"thinking\" to me, even if it comes to identical conclusions - just like it wouldn't be \"thinking\" to just read off a pre-recorded answer. The idea of ChatGPT being asked to \"think\" just reminds me of Pozzo from Waiting for Godot. reply josephg 16 hours agorootparentprevWhy do you care if its thinking or not? reply zahlman 15 hours agorootparentI don't, in and of itself. I care that other people think that passing increasingly complicated tests of this sort is equivalent to greater proof of such \"thought\", and that the nay-sayers are \"moving the goalposts\" by proposing harder tests. I don't propose harder tests myself, because it doesn't make sense within my philosophy about this. When those tests are passed, to me it doesn't prove that the AI proponents are right about their systems being intelligent; it proves that the test-setters were wrong about what intelligence entails. reply josephg 13 hours agorootparent> ... passing increasingly complicated tests of this sort is equivalent to greater proof of such \"thought\", Nobody made any claim in this thread that modern AIs have thoughts. What these (increasingly complicated) tests do is demonstrate the capacity to act intelligently. Ie, make choices which are aligned with some goal or reward function. Win at chess. Produce outputs indistinguishable from the training data. Whatever. But you're right - I'm smuggling in a certain idea of what intelligence is. Something like: Intelligence is the capacity to select actions (outputs) which maximise an externally defined given reward function over time. (See also AIXI: https://en.wikipedia.org/wiki/AIXI ). > When those tests are passed, [..] to me it proves that the test-setters were wrong about what intelligence entails. It might be helpful for you to define your terms if you're going to make claims like that. What does intelligence mean to you then? My best guess from your comment is something like \"intelligence is whatever makes humans special\". Which sounds like a useless definition to me. Why does it matter if an AI has thoughts? AI based systems, from MNIST solvers to deep blue to chatgpt have clearly gotten better at something. Whatever that something is, is very very interesting. reply zahlman 12 hours agorootparent>But you're right - I'm smuggling in a certain idea of what intelligence is. Yes, you understand me. I simply come in with a different idea. >AI based systems, from MNIST solvers to deep blue to chatgpt have clearly gotten better at something. Whatever that something is, is very very interesting. Certainly the fact that the outputs look the way they do, is interesting. It strongly suggests that our models of how neurons work are not only accurate, but creating simulations according to those models has surprisingly useful applications (until something goes wrong. Of course, humans also have an error rate, but human errors still seem fundamentally different in kind.) reply josephg 5 hours agorootparentModern neural networks have very little to do with their biological cousins. It makes a cute story, but it’s over claimed. Transformers and convolution kernels think in very different ways than the human mind. reply zahlman 4 hours agorootparentThat gives me less reason to accept that it qualifies as \"thinking\". reply okwhatnow3773 13 hours agorootparentprevI agree. Some people think Google is sentient I guess? Data retrieval and mangling is not all we do, luckily. reply IshKebab 16 hours agorootparentprevWell you can't have a conversation with a book... I don't understand your comment. > I'm still not convinced birds can fly any more than a rock shaped like a bird would convince me that it's flying. reply Eisenstein 16 hours agorootparentprevIs there anything that a non-human could do that would cause you to accept that it was thinking? reply zahlman 15 hours agorootparentOf course. Animals demonstrate sapience, agency and will all the time. reply Eisenstein 14 hours agorootparentSo, if a machine demonstrated sapience, agency, and will, then you would grant that it could think? reply zahlman 12 hours agorootparentYes; but if you showed me a machine that you believed to be doing those things, given my current model, I wouldn't agree with you that it was. reply Eisenstein 10 hours agorootparentYou are saying that even if it did the same thing that animals do that you attribute to thinking, you would refuse to acknowledge it could be thinking? Is there something particularly unique about biological circuits that allow thought, as opposed to electronic ones? reply zahlman 6 hours agorootparentI believe so, yes. No, I can't explain what it is. (Because I think they're obvious follow-up questions: No, I don't consider myself particularly religious. Yes, I do believe in free will.) reply josephg 5 hours agorootparent… But you believe there’s something special about intelligence grounded in biology that can’t be true of intelligence grounded in silicon? That just sounds like magical thinking to me. reply IshKebab 4 hours agorootparentI agree. Thinking is clearly a compositional process and computers are Turing complete so it seems like and impossibility to me. Unless you reach for some quantum microtubule woo... reply galaxyLogic 12 hours agorootparentprev> At the current rate of change, ... We've seen that the rate of change went up hugely when LLMs came around. But the rate of change was much lower before that. It could also be much slower for the foreseeable future. LLMs are only as good as their training materials. But a lot of what programmers do is not documented anywhere, it happens in their head, and it is in response to what they see around them, not in what they scrape from the web or books. Maybe what is needed is for organizations to start producing materials for AI to learn from, rather than assuming that all they need is what they find on the web? How much of the effort to \"train\" AI is just letting them consume the web, and how much is concsiously trying create new learning materials for AI? reply josephg 5 hours agorootparentIt could slow down again. We don’t know. But the people working at OpenAI seem to believe the models will keep improving for the foreseeable future. The “we’ll run out of training data” argument seems overblown. reply danparsonson 13 hours agorootparentprev> Its funny seeing the goalposts move in real time. Another way to look at it is that we're refining our understanding of the capabilities of machine learning in real time. Otherwise one could make basically the same argument about any field that progresses - take our theories of gravity for example. Was Einstein moving the goalposts? Or was he building on previous work to ask deeper questions? Set against the backdrop of extraordinary claims about the abilities of LLMs, I don't think it's unreasonable to continue pushing for evidence. reply okwhatnow3773 13 hours agorootparentprevIndeed, the constant goal shifting is tiresome. I mean, we first put up a ladder and we could reach the peaches! Next, we put a ladder next to the apple tree and we could pluck those. Now, in their incessant goal post moving people said, great, now setup a ladder to the moon. There is no reason to assume this won’t work. None at all. People are just complaining and being angry at losing their fancy jobs. More specific: it cannot learn, because it has no concept of learning from first principles. There is no way out, not even a theoretical one. reply IshKebab 17 hours agorootparentprevYeah I totally agree with you. Lots of goalpost moving, and it is absolutely insane what it can do today and it will only improve. It just can't translate the kinds of programs I write between languages on its own. Today. reply wrtasfg 18 hours agorootparentprevOf course it can stop, once legislation catches up and forbids IP theft using a thinly disguised probabilistic and compressed database of other people's code. reply edouard-harris 18 hours agorootparent> a thinly disguised probabilistic and compressed database of other people's code Speaking as a software engineer, I feel seen. reply josephg 17 hours agorootparentprevYou really think those laws are coming? That the US and Chinese governments will force AI companies to put the genie back in the bottle? I think you're going to be very disappointed. reply VirusNewbie 20 hours agorootparentprevBut how do you know those were the only errors? reply HaZeust 20 hours agorootparentWhat's this question even mean? Because they're the only ones that came up in the debugger portion of the IDE, the output serves the intended purposes, the logging and error handling that I wanted to include were in the initial write-up prompt, and I could read the code it wrote because I partially knew the outputted language - and when I wasn't sure of a line, I asked it for clarification and a source from a reputable knowledgebase of the language, and GPT provided it? reply majormajor 19 hours agorootparentI would've expected an answer involving \"an exhaustive suite of test cases still passed\" - \"it looks right\" is a low bar for any complex software project these days. It's the long, long, long tail of edge cases - not just porting them, but even identifying them to test - that slow or doom most real-world human rewrites, after all. reply josephg 18 hours agorootparentTrue - but you can ask the chatbot to write a test suite too. reply what 16 hours agorootparentThis doesn’t really make sense? If I can’t trust the code it writes, why should I trust that it can write a comprehensive test suite? reply simonw 16 hours agorootparentBecause you can read the test suite to check what it's testing, then break the implementation and run the tests and check they fail, then break a test and run them and check that fails too. You have to review the code these thing write for you, just like code from any other collaborator. reply josephg 16 hours agorootparentprevBecause the bugs in its code and the bugs in its test suites usually don't line up and cancel each other out. reply VirusNewbie 18 hours agorootparentprev>nd I could read the code it wrote because I partially knew the outputted language oh ok. this is quite different than what I was picturing. So far this is my favorite use case of LLMs, they seem very good at this. I mistakenly thought you were using it almost as a black box compiler. \"look it ported it to Rust, I can't make sense of it, but it seems to work and no segfaults!\". What you say sounds pretty sensible, and it is a very nice practical example of the power of LLMs. reply albedoa 18 hours agorootparentprevThat you don't know what the question means should have all of us reevaluating our confidence in every one of your claims in this thread. reply HaZeust 18 hours agorootparentOnly sharing my experiences and observation in the upcoming trajectory of these tools; you're free to have your own. I will tell you this, the second most-used language in my day-to-day (TypeScript) is one that I've seldom sat down and learned, rely on AI for me to create and streamline, and has not given me any issues for 16 months running (since the project has started). AI won't replace jobs; but someone who knows how to use it better will. reply sergiotapia 20 hours agorootparentprevyou're never going to convince people that are in an ideological battle against AI. reply bigstrat2003 20 hours agorootparentAnd you're never going to convince anyone if you assume without evidence that they are ideologically opposed to AI. Lots of people have tried these tools with an open mind and found them to not be useful, you need to address those criticisms rather than using a dismissive insult. reply HaZeust 20 hours agorootparentWhat evidence would you like? You're posting on a thread that hyperlinks to a list of code and Claude Artifacts for pet-projects that can make thousands a month with some low-effort PPC and an AdWords embed, and some mid-size projects that can be anything from grounds to a promotion at a programming role - to the MVP for a PMF-stage startup. What, specifically, would pivot your pre-conceived notions? reply achierius 17 hours agorootparentAre you serious about \"thousands a month\"? I don't mean to be hostile, I'm just truly surprised -- if the bar were that low (not that these apps aren't impressive, but most engineers write useful apps from time to time) I would expect the market to be rather packed reply HaZeust 16 hours agorootparentNah, most are hundreds a month - a few golden geese can break the thousand barrier, though. But, regardless, have a few of those sites up, and you're making good side income. reply tharant 13 hours agorootparentprev> What, specifically, would pivot your pre-conceived notions? A live or unedited demonstration of how a non-trivial (doesn’t have to be complex, but should be significantly more interesting than the “getting started” tutorials that litter the web) pet-project was implemented using these models. reply simonw 12 hours agorootparentThe point of my post here was to provide 14 of those. Some of them are trivial but I'd argue that a couple of them - the OpenAI Audio one and the LLM pricing calculator - go a bit beyond \"getting started\". If you want details of more complex projects I've written using Claude here are a few - in each case I provide the full chat transcript: - https://simonwillison.net/2024/Aug/8/django-http-debug/ - https://simonwillison.net/2024/Aug/27/gemini-chat-app/ - https://simonwillison.net/2024/Aug/26/gemini-bounding-box-vi... - https://simonwillison.net/2024/Aug/16/datasette-checkbox/ - https://simonwillison.net/2024/Oct/6/svg-to-jpg-png/ reply tharant 11 hours agorootparentThank you! I have an ugly JS/content filter running that mogrifies some websites such that I miss the formatting completely; I didn’t recognize you had chat session content included on the page. That said, after looking at a couple of your sessions, I don’t see anything you’re doing that I’m not—at least in terms of prompting. Your prompts are a bit more terse than mine (I can be long-winded so I’ll give brevity a try with my next project) but the structure and design descriptions are still there. That would suggest the differences in our experience boils down to the languages with which we choose or are required to work; maybe there’s a stylistic or cultural difference in how one should prompt a model in order to generate a Python project and how one should prompt for a Haskel or Scala/Java project; surely not though, right? I’m not giving up and I’ll keep playing with these models but for now, given my use-case at least, they still seem to be far more capable at rubber-ducking with me than they are as a pair programming partner. reply inexcf 20 hours agorootparentprevDid you even look at the artifacts? Its a bunch of things a beginner would do on their first day programming. How do you make thousands a month from 1 library call to solve a qr code. A promotion for building an input field and calling a json to yaml converter library? reply HaZeust 19 hours agorootparentMillions of laypersons a month search \"convert (file type) to (file type) online\" and just smack an AdWords embed on their site for it. Millions of people want a QR code's embedded link in their camera roll, without access to a camera that's pointing at it. You'd be surprised how big the \"(simple task) online\" search query market is, and how much they are usually multi-visit monthly customers, and how much their ad space is worth. I cannot stress this enough, just because it's simple does not mean it's not lucrative. reply inexcf 19 hours agorootparentYou should do it then. Besides all of this is completely besides the point. This isnt useful for a programmer. These examples are barely useful for a layperson. And said layperson is paying money and time for this. reply HaZeust 18 hours agorootparentI have, that's how I'm telling you the way you can, too. reply inexcf 10 hours agorootparentAny way or intention to prove that? Wheres you \"convert (filetype) project\"? Not to attack you but from your profile it sounds more like your the typical marketing grifter talking big. Why is none of those projects in the list you mention there? Looking deeper you got lots of projects with parts of your websites just broken and seem to be peddling what looks like life insurance scams. reply HaZeust 2 hours agorootparentSome of my projects are public, most are private. The ones that will typically do me better in people networking and/or will bolster my portfolio, are the ones I share publicly. For most of my projects, private is the default. With a profile like yours, I'm sure you can understand. Sure, there's probably more projects of mine, over the years, that are more broken than not. I've cast several wide nets for product creations and iterations over the years, and kept maintaining the more \"fittest\" of the bunch. Billit's probably the only one that's broken AND I have no control over it; I sold it. I don't know what else to tell you here, perhaps you value a lesser repertoire with higher rigidity? I'm not sure how to address your pre-conceived notions that a single industry I've worked in, at large, is a scam. Also, the one company mentioned in life insurance doesn't have a backlink on Lead EnGen - so I especially don't know what you're talking about when you say \"peddling\". reply farts_mckensy 18 hours agorootparentprevThe goal posts keep shifting. It's so obvious to anyone who's paid attention to this space for a few years. reply inexcf 10 hours agorootparentExcept my goalposts never shifted. And my point stands, these are extremely trivial examples. reply tharant 13 hours agorootparentprevGoalposts shift; growth is critical to being (staying?) an intelligent species. reply tharant 13 hours agorootparentprev> You'd be surprised how big the \"(simple task) online\" search query market is, and how much they are usually multi-visit monthly customers, and how much their ad space is worth. Not surprised at all; my inability to find examples of /how/ someone might get an LLM to produce—or even intelligently collaborate on—something useful, well… it says a lot about how much junk is out there contributing to the noise. reply simonw 18 hours agorootparentprevI'd like to see a beginner build this: https://tools.simonwillison.net/openai-audio reply inexcf 9 hours agorootparentIt's definitely not as trivial as the json converter. But not anywhere even close to complex. Recording audio is very simple, calling a remote API is too. The complex part is encoding the WAV blob. But that is just knowledge about the format with the exact code snippet that claude uses found in the first stack overflow answer. And it is strange that Claude picked the AudioRecorder when the MediaRecorder exists. I'd wager a beginner would have used the latter(i don't use javascript and am not better than a beginner in any way, but i found that) since it outputs a straight wav file and doesn't need the encoding step. And since the data isn't streamed to OpenAI there's no need for the audio chunks that AudioRecorder provides. So Claude did it in an unnecessarily complex way, that doesn't make the problem complex. reply newswasboring 19 hours agorootparentprev> Its a bunch of things a beginner would do on their first day programming. Is this an exaggeration? Because this is absolutely not true. I'm a beginner in JavaScript and other web stuff and I absolutely can't build it in many days. reply inexcf 19 hours agorootparentYou better check the code, mate. The meat of what most of it does is a one liner calling jsQR or some other imported lib to do the real work. I am not exaggerating in the slightest. reply newswasboring 19 hours agorootparentDude. I don't judge my knowledge after the answer is given to me. If I was the junior programmer assigned to the author and they were having this chat with me I am telling you as a beginner I wouldn't be able to do it. Of course if you show me the answers I will think I can do it easy, because answers in programming are always easy (good answers anyways). It's the process of finding the answer that is hard. And I'm not a bad programmer either, I'm at least mediocre, I'm just unfamiliar with web technology. reply inexcf 19 hours agorootparentI am of the firm believe that you can put \"JavaScript scan qr code\" in a search engine and arrive at your goal. The answers range from libraries to code snippets basically the same as those created by Claude. Using the same libraries. I feel like googling every step would be faster than trying to get it right with LLMs, but that is a different point. I've seen a complete no-code person install whisper x with a virtual Python environment and use it for realtime speech to text in their Japanese lessons, in less than 3 hours. You can do a simple library call in JavaScript. reply simonw 18 hours agorootparent\"I feel like googling every step would be faster than trying to get it right with LLMs\" Why don't you give that a go? See if you can knock out a QR code reading UI in JavaScript in less than 3 minutes, complete with drag-and-drop file opening support. (I literally built this one in a separate browser tab while I was actively taking notes in a meeting) I say three minutes because my first message in https://gist.github.com/simonw/c2b0c42cd1541d6ed6bfe5c17d638... was at 2:45pm and the final reply from Claude was at 2:47pm. reply tharant 12 hours agorootparentThat gist is pretty close to what I’ve been looking for; thank you! Examples of a chat session that resulted in a usable project are /very/ helpful. Unfortunately, the gist demonstrates, to me at least, that the models don’t know enough about the languages I wish to use. Those prompts might be sufficient enough to result in deployable HTML/JS code comprised of a couple hundred lines of code but that’s fairly trivial in my definition. I’m not trying to be rude or disrespectful to you; within my environment, non-trivial projects typically involve an entire microservice doing even mildly interesting business logic and offering some kind of API or integration with another, similarly non-trivial API—usually both. And they’re typically built on languages that are compiled either to libraries/executables or they’re compiled to bytecode for the JVM/CLR. Again, I’m not trying to be disrespectful. You’ve built some really great stuff and I appreciate you sharing your experiences; I wish I knew some of the things you do—you keep writing about your experiences and I’ll keep reading ‘em, we can learn together. The problem is that I’m beginning to recognize that these models are perhaps not nearly ready for the kinds of work I want or need to do, and I’m feeling a bit bummed that the capabilities the industry currently touts are significantly more overhyped than I’d imagined. reply simonw 12 hours agorootparentHere's a larger example where I had Claude build me a full Django application: https://simonwillison.net/2024/Aug/8/django-http-debug/ I have a bunch more larger projects on my blog: https://simonwillison.net/tags/ai-assisted-programming/ I do a whole lot of API integration work with Claude, generally by pasting in curl examples to illustrate the API. Here's an example from this morning: https://til.simonwillison.net/llms/prompt-gemini reply what 16 hours agorootparentprevShould probably add some time for finding the correct url for the jsqr library, since the LLM didn’t do that for you. reply simonw 13 hours agorootparentYeah, add another minute for that. It was pretty easy to spot - I got a 404, so I searched jsdelivr for jsqr and dropped that in instead. reply newswasboring 14 hours agorootparentprev> You can do a simple library call in JavaScript. But it's more than that, isn't it? It has a whole interface, drag and drop functionality etc. Front end code is real code mate. reply inexcf 10 hours agorootparentBarely. These are all standard features. I've done this. You can see in the code how easy it is. These examples aren't complex. reply newswasboring 7 hours agorootparentI don't know why you are so insistant on this while not being a beginner. Specially when a real beginner is telling you their personal experience. https://xkcd.com/2501/ reply inexcf 6 hours agorootparentI don't use javascript at all. I'm essentially beginner level with it. And i've seen people build more complex projects in classes myself. The project i see people build in Java classes on the other hand is a CLI version of Battleships. And honestly that is more complex than the presented projects solved by Claude. Your personal experience is one point of many. That these projects seem hard to you doesn't make it so for the average person. When i say \"a beginner can do it\", there's bound to be some who can't. I'm sorry, if these projects take you weeks that is a problem. reply newswasboring 6 hours agorootparentIt just feels like you have taken a stance that this is useless and anything anyone says or does is not going to dissuade you from it. There are several people who are pointing out up and down this thread several different projects to you built in short times, but you keep saying nothing is impressive to you. To be very honest, this behavior is irritating. reply epolanski 20 hours agorootparentprevIssue is, it takes time to learn how to interact with these tools and get the best out of them. And they get better quite fast. reply unit149 17 hours agorootparentclaude-to-sql parser is particularly useful in LLM implementation reply farts_mckensy 19 hours agorootparentprevNo need to address the criticisms. Just have chat gpt do it. reply sergiotapia 20 hours agorootparentprevyou are replying to a submission with a dozen or more examples of real tangible stuff, and you still argue? pointless. reply fhdsgbbcaA 18 hours agorootparentprevThere’s no ideological battle here. The first self-driving DARPA grand challenge was passed in 2005, everybody thought we’d have self driving on the road within a decade. 20 years later that’s still not the case, because it turns out NN/ML can do some very impressive things at the 99% correct level. The other 1% ranges in severity from “weird lane change” to “a person riding a bicycle gets killed”. GPT-3.5 was the DARPA grand challenge moment, we’re still years away from LLM being reliable - and they may never be fully trustworthy. reply abecedarius 18 hours agorootparent> everybody thought we’d have self driving on the road within a decade. This is just not true. My reaction to the second challenge race (not the first) in 2005 was, it was a 0-to-1 kind of moment and robocars were now coming, but the timescale was not at all clear. Yes you could find hype and blithe overoptimism, and it's convenient to round that off to \"everybody\" when that's the picture you want to paint. > 20 years later that’s still not the case Also false. Waymo in public operation and expanding. reply fhdsgbbcaA 17 hours agorootparentWaymo has limited service in one of the smallest “big” cities by geographic area in the United States. You can’t even get a Waymo in Mountain View. Fact is Google will never break even on the investment and it’s more or less a white elephant. I don’t think it’s even accurate to call it a Beta product, at best it’s Alpha. reply simonw 16 hours agorootparentHave you been in one? It's pretty extraordinary as an actual passenger. reply fhdsgbbcaA 16 hours agorootparentI’d give it a go if price competitive with Uber/Lyft - I can’t think of a way a robotaxi would be worth a premium though. reply achierius 17 hours agorootparentprevThat might have been your reaction but it wasn't the reaction of many hype-inclined analyst types. Tesla is particular has been promising \"full self driving next year\" for like a decade now. And despite everything, Waymo is not quite there yet. It's able to handle certain areas at a limited scale. Amazing, yes, but it has not changed the reality of driving for 99.9% of the population. Soon it will, I'm sure, but not yet. reply josephg 18 hours agorootparentprev> they may never be fully trustworthy. So? Neither are humans. Neither is google search. Chatgpt doesn't write bug free code, but neither do I. The question isn't \"when will it be perfect\". The question is \"when will it be useful?\". Or, \"When is it useful enough that you're not employable?\" I don't think its so far away. Everyone I know with a spark in their eye has found weird and wonderful ways to make use of chatgpt & claude. I've used it to do system design, help with cooking, practice improv, write project proposals, teach me history, translate code, ... all sorts of things. Yeah, the quality is lower than that of an expert human. But I don't need a 5 star chef to tell me how long to put potatoes in the oven, make suggestions for characters to play, or listen to me talk about encryption systems and make suggestions. Its wildly useful today. Seriously, anyone who says otherwise hasn't tried it or doesn't understand how to make proper use of it. Between my GF and I, we average about 1-2 conversations with chatgpt per day. That number will only go up. reply fhdsgbbcaA 18 hours agorootparentI find it very interesting the primary rebuttals to people criticizing LLM from the “converted” tends to result in implicit suggestions the critique is rooted in old fashioned thinking. That’s not remotely true. I am an expert, and it’s incredibly clear to me how bad LLM are. I still use them heavily, but I don’t trust any output that doesn’t conform to my prior expert knowledge and they are constantly wrong. I think what is likely happening is many people aren’t an expert in anything, but the LLM makes them feel like they are and they don’t want that feeling to go away and get irrationally defensive at cogent criticism of the technology. And that’s all it is, a new technology with a lot of hype and a lot of promise, but it’s not proven, it’s not reliable, and I do think it is messing with people’s heads in a way that worries me greatly. reply josephg 17 hours agorootparentI don't think you understand the value proposition of chatgpt today. For context, I'm an expert too. And I had the same experience as you. When I asked it questions about my area of expertise, it gave me a lot of vague, mutually contradictory, nonsensical and wrong answers. The way I see it, ChatGPT is currently a B+ student at basically everything. It has broad knowledge of everything, but its missing deep knowledge. There are two aspects to that to think about: First, its only a B+ student. Its not an expert. It doesn't know as much about family law as a family lawyer. It doesn't know as much about cardiology as a cardiologist. It doesn't know as much about the rust borrow checker as I do. So LLMs can't (yet) replace senior engineers, specialist doctors, lawyers or 5 star chefs. When I get sick, I go to the doctor. But its also a B+ student at everything. It doesn't have depth, but it has more breadth of knowledge than any human who has ever lived. It knows more about cooking than I do. I asked it how to make crepes and the recipe it gave me was fantastic. It knows more about australian tax law than I do. It knows more about the american civil war than I do. It knows better than I do what kind of motor oil to buy for my car. Or the norms and taboos in posh british society. For this kind of thing, I don't need an expert. And lots of questions I have in life - maybe most questions - are like that! I brainstormed some software design with chatgpt voice mode the other day. I didn't need it to be an expert. I needed it to understand what I was saying and offer alternatives and make suggestions. It did great at that. The expert (me) was already in the room. But I don't have encyclopedic knowledge of every single popular library in cargo. ChatGPT can provide that. After talking for awhile, I asked it to write example code using some popular rust crates to solve the problem we'd been talking about. I didn't use any of its code directly, but that saved me a massive amount of time getting started with my project. You're right in a way. If you're thinking of chatgpt as an all knowing expert, it certainly won't deliver that (at least not today). But the mistake is thinking its useless as a result of its lack of expertise. There's thousands and thousands of tasks where \"broad knowledge, available in your pocket\" is valuable already. If you can't think of ways to take advantage of what it already delivers, well, pity for you. reply fhdsgbbcaA 17 hours agorootparentI literally said I do use it, often. But just now had a fairly frequent failure mode: I asked it a question and it gave me a super detailed and complicated solution that a) didn’t work, and b) required serious refactoring and rewriting. Went to Google, found a stack overflow answer and turns out I needed to change a single line of code, which was my suspicion all along. Claude was the same, confidentially telling me to rewrite a huge chunk of code when a single line was all that was needed. In general Claude wants you to write a ton of unnecessary code, ChatGPT isn’t as bad, but neither writes great code. The moral of the story is I knew the gpt/claude solutions didn’t smell right which is why I tried Google. If I didn’t have a nose for bad code smells I’d have done a lot of utterly stupid things, screwed up my code base, and still not have solved my oroblwm. At the end of the day I do use LLM, but I’m experienced so it’s a lot safer than a non-experienced person. That’s the underlying problem. reply josephg 16 hours agorootparentSure. I'm not disagreeing about any of that. My point is that even now, you're only talking about using chatgpt / claude to help you do the thing you already know how to do (programming). You're right of course. Its not currently as good at programming as you are. But so what? The benefit these chat bots provide is that they can lend expertise for \"easy\", common things that we happen to be untrained at. And inevitably, thats most things! Like, ChatGPT is a better chef than I am. And a better diplomat. A better science fiction writer. A better vet. And so on. Its better at almost every field you could name. Instead of taking advantage of the fields where it knows more than you, you're criticising it for being worse than you at your one special area (programming). No duh. Thats not how it provides the most value. reply fhdsgbbcaA 14 hours agorootparentSorry my point isn’t clear: the risk is you are being confidently led astray in ways you may not understand. It’s like false memories of events that never occurred, but false knowledge - you think you have learned something, but a non-trivial percent of it, that you have no way of knowing, is flat out wrong. It’s not a “helpful B+ student” for most people , it’s a teacher, and people are learning from it. But they are learning subtly wrong things, all day, every day. Over time, the mind becomes polluted with plausible fictions across all types of subjects. The internet is best when it spreads knowledge, but I think something else is happening here, and I think it’s quite dangerous. reply josephg 13 hours agorootparentAh thankyou for clarifying. Yes, I agree with this. Maybe, its like a B+ student confidently teaching the world what it knows. The news has an equivalent: The Gell-Mann amnesia effect, where people read a newspaper article on a topic they're an expert on and realise the journalists are idiots. Then suddenly forget they're idiots when they read the next article outside their expertise! So yes, I agree that its important to bear in mind that chatgpt will sometimes be confidently wrong. But I counter with: usually, remarkably, it doesn't matter. The crepe recipe it gave produced delicious crepes. If it was a bad recipe I would have figured that out with my mouth pretty quickly. I asked it to brainstorm weird quirks for D&D characters to have, some of the ideas it came up with were fabulous. For a question like that, there isn't really such a thing as right and wrong anyway. I was writing rust code, and it clearly doesn't really understand borrowing. Some code it gives just doesn't compile. I'll let you in on a secret: I couldn't remember the name of the gell-mann amnesia effect when I went to write this comment. A few minutes ago I asked chatgpt what it was called. But I googled it after chatgpt told me what it was called to make sure it got it right so I wouldn't look like an idiot. I claim most questions I have in life are like that. But there are certainly times when (1) its difficult to know if an answer is correct or not and (2) believing an incorrect answer has large, negative consequences. For example, Computer security. Building rocket ships. Research papers. Civil engineering. Law. Medicine. I really hope people aren't taking chatgpt's answers in those fields too seriously. But for almost everything else, it simply doesn't matter that chatgpt is occasionally confidently wrong. For example, if I ask it to write an email for me, I can proofread the email before sending it. The other day asked it for scene suggestions in improv, and the suggestions were cheesy and bad. So I asked it again for better ones (less chessy this time). I ask for CSS and the CSS doesn't quite work? I complain at it and it tries again. And so on. This is what chatgpt is good for today. It is insanely useful. reply versteegen 20 hours agorootparentprevHumans have a massive pro-human bias. Don't ask one whether AI can replace humans and expect a fair answer. reply n0id34 18 hours agorootparentWell, obviously. The only ones happy about all of our potential replacements would be those that have the power to do the replacing and save themselves a shitload of money. It's hardly like everyone is going to rejoice at the rapid advancement of AI that can potentially make most of us jobless....unless, as I said, you're the one in charge, then it's wonderful. reply Workaccount2 19 hours agorootparentprev\"It is difficult to get a man to understand something when his salary depends upon his not understanding it.\" - Upton Sinclair. reply RayVR 20 hours agorootparentprevSorry, but you’re just wrong. Yes, mistakes may happen. However, I’ve used it to translate a fairly complex MIP definition export into a complete CP-SAT implementation. I use these models all the time for complex tasks. One major thing that is perhaps not immediately obvious is that the models are only good at translation. If I give it a really good explanation of what I want in code or even English, and ask it to do it another way or implement it with specific tools, I get pretty good output. Using these to actually solve problems is not possible. Give it a complex problem description with no instructions on how to solve it, and they fail immediately. reply risyachka 19 hours agorootparentThey fail even at not really complex problems. In most cases it’s faster to do it manually then beg ai to fix everything so that the result is proper, not just “kinda works”. For me they save a lot of time on research or general guidance. But when it comes to actual code - not really useful. reply ainiriand 13 hours agorootparentprevI can basically tell ChatGPT to build any Rust commandline tool I can think of and with some back and forth it produces what I need. I did this many times already. reply okwhatnow3773 13 hours agorootparentYou can also ask Google to produce working code for you, it’s a miracle. What you are looking at is mangled other people’s work. Great. Thanks AI, for digging it up, but let’s not get too excited here. I’ll be getting excited when we give it some first principles and it can actually learn on its own. reply ainiriand 11 hours agorootparentIsn't that AGI? I completely disagree with this viewpoint. I've created terminal games with my own rules, and that shows me the tool can take what it knows about Rust and assemble code to complete a task. It's essentially doing the same thing a human would. While I understand the criticism, I sometimes feel that the cynical perspective we bring into these discussions prevents us from offering more meaningful critique. reply hackernewds 13 hours agorootparentprevCan't tell if serious. I've done this multiple times with success requiring only 5 minutes of review reply mhh__ 19 hours agorootparentprevWell this is what tests are for. You could make the same argument about outsourcing or \"kids these days\" and so on reply randito 20 hours agorootparentprevTo state the obvious (again), it's shocking the rate of progress is with these tools. If this is 2 years of progress, what does 10-20 look like? reply jryan49 19 hours agorootparentWho knows, past progress doesn't predict future progress... reply lionkor 20 hours agorootparentprevIt can autocomplete, it can't write good code. For me, that goal post has not moved. It it cant write good code consistently, I don't care for it all that much. It remains a cool autocomplete reply epolanski 20 hours agorootparentNobody really cares about code being good or bad, it's not prose. What matters is it meets functional and non functional requirements. One of my juniors wrote his first app two years ago fully with chatgpt, could figure out by iteratively asking it how to improve it and solve the bugs. Then he learned to code properly fascinated by the experience. But the fact remains, he shipped an application that did something for someone while many never did even though they had a degree and a black belt in pointless leet code quizzes. I'm fully convinced that very soon big tech or a startup will come up with a programming language meant to sit at the intersection between humans and LLMs, and it will be quickly better, faster and cheaper at 90% of the mundane programming tasks than your 200k/year dev writing forms, tables and apis in SF. reply lionkor 13 hours agorootparentI mean, I care that code is good. I'm paid to make sure my code and other people's code is good. That's enough for me to have a requirement to my tools to help me produce good code. reply packetlost 19 hours agorootparentprev> What matters is it meets functional and non functional requirements. Good luck expressing novel requirements in complex operating environments in plain English. > Then he learned to code properly fascinated by the experience. But the fact remains, he shipped an application that did something for someone while many never did even though they had a degree and a black belt in pointless leet code quizzes. It's good in the sense that it raises the floor, but it doesn't really make a meaningful impact on the things that are actually challenging in software engineering. > Then he learned to code properly fascinated by the experience. But the fact remains, he shipped an application that did something for someone while many never did even though they had a degree and a black belt in pointless leet code quizzes. This is cool! > I'm fully convinced that very soon big tech or a startup will come up with a programming language meant to sit at the intersection between humans and LLMs, and it will be quickly better, faster and cheaper at 90% of the mundane programming tasks than your 200k/year dev writing forms, tables and apis in SF. I am sure there will be attempts, but if you know anything about how these systems work you would know why there's 0% chance it will work out: programming languages are necessarily not fuzzy, they express precise logic and GPTs necessarily require tons of data points to train on to produce useful output. There's a reason they do noticeably better on Python vs less common languages like, I dunno, Clojure. reply epolanski 19 hours agorootparent> Good luck expressing novel requirements in complex operating environments in plain English. That's the hard engineering part that gets skipped and resisted in favour of iterative trial and error approaches. reply packetlost 18 hours agorootparentIt still applies to expressing specific intent iteratively. reply lelandfe 20 hours agorootparentprevMy friend who can't code is now the resident \"programmer\" on his team. He just uses ChatGPT behind the scenes. That writ large is going to make us tech people all care, one way or another :/ reply qingcharles 19 hours agorootparentI had a colleague in the UK in 2006 who just sat and played games on his phone all day and outsourced his desktop to a buddy in the Czech Republic for about 25% of his income. C'est la vie! reply VirusNewbie 15 hours agorootparentprevBut this has always been a thing. The last startup I worked at, some of the engineers would copy/paste a ton of code from StackOverflow and barely understood what was going on. reply leptons 20 hours agorootparentprevI'll care when I get to consult for that company to fix all the messed up code that kid hacked together. reply FreezerburnV 19 hours agorootparentI can absolutely, 100% guarantee, that there is code out there that if you consulted for might kill someone of a weaker constitution written by 100% organic humans. While LLM-generated code is likely to be various degrees of messy or incorrect, it's likely to be, on average, higher quality than code running critical systems RIGHT NOW and have been doing so for a decade or more. Heck, very recently I refactored code written by interns that was worse than something that would have come out of an LLM. (my work blocks them, so this was all coming from the interns) I'm not out here preaching how amazing LLMs are or anything (though it does help me enjoy writing little side projects by avoiding hours of researching how to do things), but we need to make sure we are very aware of what has, and is being, written by actual humans. And how many times someone has installed Excel on a server so they could open a spreadsheet to run a calculation in that spreadsheet before reading the result out of it. (https://thedailywtf.com/articles/Excellent-Design) reply leptons 13 hours agorootparentcool story reply HaZeust 19 hours agorootparentprevThen you should be as pro-AI imposters as it gets! reply chii 14 hours agorootparentprevnothing wrong with having job security, and be able to charge up the wazoo for it. reply xienze 19 hours agorootparentprevYeah it doesn’t take much to impress people who don’t know how to program. That’s the thing with all these little toy apps like the ones in the article — if you have no to minimal programming skills this stuff looks like Claude is performing miracles. To everyone else, we’re wondering why something as trivial as an “HTML entity escaper” (yes, that one of the “apps”) requires multiple follow up prompts due to undefined references and the like. reply HaZeust 20 hours agorootparentprevTell it to write code like a Senior developer for your respective language, to \"write the answer in full with no omissions or code substitutions\", tell it you'll tip based on performance, and write more intimate and detailed specs for your requests. Since mid 2023, I've yet to have an issue reply cdchn 14 hours agorootparentOne of the most interesting things about current LLMs is all the \"lore\" building up around things like \"tell it you'll tip based on performance\" and other \"prompt engineering\" hacks that by the very nature nobody can explain, they just \"know it works\" and how its evolving like the kind of midwife remedies that historically ended up being scientifically proven to work and others were just pure snake oil. Just absolutely fascinating to me. Like in some far future there will be a chant against unseen \"demons\" that will start with \"ignore all previous instructions.\" reply simonw 14 hours agorootparentI call this superstition, and I find it really frustrating. I'd much rather use prompting tricks that are proven to work and where I understand WHY they work. reply HaZeust 2 hours agorootparentEvery single prompt hack I listed are ones with studies that show it positively increases performance. Since the most contested one in this thread is the \"tipping\" prompt hack: https://arxiv.org/pdf/2401.03729 reply mrbungie 20 hours agorootparentprevWhat I would expect is a lot of \"non-idiomatic\" Go code from LLMs (but eventually functional code iff the LLM is driven by a competent developer), as it appears scripting languages like Python, SQL, Shell, etc are their forte. My experience with Python and Cursor could've been better though. For example when making ORM classes (boilerplate code by definition) for sqlalchemy, the assistant proposed a change that included a new instantiation of a declarative base, practically dividing the metadata in two and therefore causing dependency problems between tables/classes. I had to stop for at least 20 minutes to find out where the problem was as the (one n a half LoC) change was hidden in one of the files. Those are the kind of weird bugs I've seen LLMs commit in non-trivial applications, stupid 'n small but hard to find. But what do I know really. I consider myself a skeptic, but LLMs continue to surprise me everyday. reply newswasboring 19 hours agorootparentprev> it can't write good code > It it cant write good code consistently, You moved the goal post within this post. reply lionkor 13 hours agorootparentFair enough, I didn't express myself correctly: Writing good code is also about consistency. Just because it writes good code sometimes in isolation, it doesn't mean that it's good in the sense that it's consistently good. Anyone can write a cool function once, but that doesn't mean you can trust them to write all functions well. reply SubiculumCode 20 hours agorootparentprevI am not a professional coder, being in research I do not need to think about scaling my code as most of it is one and done on whatever problem I am working on at the moment. For me, this is a lot about stringing a bunch of neuroimaging tools together to transform data in ways I want, LLMs have been fantastic. Instead of spending 20 minutes coding it, its often 0-shot visit to Claude...especially when its a relatively simple python task e.g. iterate through directories of images, inspect these json, move those files over here, build this job, submit. Its not ground breaking code, but the LLM builds it faster than I would, and it does what I need it to do. Its been a 20x or more multiplier for me when it comes to one aspect of my work. reply mrbungie 20 hours agorootparentLLMs are excellent for scripting: be it python, shell or SQL, and you need a lotta scripting at any kind of job related to data, even when said scripts are just an enabler for delivering the pursued value. Total game changers in that space. reply iwontberude 20 hours agorootparentprevNay-sayers are taking it for granted because it’s not what the they expected or wanted. It’s not some flippant inability to have gratitude. Since you brought it up, when JFK said we would put a man on the moon by the end of the decade, the expectation was succinct and understood. There has been so much goal post moving and hand waving that we aren’t talking about the same expectations anymore. reply HaZeust 20 hours agorootparentWell, that's too bad - isn't it? The world will sometimes change before your very eyes, and you'll sometimes be in a group that's affected at the forefront. C'est la vie - never become too comfortable that you stifle your ability to be an early adopter! reply iwontberude 6 hours agorootparentI don’t have a strong preference either way, so far I am open minded but I am dispassionate and try not to let my ego get in the way of myself. reply leptons 20 hours agorootparentprevThe \"AI\" is still just as much hit-or-miss with code as it is writing a paragraph about anything. It doesn't really know what it's doing, it's guessing an output that will make the user happy. I wouldn't trust it with anything important, life life support systems or airplanes, etc. but I'm sure with the race to the bottom that we're in, we'll get to that point someday soon. reply jsheard 20 hours agoparentprevI think we have different definitions of meaningful code, most of these are pulling in an NPM package which practically completes the given task by itself. For example the \"YAML to JSON converter\" uses js-yaml... which parses YAML and outputs a Javascript object that can be trivially serialized to JSON. The core of that \"project\" is literally two lines of code after importing that library. const jsonObj = jsyaml.load(yamlText); const jsonText = JSON.stringify(jsonObj, null, 2); Don't get me wrong, if you want to convert YAML to JSON then using a battle tested library is the way to do it, but Claude doesn't deserve a round of applause for stating the blaringly obvious. reply tomrod 21 hours agoparentprevIt's still not great at complexity. Though autocompletion does have some cool outputs. reply thierrydamiba 21 hours agorootparentRuntime complexity or complex as in difficult problems? reply leptons 20 hours agorootparentprevCopilot knows what I want to console.log almost before I do. I like that aspect of it. It also gets it wrong sometimes, which is kind of dumb, especially when I just copied the variable name to my clipboard. It should know. reply tomrod 18 hours agorootparentOf course. It doesn't handle complexity well. console.log inputs are usually not a cognitively complex object (especially if it reads current errors and variables) reply onion2k 21 hours agorootparentprevIt's still not great at complexity. That's a feature, not a bug. Complexity is something to avoid. reply 7thpower 21 hours agorootparentSometimes great products require bugs, I guess. Being able to tackle complex tasks is still a real challenge for the current models and approaches and not all problems can be solved with elegant solutions. reply root_axis 13 hours agorootparentprevMost problems that software tries to solve are complex. reply curtisblaine 20 hours agorootparentprevunnecessary completely is something to avoid. Inherent complexity is something to embrace. We're trained to remove unnecessary complexity so much that sometimes we think we can remove all complexity. That's a fallacy. Sometimes, things are just complex. reply mvdtnz 20 hours agorootparentprevHow would you suggest writing something like.... say... Photoshop or Chrome, without introducing any complexity? How about an optimising compiler or better yet something behind the firewall like a medical imaging device or financial trading software? Complexity is inherent in many problem spaces. reply betaby 20 hours agoparentprevYAML to JSON literally has `script src=\"https://cdnjs.cloudflare.com/ajax/libs/js-yaml/4.1.0/js-yaml...`. I don't see how wen",
    "originSummary": [
      "Simon Willison explored Claude's Artifacts feature to create 14 interactive Single Page Apps, showcasing its potential for rapid prototyping and problem-solving.",
      "Projects included a URL to Markdown converter, SQLite in WebAssembly (WASM) demo, and a QR Code Decoder, highlighting the versatility of Artifacts.",
      "Despite its ease of use, Willison noted limitations such as the inability to make API calls and plans to develop his own alternative, encouraging others to explore Artifacts for LLM-based projects."
    ],
    "commentSummary": [
      "Integrating AI tools such as Claude Artifacts into existing codebases is challenging due to the need to maintain professional standards and conventions.",
      "Developers often prefer writing code themselves to ensure quality and compatibility, although AI tools are increasingly used for tasks like code generation, refactoring, and API integration.",
      "The reliability and correctness of AI-generated code are still concerns, particularly for complex or critical applications, despite potential productivity boosts."
    ],
    "points": 592,
    "commentCount": 417,
    "retryCount": 0,
    "time": 1729716733
  },
  {
    "id": 41936001,
    "title": "Rider is now free for non-commercial use",
    "originLink": "https://www.jetbrains.com/rider/",
    "originBody": "Powerful JetBrains Rider is an all-in-one IDE for developers working with the entire .NET technology stack, as well as those involved in game development. Its robust feature set allows you to develop a wide array of applications targeting frameworks like .NET, ASP.NET Core, MAUI, or game engines like Unity, Unreal Engine, or Godot.",
    "commentLink": "https://news.ycombinator.com/item?id=41936001",
    "commentBody": "Rider is now free for non-commercial use (jetbrains.com)472 points by kretaceous 4 hours agohidepastfavorite221 comments terminalbraid 4 hours agoThis is pretty huge all around, especially with Microsoft discontinuing Visual Studio for Mac. https://learn.microsoft.com/en-us/visualstudio/releases/2022... I'd also like to note the great integration Rider has with Godot and Unity for game development. reply klik99 2 hours agoparentDon't forget Unreal as well - I've used Rider on multiple AAA Unreal titles that include custom engine edits and it is significantly faster than VS at loading massive projects. The integration is great and allows for seeing blueprint classes and references in the C++ project. I say this as a big user of JetBrains - I have had SOME issues with their intellisense dropping some references in Rider when there are a lot of references, so I would occasionally switch to VS when there were a lot of references to search through, but other than extreme cases Rider is just so much more pleasant to use. reply danhau 1 hour agorootparentI had no idea Rider supported C++. My impression was that it is for .NET only. How does it compare to CLion? reply klik99 1 hour agorootparentYeah they originally had a separate branch \"Rider Unreal\" but now it's part of Rider, C++ support seems mostly the same across both, except for project support. If IIRC Rider doesn't support CMake projects, but it does support vsproj projects, so if you generate vs files from cmake it'll load fine, but probably better to use CLion for any non-UE projects if using C++. I guess they're seeing it as .NET/GameDev IDE. Honestly I don't know why there are so many almost identical IDEs. reply ohnoesjmr 48 minutes agorootparentI use both Rider (for mixed c++/c#) projects and CLion for C++ only. I feel that Rider is somehow better than CLion at c++, even after CLion Nova (Intellisense based on Resharper backend) became a thing. One difference is that I write boost::asio in CLion, and just vanilla C++ in Rider, and before Nova it was completely unusable with async code, now it's usable with async code, but after a few days of running the editor I end up with fatal IDE errors for CLion, and never for Rider. reply marklubi 3 hours agoparentprevVS for Mac was junk. Better off trashing it and pushing people the VS Code route. I use VS Code daily for .NET development. It's probably 70% of what VS on Windows is, but it works well and I don't need to run a VM for it (if I need some of the in-depth tracing and profiling stuff, I can still fire up the gold standard). VS on Mac was maybe 30% reply tokinonagare 1 hour agorootparent> VS for Mac was junk. Better off trashing it and pushing people the VS Code route. Sure but VS Code for C# is trash as well. All those years, both Microsoft products, and this the experience is subpar, especially in comparison to the real Visual Studio. reply badsectoracula 28 minutes agorootparent> both Microsoft products With 200K+ employees, at this point it is better to think of Microsoft as a city and different teams in it as independent companies in that city with employees that sometimes go out for coffee together :-P reply fuzzy2 2 hours agorootparentprevI mean, yes, VS Code certainly is great and all, but… > It's probably 70% of what VS on Windows is no. From my perspective, it doesn’t even have 50% of VS features, and that’s probably a generous estimation. VS has lots and lots of features. Granted, many of them are irrelevant for most users most of the time. Even Rider is lacking in comparison. It is very limited regarding debugging targets for example. reply beanjuiceII 1 hour agorootparentyou have the dev kit installed and put your enterprise license in? whats missing? reply mananaysiempre 3 hours agoparentprevWasn’t VS for Mac a MonoDevelop build with amputated Linux support rather than a version of Visual Studio proper? Or am I out of date on this? reply billyhoffman 3 hours agorootparentIt started that way but wasn’t been for a while. In fact the last version was a rewrite using native macOS controls and optimized for Apple Silicon. Sad to see it go but heard great things about Rider for c# development. reply LeFantome 1 hour agorootparentprevYes, that is what it was. Microsoft had continued to evolve it. And a few components from Visual Studio Windows were ported over to be common. But Visual Studio Mac was 100% rebranded Xamarin Studio which of course was just an evolution of MonoDevelop. reply Quarrelsome 2 hours agoparentprev> I'd also like to note the great integration Rider has with Godot I wish Godot's syntax for .NET wasn't horrible though. Its so nasty looking that it just makes me want to use their native language instead. reply connicpu 2 hours agorootparentThat's what I've opted for as well, and I have to say I prefer it. gdscript is a nice language for high level game scripting, and on the couple occasions I needed to bring in some high-performance code I found it super easy to build a gdextension in Rust. reply nightowl_games 1 hour agorootparentForget gdextension imo Compile the engine from source and add your classes as a module. Cuts out all the gdextension glue code and then you don't need to ship a shared library. reply capitol_ 1 hour agorootparentWouldn't this make engine version upgrades a nightmare? reply LelouBil 40 minutes agorootparentprevI started a Godot project with C# support since I'm coming from Unity. I now have at least 50 GDScript files and not a single C# file, the language is good (with types). My only issue is that I can't get Copilot in their integrated IDE and that Rider's GDScript plugin doesn't support anonymous functions right now reply sbrother 2 hours agoparentprevWhat does \"noncommercial use\" mean in this context though? These are tools for work - is the idea that students can use them for free and then will start paying once they finish school? reply LeFantome 1 hour agorootparentIt means you can use them as a hobbiest or a student. For example, you can now use Rider as the IDE on an Open Source project. If you are writing code that you are going to be paid for, you are supposed to pay. Of course, they know a lot of small devs will use it that should not. But few of them would have paid anyway and this creates a much greater pool of buyers when those devs get jobs or achieve commercial success. I am a Rider fan so this is exciting. reply jcotton42 1 hour agorootparent> For example, you can now use Rider as the IDE on an Open Source project It's worth noting that even before this change, you can get the entire JB suite for free if you regularly contribute to a qualifying OSS project https://www.jetbrains.com/community/opensource/. reply BaculumMeumEst 2 hours agorootparentprevIt means a wink, a nod, and perhaps a nudge nudge. reply jasonjmcghee 2 hours agorootparentprevGame jams, releasing game for free- that makes up a whole lot. Curious where the line is if you're using it during a YouTube video that you have a Patreon for etc. I think most games built never make money. reply cypressious 2 hours agorootparentIt's explicitly allowed to be used for content creation. reply prepend 2 hours agorootparentprevStudents or OSS reply Deukhoofd 2 hours agorootparentBut it was already free for students, and they have a partnership program with OSS which allows you to use it for free as well. reply nic547 1 hour agorootparentYou need to apply once a year and you need to be a maintainer of an active oss project for the oss license. From my experience they're very lenient in regards to what they consider active, but I don't think I'd jump trough the hoops if I didn't start using Rider with the student license. Free for non-commercial offers a easy way to get people to use it and hopefully advocate for it at their jobs. reply nightski 1 hour agorootparentprevIt was still a process. You had to have an established OSS project and go through the partnership process. Now you can just use it for free for any hobby/oss projects without all the red tape. reply ferfumarma 1 hour agoparentprevWhat does Rider add to the Godot dev experience? (I'm not familiar with either ecosystem, but I thought I recall Godot having an IDE when I last booted it up to play with it). reply terminalbraid 1 hour agorootparentThe Godot IDE is mainly around GDscript and is very basic. This gives you all the good tooling you'd get from a professional IDE, has best in class refactoring tools, integrates well with stuff like debugging, has a huge plugin ecosystem, better out-of-the-box suggestions and code completion, integrates with AI tooling, etc. reply mattferderer 4 hours agoprevAs a paying subscriber I love this move for the .NET community. As a .NET dev for many years, I've noticed there have been periods of time where either Visual Studio or Rider was far better than the other. Currently, Rider is much better. Hopefully this encourages more people to try out C# & F#. Both fantastic languages. - Edit - Looks like Webstorm (JS/TS editor) is also free now. reply CharlieDigital 3 hours agoparentI had a Rider license for a while but just let it lapse. I've found myself totally satisfied with just VS Code on macOS (it's come a really long way). I'm glad that this move will possibly make .NET more accessible, but I think VSC is in a really good place with C# at the moment and shouldn't be overlooked. reply mattferderer 3 hours agorootparentVS Code is really good at certain things but it struggles on larger projects & doesn't have near the advanced features. It's a very good choice though for a lot of projects. It's also a great way to try out C#. It has some amazing extensions for certain tasks too. reply CharlieDigital 3 hours agorootparentVSC feels pretty capable in my books. We have a mono-repo with 100k lines of C# in 8 projects, 40k lines of Vue SFCs in 2 workspaces, 39k lines of TypeScript, 23k lines of Astro. No issues at all running it on a 2021 14\" MacBook Pro with only 16GB RAM and 512GB SSD while also running multiple Docker containers for Postgres, Neo4j, Memcached, and LocalStack. My take is that folks should not underestimate VSC; there are certainly things that Rider does better, but VSC is totally viable for modern .NET backend work. reply withinboredom 2 hours agorootparent100k loc is not big. That’s a small-medium sized project. reply CharlieDigital 2 hours agorootparentIt's not an all C# project; C# only comprises the backend. All in, the mono-repo is somewhere over 250k SLOC with mixed languages (Vue SFC, TS, Astro, JSX, shell). So when VSC is loaded, it's not only handling C#, but also everything else. Point is that VSC is more than capable of handling production scale, multi-language workspaces even on 2021 hardware with only 16GB of RAM. reply nightski 1 hour agorootparentIt's not that VS Code can't load a large project, that is table stakes. It's that the tools it provides to work with those large code bases are like fisher price versions of the Jetbrains equivalents. If one take their tools seriously, and uses them to the maximum extent possible to increase productivity, reliability, and robustness of code then there is just no comparison between the two. Don't get me wrong, I still use VS code for all front-end development and other ecosystems (such as Rust). But when it specifically comes to C#/.NET there is no substitute to Rider in my opinion. reply elAhmo 2 hours agorootparentprev100k lines of code is definitely big and by no means a small project. reply ohnoesjmr 44 minutes agorootparentprevI work on a almost 20 year old C# monolith, with 1000+ projects per solution. It doesn't even load in VS or VSC. Rider needs 16GB of ram, but manages to open it. I try to never close the IDE, as it takes 30mins to open. reply wokwokwok 3 hours agorootparentprevWhat fan boy nonsense is this? The VSC support for c# is miles behind visual studio. Rider isn’t as good either, but it’s certainly better than VSC. Are you heavily using typescript with a bit of c# or a really tiny code base? This comment is incomprehensible to me. Do you never refactor code? There are a lot of sophisticated things you can’t do with VSC. It’s a great editor; but not for c#. The benefit of using it is absolutely zero unless you’re heavily leaning into the other parts of the VSC ecosystem (like a big typescript code base). > it’s come a really long way So has visual studio; and it started off better, and still is. Rider is too. I’m happy to die on this hill; if you’re using VSC for c#, it’s because it’s free, and perhaps good enough for some things; not because it’s better than the alternatives. Even if you’re stuck on a Mac, I can't believe you honestly find VSC an acceptable editor after using rider. All I can say is I certainly do not agree. reply andybak 1 hour agorootparentIf Visual Studio has better support for C# than Rider, why does Resharper exist? Not trying to start an argument - I've never used Visual Studio with C# (I was a PyCharm user when I started learning Unity so Rider was an obvious choice) but I always assumed that Rider was better - because it was managing to survive as a paid product so it must have had an edge. reply tokinonagare 1 hour agorootparent> If Visual Studio has better support for C# than Rider, why does Resharper exist? I'm pretty sure Resharper existed before Rider. Also, the existence and utility of the plugin is a mystery to me. I tried it once and it adds so many attention disturbing behavior especially in the bottom bar that I disabled it immediately. None of its feature was every needed in the company I work, and the Rider crowd there don't seems to produce better code than those using VS. reply CharlieDigital 3 hours agorootparentprev100k lines of C# in 8 projects, 40k lines of Vue SFCs in 2 workspaces, 39k lines of TypeScript in a monorepo. I use it every day on a 2021 M1 MacBook Pro 16GB/512GB. Works completely fine to the extent that I just let my Rider license lapse. reply wokwokwok 3 hours agorootparentWell, perhaps anyone who’s thinking about it can do their own research in /r/vscode and read about how much people love c# dev kit. TLDR; it’s not just me. I’m glad you like it and have found a workflow that works for you. I think you’re crazy. reply CharlieDigital 2 hours agorootparentMy point isn't that \"people shouldn't use Rider\"; I myself had a Rider license and it's a GREAT IDE. My point is \"you shouldn't skip C# because you think you need a license for an IDE to be use it professionally\". Devs who are already using VSC for doing front-end and want to try full stack can absolutely do heavy lifting in VSC. I let my license lapse not because Rider wasn't a great IDE, but because VSC is fully capable for backend and fullstack work. > I think you're crazy I'll take that as a compliment :D. Even back in 2021 when I was invited to present at the Azure Serverless Conf[0], I chose VSC for my session to showcase that anyone could start developing .NET without expensive licenses (a common myth). [0] https://learn.microsoft.com/en-us/shows/azure-serverless-con... reply WolfeReader 1 hour agorootparentprev\"What fan boy nonsense is this?\" Good way to start a VS fanboy post. Personally, I have written APIs in C# from scratch to production entirely in VSC; your assertion that \"It’s a great editor; but not for c#\" is literally false in my lived experience. Rider is also good. And since I run Linux, VS took itself out of my consideration entirely. reply MangoCoffee 3 hours agoparentprevI use Visual Studio from work and personally subscribe to JetBrains. For those developing commercial software on a budget, Visual Studio Code is an excellent option. Although it lacks some features of JetBrains and Microsoft tools, pairing the .NET CLI with VS Code can still deliver impressive results. if you can afford $10 monthly, integrating GitHub Copilot with VS Code can elevate it to a fancy, lightweight IDE reply neonsunset 2 hours agorootparentThat's my exact workflow nowadays. The best text editing experience with GH copilot and lowest battery footprint makes using a VSC a no-brainer. It's especially nice since it also happens to be the choice for Rust, so I experience very little friction, not having to switch an editor and using capable CLI of .NET and Cargo. For advanced scenarios Rider still rules, and this change is a very welcome one. I hope it will help with promoting .NET as the first choice where teams historically picked Go (which is worse). reply CharlieDigital 2 hours agorootparent> I hope it will help with promoting .NET as the first choice where teams historically picked Go (which is worse) Curious in what ways specifically you think Go is worse than .NET and what contexts? reply pjmlp 3 hours agoparentprevI also expect this to put pressure on C# DevKit team, right now its purpose is to only be good enough to drive people into Windows/VS, eventually. Rider is the only comparable DX to VS outside Windows. reply wiseowise 2 hours agoparentprev> - Edit - Looks like Webstorm (JS/TS editor) is also free now. Wow. VSCode finally got them, it seems. reply g8oz 1 hour agoparentprevRustRover (Rust ide) is also now free for non commercial use reply LeFantome 1 hour agorootparentOh. Very cool. Thanks for the heads up. reply AmazingTurtle 2 hours agoparentprevboth webstorm and rider is free now? why am I still paying. been a customer for years but all I used was rider and webstorm. reply progforlyfe 2 hours agorootparentfree for non-commercial use. reply spuz 3 hours agoparentprevWhat is the difference between Rider and Resharper? reply memsom 2 hours agorootparentRider is an IDE that replaces Visual Studio and includes the resharper engine built in. Resharper is a plug-in that is hosted by Visual Studio. Resharper in Rider is pretty much the same as in VS, but in Rider it is native and always feels snappier to me. reply eterm 2 hours agorootparentprevVS + Resharper is painfully slow. Rider is refreshingly fast. reply jonathanlydall 56 minutes agorootparentI recently upgraded my laptop and finally VS with Resharper is blazingly fast. My old laptop was a an 8th gen i7 with SSD and 32GB of RAM. New one is a 13th gen i7 with an NVMe and 64GB of RAM. I suspect the biggest difference is the NVMe. It probably also helps that I’m using Windows 11’s Dev Drive where I’ve enabled all the policies mentioned in their docs to minimise the impact of Windows Defender. And finally, so much RAM means Windows gets to keep a lot of my working files cached. reply HatchedLake721 3 hours agoprevWebStorm too https://blog.jetbrains.com/blog/2024/10/24/webstorm-and-ride... reply hbn 1 hour agoparentOh that's awesome! I'm a huge fan of the JetBrains IDEs - the way it understands code relieves so much mental overhead when tracing through my code, finding usages, refactoring, etc. It's one of the rare pieces of software I actually enjoy using. I just can't justify the cost for personal use for the amount I use it, and the fact that I've never really monetized a side project. Super happy they're making this move. I think there's good logic to getting people hooked with free personal use so they can convince their company to buy licenses for everyone at work. reply judge2020 2 hours agoparentprevThis is pretty huge since web technology has always been the “paid tier” for JB products reply p0w3n3d 1 hour agoprevRegarding free non-commercial use in Jetbrains you need to accept that you'll get checked (not specified how, but I guess they will scrape your HDD? Or what? It’s also important to note that if you’re using a non-commercial license, you cannot opt out of the collection of anonymous usage statistics. This is similar to our Early Access Program (where statistics is opt-out) and in compliance with our Privacy Policy reply jchw 1 hour agoparentIf you are willing to trust their own documentation, there is documentation about what is sent with anonymous usage statistics in Jetbrains IDEA IDEs: https://www.jetbrains.com/help/idea/settings-usage-statistic... That said, if you mean \"checked\" as in checking for compliance, I don't think anonymous usage statistics are for that. For that they would need to not be anonymous. If they could identify who was improperly using the community versions, it would break the pinky promise of anonymity. (And for the record I personally doubt they are secretly correlating anonymous usage statistics, but if they were, using them for license compliance would either revealing that they did this or at least parallel construction.) That all said, I think everyone will just have to form their own opinion on whether to trust their statements and whether this is acceptable. reply ThrowawayB7 12 minutes agoparentprevIt's the dreaded T-word: telemetry. The same sort of thing people get up in arms about in Windows but JetBrains will get a pass here. reply microflash 53 minutes agoparentprevI wish they would allow opt-out for people who have a subscription active on one of the other Jetbrains products. reply mattlondon 2 hours agoprevGenuine question with an open mind: why would I use this and not vscode? I know people complain about lag in vscode but I have personally never experienced/noticed any. So with that in mind what does rider give that vscode cannot? reply jw1224 1 hour agoparentI’m a PhpStorm user so not familiar with Rider specifically, but in my experience JetBrains IDEs are exactly that: Integrated Development Environments. Whereas VSCode is more of a code editor first and foremost. There’s tons of overlap between the two, and for casual development VSCode will usually be fine. But as a professional I rely on IDEA to make a living, and it rarely lets me down. 95% of everything I could ever need comes out-of-the-box, so I don’t need to go plugin hunting (though there is a broad range of IDEA plugins too). In fact the IDEA plugins are cross-compatible, so plugins for Rider will work in PhpStorm, PyCharm, Rubymine, etc. The refactoring is outstanding, and leaps beyond what VSCode can do it. Basically it just understands my code like a real developer would. Not just simply checking syntax, but understanding project structure, naming conventions, coding styles, and more. PhpStorm gives me access to a full debugger, with inline breakpoints and execution step controls. “Find Usages” is incredibly thorough and even understands dynamic symbol names in many cases. Also I get a full MySQL and Redis client, right there in the UI. I can click on strings which refer to column names in my code, and they’ll appear in the DB panel instantly. At the end of the day these are power-user features, but I’m glad to have them and feel significantly more productive in a JetBrains IDE. Embracing static analysis and a full IDE was probably the single most beneficial upgrade to my skills and career. reply Contortion 1 hour agorootparentI've tried VS Code and Haystack (based on VS Code) for writing PHP and I just couldn't stand it after having used PhpStorm. Basic things like copying variables, indenting, moving lines into if statements, multiple cursors etc. just aren't intuitive in VS Code when writing PHP and a lot of the things I can do in PhpStorm with the press of a button just aren't possible. I really hope they move PhpStorm to the same payment model as Rider so I can also use it for my own non-work projects. reply butz 35 minutes agoparentprevI've ditched PhpStorm licence quite a while ago after I stopped working with PHP. Tried using VS Code for personal JS projects, but I had to install a few plugins to make it more efficient and still having a strange issue on Linux, when Terminal panel is open, whole code editor feels sluggish. I don't really like how IntelliSense works on VS Code, but that's on me, as there's a plugin or some setting somewhere to fix it. Also VS Code creates several strange directories in my $HOME directory, even when running in portable mode. From application size perspective - VS Code is marginally smaller, and starts a bit faster than IntelliJ IDE. But SublimeText is even smaller and runs circles around big IDEs, not to mention how good it is at handling large text files. At this day and age it comes to personal preference. It is great that new developers have a wide choice of IDEs freely available. reply AuryGlenz 7 minutes agoparentprevFor Unity, the integration just works and works well. reply ActionHank 42 minutes agoparentprevIt's difficult to quantify, but to me (large C# & TS projects) the difference between working in Rider vs VSCode is the difference between Notepad and VSCode. The difference is big. Also, often I think to myself \"I wish feature X was available\", only to find that it is and has been for a while in Jetbrains products. reply guytv 1 hour agoparentprevSuperior: * Debugging * Refactoring reply corytheboyd 54 minutes agorootparentSpecifically, out of the box, these things work, and work exceptionally well. In my experience you can get 80% of the way there in VSCode, but it requires compromise and time, which I’m personally willing to throw money at to make go away. reply kdnsndndj 58 minutes agoparentprevThey are completely different products? One is an IDE, the other is an editor. If you want an editor, of course you will not be happy if you use an IDE reply johnfn 57 minutes agorootparentThe claim that VSCode was just an editor seemed flimsy the day it was released. Now, it is absurd. reply metalliqaz 1 hour agoparentprevI believe the JetBrains equivalent of VSCode is Fleet, which is already free. In other words, their code editor. reply 0x073 3 hours agoprevWebstorm is now also free for non commercial use https://blog.jetbrains.com/blog/2024/10/24/webstorm-and-ride... reply laristine 3 hours agoparentI couldn't believe it. WebStorm is easily among the best IDEs for web work (some of my coworkers would say the best) today. reply 9cb14c1ec0 3 hours agoprevJetBrains licenses are one of the few software licenses that I pay for. Their IDEs have the features I need while keeping the UI from getting in the way. reply ezekg 2 hours agoparentI really, really wanted to like and use their IDEs (esp their Ruby 'intellisense' or w/e), but the lack of popular theme support kind of killed it for me. I wanted my IDE to look like my VSCode editor, but, at least a few years ago, that wasn't really possible since iirc there were only a handful of theme options. reply martypitt 2 hours agorootparentThey revamped the IDE a while back, it now feels much more VSCode-esque. Theming has moved on a fair bit too... reply luckylion 37 minutes agorootparentprevYou can theme it yourself without too much hassle. I like my dark mode to be black rather than grey, and just made it do that, and it just works. It took an hour or three to understand the process because I'm not a Java person and am not familiar with any of the tooling, but then it was super easy. This was a few ago, so they may have improved that part by now, I've just carried my theme over the updates. reply magic_hamster 1 hour agoprevThere is a lot of praise here for JetBrains. I love their products, but sadly they joined the devcontainer race way too late and the condition of their products does not allow for serious development with dev containers. Their Gateway application is still in beta, and it doesn't always work, but it's faring much better than their early access devcontainer IDEs which are in a sorry state. I can't believe that this late in the game my team has no choice but to actually give up on jetbrains for some time. We tried our best to make it work with their products because we enjoy them dearly. But if it doesn't work, it doesn't work. VSCode has a mature, and most important functioning, devcontainer ecosystem. Not sure if Rider even has devcontaier support but good for jetbrains for releasing a community edition. reply pradn 9 minutes agoprevAnyone know how well this works with Godot? reply lolinder 3 hours agoprevThis is also true of WebStorm now, too. Discussion on the announcement: https://news.ycombinator.com/item?id=41935128 reply antaviana 1 hour agoprevThe pricing page says the Free version collects anonymous data. I understand the paid versions don’t. Does it say anywhere the kind of anonymous data that is collected in the Free version? reply sebazzz 3 hours agoprevBeautiful. Rider is an awesome a much faster IDE and I use it whenever possible. It is not practical for all projects. The only behaviour that annoys me a bit: - Double clicking an identifier should select the full identifier. However, in Rider (as opposed to Visual Studio) it is connected to the CamelHump setting - which is useful by itself. In Visual Studio you can have both CamelHump enabled and “double clicking the identifier selects the whole identifier”. - Any startup project tasks like maybe a “webpack watch task” is “in the way” when stopping run/debug of your current application. A separate task runner like in Visual Studio would be beneficial. - If a solution has file templates defined, every user needs to activate/select them manually in the settings. Quite cumbersome. reply textlapse 3 hours agoprevThere are a few privately owned companies that amaze me: JetBrains, Valve among the top. Somehow they have a much better value/user and make reasonable decisions: counter intuitive to investors/shareholders but insanely intuitive to their users. I am sure the public market has made the general public reap the rewards of large companies (kudos!) but some of the privately owned companies are absolutely kicking ass to serve their customers instead. Rider is a really great product - probably the next generation of coders will be split between VS Code and Rider with this change. reply maples37 2 hours agoparentI'm not too surprised. I hope they stay privately owned! It's a lot easier to focus on \"make good product\" when you don't have investors/accountants/management/etc badgering you about \"stock price needs to go up, make something shiny and get it out this month\". I left my last company (pretty large, ~1500 employees at the time IIRC) for a variety of reasons, but that was the primary driver. I'd joined on when they were privately owned by the guy who founded it. Then they got some private equity investment group to buy out part of the company. Then they did an IPO. Everyone was SUPER excited about the IPO. I didn't pay too much attention, I was focused on the product my team was building. ESOP was nice. But within a year we were being pushed hard to cut corners and get a half-baked version of the product out to market instead of building it to do the job well like we'd planned from day 1. Ironically, if we hadn't been constantly badgered and having our priorities flipped back and forth, I bet we would have had a useful, functional version of the initial plan out the door by the time I left, with the proper foundation to keep building and expanding it to solve the problems our customers were experiencing with the old system. But now the old system's problems are deeply embedded in the new system, because it was quicker to shove out the door that way. On the contrary, the place I'm at now is a much smaller company, and the founder/CEO has stated in no uncertain terms that we'll never be sold out to investors because it would mean that we'd be beholden to interests contrary to building the product our customers want and running the company in a long-term sustainable manner. reply terminalbraid 3 hours agoparentprevI go pretty heavy on Jetbrains products, but they have stirred up the dev community a few times chasing things seen as investor friendly. In particular when they shoved their AI plugin as a required plugin with carried an obnoxious upsell nag. In general they've also spread themselves out across a ridiculous number of products where I'd prefer if they just focused on making their current stuff work (and not discontinue useful things like AppCode). CLion was practically unusable with the Mac toolchain for refactoring for a long time until they released the Nova backend. Fleet has been in public preview forever as a direct contender to VSCode and they spent a lot of work on it, incomplete, and then just let it sit there with minor stuff like getting themes after three years. reply talldayo 2 hours agorootparentThey also pulled the plug on free support for their Rust plugin which really upset me. Jetbrains is intent on making you pay before you get IDE functionality; I'd rather use VS Code or Zed these days. reply NoboruWataya 2 hours agorootparentRustRover is free for non-commercial use though? I liked the look of Zed when I first tried it out, but I read that it seems to have a strong cloud/AI focus which I don't want or need. I have started investing a bit of time in getting Vim working with all the bells and whistles and now it's a decent fallback when I can't use a JetBrains IDE for whatever reason. reply talldayo 50 minutes agorootparentI'll just be honest, I don't like Zed at all. I much preferred Atom when it was a thing, and I mostly use Zed begrudgingly because the other graphical editors tend to get sluggish. My preferred IDE was what Jetbrains had before with IDEA - you could plug in basic support for the languages you want and edit as you go. I don't want to set up a superheavy environment with all the bells and whistles, I want Intellisense and tree-sitter in a relatively zippy interface. That was what Jetbrains offered before, and it's what I can't have anymore. reply conradfr 1 hour agorootparentprevThey have always done that when they make a specific IDE for a language. reply Capricorn2481 2 hours agoparentprevI agree that private companies can be good and I use Steam a lot, but Valve sucks in other ways. Their community is awful and developers can have posts openly calling for their death or calling them racial slurs and Valve support will tell them they won't remove the posts. I don't mean they deny the support request, I mean a person will respond and say \"Yeah manage your community better.\" This is despite the fact they give no tools for community management. But being a public company wouldn't make it any better. reply 93po 1 hour agoparentprevvalve is nice but they're still taking a huge cut of revenue for doing extremely little work reply Scramblejams 36 minutes agorootparentTo each their own but I'm happy for them to pull a premium. As a customer: They're making gaming on Linux awesome, and my SteamDeck has killed off my console usage (YMMV), I love it so much. I'm way happier to buy games on Steam where it funds cool initiatives like that than on Epic where a big chunk of the value is accrued by TenCent and Disney. As a game dev Steam also brings a lot of value: A big customer base, to the point where a game with mid-tier popularity can still do brisk business (not nearly as true on Epic). Their backend is unintuitive but has loads more features than EOS. They also offer really cool tech like SDR (Steam Datagram Relay), etc. If you're selling a PC game, there's no better place to be and you get value for the premium. reply Psychotherapist 39 minutes agorootparentprevThey do offer many features for game developers, though. Multiplayer, Remote Play and the Workshop just for example. Those cost money to run and offer an amazing benefit basically \"for free\" (included in the cut) to game devs. https://partner.steamgames.com/doc/features reply fkyoureadthedoc 1 hour agorootparentprevI don't see the problem with that personally, since there's basically no restriction on how you distribute your games on the platform. It's not like iOS where you have 1 option. People publishing games just have to do the math and see if the benefits justify the costs. reply ilrwbwrkhv 2 hours agoparentprevI would add Wolfram to that list. All three have cracked capitalism. reply CraigJPerry 3 hours agoprevAs a looooooooong term intellij user, it surprised me that Rider is the more performant IDE (IDEA was the primary product - i expected it to have the best experience). I've used Rider a fair bit over the past 18 months or so (all products licence) and it's still very noticeable every time i spend time in Rider. reply LeFantome 1 hour agoparentI think some of Rider is written in C# vs all Java for IDEA. Could that be it? reply schmorptron 3 hours agoprevThis is great! I found myself preferring the rider student license I had at home to Visual Studio we had at work when I was actively writing a lot of c# and some f# recently. It didn't feel fast outright, but at least faster than VS, and the memory profiler was much more immediately grokkable to me. reply 708733454927516 2 hours agoprevActivation required. Still a nice deal. Also looks like an online account is required. reply dzonga 1 hour agoprevwhat does free for non-commercial use really mean ? if you make a game, then it gets popular what happens ? or some .net api? I'm always confused by such licensing terms e.g what ended up happening with Unity. reply Kwpolska 2 hours agoprevRider is much better and faster than Visual Studio, and it's worth every penny. Making it free is a great move. reply fhdsgbbcaA 2 hours agoparentI think it’s a bit worrisome that Microsoft can give away VS Code for free because they subsidize it in other ways, but JetBrains - a small software shop - clearly is being forced into this position. Just more Big Tech setting the terms for all of us trying to make a living. reply jasomill 1 hour agorootparentWhile I don't disagree with your overall point, it seems worth pointing out that JetBrains has over 2,000 employees, so it's only small in comparison with industry giants, and that Rider has been successfully competing with \"free\" from day one: both VSCode and Visual Studio have been free for non-commercial and commercial use by individuals and small organizations for longer than Rider has existed as a product. And Rider was built on IntelliJ and ReSharper, two products that successfully \"competed with free\" for many years before then. So, if anything, I'd say that JetBrains is at worst reasonably well-positioned to survive dumping by larger competitors with more diverse product lines. reply danhau 1 hour agorootparentprevI suspect JB know most of their revenue comes from corporate licenses (I‘m guessing), so this shouldn‘t cut their bottom line significantly, while simultaneously giving them a foot in the door of potential new customers. Get them hooked for private / OS projects, then sell them commercial licenses. reply ChrisArchitect 3 hours agoprev[dupe] More on official post here: https://news.ycombinator.com/item?id=41935128 reply KacharKhan 2 hours agoprevLimited commercial use 1 to 3 devs should also be freek as projects this small usually are just starting and aren't profitable yet. Beyond that, yes , it should be sustainable for the team to pay for commercial license. reply newaccount74 1 hour agoparentNo. If you have money to pay for developers, you also have money to pay for tools. Especially since software licenses are going to be a tiny fraction of what the developers cost. reply buybackoff 3 hours agoprevIf they want to grab market share they should include dotMemory to the free offer. Basically dotUltimate without ReSharper. Otherwise free Rider users will need to install free Visual Studio for enhanced profiling. reply bbx 3 hours agoprevFor someone who just got into game development on Mac, this is very interesting. I'd never heard of this IDE before. Will give it a try. reply danhau 1 hour agoparentYou won’t regret it. They’re basically the industry leaders in IDEs. They also make JetBrains Mono, a fantastic monospace coding font. reply sdflhasjd 3 hours agoprevI wish Jetbrains could save me from Xcode. Please. reply curlicue 1 hour agoparentSame, this has been a big struggle personally, as an engineer I try to be flexible with the tools I need to use, but I also want my tools to bring me joy, and Xcode brings me nothing but frustration reply terminalbraid 3 hours agoparentprevSame. Discontinuing AppCode was genuinely disappointing to me. Not sure if you can still download it, but it definitely hasn't seen a new major release since the 2023 version. reply hyperbrainer 2 hours agorootparentApparently, not enough people thought like you. [0] > While we’ve had some growth in terms of adoption, we didn’t reach the market share we had hoped for. We believe that the time has come to sunset the product and focus our efforts in other directions. [0] https://blog.jetbrains.com/appcode/2022/12/appcode-2022-3-re... reply alexashka 2 hours agoparentprevBut who's going to save you from the Swift compiler? :) reply atemerev 52 minutes agoprevWell, these code assistant AI models won’t train themselves… reply einpoklum 3 hours agoprevMany developers have gratis JetBrains license on account of being involved in FOSS. I'm in that category - have to apply each year for a license by referring to (one of) my FOSS library(ies). It's just too bad that their UI is going in the direction of VSCode and others, become more... I guess I could say smartphone-like. reply renewiltord 3 hours agoprevI really like their loyalty bonuses. The price for the whole thing drops down really low over time. reply eugenekolo 1 hour agoprevAwesome news. reply MattRix 1 hour agoprevRider has a lot going for it, but I really can't stand the structure of JetBrains subscription. Why can't they just have a single monthly or annual price, rather than this absurd structure where the price gets cheaper over time, encouraging lock-in? reply collinstevens 1 hour agoparentAll Products Pack (12 IDEs, 3 extensions, 2 profilers) first year - $289.00 (+$116) second year - $231.00 (+$58) third year onwards - $173.00 you're locked in because of an extra $116 the first year and $58 the second year? https://www.jetbrains.com/store/?section=personal&billing=ye... reply Jtsummers 1 hour agorootparentThey may mean that they're locked into continuing the subscription to keep getting updates because if you have a break then you start at the high price again. Whenever you don't renew you get whatever version was out when you last renewed in perpetuity which is great. But if you decide you don't want it this year, but in two years you do, now you're back at the $289 price. Though if you pay $289 every other year you're still coming out ahead compared to an annual subscription so I don't know what the issue is. reply curlicue 1 hour agoparentprevBecause you get a lifetime license for the latest version available when you pay, so you're getting less value the second year you pay since you're just paying for updates. You can choose to pay every 3 or 4 years rather than yearly if you don't want to be locked in, but it will come out as a similar cost overall reply wiether 1 hour agoparentprevThey're rewarding recurring customers, this is not a vendor lock-in. reply MattRix 25 minutes agorootparentThat’s of course the way they would try to frame it positively… but imagine it any of your other subscriptions did the same? Once you’ve been subscribed, it puts a much higher cost on unsubscribing, especially if you aren’t using it but think you might need it again at some point in the future. reply alex_lav 2 hours agoprevRider is by far the best C# IDE. Especially if you're not running Windows. It was a real lifesaver while working with Unity. reply kosolam 2 hours agoprevBtw, as a paying ultimate user for the Java EE features I was surprised how good vscode support for the same is. And completely for free reply kernal 3 hours agoprevIs Rider nerfed as much as the free version of IDEA is? And if not, then why isn't there a free noncommercial version of IDEA? This seems like a smack to the face for Java developers that want to use the full version of IDEA for noncommercial purposes. reply chupasaurus 3 hours agoparentFull version of IDEA is \"make your own IDE\" since you can add almost everything from their other IDEs. reply slekker 4 hours agoprevI'm learning F# and have been using VSCode. How different/better JetBrains Rider support for F# is? reply terminalbraid 4 hours agoparentConsidering you get a better integrated environment rather than something designed more heavily around plugins you also get unquestionably much better refactoring tools. One thing to note that I just learned: You cannot opt out of anonymous data collection if you use the free non-commercial license. (I'd probably still trust Jetbrains over Microsoft, but that's me) https://blog.jetbrains.com/blog/2024/10/24/webstorm-and-ride... I'd definitely recommend trying it out now that it's free. Your taste may vary. reply chusk3 1 hour agoparentprevHi, I'm the maintainer for the VSCode F# support. Rider support for F# is great, that team is very engaged, and I'd strongly consider it if * you have mixed C#/F# projects in a solution (C# and F# support in VSCode can't communicate today) * you use Rider for other technology * you want paid support for your editor tools * you prefer IDE-style experiences rather than editor/ extension-style experiences * you want to take advantage of Rider features like their accelerated build caching reply debugnik 55 minutes agoparentprevIn my experience, Rider's support for F# is much more stable and usable than Ionide, or even Visual Studio proper. reply cmbernard333 3 hours agoprevNow do CLion. I cannot stand using VS on windows. reply alberth 4 hours agoprevWhat an amazing accomplishment JetBrains has done. It's a bootstrapped, European company, doing $400M+ annually in revenue selling to developers (who are some of the most difficult buyers to convenience to pay). https://www.jetbrains.com/lp/annualreport-2023/ reply MangoCoffee 3 hours agoparentI do pay for software, even subpar ones like Telerik's controls, for a while. I used to think I'd just use free open-source software until I became a developer myself. Now, I believe people should be compensated for their work, even open-source developers who contribute their time and skills for free. I think you meant Enterprise software that can cost a lot. a developer can't afford that. reply sofixa 3 hours agoparentprev> who are some of the most difficult buyers to convenience to pay And who more often than not get their software imposed on by the orgs they work in, so it's doubly complicated - the developers have to be convinced themselves enough to be willing to convince their IT department/fellow developers to pay for. reply arkh 3 hours agorootparentMost professional developers in Western countries should have the means to pay for their own license if really needed. reply sofixa 28 minutes agorootparentIt's not about having the means, it's about most companies having policies and processes structured around common software used by all employees in a similar position to allow for collaboration, and to ensure compliance with whatever governance and licenses apply. You don't see orgs where some devs can choose GitHub, others GitLab. IDEs are more interchangeable, of course, but each developer having to set up their own config from scratch (correct plugins, build config, testing framework, etc.) would be a colossal waste of time for no reason. Some bigger orgs allow flexibility (devs can pick Mac or Linux-based laptops, VS Code or JetBrains as the IDE, etc.), but not bring your own with your own license. reply recursive 3 hours agorootparentprevMy employer has a policy forbidding the use of software that I personally paid for. Free software is fine for some reason. reply aniviacat 3 hours agorootparentIf your employer allows you to pay for development software, they can get into legal issues. Companies (depending on jurisdiction) are not allowed to make employees pay for items necessary for work. And allowing employees to pay can easily be misinterpreted into subtly pressuring employees to pay. reply sudhirj 3 hours agorootparentprevThis is usually because the software you pay for yourself has licensing terms that don’t allow commercial use or reimbursement. See the JetBrains personal license terms itself. Understandably, the company will find it easier and cheaper to forbid use than hire a lawyer to check each license for each software that each employee wants to use. reply jen20 3 hours agorootparentprevThat doesn’t make it permissible to run the software on company equipment, necessarily. reply dragonwriter 3 hours agorootparentYeah, specifically it will frequently (1) violate employer policy to use it on emoloyer equipment if not approved and, providing licensing is required, licensed by the employer, and (2) violate the license of the software to use it when it is not licensed to the employer. reply Nullabillity 3 hours agorootparentprevThis seems to be what JetBrains has been betting on for a long time. Don't need to build a competent text editor if you can give management the right buzzwords. reply homebrewer 3 hours agorootparentSince it's a tool for writing code and not prose, it does not have to be a competent text editor if it's a competent \"AST editor\", which it very much is. Much more so than any alternative, commercial or otherwise. reply memsom 3 hours agorootparentprevI have access to both an MSDN subscription paid through my employer and Rider that I pay for myself. I use Rider over VS2022. Why? VS2022 is slower and way more flaky with Android development. Rider has Resharper built in. I like that I can use 1 IDE vendor's products for everything I need (Pycharm, IntelliJ, Rider, RustRover and Android Studio.) reply sfn42 3 hours agorootparentprevAre you implying that JetBrains ides are not competent? Compared to their alternatives like Eclipse, Visual Studio etc I think they're a huge step up. If you're a fan of simpler tools like vim, emacs or vscode etc I can see that they may not be to your taste, but I think their products are great. They're easy to get started with, powerful when you learn to use them, relatively bug free and I'd say they significantly boost my productivity. reply princevegeta89 3 hours agoparentprevThis company has always impressed me from the get-go. I started my journey with IntelliJ, and it was the best IDE I ever put my hands on. And ever since then, I kept using their other IDEs as well. Somehow VS Code tried to swing me away from it, but it just never ever came close to whatever JetBrains could offer. And it's only going to keep getting better. It's great that it's now free for non-commercial usage. And when I really work on projects that make money, I don't mind paying $100 a year anyway. reply gspencley 3 hours agorootparentI suspect that JetBrains is trying to respond to the fact that Microsoft gives VSCode away for free and that's likely what is spurring the massive adoption of VSCode. A colleague of mine at work, who is almost retirement age now and has 10+ years on me in the industry told me that the ONLY reason he uses VSCode is because it's free. I'm with you, there are IntelliJ features (particularly the refactoring features that I use all the time and couldn't live without) that I just take for granted. And when I watch other devs do things the hard way in VSCode I wonder why it's is so popular. I think most devs just either don't know what they are missing, or it just comes down to cost. I also often chuckle when people say \"Oh there's a VSCode plugin that can do that.\" I'm not certain, but I don't think I've ever installed a single plugin in IntelliJ because it just does everything I need out of the box. reply dragonwriter 2 hours agorootparentI prefer VSCode not mainly directly because it is free, but because a side effect of it being free is that it has support in its exosystem (often, but not always, also free) for everything I want to do, usually well before commercial IDEs. There are some things some commercial IDEs do better for some of the things I do... but none of them have the breadth of functionality in the VSCode ecosystem, and there is value to not switching IDEs for different tasks. And there are plenty of things where the best tool I’ve found is in the VSCode ecosystem, not a commercial IDE. reply princevegeta89 2 hours agorootparentI respect your opinion and what you said makes sense. That said, I find myself only ever using VSCode for \"light\" edits since it is somewhat faster to open and close from the terminal. reply princevegeta89 2 hours agorootparentprev>> I suspect that JetBrains is trying to respond to the fact that Microsoft gives VSCode away for free and that's likely what is spurring the massive adoption of VSCode. This is exactly the reason. When people use both VSCode and Jetbrains IDEs, a huge portion of them will end up becoming a Jetbrains user, and on someday, some of them can become paying customers VSCode infrastructure is pretty broad and the community is pretty large. I only use it to make light code edits here and there but I would never put my whole project in it. >>I've ever installed a single plugin in IntelliJ because it just does everything I need out of the box. Same here, the only plugins I installed were themes :) reply peutetre 3 hours agoparentprev> selling to developers (who are some of the most difficult buyers to convenience to pay). All of whom, strangely, expect to be paid for their work. reply jchw 3 hours agorootparentI dislike this implication that developers are greedy when the real tension is commercial interests vs mutually beneficial communal interests. Of course everyone expects to get paid, but developers love community projects and protect them fiercely because there's no natural force that can. It's all up to the people themselves. Sure, some minority of people are just greedy and rude. I think most people aren't. As far as being stingy goes, I believe I have paid more for software so far than most people will in their entire life time by probably multiples and I'm happy to continue to do so, and I will also be on every thread about a CLA rug-pull as well, because BS is BS, no two ways about it. reply BadHumans 3 hours agorootparent> Sure, some minority of people are just greedy and rude. You're conflating 2 different things together. I don't think most people are rude. I think most people are greedy. reply jchw 3 hours agorootparentThey are two things but they are not vastly unrelated. In this context the rudeness would mostly come from entitlement which is definitely related to (and still distinct from) being \"greedy\". As far as \"most people are greedy\" goes, that really comes down to how you quantify \"greed\" and I really think we're better off agreeing to disagree on this point. reply ozim 3 hours agorootparentprevGiven amount of open source available for free I can easily say your statement is totally wrong. reply desiderantes 3 hours agorootparentDoing charity work does not mean you don't expect to be paid for your regular work. Also, a lot of companies do pay devs to work on open source projects. reply sangnoir 3 hours agorootparentOpen source isn't charity - just like playing non-professional sports isn't charity: the vast majority of participants see it as a hobby or social activity. A minority get paid, and a minority of the minority \"break even\", but vast majority are playing in self-organized leagues and pick up games, which are in no shape or form charities (even if the public can watch for free as a side-effect). reply izacus 3 hours agorootparentprevHuge majority of OSS developers (especially for big projects) are paid for their opensource work too. reply monsieurbanana 3 hours agorootparentI don't think so. If you're saying that in big projects (e.g. Linux) most developers are paid, sure, but those projects are a drop in the ocean of open source projects. I doubt very much that there are more paid than unpaid OSS developers but neither of us are bringing numbers. reply mnau 3 hours agorootparentprevThe 2024 Tidelift state of the open source maintainer report (https://explore.tidelift.com/2024-survey) disagrees. And that is probably the most comprehensive one that actually favors large projects, because of Tidelift business model. > The portion of respondents who reported they are unpaid hobbyists remains at 60 percent, the same as in last year's survey. Only 12% checked \"I'm a semi-professional maintainer, and earn most of my income from maintaining projects.\" 24% checked \"some of my income from maintaining projects\" reply izacus 2 hours agorootparentThe site keeps shoving a data colleciton popup in my face so I can't read it - what's the sample/methodology for a \"maintainer\" here? Do they normalize against the usage of their output projects at all? Are those projects the size of Jetbrains IDEs - e.g. Linux kernel, ffmpeg, VIM, Emacs, etc. ? reply javajosh 3 hours agorootparentprevWe expect to get paid for satisfying someone else's requirements. We do not expect to get paid to scratch our own itches. reply pjmlp 3 hours agorootparentprevThat is exactly the point, those using the free tools expect to be paid, while feeling entitled about those free tools capabilities and zero monetary contributions. reply mattgreenrocks 3 hours agoparentprevThankfully, most developers aren't like the vocal minority on certain sites (cough) that allege they could write something in a weekend and thus they shouldn't pay for it. reply fkyoureadthedoc 3 hours agoparentprevI'd love to pay for a lot of software and dev stuff. Convincing my job to do so is such a pain that I don't even try. I do pay for WebStorm and DataGrip myself though. reply mirekrusin 3 hours agoparentprevSadly developers don't have buying power. Microsoft is good example of company which understands it and lobbies its presence through channels that do make those cross company decisions. reply lolinder 3 hours agorootparentI just pay for a license myself for both work and personal use [0]. I personally have enough buying power to afford it, and it's more than paid for itself over the years by giving me a leg up over coworkers who try to make do with free tools. People I work with think I have some superhuman ability to navigate, understand, and modify huge codebases and don't believe me when I tell them that it's just because I learned how to use JetBrains IDEs fluently. [0] This is explicitly allowed: https://sales.jetbrains.com/hc/en-gb/articles/207240855-Can-... reply mrgoldenbrown 3 hours agorootparentDoes your workplace explicitly allow you to use personal software on work equipment, or do you just not mention it and hope nobody notices? Just curious, as not all places would allow this. reply lolinder 3 hours agorootparentYes, devs are explicitly allowed to use any editor they want. I'm not the only one who brings my own JetBrains, but I'm in a tiny minority. reply jmb99 1 hour agorootparentThis is not common, at least from my experience (in western companies). Even if devs have root (not a given), the policy is generally that employees cannot use paid software that the company hasn’t licensed reply qsort 3 hours agoparentprev> who are some of the most difficult buyers to convenience to pay Citation very much needed? Unless you're talking about enterprise software specifically, developers are probably among the most willing to shell out cash for software, it's the general public who seems to be fine with ad-ridden spyware freemium nonsense as long as it's free. reply michaelt 3 hours agorootparentThere's a long history of the likes of Redis, MongoDB, Grafana, Terraform etc first releasing their product as free and open source to get adoption, hoping to make money by some indirect means, then relicensing to closed source later on because nobody pays for something they can get for free. And pretty much all major programming languages and libraries are given away for free too. Someone tries to introduce BitKeeper, a commercial version control system, for the Linux kernel? They won't stand for it, some's gotta clone it and give the clone away for free. Hell, I've heard loads of people here on HN complaining when a SaaS company introduces features exclusively useful to large corporations - like single-sign-on integration - then wants to get paid for them. There's a handful of exceptions. For example game developers will pay $$$ for \"Unity\" and store their assets in \"Perforce\" and suchlike. And I believe it's possible to pay for Visual Studio. reply pjc50 2 hours agorootparentThis is where remembering the free-costless and free-libre distinction is important. Linux is free-libre, so it's natural that it insists on its dependencies being free-libre. Free-libre is necessarily also free-costless, but not the other way round. > Visual Studio It's interesting that everywhere I've worked as a Microsoft shop happily pays for MSDN, which gives you not just VS but a huge amount of other stuff. Perforce handles large binary assets much better than git. There are also paid for closed version control systems that are really bad but get used anyway, such as in IC design. reply shaky-carrousel 3 hours agorootparentprevPeople usually dislike bait and switch schemes. reply pjmlp 3 hours agorootparentprevEvery single time someone posts about some commercial tool, in a website dedicated initially to startups, there is always a set of replies with half-baked open source alternatives to use instead. reply dewey 3 hours agorootparentprevDevelopers regularly underestimate the work required to build something and will spend a lot of time building something themselves vs buying someone else's tool for $5 / month. Source: Myself reply crop_rotation 3 hours agorootparentprevNo, non developers are more likely to buy software for what they need for their profession (that is why tons of terrible software exists everywhere for such tasks). Ad ridden spyware is mostly for consumption things like games and random websites. On HN every now and then you will see people saying you can do anything with nano and vim/emacs and only recently some of them have started using LSP. Anything that is not totally free and open source gets 100 denials on HN. reply mike_hearn 3 hours agorootparentprevIt's hard because developers don't usually have spending authority or budget. Often, nor does their manager or their manager's manager. To get the company to buy something you have to escalate to an absurdly high place in the org chart and so devs will often try to cobble something together out of free stuff, even if it's far less efficient, because spending developer time doesn't require permission whereas spending credit card balance does. Unrelatedly, there's also to some extent an expectation that everything is free, even for commercial users. The most common pricing question I get about my product is \"can't you make it free for commercial projects that don't have revenue yet\", i.e. effectively asking me to become investors in their own venture. Because often they want to make a product company, but not spend any money to do so. Source: I run a small software company that sells to developers. reply pjmlp 3 hours agoparentprevIt is the new Borland, hopefully they won't follow into the Inprise phase. reply corytheboyd 3 hours agoparentprevThis isn’t a rebuttal, just my complementary $0.02 on top. It’s more complicated than “developers are cheap”. They understand software complexity, and when paying is justified. They know what a clear online grift looks like. They have and make free software. I’m happy to pay the JetBrains subscription because it’s actually good enough to warrant the price. You can’t trick a carpenter into buying a poorly build and/or overpriced cabinet by putting a fancy handle on it. reply TiredOfLife 3 hours agoparentprevNow they are european. They started as fully Russian company. But they are a truly rare example of a company that actually left russian market. Unlike Apple or LG. reply kimixa 3 hours agorootparentI always thought the company was Czech? Though I think the founders were Russian nationals. I guess it depends on what you consider a \"Russian Company\". As a British national living in the USA, does that mean if I start a company it'll be a \"British Company\" forevermore? reply BjoernKW 3 hours agorootparentBefore 2022, their de-facto headquarters and most of their employees were still located in St. Petersburg, even though the main company was registered in Prague. reply dragonwriter 3 hours agorootparentprev> Now they are european. They started as fully Russian company. The heavily populated parts of Russia, including the part where JetBrains was operating, are in Europe. (Russia’s not part of the EU, obviously, but “European” and “EU” don’t mean the same thing.) reply piskov 3 hours agorootparentprevKudos to Jebrains basically gifting Rider to Russians making it free of mandatory license and possibly malicious cracks reply einpoklum 3 hours agorootparentprevDid they have Russian developers and let them go? Or do you mean the ownership has changed? reply zorgmonkey 3 hours agorootparentMy understanding is they relocated the developers who were in Russia reply lolinder 3 hours agorootparentCorrect, though they also lost some who were not willing to relocate. reply einpoklum 50 minutes agorootparentThat's really too bad, and not fair to the Russian developers. More 'collateral damage' from the NATO-Russia conflict. reply lolinder 47 minutes agorootparentYeah, it sucks that Putin decided to invade a sovereign nation that was home to a bunch of JetBrains employees. His war has turned the world upside down in a lot of ways, and I really do feel for the Russians and Ukrainians who he's dragged down with him. I have coworkers who regularly have to take shelter from his bombing campaigns. reply mathverse 3 hours agoparentprevThey are a russian company. Russians despite their evil empire are smart and capable people. reply weaksauce 2 hours agorootparentthey aren't a russian company. they were founded in the czech republic... they may have been a country that was aligned ideologically with the ussr during the cold war but that's not the same as being russian. https://blog.jetbrains.com/blog/2022/12/06/update-on-jetbrai... > The Czech Republic is a member of the United Nations, NATO, the European Union, the OECD, the OSCE, the Council of Europe and the Visegrád Group. reply mathverse 2 hours agorootparentThe company is not czech. Russians are an overwhelming majority of the employees. reply SkiFire13 2 hours agorootparentprevIt was founded by russian nationals but the company is formally czech and is more connected to the west than to Russia. reply mathverse 2 hours agorootparentThe majority of employees and C-level are russians. It is a Russian company. reply charkubi 2 hours agorootparentprevCzech https://en.m.wikipedia.org/wiki/JetBrains reply mathverse 2 hours agorootparentMajority of employees are russians including the C level reply scblzn 3 hours agoprevHowever, be careful with the terms of non-commercial usage (Enforced heavy metrics) \"You agree that the product will send usage data to validate your compliance with the license terms and anonymous feature usage statistics...\" \"The information collected under Sections 4.1. and 4.2. may include but is not limited to frameworks, file templates used in the Product, actions invoked, and other interactions with the Product’s features.\" reply thatfunkymunki 2 hours agoparenthttps://intellij-support.jetbrains.com/hc/en-us/community/po... Not just that, they will do some yucky things to exfiltrate data from your network to enforce this. reply blorenz 2 hours agoprevI have loved JetBrains ever since I entered their ecosystem for the End of the World Sale in 2012. As a professional developer, I need my tools to work for me and not against me. That is why I pay for these tools and I appreciate JetBrains' consistent iteration on making them even better. I do have a few gripes though. I wish the performance was better on my current setup on my M2 MBP. It is an awful experience when tools get in your way and break your flow. The file sync to MacOS is fairly laggy and new files that are created can take seconds to appear. UI interactions can be laggy. Sometimes invoking the context sensitive intentions/actions is blocking where it will hang for seconds. I need to keep my movements fluid to keep my train of thoughts on the track and not be derailed by my ADD. I also would like a plug-in system that wasn't entirely on Kotlin, Groovy and Java. I did Groovy dev in a past life but it's painful for me today. Thankfully ChatGPT gets me most of the way there. I wish there were JS/TS bindings to build upon. Overall, I'm pleased with JetBrains. I appreciate their content they put out on YouTube to further empower the developers that use their products with knowledge and guidance of efficiencies. I'll continue using it as my core IDE for the foreseeable future. I have augmented my flow with a bit of Cursor but JetBrains is the bread and butter. reply OtomotO 2 hours agoprevI loved JetBrains IDEs years back. These days I am mostly using NeoVim. I decided today to stop supporting JetBrains BECAUSE there is no good kotlin language server. I would gladly pay them money even if I don't use their IDEs if only they provided a good language server. reply qwwdfsad 1 hour agoparentI wonder though, do you expect good LSP to be available for commercial use free of charge? reply psygn89 3 hours agoprevThe design of the yellow/black cells holding language/tech tripped me out for a sec, on my laptop they're all crooked at the top but align themselves after a certain amount of scroll. Thought I was seeing an optical illusion but a refresh shows that it's not. I don't think this was intentional. reply aggieNick02 2 hours agoparentWhat on earth is up with that? It's not just you. It happens in both Chrome and Firefox. After a very small amount of scroll it goes away?!?! reply nurettin 3 hours agoprevSounds like they got a big present from Microsoft. reply homebrewer 3 hours agoparentNo, they're feeling pressure from VSCode (which is primitive in comparison, but good enough for most people). Thus the new theme (which none of the old users asked for) — total clone of VSCode UI, and this announcement. It's the opposite of what you're thinking. reply memsom 2 hours agorootparentNot sure which version of VSCode you think the new UI is a clone of, but I don't really see it. The tool buttons? VS has always had those, thought they had text by default. Tabs? VS has those too. Bottom bar? VS also. In fact, Rider looks like all the other Jetbrains IDEs - except Fleet, which is actually their VS Code competitor. reply Latty 3 hours agoprev [–] I'd been subscribed for the best part of a decade to their all products pack, liked the products, but they kept doing stuff that really rubbed me the wrong way in a paid product, e.g: shoving the AI offering down my throat and initially having no way to remove it, and then when I paid most recently, they sent me some spammy marketing for some third party product as a \"thank you\", and I cancelled my subscription there and then. I don't mind paying for a good product, but I want the experience to be less irksome than the free offerings out there, I get enough annoying advertising from free stuff I use, if I'm paying good money, I don't want that. reply Habgdnv 3 hours agoparentI was a paying customer for a long time, and their spam campaigns were the reason for my cancellation last year. Now I am a happy Microsoft Visual Studio Pro subscriber again. (happy in quotes btw) reply Latty 3 hours agorootparentIt's a shame, I like the tools generally, but so much stuff is just about bombarding you with ads now, paying for a good tool is, to me, meant to be the way to avoid that, that really soured me on it all. reply rahkiin 3 hours agoparentprev [–] What is the problem you have with the AI? You can disable it, and otherwise it is run locally only. It does nice line-completion reply Latty 3 hours agorootparent [–] At launch it'd pop open the UI every time you opened any of the tools, and you couldn't uninstall the plugin. I understand you can now disable it, but it was annoying at the time, and demonstrated the issue I had with feeling like I was being advertised to in invasive ways despite being a paying customer. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "JetBrains Rider is an integrated development environment (IDE) tailored for .NET and game developers, offering extensive support for various frameworks and game engines.",
      "It supports .NET frameworks such as ASP.NET Core and MAUI, as well as popular game engines like Unity, Unreal Engine, and Godot.",
      "This makes JetBrains Rider a versatile tool for developers working across different platforms and technologies in the .NET ecosystem and game development."
    ],
    "commentSummary": [
      "Rider, an Integrated Development Environment (IDE) by JetBrains, is now free for non-commercial use, coinciding with Microsoft's discontinuation of Visual Studio for Mac.",
      "Rider is well-regarded for its integration with game development platforms like Godot, Unity, and Unreal, and is noted for its speed and features compared to Visual Studio, although some users report issues with intellisense in large projects.",
      "The free availability of Rider, along with WebStorm and RustRover, aims to attract students and hobbyists, potentially expanding JetBrains' user base for future commercial licenses, despite some concerns about telemetry and data collection."
    ],
    "points": 471,
    "commentCount": 221,
    "retryCount": 0,
    "time": 1729781006
  },
  {
    "id": 41931572,
    "title": "AWS data center latencies, visualized",
    "originLink": "https://benjdd.com/aws/",
    "originBody": "AWS data center latencies X200ms Made by Ben. Data scraped from CloudPing.",
    "commentLink": "https://news.ycombinator.com/item?id=41931572",
    "commentBody": "AWS data center latencies, visualized (benjdd.com)458 points by orliesaurus 15 hours agohidepastfavorite184 comments CountVonGuetzli 8 hours agoIt would be really cool if it didn't just show the ping, but how much worse it is compared to the theoretical optimum (speed of light in fiber optic medium, which I believe is about 30% slower than c). I raise this because I've been in multiple system architecture meetings where people were complaining about latency between data centers, only to later realize that it was pretty close to what is theoretically possible in the first place. reply eitally 6 hours agoparentI'm under the impression that within the hyperscalers (and probably the big colo/hosting firms, too), this is known. It's important to them, and customers, especially when a customer is trying to architect an HA or DR system and needs to ensure they don't inadvertently choose a region (or even a zone that isn't physically in the same place at other zones in the same region) that has \"artificially\" (can be for all kinds of legitimate reasons) latency from the primary zone. This is not an uncommon scenario. My current employer specializes in SAP migrations to cloud and this is now a conversation we have with both AWS & GCP networking specialists when pricing & scoping projects... after having made incorrect assumptions and being bitten by unacceptable latency in the past. reply nullindividual 6 hours agoparentprevDoesn't look like this is a ping[0]! Which is good. Rather it is a socket stream connecting over tcp/443. Ping (ICMP) would be a poor metric. [0] https://github.com/mda590/cloudping.co/blob/8918ee8d7e632765... reply sulandor 2 hours agorootparentping is synonymous with echo-request, which is largely transport agnostic. but you're right reply nabla9 7 hours agoparentprevYou would have to map out the cables to do that. Light in fiber optic cable travels roughly 70% of the speed of light ~210,000 km/s Earth's circumferences is ~40,000 kilometers. Direct route from the other side of Earth to another would be roughly 100 milliseconds, round trip 200 ms. reply Bluecobra 5 hours agorootparentIt’s pretty trivial to do this, any big fiber company will provide you with Google Earth KMZ files (protected by NDA) when considering a purchase. This is absolutely necessary when designing a redundant network or if you want lower latency. reply ls65536 3 hours agorootparentprevSince light travels at 100% the speed of light in a vacuum (by definition), I have wondered if latency over far distances could be improved by sending the data through a constellation of satellites in low earth orbit instead. Though I suspect the set of tradeoffs here (much lower throughput, much higher cost, more jitter in the latency due to satellites constantly moving around relative to the terrestrial surface) probably wouldn't make this worth it for a slight decrease in latency for any use case. reply darrin 1 hour agorootparentHollow core fiber (HCF) is designed to substantially reduce the latency of normal fiber while maintaining equivalent bandwidth. It's been deployed quite a bit for low latency trading applications within a metro area, but might find more uses in reducing long-haul interconnect latency. reply cyberax 2 hours agorootparentprevYes. There are companies that sell microwave links over radio relay towers to various high frequency traders. reply thmsths 3 hours agorootparentprevI am pretty sure this was one of the advertised strength of Starlink. Technically the journey is a bit longer, but because you can rely on the full speed of light you still come out ahead. reply mrguyorama 2 hours agorootparentprevIn the past we just had line of sight microwave links all over the US instead. I think it's just too damn expensive for your average webapp to cut out ten milliseconds from backend latency. reply not_kurt_godel 6 hours agorootparentprevCable mapping would be nice but 100ms is a meaningfully long amount of time to make straight-line comparison worthwhile reply londons_explore 8 hours agoparentprevclicking around that map, I don't see any examples where the latency is a long way out of line with the distance. Obviously it's theoretically possible to do ~40% better by using hollow fibers and as-the-crow-flies fiber routing, but few are willing to pay for that. reply sebzim4500 8 hours agorootparentThe 'practical' way to beat fiber optics is to use either (i) a series of overground direct microwave connections (often used by trading firms) (ii) a series of laser links between low altitude satellites. This would be faster in principle for long distances, and presumably Starlink will eventually offer this service to people that are very latency sensitive reply sandworm101 7 hours agorootparentLow-bandwidth/low-latency people tend to also demand high reliability and consistency. A low-orbit satellite network might be fast but, because sats move to quickly, cannot be consistent in that speed. Sats also won't ever connect data centers other than perhaps for administrative stuff. The bandwidth/reliability/growth potential just isn't there compared to bundles of traditional fiber. reply dmurray 7 hours agorootparent> Low-bandwidth/low-latency people tend to also demand high reliability and consistency. For trading applications, people will absolutely pay for a service that is hard down 75% of the time and has 50% packet loss the rest, but saves a millisecond over the fastest reliable line. Because otherwise someone else will be faster than you when the service is working. They can get reliability and consistency with a redundant slower line. reply kqr 4 hours agorootparentCan you provide a source to this statement? The redundancy needed to transmit at desirable reliability with 50 % packet loss would, I imagine, very quickly eat into any millisecond gains -- even with theoretically optimal coding. Someone more familiar with Shannon than I could probably quickly back-of-the-napkin this. reply hylaride 2 hours agorootparentFinancial companies have taken and upgraded/invested in microwave links because they can be comparatively economical to get \"as the crow flies\" distances between sites: https://www.latimes.com/business/la-fi-high-speed-trading-20... https://arstechnica.com/information-technology/2016/11/priva... https://en.wikipedia.org/wiki/TD-2#Reemergence I'm not sure about the high packet loss statement, but it wouldn't suprise me that it's true if the latency is lower enough to get to take advantage of arbitrage opportunities often enough to justify the cost. reply londons_explore 3 hours agorootparentprevTraders wouldn't use redundancy etc. Whenever a packet with info arrives, they would trade on that info (eg. \"$MSFT stock is about to go down, so buy before it drops!\"). If there is packet loss, then some info is lost, and therefore some profitable trading opportunities are missed. But thats okay. There are thousands of such opportunities each second - they can come from consumer 'order flow' - ie. information that someone would like to buy a stock tells you the price will slightly rise, so go buy ahead of them and sell after them in some remote location. reply sandworm101 3 hours agorootparentThere is also a market for stocks that trade on different exchanges, resulting in fleeting differences in price between exchanges. Those who learn of price moves first can take advantage of such differences. In such cases, all you need to transmit is the current stock price. The local machine can then decide to buy or sell. reply sebzim4500 7 hours agorootparentprevThere's definitely a few billion a year in revenue for Starlink if they sell very low latency, medium bandwidth connections between Asia, the US, Europe and Australia to trading firms. Even if the reliability is much worse than fiber. reply pclmulqdq 7 hours agorootparentStarlink latencies sadly aren't competitive due to the routing paths it uses. And sadly there are currently no competitors to starlink. reply matthewdgreen 6 hours agorootparentThe routing paths traveling via ground stations, you mean? My understanding is that they were experimenting with improvements to this, they just haven't deployed anything yet. reply pclmulqdq 6 hours agorootparentNo, even with proposed inter-satellite routing paths, they are too slow. The trading industry has very much done the math on this. The comparison is against radio and hollow-core fiber, not conventional fiber. reply fragmede 5 hours agorootparentLaser links between satellites have been active since late 2022, or was there some additional improvement you're referring to? reply pclmulqdq 5 hours agorootparentI haven't kept track of that, but there is no other improvement. Even with the straightest possible laser links in space, they are too slow. reply sandworm101 6 hours agorootparentprevA radio will beat starlink on ping times. Even a simple ham bouncing a off the ionosphere can win out over an orbiting satellite, at least for the very small amounts of data needed for a trade order. The difficulty in such schemes is reliability, which can be hit-or-miss depending on a hundred factors. reply plantain 7 hours agorootparentprevAUSouth Africa & South America is way less than distance. reply bddicken 4 hours agoparentprevAuthor here - Interesting. Someone on X also gave this idea to me. Any good resources for how to accurately compute this? reply dgemm 3 hours agorootparentThe theoretical best latency would be something like speed_of_light_in_fiber/great_circle_distance_between_regions, both of which are pretty easy to find. The first is a constant you can look up, and the second you can compute from coordinates of each region pair. reply CountVonGuetzli 2 hours agorootparentThats what we did as well, via wolfram alpha. I.e. we were too lazy to look up everything ourselves and just asked it straight up how long of a roundtrip it would be between two destinations via fiber. We checked one result and it was spot on. This was six years ago tho reply liveoneggs 6 hours agoparentprevIIRC about 125 miles per ms reply alex_suzuki 12 hours agoprevI have red-green color blindness, which makes it hard/impossible for me to distinguish between the 200ms lines. This affects about 8% of male population btw, maybe you can add a color-blind mode, very nice visualization otherwise! reply blauditore 10 hours agoparentAs a quick workaround, you can set a CSS filter on the whole page: Either use dev tools to put a rule `filter: hue-rotate(60deg);` on the `body` element, or simply run `javascript:void(document.body.style.filter='hue-rotate(60deg)')` from the url bar. reply alex_suzuki 9 hours agorootparentNice hack, thank you! :-) reply punnerud 9 hours agorootparentCan also use Chrome Extentions like Colorblindly to change all the colors. Tested it on the webpage now (I am not colorblind) and I see that the colors change: https://chromewebstore.google.com/detail/colorblindly/flonia... reply bloopernova 4 hours agorootparentprevYou can also use ublock origin, it has a section for your own filters: https://gist.github.com/aclarknexient/c39c83f2f97c3c6b1c307c... reply zweifuss 52 minutes agorootparentbenjdd.com##html:style(filter:hue-rotate(45deg)) Tested with uBlock Origin on Firefox Mobile. reply dspillett 8 hours agorootparentprevIn case you are not aware, you can put this sort of thing in a bookmark on the bookmark bar (both FF and Chrom{e|ium}, I assume other browsers too) for easy access. If you don't have the bookmark bar visible hit [ctrl][shift][B] to flip it on (and the same to flip it back off later if you don't want to keep it). reply jeffhuys 7 hours agorootparentprevlet i = 0; setInterval(() => document.body.style.filter=`hue-rotate(${i++}deg)`, 16); Disco mode! (better to use requestAnimationFrame but I'm lazy atm) reply bddicken 4 hours agoparentprevAuthor here - Thanks for the suggestion Alex. From your perspective, what are some of the best ways you've seen people solve for this in the past? If you have links, please share. reply alex_suzuki 1 hour agorootparentHi! Thanks for getting back to me, appreciate it. To be honest, I‘m not an expert at all in this topic. I‘d imagine choosing a colorblind-friendly palette (see: https://davidmathlogic.com/colorblind/ ) would be an easy fix. Alternatively, or in addition, you could use dotted/dashed/straight lines to visualize the latency buckets. Might make for an interesting effect? Also it‘s common to hide this „colorblind mode“ behind a checkbox somewhere. So you don’t have to uglify your product. :-) reply bddicken 1 hour agorootparentCool, thank you for the input. reply bobthepanda 1 hour agorootparentprevnot op but this is one of the classic dataviz color palette pickers https://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3 https://venngage.com/tools/accessible-color-palette-generato... also seems nifty reply bjornsing 11 hours agoparentprevI don’t see any lines at all. Just blue dots repeating the data centers. Very confusing. reply RantyDave 11 hours agorootparentYou have to click one of the data centres reply spott 11 hours agorootparentprevTap a blue dot. reply kqr 11 hours agorootparentprevClick dots. reply eknkc 11 hours agoparentprevDo you have some kind of an accessibility tool for this? Maybe a whole screen filter that changes colors in a specific way so you can distinguish them? reply alex_suzuki 9 hours agorootparentNo I don't. It's actually not a big deal in day-to-day life. People often go \"But how the hell can you drive if you can't distinguish red from green at the stoplight?\"... in reality it's more nuanced. As another comment already mentioned, perception varies across even among colorblind people. I find it hard to distinguish R/G if the colors are not fully saturated or in low-light situation. Also the brain knows that \"red is on top\" and \"green is at the bottom\" at the stoplight and thereby improves the contrast for me. ;-) My comment was meant to raise awareness of this issue with the author of the tool. Many video games, especially the ones with some kind of HUD, minimap, etc. these days have a color-blind mode. reply eknkc 9 hours agorootparentYeah I’ve seen colorblind modes in a lot of apps. It is great for those affected. And probably not a huge hassle to implement anyway. But I was curious if one needs to rely on the application developers to deliver a solution or if there was a generalized filter or whatever that would work always. Maybe like screen readers, those work fine if the app does not do something horrible. But with some help from apps, they perform much better. reply saagarjha 11 hours agoparentprevColor-blind man here. While I think it’s important to consider color blindness when choosing colors, it’s not actually 8% of men who would have trouble distinguishing the two colors. That number is somewhat lower. Perception of color varies even across colorblind people so just because someone says it works for them doesn’t mean it will work for someone else, and vice versa. reply stogot 11 hours agoparentprevThis is such an easy thing to overlook for those of us that don’t. Red/green tends to be a default selection, perhaps because of traffic lights? I started putting myself in the shoes of a family member who is in the 8% and now i spend more time trying to pick better color schemes reply dredmorbius 6 hours agoparentprevFWIW, anyone reading on a monochrome e-ink device will have similar issues. Those are becoming somewhat more prevalent these days. reply roundstars 10 hours agoparentprevThere are some chrome extensions for colorblind. It might be helpful to you. Please check it out. reply YetAnotherNick 9 hours agoparentprevIt's sad that this is the top comment for the post. Many people have stopped posting their crappy work online due to harsh comments like yours. There's no easy reply to your comment. Maybe we should be less critical specially with \"Make it fit for my workflow\" type comment, and more so if it is built by some random guy in their free time, and not say a project which is asking money. reply sealeck 9 hours agorootparentI think this an uncharitable take – the parent comment is just proposing an improvement that would really help them given their colour-blindness (they also say they like the visualisation). Personally I find part of the reason for putting things on the internet is to allow other people to use them and obtain their feedback. reply YetAnotherNick 8 hours agorootparentEvery product has flaws which are outside of design scope. Pointing that is unnecessary. If I want feedback on my quick and dirty project, I want it on within the scope of design, not the missing features, bad accessibility etc. Specially HN crowd is very susceptible to feeling for accessibility comment. Return of \"think of poor kids in Africa\". reply philipwhiuk 7 hours agorootparent> If I want feedback on my quick and dirty project, I want it on within the scope of design, not the missing features, bad accessibility etc. This wasn't posted with that directive. And if your \"design is great\" but your implementation sucks then maybe the design sucks too. reply philipwhiuk 7 hours agorootparentprevMaybe we should be building accessible UIs by default rather than treating an actual disability as a 'my workflow' problem. reply some_random 5 hours agorootparentprevI totally understand being frustrated about people demanding workflow changes or huge accessibility features, but this is literally just a color swap that can be done with a touch of CSS it's really not a big deal. reply alex_suzuki 8 hours agorootparentprevSorry it came across that way, that was not my intent at all… it was meant as a simple suggestion for a potential low-hanging fruit improvement that would benefit people like me. Clearly you did not perceive it that way. reply Vinnl 9 hours agorootparentprevThe easy reply is \"thanks, I learned something today!\" reply adamcharnock 13 hours agoprevRandom fact: I did some planning around this for a client a while ago. While measuring the AWS latencies I found I could get approximate latencies (within 10%) by measuring the rough undersea cable length (km) and dividing by 150. While not overly surprising, it was very consistent. Edit: I think it was actually 155 reply carlio 13 hours agoparentThat reminds me of the story of the 500 mile email (https://www.ibiblio.org/harris/500milemail.html) reply MrLeap 11 hours agorootparentI read this yeaaaars ago. I'm about to re-read this, but before I do, I think this was the article that installed a little goblin in my brain that screams \"TTS\" in instances like this. I will edit this if the article confirms/denies this goblin. EDIT: mostly, probably, sort of. reply debuggerpk 12 hours agorootparentprevFunny story. He must thank the department of statistics for the quick turn around. reply renatovico 12 hours agoparentprevI think this is because of medium velocity of light \"Through LabVIEW the speed of light in the optical fiber is calculated to be ~ 2.054 x 108 m/s corresponding to a refractive index of n ≈ 1.4606 which is a typical value\" https://web.phys.ksu.edu/posters/2009/juma-Adv-Lab-S09.pdf reply kqr 10 hours agoparentprevThere's a surprising amount of real-world modelling that can be done to satisfactory precision with just multiplication and addition. reply keepamovin 12 hours agoparentprevThis page is such a well executed interactive map. Really enjoyed it Is the math-planation of your random fact basically (thanks to https://news.ycombinator.com/user?id=Hikikomori for correcting the lightspeed in fibre medium from 3e5 to 2e5 !) - lightspeed is 2e5 km/s ~ 2e2 km/ms, so/ - length (km) / 200 (km)/ms ~ K length (km) / 200 (km)/ms, so - latency (ms) ~ K' length (km) Where K is approximately 1.3 (K' is 1/155) and factors in things like: - non straight line distance - networking overhead / switching - both ways / measurement error Basically? reply Hikikomori 12 hours agorootparentSpeed of light in a medium like fiber is about 200 000km/s. reply keepamovin 12 hours agorootparentOh shit! Thanks. Good point. That actually makes it more plausible, as K is smaller. reply segfaultbuserr 10 hours agorootparent1/2 c in circuit boards (FR-4), 1/3 c in cables, two useful numbers to remember. reply keepamovin 9 hours agorootparentThanks, nice! But wait - so we have 1/2 c ~ 150 km/ms in circuit board. 1/3 c ~ 100 km/ms in cable. And... 2/3 c ~ 200 km/ms in fiber? I'm a bit confused about difference between cable and fiber heh :) reply Hikikomori 9 hours agorootparentprevDepends on what kind of cable? As twisted pair network cable is at 2/3. reply adamcharnock 12 hours agorootparentprevIt is possible I was measuring latency in a single direction, rather than round-trip-time. My memory is a little hazy now. reply keepamovin 9 hours agorootparentNo I think you had it right. I was off on the speed. Anyway, it could have matched accounting K for other factors heh :) reply ape4 6 hours agoparentprevRight, looking at the visualization most (all?) of the red lines are the longer ones - eg North America to South Africa. reply michaelnoguera 14 hours agoprevInteresting. If you click on one of the blue circles representing a data center, it shows latencies to the other data centers. This took me a second to figure out — maybe consider adding a note along the lines of “click to select a data center” on the site? reply WaxProlix 14 hours agoparentThese aren't even data centers, but aggregates. They're regions, composed of many different bits of networking and compute in various levels of abstraction - dc, edge installation, whatever. Within these regions there's a lot of variation from zone to zone, so the methodology matters. reply bddicken 14 hours agoparentprevAuthor here. This is great feedback, thanks. reply hyperpape 8 hours agorootparentI appreciate the effort to collect the data, but I think the rotating globe is an idea that looks cool, but makes the visualization harder to use. If I click on us-east-1, there's a 229ms line to...somewhere that I can't see. Meanwhile, I can't see the latency between us-east-1 and us-east-2. Perhaps if you selected a datacenter, and it switched to a 2-d projection with that datacenter at the center of the map, it would be better? Or perhaps augment the visualization with a table? reply bddicken 3 hours agorootparentAuthor here - You can see the raw data as a table here: https://www.cloudping.co. Sometimes visualizations like this are a careful act of balancing practicality with cool-factor. reply dredmorbius 5 hours agorootparentprevWinkel Tripel projection would mitigate this nicely. (One of several options, though the best IMO.)reply jumploops 13 hours agorootparentprevIdea: select a data center by default (i.e. us-east-1) to make it more clear. Bonus: select the nearest data center based on the user’s IP :) reply mvanbaak 11 hours agorootparentNitpick detail: us-east-1 (and all other availability zones) are also not a single datacenter by definition. The can also spend several reply Hikikomori 13 hours agoprevAWS provides latency numbers between regions, AZ's and within an AZ in network manager. Useful to have as a latency baseline and to see if they have any issue. https://docs.aws.amazon.com/network-manager/latest/infrastru... reply chipdart 13 hours agoparent> AWS provides latency numbers between regions, AZ's and within an AZ in network manager. AWS also provides dashboards that shows what regions/services are down, and history tells us those are not to be trusted for precisely the same reasons. reply Hikikomori 12 hours agorootparentAfaik it also requires someone to manually set it to be down on that page. Pretty sure that nobody is entering latency numbers manually every second, but maybe they have a team for that. reply bane 5 hours agoprevCool visualization and concept. I do wish the colors were on a ramp instead of bucketed. The reason is that it makes 100ms look much worse than 99ms, but equal to 200ms. If you click on us-east-1, for example, the latency to the data centers in Western Europe look quite different with eu-central-1 and eu-south-1 looking completely different even though the latency is only around 9ms difference and eu-north-1 and ap-south-1 look the same even though there's about a 88ms difference! There's some comments here also wondering about the best possible latency for speed of light vs what these measurements are. The problem with this is that c isn't the propagation velocity of information through fiber, it's some velocity well under c and depends on a number of different factors, many of which are unknowable, such as repeater latency and so on. In practice, the best theoretical value is no higher than 70% of c just measuring the velocity of light in a medium as c measures light in a vacuum. reply bddicken 4 hours agoparentAuthor here - The ramping is a really good idea. The current visualization makes a 90ms latency look \"good\" when in reality, thats totally unacceptable for many applications, especially for things where multiple round-trips need to happen to fulfill a request. reply jedberg 14 hours agoprevHow did you choose which datacenters to include? For example, eu-south-2 (Spain) is missing. The reason I know is because I worked on a project that required latency to be under 30ms between datacenters, and we had to use eu-west-1 (Ireland) and eu-south-2. Turns out that latency is closer to 42ms, mainly because there are no undersea cables between Ireland and the continent (they only go to England, then they have to route across England to get to a cable to the content). reply bddicken 4 hours agoparentAuthor here - I just used what was available on https://www.cloudping.co, which is certainly missing a few. The CloudPing GitHub repo has not had a code change in 4 years. Maybe a few new regions have popped up since it was last actively worked on. reply inkyoto 13 hours agoparentprev> How did you choose which datacenters to include? For example, eu-south-2 (Spain) is missing. At the bottom of the page it says: «Data scraped from CloudPing», with the CloudPing dataset linked through. If you click through to CloudPing, you won't find «eu-south-2» in the dataset. reply jbkkd 7 hours agoparentprevIsrael (il-central-1) is also missing. reply nixass 11 hours agoparentprevThere are good few DCs missing on that atlas reply bobnamob 11 hours agoparentprevYeah the new(ish) Melbourne region is missing too reply curtisf 11 hours agoprevObviously the biggest contribution to latency is distance. But there's also some close-ish regions with poor latency because there's not fiber running directly between them (for example, over the poles) Are there an examples of regions which dramatically violate the triangle equality? (That is, where the A--C latency is much worse than the best A--B + B--C latencies)? Just as a curiosity, could you use that idea to \"infer\" which data-centers are most likely directly connected by fiber, and show only the likely fiber connections? reply maxmouchet 8 hours agoparentI can't speak for AWS specifically, but in my PhD thesis [1] I found a bunch of such examples by using RIPE Atlas probes. Essentially looking for pairs of probes where the RTT between probe A and probe C is larger than probe A-B + B-C. Now there are some issues with this methodology (all common issues with ICMP/RTT measurements + traffic was not really routed through the \"relay\" probe), but such pairs do exist. [1] https://theses.hal.science/tel-03666771/document (see page 84 for an example; if you can read French :-)) reply kqr 11 hours agoparentprev> Are there an examples of regions which dramatically violate the triangle equality? (That is, where the A--C latency is much worse than the best A--B + B--C latencies)? I don't think this would happen at a significant scale, due to how routing works. If taking the \"detour\" through B is how the ICMP packets get there cheapest, that's the path they will go. If anything, we could look at where A–C is nearly equal to A–B + B–C and find where such a thing has happened. I suppose it could happen for reasons other than lack of fiber: financially better peering agreements, etc? reply Thaxll 5 hours agoparentprevThere are some regions that have notoriously bad networking with higher packet loss, for example South America and South Asia are pretty bad overall. reply llm_trw 11 hours agoparentprevYou can just look at the map of fiber optic cables around the world: https://www.submarinecablemap.com/ It's highly unlikely there are any non-disclosed undersea ones since they cost rather a lot to lay down. reply defrost 10 hours agorootparent> It's highly unlikely there are any .. Going back decades when a billion US was real money the original NSA (No Such Agency) that essentially no one had ever heard of, including most of the US houses and much of the defence committees that had clearance but not that clearance, had a 4 Billion+ budget for \"off-book\" satellites. Black cables are a damn sight cheaper than black satellites. reply curtisf 9 hours agorootparentprevYes, although I think it would also clean up the visualization, since you wouldn't have nearly so many lines connecting data centers which actually aren't connected; and it would therefore also be explanatory reply JoshTriplett 14 hours agoprevThe data is really useful, and the globe is visually impressive, but it feels like it'd be more practically useful to have a flat world map that shows all the data centers at once and makes it easier to read the lines without them getting excessively close to each other. reply Tempest1981 11 hours agoparentThis was popular in ham radio, iirc: https://en.wikipedia.org/wiki/Azimuthal_equidistant_projecti... reply bustling-noose 14 hours agoparentprevA 2D world may not give you the perception of how far some of these locations really are. I think an option to switch between the two would be better. reply schnable 7 hours agorootparentThe lines between points can be drawn to show curvature, like an airplane route map. reply LargoLasskhyfv 13 hours agorootparentprevhttps://www.greatcirclemap.com has this. reply floodle 5 hours agoparentprevAgreed! It looks cool, but it's not the best visualisation to actually read the data. reply bddicken 4 hours agoparentprevAuthor here - Cool and useful is a careful balancing act. reply makestuff 6 hours agoprevIt is insane to see this and conceptualize that you can send data across the world and back in under 500ms. Imagine telling someone that 100 years ago. reply bddicken 4 hours agoparentAuthor here - it is quite cool. reply mrguyorama 2 hours agoparentprevActually it's been just about 100 years since we've been able to do this. Someone 100 years ago who you told this to would probably respond \"I know, isn't it impressive!\" reply tonnydourado 8 hours agoprevI thought Australia sucked until I checked the latencies for South America and South Africa. Not a single \"good\" latency link =) reply lhousa 11 hours agoprevI was just using this the other day: https://aws-latency-test.com/ reply bddicken 4 hours agoparentAuthor here - yeah, I came across that when I was digging for data I could use for this. It's cool. reply reisse 9 hours agoprevCool, but information about what links were used would be nice. I assume it's latencies for default AWS links, which you likely won't use if you _care_ about the latency. reply bddicken 4 hours agoparentAuthor here - The data used was scraped from https://cloudping.co. You can find more info on the GitHub repo: https://github.com/mda590/cloudping.co. reply CSDude 9 hours agoprevI worked at a military company and we made a SIEM tool to use at government facilities. Our Director, which was an ex-colonel at Miltiary IT, found that login screen is too plain and we need to have a world spinning. So we've implemented the end of Terminator 3 nukes over globe screen in WebGL to please him. This reminds me of it. Anyways, although this looks cool, it'd be much more easily understandable in a 2d map instead of a rotating one. reply yuliyp 3 hours agoprevNote that latencies between regions are subject to change: individual links can go down or become overloaded, resulting in traffic needing to take alternate (longer) paths. Unless you have a contract specifying a specific latency, you should still be prepared for things to slow down on occasion. reply fauria 7 hours agoprevSome AWS data center latencies, there are many missing: https://aws.amazon.com/about-aws/global-infrastructure reply sandos 12 hours agoprevIts a bit sad, we have one of the Swedish, actual physical buildings for AWS in my town. But of course the traffic does not exit here, but is instead aggregated between the different sites spread around cities regionally. So no sub-ms latencies for me towards that center. I think the traffic basically went a couple hundred kms before turning back here. reply Hikikomori 11 hours agoparentDoes your ISP peer directly with Aws? reply sandos 9 hours agorootparentNo, which is a possible solution, but I suspect they simply dont peer locally. reply bauruine 2 hours agorootparentEven if they did it's very unlikely they would peer in your town. Geographic proximity isn't the main factor for peering and even if they did your session may still get terminated at a border network gateway in a big city and your traffic has to travel the same way. reply immibis 12 hours agoparentprevI presume your town is too small for it since you called it a town, but AWS also does these things called \"wavelength zones\" which are as close as possible to certain cellular networks (designed to ride th 5G M2M hype train - self-driving vehicles, etc). Not sure if they do something similar for fixed networks. Of course, it doesn't actually matter since friends don't let friends use AWS. reply cedws 10 hours agoprevTechnically speaking those aren’t datacenters, they’re regions. AWS regions can have multiple AZs, and each AZ can have multiple datacenters spread around a city, each with different latency characteristics. This is completely opaque to customers, you don’t really get to choose which one you’re in. There are ways to gain info about it though. This is way outdated now but gives a rough idea: https://wikileaks.org/amazon-atlas/document/AmazonAtlas_v1/A... Source: did some latency work for a market maker. reply solarkennedy 5 hours agoparentI did a graphviz visualization of cross-az latency for all azs here https://xkyle.com/Measuring-AWS-Region-and-AZ-Latency/ (gosh, 4 years old now) reply Hikikomori 10 hours agoparentprevFor inter region latency the difference is negligible. reply dangoodmanUT 6 hours agoprevit always shocked by how few main regions they have in the US. I know they have the mini region things but still. reply whalesalad 4 hours agoprevWould be cool if there was a mode that showed YOUR latency to all the datacenters. That is what I assumed this would do initially. reply gynther 4 hours agoparentThere is an official tool to do that https://aws-latency-test.com/ reply remram 3 hours agorootparentThis is cool, but per footer \"This is not an official AWS project\" reply grogenaut 14 hours agoprevThis jives with measurements I've done before. I ended up running a ping setup for a few months from every region to every other region to get these timings. I was using it to calculate what our GQL latencies would look like if the backing servers were in another region or in the same region as a way to start regionalization work. Sadly we had to depend on those latencies so much that it was deemed a non-starter of an approach. Even us-west-2 (home) to us-east-2 took us from p99 300ms to p99 2.4 seconds. That sweet sweet latency reduction. reply belter 3 hours agoprevPedantic but important: These are latencies between regions not data centers. reply reincoder 10 hours agoprevAs we operate 720+ servers running ping and traceroute continously, I will try to see if we can publish intra provider or intra asn latency data like this but on a massive scale. We have a ton measurement internally but to publish them as a product or even as a web dashboard is tricky as it is hard to measure what the interest could be. reply Epa095 13 hours agoprevThis is really cool, wish there were something like it for Azure as well. reply bddicken 4 hours agoparentAuthor here - If you have a resource that provides good data on Azure or GCP latencies, please send them my way. reply paulkrush 6 hours agoprevIt's cool you can look at 1/2 of the earth and see only one data center and one link. ap-southeast-2 and it's only link is too far away to show. reply immibis 5 hours agoparentIt shows links to wherever you selected. Select this DC to see the latency between it and everywhere else. reply elAhmo 5 hours agoprevGreat visualisation and way of presenting info! reply bddicken 4 hours agoparentAuthor here - Thank you for the compliment. reply tmalsburg2 7 hours agoprevVery roughly 1/3 of the speed of light. One third is lost to the physical medium it seems. What accounts of the remaining third and how much could be plausibly shaved off of it? reply jedberg 7 hours agoparentUndersea cable routing. For example there are no undersea cables from Ireland to the European continent. All that traffic has to land in England first and go through a few routers to get sent on its way. South America and Africa are even worse in that regard. Very few if any direct links. reply Aeolun 7 hours agoparentprevI think the lines the data goes through are unfortunately not quite as straight as they appear in this visualization. Nor is it light all the way. reply albert_e 12 hours agoprevinteresting the \"globe\" visualization is good ... but we cna only see half the world at a time ... can we have an option of a flat projection as well ... so I can see all latencies for a region at a glance? ap-south-2 (Asia Pacific - Hyderabad,India) opened in Nov 2022 seems to be missing from the list? reply obviyus 11 hours agoprevHah, CloudPing is awesome. I just wrote a TUI in Rust for exactly the same thing: https://github.com/obviyus/pong I found myself going to CloudPing often enough to make a CLI for it reply kzrdude 11 hours agoprevJust curious, why is there no us central or us texas region? It could maybe be useful. reply bob1029 9 hours agoparentAzure has Ohio and Texas, but you'll probably not be able to provision all the machines you want so it doesn't really matter. I think a lot of people are sleeping on the benefits of hosting workloads in these regions. Many finance, banking & insurance companies have already taken advantage. Most of your credit card transactions are handled by data centers that live ~barycentric to the continental US. Much of small US banking tech happens in places like Missouri. reply some_random 5 hours agorootparentUS-East-2 is also Ohio reply TowerTall 11 hours agoparentprevand why are there hardly any in South America and Africa? reply danpalmer 14 hours agoprevAll of the datacenters are colour-coded as blue, which is not on the legend. What does this mean? reply boguscoder 14 hours agoparentSince all of them are same color its not really color coding and hence not on the legend, its just OPs choice for color of points reply danpalmer 14 hours agorootparentNo lines were working for me, so the only feature was the blue colour of the dots, hence thinking they must be colour coded in line with the legend. reply grogenaut 14 hours agoparentprevclick on one reply danpalmer 14 hours agorootparentAh, this was what I tried first, and it didn't do anything, but now it does seem to be doing something. That makes sense now, thanks. reply Tempest1981 11 hours agorootparentSame... didn't work until I moved the globe a bit. I thought the site was broken, or getting the HN hug of death. reply cliffordc 14 hours agoprevMaybe a question with an obvious answer, but why are there not yet more data centers in Africa? reply danpalmer 13 hours agoparentI believe it's a combination of a lack of customers and lack of infrastructure. It's a big continent to cover with the necessary fibre capacity, and the market is much smaller for nearby services. Also what you don't see in things like this, or even a list of datacenter locations, is the relative sizes of the datacenters. After US east/west coasts and Europe, datacenter capacity rapidly tails off. Parts of Asia have plenty but not on the same scale I believe (although I don't know about the Chinese market). The difference in size can be quite a few orders of magnitude between different regions. reply prmoustache 13 hours agoparentprevSmaller market, less reliable power grids, more challenging heat management, less political stability in many african countries. Also, given their pricing, big cloud vendors AWS are a luxury many local businesses would probably not even consider. reply adamcharnock 13 hours agoparentprevThis isn’t just an issue for cloud providers. It’s also not easy to find collocation space either. My best guess is that it is a combination lower demand (vs rest of world), and infrastructure availability (connectivity + power). I can imagine a bunch of secondary factors too, but this to me sounds like the key broad reasons. reply hemogloben 14 hours agoprevIs this just fiber distance between each datacenter? The coloring makes it seem significant, but from the distances it kinda just looked like everClose to the network centrality of the of the internet Most of the Internet is fractured even though technically publically routable. E.g., for someone living in China the US isn't anywhere near \"network centrality\". If an internet centrality exists, it is somewhere in France or the Netherlands - usually cross-continent traffic goes through there, they have dedicated interchanges for that. reply utdemir 8 hours agorootparentI did some research about this a while back: https://utdemir.com/posts/choosing-cloud-regions.html#:~:tex... You are right, the best region that optimises median latency against all internet users over the world is `us-west-3`, which is Paris - I believe. Likely because it has much better latency towards Asia where the majority of internet users are. I also investigated which two regions to choose for a multi-region setup, which ends up being London and Japan. reply kalleboo 10 hours agorootparentprevAlthough in my experience all the traffic from East Asia and Oceania (Australia, Japan, Korea, Hong Kong, Singapore, etc) to Europe goes through the US. So network-wise, the US is more central. reply immibis 12 hours agorootparentprevAgreed the network is much denser in Europe than the USA. This is obvious if you've really tried looking for network infrastructure services. The USA is just where a lot more high-level services are, like social media, due to the peculiarities of capitalism. There's no shortage of infrastructure there either, of course. Data caps are apparently illegal here. This is good for the quality of infrastructure. And if you have customers somewhere else you want to be in that place, or close to it network-wise. reply poincaredisk 9 hours agoparentprevMy knee jerk reaction was to comment that this is an America-centric thinking (I live in eastern Europe, us-east is not that great), but... After consulting the map, it really looks better than the other options (of course assuming you care mostly about Europe, Americas, and don't want to piss off Asia too much) reply slimsag 12 hours agoprevIs there something similar for GCP? reply MarkSweep 1 hour agoparentThis is not quite the same thing, but if you want to see the latency from your computer to GCP, there is this website: https://gcping.com/ reply immibis 12 hours agoparentprevBe the change you want to see. How much does it cost to set up a VM in every availability zone for an hour? Late edit: it would also be cool to see inter-cloud latency. reply immibis 7 hours agorootparentAdditional - I see the app here just shows good/moderate/bad latency. An actual data table would be useful to many people but not as pretty. Maybe there should be a distributed latency measurement network project. reply ram_rattle 11 hours agoprevreally cool tool, thanks for building this. reply bddicken 4 hours agoparentAuthor here - thank you! reply alicetaylor 11 hours agoprev [2 more] [flagged] LtdJorge 10 hours agoparent [–] @dang spam right here reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "AWS data center latencies have been reported to exceed 200 milliseconds, which is a significant delay for cloud services.",
      "This latency data was provided by Ben and sourced from CloudPing, a tool used to measure latency to AWS data centers.",
      "High latency can impact the performance of applications and services relying on AWS infrastructure, making this a critical issue for developers and businesses."
    ],
    "commentSummary": [
      "AWS data center latencies are mapped to show data travel times between regions, crucial for system architecture and cloud migrations.",
      "Discussions include theoretical data transmission limits, like the speed of light in fiber optics, and using satellite links to reduce latency.",
      "Suggestions for improving the map visualization include adding a color-blind mode and a flat map option, while highlighting regional infrastructure challenges in achieving low latency."
    ],
    "points": 458,
    "commentCount": 184,
    "retryCount": 0,
    "time": 1729739903
  },
  {
    "id": 41929804,
    "title": "Wall-mounted diffusion mirror that turns reflections into paintings",
    "originLink": "https://www.matthieulc.com/posts/pablonet/",
    "originBody": "PabloNet October 14, 2024 The debate about whether internet-fitted AIs can be creative always seemed besides the point to me. Making art is hard. My view is that art is about surfacing the inner world, and only in part about skill. It’s unfortunate that art selects so strongly for skill. Can we decorrelate the two? It seems so. Cheap interpolative* creativity used by 8 billion non-artists surely surfaces new views of the world. For these reasons and since I suck at art I’ve been very excited about the various AI-driven art forms popping up. A couple of months ago I started playing with real-time diffusion of my webcam feed using StreamDiffusion. Specifically, with the intent of generating pretty visuals and hoping to elicit new/interesting feelings. Although it’s very fun, the laptop form-factor breaks the illusion. It feels all temporary and geeky. So, I recently built an LCD frame that can be hanged to a wall with minimal illusion breakers. What I really like about this setup is that making it a proper object opens up new channels of interaction. It’s no longer just a screen, it has permanence. You can leave it there, come back to it at a different time, in a different mood, with different lighting, objects, friends, etc. Face Infrared light in the dark Objects Friends Plus, it looks pretty: The main issue with the current setup is the low frame rate. I managed to increase it using TensorRT and compressing the images in and out, but there’s still a lot of room for improvement. For those of you that are interested in creating your own or contributing, here are the details: Code for the client and server here. RunPod for hosting the server. Client runs on a Raspberry Pi 5. This 10.1\" Pi screen. This infrared light. This generic frame. This infrared Pi camera. I used a puncher to cut a hole in the frame’s cardboard for the camera (drills didn’t work). I spent hours playing with different preprocessing filters, not just prompting. In general I found the two to be equally important. Without preprocessing, img2img often looked too realistic. To get the blue Picasso style seen in this post, I ended up using a mix of canny edge detection, blue coloration and blurring. *Technically, learning in high dimension always amounts to extrapolation.",
    "commentLink": "https://news.ycombinator.com/item?id=41929804",
    "commentBody": "Wall-mounted diffusion mirror that turns reflections into paintings (matthieulc.com)432 points by cataPhil 20 hours agohidepastfavorite111 comments GradientSurfer 17 hours agoNice! I peeked at the code and thought I’d share a few tips for improving the low frame rate: Base64 encoding the JPEG bytes will increase payload size up to ~30% and burns CPU cycles on both client and server. This is unnecessary, as Websocket protocol can send binary payloads (doesn’t need to be text). Consider removing lossy jpg compression as well, ie just send the raw RGB bytes over the network. Then on the server side you can simply call Image.frombuffer(…). StreamDiffusion can achieve high frame rates because of extensive batching in the pipeline. You’re not benefiting from that here as the client is only sending one frame at a time and then waiting for a response. See this example for an idea of how to queue input frames and consume them in batches https://github.com/cumulo-autumn/StreamDiffusion/blob/main/e... . Alternatively you could take a look at the SDXL Turbo and Lightning models. They are very fast at img2img but have limited resolution of 512² or 1024² pixels respectively. Which appears a bit lower than what you’re aiming for here, but they can be run locally in real time on a high end consumer grade GPU. For reference I have some code demonstrating this here https://github.com/GradientSurfer/Draw2Img/tree/main reply bambax 8 hours agoparentOk, but I wonder if it really needs to be real time like this? Wouldn't it make more sense to have some kind of button: somebody makes a pose, takes a picture, the picture is run through some kind of transformation and comes back as a painting that stays there until someone takes another picture? Wouldn't the illusion of art be better that way? (It would not be a \"mirror\" anymore though.) reply roland35 7 hours agorootparentI think it has to be either real time or a very low framerate, like once every 30 seconds. That way you have time to see each \"painting\" reply MrLeap 11 hours agoparentprevyeah yeah yeah, do all these things, and afterwards, look at 2d interpolation methods that don't require AI for your inbetweens. There's some real fast kernel math that can lerp from one blob to another at 8 billion fps. reply enjeyw 10 hours agorootparentI think you’re getting downvoted because “yeah yeah yeah” is normally a sign that someone is sarcastically dismissing an idea, but the rest of your comment suggests you’re not at all - linerp is a great idea! reply MrLeap 1 hour agorootparentIt was a sincere triple yeah, born of excitement. reply cataPhil 7 hours agorootparentprevThese are great ideas thank you! reply igornadj 13 hours agoprev> Making art is hard. But art is mostly about surfacing the inner world, and only in part about skill. It’s unfortunate that art selects so strongly for skill. Not to sound like a luddite, but I do question the idea that the skill gap is merely an inconvenience. I suspect learning how to paint or make music changes something in yourself which teaches you some deeper life lessons. I've heard the phrase (paraphrased): No great work of art was made by a genius, genius comes to you unexpectedly like a gust of wind. It seems that cultivating these opportunities is the most an artist can do, and removing the skill gap seems to be removing the cultivation, the thing that changes you, the essence. There seems to be a few of these inherent deep workings that we as a people keep coming back to, without knowing what they are or how to discuss them (personally at least!). Not to rain on your parade OP, the project looks fun and super useful to a lot people! Just something I ponder on at times. reply flir 9 hours agoparentI think he's on the right lines with \"surfacing the inner world\", but that's why I see this as more wallpaper than art. He's not doing a deep dive into his own psychology and hauling up pearls; none of these images have that property. Does the totality of the project have that property? That would be less clear, but IMO, no. I see it as technically driven, not psychologically driven, although I can see how you could write an artist's statement that claims it was (it's about mirrors, after all, which are hugely symbolic). To be clear I still like it, and if I'd done it I'd be proud of it. But it's more artifice than art. (If I was him, I'd slow the frame rate down, not speed it up - work with the technical limitation, not against it. Have the system only display \"good\" images, and not update the display until another \"good\" image is generated. The code that decides if an image is \"good\" or not would be the most interesting part of the system, and could fairly be said to embody the artist's intent, and so cross (my own personal) threshold into capital-A Art. I'd also experiment with buffering the image stream à la _Light of Other Days_ by Bob Shaw. Oh, and as Halloween is nearly with us, the temptation to occasionally inpaint a figure standing behind the viewer would be massive. Idle thought: to get some stability in the image, would it be possible to have an LLM generate random video filter code, instead of random images? \"Write me a video filter that makes the input video look cubist\". \"...like an oil painting\" \"...with a Flash aesthetic\". etc etc. Every time a filter gets generated that doesn't actively crash, swap to it. No idea if that's feasible or not.) reply Kim_Bruning 2 hours agorootparentIt's extremely sophisticated dynamic art. reply terhechte 13 hours agoparentprevThis goes opposite to the saying \"Experts say it cannot be done; amateurs accomplish it every day.\". Sometimes it's good to have someone with fresh eyes looking and something and not be shaped by decades of prior history. reply NavinF 13 hours agorootparent> \"Experts say it cannot be done; amateurs accomplish it every day.\" I love this because I seem to encounter situations like that every day. Who came up with this saying? Recent example: This guy asked a very simple question about something that's commonly done in industry (wiring two power supplies in parallel and balancing the current between them): https://www.reddit.com/r/AskElectronics/comments/1g84zd7/usi... Literally 95% of the replies in that thread are irrelevant bullshit from \"experts\" that have no idea how redundant server PSUs work. I replied to some under the same username. Meanwhile another guy successfully wired two 100W USB-C ports in parallel to power an entire PC. He had no idea that the resistance of his crappy wires kept the two smps control loops stable and divided the current evenly between the two ports ensuring that neither one trips OCP: https://www.reddit.com/r/UsbCHardware/comments/1g8pser/let_m... reply baq 12 hours agorootparentI guess there's the armchair expert and the actual, real expert and these two are completely different beasts. I wouldn't feel comfortable with this guy's usb-c setup but probably not for 'it's all going to burn down' reasons, more like 'the connection will get loose somewhere and I'll lose my work'. reply NavinF 8 hours agorootparentHe posted the photos as soon as he got it working; It's obviously not his permanent setup. My point is that he posted it on the same day that ~60 people claimed this was somehow a difficult task. reply bambax 8 hours agorootparentprev> Who came up with this saying? I was not aware of that specific formulation but there's a maxim by Mark Twain that says \"They did not know it was impossible so they did it\". reply Workaccount2 4 hours agorootparentprevSince I actually work in this field: Redundant switching power supplies are purpose built to be redundant. They usually have a current share circuit (to balance the load) and output diodes (to stop one supply from feeding the other one). Without that one supply will \"over power\" the other, fill it's output caps, and then the feedback of that supply will go \"Hey the output caps are charged so why do I need to do anything!?\". You end up with an erosion of power balance. You are riding a pretty high horse, but the commenters in that thread are not wrong and if you think cheap 5V USB chargers are anything like redundant server PSU's. I don't think putting random USB chargers in parallel will cause a fire or anything, but it's just needlessly bad engineering that will be anything but robust. A programming analogy to help people here: You can write a program that is tens of thousands of lines of if statements. It might probably work maybe for some inputs? But damn if it not bad engineering. No one would ride around on the high horse of \"See the program worked! The \"experts\" were wrong!\". reply vasco 9 hours agorootparentprev\"Random person on reddit\" doesn't qualify as experts. reply NavinF 8 hours agorootparentEveryone in that thread pretended to be an expert despite being clueless. This is normal, but you'd only notice it if you're familiar. Also see Gell-Mann amnesia effect reply jijan 5 hours agorootparentprevAmsyar hensem reply sandworm101 6 hours agoparentprevTalk like \"surfacing the inner whatever\" can impress the masses, for a very short while, but good art requires more. All art has a language, standards that are learned though an artist's development as they learn the needed skills. The mona lisa isn't just a good picture of a person. It is full of details and meaning only understandable to people who have studied paintings. AI can generate a good or interesting picture but it cannot speak the language of painting. That requires actual graft to learn and appreciate. Injecting the paintbrush skills into someone's brain, or into an AI tool, isn't going to make them an artist. reply wellthisisgreat 3 hours agoparentprev> I suspect learning how to paint or make music changes something in yourself which teaches you some deeper life lessons. I enthusiastically support this notion. A simpler, than painting, example would be writing. Sure everyone has a story to tell, and everyone can write, but to make it worth other people's time would take you days if not years of perfecting the craft, as you inevitably learn things about yourself and crystallize your perspectives on this world. reply Super_Jambo 10 hours agoparentprevThis is why the greatest art is only made by people who grow the plants to create their own paint from scratch... reply Log_out_ 12 hours agoparentprev? Have you ever read musician interviews: Its like a competition on how much clichee, naivete and reality denying drivel one can compress into 5 minutes. Idealism is not a victimless crime, millions suffer every day because some artist threw a buggy,idealized world model over the fence and the idiocy stuck hypnotizing millions into permanently damaging themselves. reply d0gsg0w00f 10 hours agorootparentThere something compelling inside musicians that comes out in their music. Everyone feels it but few can define it. There's a reason they did not choose conversation as their medium. reply grugagag 6 hours agorootparentAre you talking about stage presence? reply piva00 4 hours agorootparentMusicians are not necessarily stage performers, there's lots of touching instrumental music where the musician doesn't even do much on stage. Music itself is a language, something undefinable comes from that language that we can't modulate the same way through speech. reply tivert 2 hours agoprevYou should get a couple of old-work low voltage brackets and brush wall plates (https://www.homedepot.com/p/Carlon-1-Gang-Non-Metallic-Low-V..., https://www.homedepot.com/p/Commercial-Electric-1-Gang-Brush...), and route the power cable through the wall. It would look much nicer. reply xlii 13 hours agoprev> But art is mostly about surfacing the inner world, and only in part about skill. I always thought that art is all about emotions, both preserving and creating them. That’s why I find a banana on the wall art, popular music is still art. (Might be school influence but I also tend to ask myself „why”) This invention is definitely work of art, but its output - in my eyes - not. It’s like a cloud. It can make different shapes, and some are funny, some might remind me of my close ones, but it’s still averaged randomness. However the idea to reflect reality to this digital randomness I find without doubt - art. And, well: while not visual or audible, there is software, hardware, code and design which are also art (and difficult to make so counterpoint to thesis in first paragraph ;)). reply lofaszvanitt 45 minutes agoparentArt is something that grabs you and is also unique in the way it presents the subject. Also, there has to be skill involved, otherwise the whole thing goes up in smoke if it feels cheap or superficial. A banana on the wall is not art, because it involves an everyday object in an everyday setting. You might feel it's art, but if that's the case, then you haven't exposed yourself to true art enough to have a pool of experience or only seen so far superficial examples. reply skeaker 25 minutes agoparentprev> I always thought that art is all about emotions, both preserving and creating them. Is that not what was meant by \"surfacing the inner world?\" reply khafra 13 hours agoparentprev> I always thought that art is all about emotions, both preserving and creating them. But this leaves the role of intention ambiguous. If I double-park a BMW across two handicap spaces because I'm angry and entitled, is that art? It certainly evokes emotion, and it's also produced by emotion. reply happymellon 12 hours agorootparentIf you present it as art, sure. But the best part about art is that other people don't have to consider what you do as art. I would find it hard to believe you are presenting it as art though, as you'll want your BMW back after you've bought whatever crap at the store. I don't have to believe your AI generated slop is art because it doesn't actually convey any emotion. This generation of the picture itself is art, similar to other \"experience\" art pieces. Its referred to as immersive art. reply Lerc 12 hours agorootparent>If you present it as art, sure. >But the best part about art is that other people don't have to consider what you do as art. I often think of art in a way that is remarkably consistent with these statements. My view was \"Art is an invitation to consider\" Sticking a banana to a wall becomes art when you do it to make people to engage or think about it. Engagement is not compulsory, but I think the invitation might be. Sticking a banana to a wall to keep it away from ants is simple utility, not intended to be artistic expression. >I don't have to believe your AI generated slop is art because it doesn't actually convey any emotion. You don't have to engage, but choosing to denigrate is actively hostile engagement. There are plenty of people using AI for expression of ideas. There are also people doing a bunch of dumb things. Lowbrow art is still art in it's own way. Much of it may have very little to say, but I don't think there are very many people who have pretensions that low effort images are much more than a kind of doodling. reply happymellon 10 hours agorootparent> You don't have to engage, but choosing to denigrate is actively hostile engagement. Apologies, that was not my intent, more to make people think because some people seemed to be confused about what is the art here. Sticking a webcam through a filter to produce a pretty output isn't necessarily original, but that doesn't stop it being interactive art. Some folks here seem to think the image is art, whereas I see the whole as the art. A single static image that had been captured and run through the filter then presented doesn't really have very much to say. The installation can be interpreted in many ways and grows to be more than the sum of its parts. Is it generating images? Could it be co-adopted by people with vision or interpretation issues such as prosopagnosia? Low effort/low brow art is still art. Clicking on \"create me an image\" and having Bing generate a picture doesn't give the world anything as it enters zero effort, which ultimately reduces the creators investment, and therefore the viewers investment, into the piece. reply flir 7 hours agorootparentIf I had to drag myself across a desert in order to press that Bing button, would it be art then? (I think, in that example, the act of pressing the button might be the art - a performance). reply happymellon 6 hours agorootparentWhich aligns with this piece in the story. Sticking a webcam shot through an AI filter is a pretty low bar. What makes it art that anyone other than the creator would care about is the real-time rendering. Thats the art that people are interested in discussing. People do all sorts of walks as art. Whether thats Drag or a parade where the art is to make the walk interesting, or walking through the desert, laying on a bed of nails where the \"walk\" (or laying down) isn't necessarily interesting but the passion is. Pressing the Bing button is unlikely to evoke any passion except from Bing product management. reply xlii 11 hours agorootparentprevAn interesting viewpoint for sure. I would dissect it though since it’s not pure anger - frustration maybe, a complex one and caused by additional input. E.g. anxiety (you took what could be mine) or internal discord (after observing act of injustice). I’d argue that it’s an act of random (again, like a cloud) and wouldn’t treat it as art. But, if you’d park it sideways in front of the mall entrance, blocking it considerably, I’d consider it art (in my imagination I can see the headlines about artist making a statement against the overconsumption). Yet art is art, so everyone has their own definition. I’d prefer “positive” emotions, so awe, nostalgia, etc., but I don’t see reason why anger should be excluded. > reply 8n4vidtmkvmk 16 hours agoprevI think this would be cooler if the camera was somewhere different than the frame. Looking at an artistic mirror seems a little boring. Maybe make a 2nd one, and put it in someone else's house, and then feed the camera from one into the other. So you can look at the 'reflection' of someone else and have these little moments where you're both looking at the picture at the same time. Heck, make many so you never know who you're looking at. It'll be the Omegle of picture frames. reply stefs 10 hours agoparentthat's a good idea but something completely different than OP wanted to accomplish. i remember that this has been done already as an art installation in public places so people could see - and interact - with others from around the world. edit: like this here - https://www.inavateonthenet.net/news/article/vc-art-installa... reply bambax 8 hours agorootparent> an art installation in public places so people could see - and interact - with others from around the world Sure, and it wasn't long before this happened: > It took less than a week for people eager to share their ‘assets’ with the world to shut down the visual portals set up between the cities of Dublin and New York on 8 May. Although the project was aimed at bringing people together and connecting cultures, a few visitors to the locations have decided to take the invitation of getting to know others to a whole other level. https://traveltomorrow.com/new-york-dublin-portals-shut-down... (One wonders why flashing is such a big problem that the whole installation needs to be shut down; but it seemed quite obvious from the start that people would try to do this...) reply Tepix 8 hours agoprev> The main issue with the current setup is the low frame rate. I think lowering the framerate to something between 0.3 to 1 fps might even be better! reply bravura 17 hours agoprevFYI, the link to the frame used to mount the display just blocks you: https://www.leroymerlin.fr/produits/decoration-eclairage/dec... For those curious, it's a MILO 21 x 29.7 cm black frame. These links work for me: https://www.leroymerlin.pt/produtos/decoracao-e-tapetes/mold... Also, the screen he uses (HMTECH Raspberry Pi Screen 10.1) is pretty hard to find. Do people have other good recommendations for screens with similar quality and specs? Any idea why this uses infrared light and an infrared camera? reply esperent 11 hours agoparentEvery time I've looked into building something like this, when I price it out, just using an old Android tablet in kiosk mode and making it a web app ends up being much cheaper. reply bambax 7 hours agoparentprevThe screen is available on Amazon? But it's a touch screen, which seems overkill; any screen would probably work? One can always build a custom frame around it. reply bravura 7 hours agorootparentTouch screen I think is cool because then you could interact with the art. I did a little research and these Waveshare displays look really beautiful. For a particular size display, they have models in different resolutions (from lower to higher res). But they're only for rpis and windows, not like mac or ipad. The QLED ones are the best. https://www.waveshare.com/product/ai/displays/10.1hp-capqled... reply piva00 11 hours agoparentprev> Any idea why this uses infrared light and an infrared camera? I'd guess it's to make it work in the dark as well. reply cataPhil 3 hours agorootparentThat's correct. Plus it also adds a layer of interaction that's pretty fun, kind of like a wand. reply xrd 3 hours agoprevI would love to see you add a networking layer so that I could connect my frame to a random one somewhere in the universe. Then I could see another person through this style transfer. They could see me. It would be like an art chat roulette. reply tiborsaas 16 hours agoprevReally neat idea, I'd also love to have on my bookshelf. > The main issue with the current setup is the low frame rate. I'd call it a feature rather a limitation, it's not bad that I have second to process the image for a bit. I would even increase the update frequency to 5 - 15 minutes and let it capture and generate a new image whenever it detects something changing / moving. reply shermantanktop 19 hours agoprevHave you considered a high frame rate morph effect between images? That would increase the effective frame rate and probably would look pretty cool. reply doctorhandshake 18 hours agoparentThat’s the technique I used on a piece that does inpainting across an image at a rate of about 1 image every 8 seconds - I ‘melt’ the results in for the duration until the next patch is ready: https://hardwork.party/aws-epoch-optimizer/ reply lancesells 16 hours agoparentprevI actually think the high frame rate will look worse unless the styling changes less in between frames. Otherwise, it's going to look erratic and there will be a ton of \"popping\" if each frame changes as much as the frames in the current video. Or maybe op wants it to be a chaotic feeling. reply flir 7 hours agorootparentMany years ago I did a couple of hundred variations on the mona lisa in photoshop, and stacked them as a gif. As the eyes remained unchanged in each frame, they gave a fixed point you could focus on while the rest of the face strobed chaotically. It was a nice effect. reply JKCalhoun 19 hours agoparentprevEven a simple crossfade. reply viraptor 18 hours agoprev> It’s unfortunate that art selects so strongly for skill. Can we decorrelate the two? I really like this direction. I understand why some object to the genai approaches, but in practice sometimes I get an idea of something cool and don't have the skills to create it myself. I'm not going to invest months/years to create each of those ideas and they're not important enough to spend hundreds of dollars that a skilled artist would request. Now there's a way people can try generating the thing and may end up enjoying it - and that's great. (At least for personal use, it gets a bit complicated for commercial purposes) reply d0gsg0w00f 9 hours agoparentThis is assuming an unimplemented idea has value. I think the value we attribute to an idea is actually the dissemination of the idea to others. Often a sufficiently radical idea is difficult for others to grasp and therefore an example must be created by the originator of the idea. So when someone says \"That's a great idea\" what they mean is \"That's great work\". Time will tell if others see an idea backed by AI work as valuable. Can they even tell? Who knows. reply happymellon 12 hours agoparentprevBut unfortunately they did not. Not everyone could build what is presented here, and inadvertently they have validated that it requires skill to produce a machine that distorts your reality. The pictures being produced isn't the art. reply amelius 19 hours agoprevPrize for the most power-hungry mirror. I also notice that the paintings are not stable over small changes in the inputs. reply shermantanktop 19 hours agoparentTo me, that’s the charm. reply amelius 7 hours agorootparentHow about changing the style every time the viewer blinks? reply ogou 7 hours agoprevThe interesting thing to me about this, and most other demos, is what people are simulating as examples of art. In this case, it's a very specific Picasso time period. Others tend to center on fantasy or well-known science fiction painters. This makes sense if your only exposure to art is the internet. Maybe a few Wikipedia sessions and a Google search for \"modern art\". The actual art world is in a huge transition right now and the idea of this Western dominance of art history is being completely re-evaluated. I haven't seen many demos of these tools, or AI art in general, that makes use of any actual modern art from the past 20-30 years. I definitely don't see examples from non-European art history (except Ukiyo-e or anime). That says a lot about what most of you expect from tools like this. It's not just technical, it's culturally normative. Think of it, (without looking it up) can any of you name any living artists that have been exhibited in the Museum of Modern Art in the past 30 years? I see so many strong opinions here about what art is or isn't, but wonder if anybody actually goes to museums or galleries to see what is considered modern art. reply unwind 11 hours agoprevI don't have anything to say about the artistic value, but as a part-time tool collector with dreams of being a handy person, this passage was the most interesting: I used a puncher to cut a hole in the frame’s cardboard for the camera (drills didn’t work). I would love some more detail, or just people's interpretations ... in what manner can a drill fail to \"work\" on cardboard? There can be issues with tearing, perhaps, that I think punching works around nicely. reply esperent 11 hours agoparentIt's too soft and layered, the drill tends to chew it up. I've had some luck putting duct tape over both sides and drilling through that, but for very clean holes you'd still probably have to clean the edges with a craft knife. reply bambax 7 hours agoparentprevMy guess is he tried with a wood drill bit, which will tear cardboard and make a big mess. For cardboard, or plastic, you need a metal drill bit. reply cataPhil 3 hours agorootparentThat's right, sorry for not explaining further in the post! The cardboard was so thin than neither wood nor metal drill bits made a clean enough cut. reply kadoban 1 hour agorootparentI've had success by putting the material between two pieces of wood and drilling through it all. Ideally you clamp it, but you can also just kind of push down on it. reply r00fus 18 hours agoprevIs there any way to freeze some of the images? I thought some of them would be awesome to keep (e.g. pfp or lockscreen photo). reply imsaw 19 hours agoprevI think the low framerate adds a unique ambience, at least to me, watching the recorded videos. It gives time to appreciate the art style and generated features. It also feels like a time lapse of gradual changes. I could imagine it being annoying to look at in real time though. reply quercus 10 hours agoprevreminds me of the classic 80's \"Take on Me\" music video reply jaredhallen 19 hours agoprevIt would be cool to intercept the input from a webcam, transform it like this, and then present it to the OS as another virtual camera so you could select it in Teams or Zoom or whatever. reply noman-land 17 hours agoparentYou can do this with OBS. reply rnxrx 18 hours agoprevThis really does change the interaction with art. As a future expansion it might be neat to recognize images on camera that would make for interesting art (i.e. detection of people/animals or recognition of certain styles of composition) as well as being able to choose amongst different styles. It seems sort of akin to some modern art that incorporated TV screens and video to make dynamic installations, like Nam June Paik. reply Mumps 7 hours agoprevOn the low framerate: why get a pi5 when a Jetson Nano could be had for about the same price? reply jansan 7 hours agoparentWhat do you want a high frame rate for when looking at art? What is the frame rate of the Mona Lisa? reply theendisney4 19 hours agoprevSounds cool! I would like pictures with people in the room doing weird things energetically like stand on their chair. Dancing. Confetti booze strange outfits. Bordering the offensive then deleted after 30 minutes. reply shib71 18 hours agoprev> Art is ... mostly about surfacing the inner world, and only in part about skill. I like the phrasing of the first part. But what art is \"about\" is very subjective. For me, part of what I look for in art is intentionality - the notion that the artist has crafted each element toward a purpose, consciously or not. The less an artist contributes to the final piece, the less meaning I assign to it. In this case: I would say that the individual pictures being displayed are not \"art\" - they have no meaning. But I think the device in whole is a piece of art. That is a creation that surfaces the creator's inner world, because they designed the device, wrote the code, crafted the prompts to achieve pieces that reflected their notion of beauty. reply disqard 18 hours agoparentI love this framing (pun unintended) of \"art\". Besides what you articulated as the \"intention\", I often think of the \"story\" behind the art -- whether an idea in the creator's head was expressed via the piece (or not) makes me go \"yes, this is Art\" (or not). By that token, when I see automated projects like this, I think of the \"installation\" as art, but the pixels or arrangements generated by the piece itself is less art-like IMO. reply d0gsg0w00f 9 hours agoparentprevYes. I think we attribute the cost of the human sacrifice into the value of the art. It's a like owning 1/80th of a human soul and hanging it on the wall. reply malux85 16 hours agoprevLet’s hook it up to a sentiment and toxicity model, and then if you’re being too negative online, it will start to deform you into a monster, we could have a real Picture of Dorian Gray! reply CaptainFever 4 hours agoparentThis is actually such a cool idea. reply A4ET8a8uTh0 13 hours agoparentprevI chuckled, but that is actually an interesting ( and very doable ) fun project idea. reply caelinsutch 18 hours agoprevhow much does this end up costing to run? reply dbspin 10 hours agoprevThis is great and all, but just to address the 'art' issue. It's the creation of the 'mirror' that's artistic (to whatever extent running a copy of stable diffusion is a creative act), not looking in the mirror. The enormous number of affordances of 'AI art' will be like this - passively consumptive, creative only in the sense that chatting about a movie or playing a video game can be creative. All of us can already 'surface the inner world' (which I think is actually a pretty great definition of art, or part of one at least) - it's not skill based, it's practice based. Just start drawing, or writing or progaming with Processing or futzing with Ableton or what have you. Skill builds over time, expression needs no automation. reply broast 19 hours agoprevSuper cool! I've had similar ideas when I first saw StreamDiffusion. The possibilities are endless reply randmeerkat 17 hours agoprev> It’s unfortunate that art selects so strongly for skill. Jackson Pollock begs to differ. reply aspenmayer 16 hours agoparentArtistic skill lies not merely in the hand, but also in the eye. reply randmeerkat 16 hours agorootparent> Artistic skill lies not merely in the hand, but also in the eye. Precisely. There is no skill in artistry, it’s rather just a developed sense of style, that doesn’t come from a medium or method, it comes from growing to know oneself. reply bambax 7 hours agorootparentJust watched \"F for Fake\" (Orson Welles, 1973), a documentary of sorts about the great art forger Elmyr de Hory who was able to imitate the style of many of his contemporaries to perfection (Modigliani, Matisse, etc.), fooling the painters themselves! At one point in the movie his biographer says > I think Elmyr's problem for years and the reason why he could not succeed as a painter in his own right was that the type of life he led prohibited him from having a personal vision. Elmyr had great skill, greater than anyone alive perhaps, but he had nothing to say. reply randmeerkat 5 hours agorootparent> Elmyr had great skill, greater than anyone alive perhaps, but he had nothing to say. I would argue that he spoke volumes and had a vision so vast that he was able to take perspective from any other’s view. What a rich life Elmyr must have led. reply aspenmayer 16 hours agorootparentprevI agree. I think the distinction between arts and crafts is largely one of utility, rather than skill or technique. reply randmeerkat 15 hours agorootparent> I agree. I think the distinction between arts and crafts is largely one of utility, rather than skill or technique. Which is why I take offense to someone claiming that it selects for and requires skill. Especially because the ones making that argument are usually the ones arguing that they’re incapable of making art. I would tell them they just need to spend more time finding themselves. reply aspenmayer 15 hours agorootparent> Which is why I take offense to someone claiming that it selects for and requires skill. Especially because the ones making that argument are usually the ones arguing that they’re incapable of making art. I would tell them they just need to spend more time finding themselves. And spend more time (and intentional effort) in making art! It's like people want a shortcut to end result, when \"real\" artists know that the process of self-discovery is the reason and means through which they make the art in the first place. The map is not the territory. The purpose of the journey is the journey itself; the destination is simply a guiding star. A whole lot of aspirational mapmakers think if they only had \"this one weird trick,\" they'd be gods. reply Filligree 15 hours agorootparentUm, no, I want illustrations for my stories. That’s the end, and the means can be whatever. I don’t care to search for self-discovery in that. reply aspenmayer 14 hours agorootparentThat’s a reasonable expectation and desirable outcome in and of itself. Not everything needs to be intended to be art for it to be perceived as such. Art is in the eye of the beholder. Do you share your stories publicly? I’m curious what kind of stories you would write. It would be cool to have an HN writing group! reply Filligree 4 hours agorootparentI do, but it’s obscure fanfiction. Admittedly with heavy computer science and AI inspirations, so maybe you’d find it interesting regardless? It’s over here: https://forums.sufficientvelocity.com/threads/shards-of-a-br... reply aspenmayer 3 hours agorootparentI read the prologue and it seems neat! I'm not familiar with the fanfiction scene really, or the works yours is based on. How did the voting work? I like the pictures, and I can see how using AI would help a lot with that, especially in the context of existing characters, as matching styles and designs is something that AI is likely well-suited to do. I read a bit about Shugo Chara to see what it's about, and it seems like an interesting series. The way you presented your story reminded me of Steins;Gate a bit with the reality manipulation. Should I be familiar with the source material in order to appreciate your work better? Thanks for sharing your work. Are you working on any other pieces? Any anime recommendations, while you're here? reply Filligree 1 hour agorootparentThe voting is pretty much as shown. People vote on what the protagonist (usually Amu) tries to do, I decide what actually happens. It's a kind of communal roleplaying game; a quest, in SV parlance. I've worked on other stories, but this is the only one right now. As to source material, knowing it would be beneficial, but it's all new to the protagonists and the only one I'd say is a must-have is Shugo Chara. Though not even that; several players did not know anything about Amu in advance. You'll be a little lost, but the wiki entry will suffice for giving you the basic idea. The story's set post-canon, with some divergences, so it starts off by trying to describe the current situation. And anime... Magilumiere is great. Give it a try. reply randmeerkat 5 hours agorootparentprev> Um, no, I want illustrations for my stories. That’s the end, and the means can be whatever. I don’t care to search for self-discovery in that. Maybe writing a story is your art… Part of self-discovery is in finding out how you desire to express yourself. There’s a reason many books have a an author and an illustrator. reply Filligree 4 hours agorootparentNo question about that, but I always get slightly annoyed about people who insist artwork has to be internally fulfilling or whatever. Great if that’s how it works for you, but for me it’s a means to an end. reply autoexec 19 hours agoprevIt's pretty neat, but I'd never have a webcam steaming everything in view to someone else's server on the internet. It'd be cool if the server ran on my own hardware, and ideally in the frame itself. The privacy policy at runpod.io wouldn't even display in my browsers. (their ToS loaded without an issue). reply beeflet 18 hours agoparentI wonder if you could do something like this with hardware acceleration (like google coral) reply refulgentis 16 hours agorootparentUnfortunately no, they only have a TensorFlow target and none of the hobbyist / released big model image stuff works with it reply swayvil 16 hours agoprev>But art is mostly about surfacing the inner world Oh good lord. reply more_corn 15 hours agoparentWhat’s wrong with that? If art is expression shouldn’t everyone have the right to artistic expression? Even people who express themselves with nerdy projects and code and hardware instead of paint and canvas? What do you think art is? reply arathis 14 hours agoprevThis is great. reply king_magic 16 hours agoprevThis is very cool and I applaud you OP. reply stonethrowaway 15 hours agoprev> But art is mostly about surfacing the inner world, and only in part about skill. It’s unfortunate that art selects so strongly for skill. Can we decorrelate the two? I don’t think the poor lad knows what Art is. Put another way, we have hundreds of years of recorded philosophical texts and diatribes on what constitutes Art, and what art-making is. Often written by serious practitioners who dedicate their life to it rather than internet-dwelling dabblers and dilettantes. We have people who are deemed artists, not necessarily painters but people who are wired a certain way and are industrious with their abilities. Math geniuses attend certain schools and the other pupils may pick up a thing or two from them, but that doesn’t mean the other pupils are geniuses also. So too, do artists walk among us and may do what we do and we may imitate what they do. But that doesn’t put us on equal footing whatsoever. Art doesn’t select for skill. This is a red herring and a misunderstanding. Art doesn’t select for anything, because if it did it wouldn’t be Art. This is an old somewhat trite topic that, historically, boiled down to no more than a pithy phrase: “Art cannot be taught.” as expounded by many teachers of incredible talent in their own right who have attempted to distill it into teachable material and realized their talent is not transferable as easily as they had hoped. Most of what you read on this subject is nonsense sold to you by grifters who want your money. Now and today more than ever. I’m all for, say, “Art and Fear” and “The Art Spirit” and even a bit of “War of Art” to name some household items on the subject. These are all great recent texts. But let’s take these for what they are: self-help literature, and nothing more. The further back in literature you go the less of this patting-on-the-back attitude you get, and more serious the subject matter is treated (example: read the lectures on Art by the presidents of the Royal Academy, they are numerous, Archive has them all. One president basically tells students to choose a different profession, discussed as an aside topic in a book on portraiture from that time.) Elsewhere in the comments people saying how art is simply good taste seem to be oblivious to the creations of artists that led them to make such a blundering conclusion. Your taste wouldn’t exist had an artist not created a thing to begin with. We’ve used image generators for decades now. It gets the job done. The person using it may be an artist or just someone who wants a dynamic, changing generated image on the wall. reply A4ET8a8uTh0 13 hours agoparent<< Archive has them all. Thank you. I added those to my reading list. I don't think I ever delved into the topic. << Often written by serious practitioners who dedicate their life to it rather than internet-dwelling dabblers and dilettantes. And yet, here we have someone not burdened by the serious business of art and gives his personal perspective on it. I am not saying a lot of everything is not mostly crap, because it mostly is, but I found this child-like honesty oddly endearing. << Art doesn’t select for skill. Artist without a skill is just a dreamer, who can't put his vision into place. Barrier of entry has been lowered now, but I am relatively certain that was not always the case. reply melony 18 hours agoprevSome optimization suggestions: - cache the prompting somehow, unless you are doing dynamic stuff with the prompts, the language embeddings generated should be static (this depends on the architecture of the model that you are using, it's only possible with certain setups where the language processing is a separate part in the pipeline) - consider fine-tuning an img to img model with your current outputs instead of using a language-coupled model. My intuition is that this is currently significantly over-engineered on the ML side. - Play around with local hardware acceleration instead of sending everything to the cloud, you also probably don't need particularly high resolution for the images either. reply cataPhil 3 hours agoparentLove it thanks, will look into it! reply tsunamifury 19 hours agoprev [–] Micasso reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The discussion on AI's creativity often overlooks that art is about expressing one's inner world, not just technical skill.",
      "AI-driven art forms are enabling non-artists to explore creativity, as demonstrated by the author's use of StreamDiffusion to transform webcam feeds into artistic visuals.",
      "The author enhanced their AI art setup by building an LCD frame for a permanent display and improved performance using TensorRT, sharing the setup details for others interested in similar projects."
    ],
    "commentSummary": [
      "A wall-mounted diffusion mirror transforms reflections into artistic paintings but faces challenges with low frame rates.",
      "Suggestions for improvement include using Websocket protocol for efficient data transfer, eliminating JPEG compression, and batching input frames.",
      "The project is lauded for its innovation, sparking discussions on art, technology, and potential developments like shared experiences, while also raising privacy and hardware concerns."
    ],
    "points": 432,
    "commentCount": 111,
    "retryCount": 0,
    "time": 1729722261
  },
  {
    "id": 41930628,
    "title": "RF Hunter – Find hidden cameras and other devices",
    "originLink": "https://github.com/RamboRogers/rfhunter",
    "originBody": "This project is an RF Signal Scanner built using an ESP32, AD8317 RF detector, and various other components. It&#x27;s designed to detect and measure RF signals in the environment and display the signal strength on an OLED display. It&#x27;s useful to find hidden cameras, wiretapping devices, and other RF-enabled devices.",
    "commentLink": "https://news.ycombinator.com/item?id=41930628",
    "commentBody": "RF Hunter – Find hidden cameras and other devices (github.com/ramborogers)366 points by RamboRogers 18 hours agohidepastfavorite115 comments This project is an RF Signal Scanner built using an ESP32, AD8317 RF detector, and various other components. It's designed to detect and measure RF signals in the environment and display the signal strength on an OLED display. It's useful to find hidden cameras, wiretapping devices, and other RF-enabled devices. danbruc 8 hours agoFun fact, you can actually detect semiconductor devices even if they are powered off and hence emit no radiation unless the design took specific precautions. This works by illuminating a region with high frequency electromagnetic radiation and then listening for the effects that PN junctions have on the reflected radiation due to their nonlinearity. [1] [1] https://en.wikipedia.org/wiki/Nonlinear_junction_detector reply amelius 8 hours agoparent> Thousands of diodes were mixed by the Soviets into the building's structural concrete, making detection and removal of the true listening devices by its American occupants nearly impossible. Wow ... reply alwa 2 hours agorootparentI wonder if it would be feasible, with modern techniques and sufficient motivation, to map where the “background” diodes ended up setting in the concrete; then to measure newer sweeps against that baseline. reply mxuribe 8 hours agorootparentprevThat's called playing the long game, and playing it quite cleverly! reply daveguy 5 hours agorootparentNot really. It makes it clear from the first attempted sweep they altered construction -- the opposite of a long game. reply krisoft 3 hours agorootparentThat depends on what the game is. For example if they wanted the embassy to stay in their old already compromised premises they achieved that. (for about twenty years at least.) If they wanted the USA to spend a lot of money they also achieved that. reply hoistbypetard 6 hours agorootparentprevYeah! It also makes me suspect that the device would not be super-useful in most environments today because our homes and offices have false positives littered all over the place. Such a countermeasure would be unnecessary now. reply gorjusborg 5 hours agorootparent> our homes and offices have false positives littered all over the place Sure, but location matters. Searching weird (for electronics to be), but line-of-sight places (like a bookcase) you might still have a good signal to noise ratio. reply diggan 5 hours agorootparentprev> useful in most environments today because our homes and offices have false positives littered all over the place Like the structural elements in your house/apartments have something similar to diodes in them, or what are you referring to? reply danbruc 6 hours agoparentprevHere [1] are some pictures and additional details on NLJDs. You can get your own, for example the Orion 2.4 [2] for USD 15.2k (free shipping) [3]. [1] https://www.cryptomuseum.com/df/tscm.htm#nljd [2] https://reiusa.net/nljd/ [3] https://spyassociates.com/orion-2-4-non-linear-junction-dete... reply AlanYx 4 hours agoparentprevAre nonlinear junction detectors still state-of-the-art for detecting hidden devices when powered off? Does anyone know if alternatives like electronic noses (to detect chemical signatures associated with IC packaging) and magnetic anomaly detection increasingly used for this? reply transpute 11 hours agoprev2018, \"Low budget consumer hardware espionage implant\", 220 comments, https://news.ycombinator.com/item?id=40363704 & https://news.ycombinator.com/item?id=20190251 & https://news.ycombinator.com/item?id=15676737 2019, \"Airbnb Has a Hidden-Camera Problem\", 50 comments, https://news.ycombinator.com/item?id=24324300 2019, \"How to find hidden cameras in your AirBnB\", 300 comments, https://news.ycombinator.com/item?id=20457419 2023 repro of \"Great Seal Bug\" (1952): mechanical microphone, no power source, data exfiltrated via external directed microwave beam, https://www.youtube.com/watch?v=NLDpWrwijE8 Try measuring the RF emissions of: USB hubs AC power strips SSD enclosures monitors reply omagramma 22 minutes agoprevThis doesn't do anything useful. To detect RF transmissions you need to sweep a range of frequencies stopping at each frequency for a period of time for the Rx amp to sample. The AnalogDevices detector that is uses needs to be programmed, and the arduino code doesn't do that. It doesn't have the bandwidth or performance to do any real scanning. There's a reason why spectrum analyzers cost thousands (or tens of thousands) of dollars. Its funny watch Arduino (ease) programmers try to figure out RF (very hard). reply RamboRogers 16 minutes agoparentYou know, when my wife opens up a webrowser on her phone and it starts transmitting this device triggers. When I go next to a wifi camera and it picks up the RF, it triggers. Demonstrably it does detect signals. You clearly don't understand the basics (very easy). reply transpute 17 hours agoprevThanks for making this public. What's the ballpark BOM cost? Could a directional antenna help with locating RF sources? There's some older work (\"WokFi\") on parabolic antennas for WiFi, https://web.archive.org/web/20140802123553/http://www.usbwif... Here's another circuit design for AD8317, https://g8rwg.uk/articles/noise-meter-ad8317/ > The AD8317 module I’m using has the logarithmic slope set to 22mV/dB. I used the output of a Viavi JD785 at different frequencies to check the slope and dynamic range of the device. Linearity and dynamic range at 1GHz and 3.5GHz is good and as expected drops off at 144MHz and 6GHz. reply bobmcnamara 2 hours agoparentGenerally, directionality is tricky to do handheld over a wide bandwidth. Another approach is a phased rx array, could even be as few as 2 antennas, and from that you get a bearing too. reply pragmatick 10 hours agoparentprev> What's the ballpark BOM cost? https://github.com/RamboRogers/rfhunter/blob/master/rfhunter... contains amazon links. About $100 although many of the required components come as packs. reply 01100011 4 hours agoprevWhat I really want is something that detects any EMF above 60Hz. When I was a kid I used to hook a coil of wire and a diode to a piezo earphone. I then listened to the emissions of various devices in my house. My Amiga 500 was particularly interesting. I ran across a few projects that do the same thing but add an opamp and recording so you can generate sounds for electronic music. reply banku_brougham 46 minutes agoparentCan you give more detail so I can do this with my kid? I'm a not a hardware person but handy enough I think. How would I connect the diode to the coil? By coil do you just mean wound-up wire or is this an electronics component? reply anthomtb 3 hours agoparentprev> any EMF above 60Hz. Isn't that effectively all the EMF? You may be missing a prefix. Edit: huh, turns out these frequencies do have some applications: https://en.wikipedia.org/wiki/Super_low_frequency reply 01100011 1 hour agorootparentAnything above 0Hz radiates. EMF is short for 'electromagnetic field' which even DC produces, so I guess I could have worded it better. In any case, I would want to detect the emissions from the CPU, memory bus and SD card traffic. Not all cameras are WiFi. Sure, that won't detect passive listening devices or other advanced techniques, but most people now are worried about video and that will have certain characteristic emissions. Edit: Something like CamRadar, presented here: https://dl.acm.org/doi/10.1145/3569505 reply yftsui 12 hours agoprevThe most effective way would be use a Thermal Camera, because a normal \"hidden camera\" you get from eBay will consume around 5 Watts - a significant heat dissipation. For others, probably just get an off the shelf TinySA? reply garblegarble 8 hours agoparentAnother way to detect hidden cameras is optical augmentation, using reflections to locate lenses; this can detect cameras that aren't currently on / actively transmitting. Some paper and product references: - (PDF) http://s3.amazonaws.com/arena-attachments/1381379/c3a4e75132... - https://www.spycatcheronline.co.uk/product/camera-detector/ - https://www.ijser.org/paper/Lens-Detection-System-using-Opti... - https://patents.google.com/patent/US20090237668A1/en reply Cthulhu_ 4 hours agorootparentThat camera detector is pretty pricey; I once saw a low-tech solution that was basically a dyed card that you had to put in front of your phone camera with the light on, the light reflected by the camera lens would become very visible. Of course, only a matter of time - if they don't already exist - before there's cheap spy cameras without a reflecting lens, like a solid state camera of sorts. I believe some years ago they were experimenting with that as an alternative to a front facing camera on phones. reply RamboRogers 5 hours agoparentprevTinySA looks cool! I want one. I made a thermal camera https://github.com/RamboRogers/M5StickCPlus2-AMG8833-Thermal... reply transpute 12 hours agoparentprev> TinySA What's the frequency range and scanning speed of TinySA? reply ghostpepper 15 hours agoprevThis is cool. Is is all point-to-point wired inside? I can't imagine a PCB design would be too difficult if all the RF stuff is handled by the IC. reply RamboRogers 15 hours agoparentyeah, it's just soldered up to the pins. More details here: https://blog.matthewrogers.org/b/8BCF175A-6CC6-4E61-8310-A91... reply declan_roberts 15 hours agoprevA way easier solution to this is to turn off all of the lights and look around with your phone camera. The phone camera will pick up the bright IR lights that hidden cameras use to illuminate the room-- wireless or not. Obviously this only works if the camera uses IR lights, but pretty much all of the sneaky ones do. reply Ballas 13 hours agoparentMost phone cameras have pretty steep IR cut filters these days. The front camera on most phones still don't, so you have to use that. That said, most of these spy cameras don't have IR illuminators... reply runjake 4 hours agorootparentLies. :-) Somewhere in my HN comment history from a while back is a response to a person claiming that modern phone cameras can’t detect IR illumination and remotes. I took a bunch of modern iPhones and Android phones, from colleagues in an IT dept, and demonstrated they can in fact see a bunch of different IR remotes and illuminators with the rear camera. I could find zero cameras that could not see the IR. I’m not sure where people got the notion they couldn’t. reply JKCalhoun 40 minutes agorootparentGuessing because they read that CCD's have IR filters on them. reply deknos 12 hours agorootparentprevdo you have examples of cameras or smartphone which do not have IR filters? reply Ballas 12 hours agorootparentI don't but it's easy to test, just pick up a TV remote and press a button while pointing it towards the camera. It should look like a flashing white LED. I should also mention that both IR illuminators and TV remotes are usually either 850nm or 940nm, I have not looked into that aspect of it. I imagine that it's possible that your camera can detect one but not the other... reply botanical76 7 hours agorootparentThanks, I had no idea about this. My Google Pixel 8a doesn't show anything on either camera, but my friend's front camera did! It shows up light purple. reply ddingus 12 hours agorootparentprevMy phone goes up to 980nm and it is a Note 9. Both front and rear cameras work. The light shows up as a pinkish purple. reply karlkloss 9 hours agorootparentprevRaspberry Pi sells a camera especially without IR filter. reply alwayslikethis 7 hours agoparentprevMost of the bright IR lights you find on typical surveillance cameras actually visibly look a little red. I wouldn't think the same lights would be used if the intention is to spy in secret. reply declan_roberts 2 hours agorootparentThat's exactly right, and part of that is because they're cheap and put off some visible light. Thankfully the perverts who put this stuff in airbnbs just go to amazon and search and buy cheap stuff, which is easy to detect. reply RamboRogers 14 hours agoparentprevWell, maybe - it would need to have ir enabled. This also detects listening devices etc. reply mbreese 13 hours agorootparentWould this also be able to detect something like a camera that saves videos to an SD card to be retrieved later? Something that doesn't use WiFi or a radio? That's the main limit I see, but I'm wasn't sure if it such a device would still generate enough RF intrinsically w/o a radio. reply ddingus 11 hours agorootparentMaybe those could be found with a parabolic antenna and possibly an amp, ideally one with a limited range one can control via software. Once a few common signals are known, the software could do programmed patterns to ferret out easy ones. reply sriram_malhar 3 hours agoprevThanks for this useful project. Can I trouble you to add a circuit diagram of the latest rev? So much easier than reading text. reply coin 13 hours agoprevTitle is misleading. It only detects RF. A hidden camera could record to storage for later upload in which case wouldn’t be transmitting continuously. reply KeplerBoy 13 hours agoparentDepends on the sensitivity of the device. It might be possible to pickup the EMF of the camera, even if it's not actively broadcasting. Every current carrying trace is an antenna. reply satori99 13 hours agorootparentWhat you really need is a Non-Linear Junction Detector. These can detect an unshielded device with transistors, even if it's off. https://en.wikipedia.org/wiki/Nonlinear_junction_detector reply killingtime74 12 hours agorootparentprevThat would only be practically useful in an environment devoid of all other electronics. How would one tell between the non-transmitting spy cam and normal household electronics reply KeplerBoy 12 hours agorootparentBy having some spatial/angular resolution. You'd need a large directional antenna or multiple antennas to have something similar to a phased array radar, but passively (i.e. listening only). reply RamboRogers 6 hours agoparentprevIt doesn’t say “all”, it also doesn’t detect a someone in the closet, unless they’re transmitting. reply ujikoluk 13 hours agoprevI have long dreamt about building a portable phased array for this purpose, but additionally using the phase difference between receivers to visualize where the transmission source is. In effect a camera into the RF world! reply transpute 12 hours agoparentCould be combined with AR, https://hackaday.com/2019/01/09/smartphone-app-uses-ar-to-vi... DIY radio telescope tuned to 2.4Ghz WiFi, https://www.youtube.com/watch?v=g3LT_b6K0Mc Image of physical building overlaid with RF sources, https://www.facebook.com/thethoughtemporium/posts/2162600763... > When I made the first video and photoshoped my impression of what I thought this would look like, I never imagined it would actually be this close. It's official, our telescope can map the wifi in a building as if it were any other form of light. reply ujikoluk 1 hour agorootparentOh neat! Yes that's the kind of imagine I want to see reply thih9 8 hours agoprevDoes anyone have a personal experience with finding a hidden camera in an AirBnB? reply binarymax 5 hours agoparentYes, but it was obvious and I didn’t use equipment. It was in Jan 2020 at an Airbnb “hotel” in Nashville. There were two smoke detectors in the room. One of them was not like the other. I wrapped it in toilet paper. I left it wrapped so the owners knew that I knew, but I didn’t bother reporting it because I rarely used Airbnb and it was a last minute trip. And then the pandemic hit and that was that. reply JKCalhoun 38 minutes agorootparent> There were two smoke detectors in the room. One of them was not like the other. I imagine too that the other was not like the one. ;-) reply RamboRogers 5 hours agoparentprevI found someone with a pen recording me. They left it on the desk, and I took it by mistake. I found it in my kit and realized it was a spy device.... yikes. reply lynx23 8 hours agoparentprevWell, not in an AirBnB, but... Already years ago, they found one in the ladies room at work... reply bloopernova 4 hours agoprevThis is really cool! Have you considered using a Software Defined Radio or would that not improve capabilities enough to be worth the hassle? reply slow_typist 12 hours agoprevOP, cool project. I have questions though: How does the device detect very short bursts? After looking up the data sheet of the RF detector I believe you would need additional circuitry to not risk that very short bursts slip through the sampling of the ESP A/D input. Second, the supply voltage of the detector seems to be 3.0 V to 5.5 V, https://www.analog.com/en/products/ad8317.html reply RamboRogers 13 minutes agoparentIt doesn't detect short burst well at all. It does detect traffic over a second or so, like a TCP session of an h264 stream. https://www.amazon.com/dp/B07FHZXTCZ?ref=ppx_yo2ov_dt_b_fed_... Specifications: Working frequency: 1M--10000MHz Measurement power: -55dBm to -0dbm Output voltage: 0.33- -1.65V Detection slope: -22mv/dBm (typical value) Input impedance: 50Ω Supply voltage: 7-15V Size: as the picture Weight:7g reply kubectl_h 15 hours agoprevWhat is the sensitivity/range? I've always wanted something like this to carry in the woods to detect game/trail cameras. Not for any nefarious purpose, but to get an idea of how surveilled the woods are. reply etrautmann 15 hours agoparentDon’t many of those just store data locally? reply potato3732842 8 hours agorootparentYes but since it's the woods and not a university computer lab the only other noise source should be your personal devices so the noise from the \"sleeping\" camera should be pretty easily detectable even when it's simply looking for motion. reply kubectl_h 15 hours agorootparentprevOh duh, yeah you are right. I had swapped RF and IR in my head for some reason when I was scanning the project page and thought this was somehow picking up signals based off noise from the sensor. Might be time for bed for me. reply ffujdefvjg 15 hours agorootparentGame cams with cellular modems are getting to be pretty common, and you can equip them with solar panels. Basically just set em and forget em. It wouldn't surprise me if this is making them much more common...you can get them deep into the woods and don't have to go check on them hardly at all. https://www.forestry-suppliers.com/c/trail-game-cameras/3-30... reply A4ET8a8uTh0 13 hours agorootparentSigh, it used to be at least woods offered respite from ever-present cameras. I am starting to think I should stop trying to fight the impending 'Transmetropolitan' future. reply jamil7 12 hours agorootparentprevGame cameras are truly pathetic. reply defrost 12 hours agorootparentSome applications are, sure. The cameras themselves are useful for catching remote arearural thieves on mine leases, rural properties, etc. They're great for spotting and counting rare and endangered species to better direct conservation efforts. reply ffujdefvjg 12 hours agorootparentQuite a few people dumping their trash in the woods illegally have been caught in my area with them. They just need to outlaw private citizens putting them on public property without a permit. Big fines could be a deterrant. Maybe USFS/BLM/NPS employees need some sniffing devices. The upshot is that if it's got a cellular modem, someone's paying a bill and they can usually be found pretty easily if you have the modem. With fire seasons going the way they are west of the Rockies, I'd be a little concerned about a bunch of lion batteries scattered through the woods. Just takes one of them to blow up in late summer (say it gets crushed by a tree) and there's a good chance it'll be a multi-billion dollar problem that kills people. reply potato3732842 8 hours agorootparentPretty much all the C and D rate state forests, nature preserves, etc, etc, in my state were only ever having their trails maintained by the \"nominally illegal but nobody actually cares\" SxS and ATV riders because the dog walkers and the hunters are much less averse to going off trail and even if they weren't they aren't packing a 15lb cordless chainsaw around to clear whatever fell on the trail. Karens with game cams have done a lot to curtail this. reply toss1 4 hours agorootparentprevAgree, if you are talking about hunters (and I feel the same about fish-finders). To them: dude, if you're going to hunt or fish, don't just cheat, learn the craft. For my purposes, I've found a game camera extremely useful for finding what and when various critters are eating the garden and other plants in the yard, and to figure out what discouraging and diverting measures actually work. I also get a few pretty cool wildlife pics I'd never otherwise get. reply themaninthedark 1 hour agorootparentSo just curious; if a hunter has a limit of 1 buck and 2 doe but he really only needs 350lbs of meat, so either 1 large buck and smaller doe or all 3 if they are smaller. Should he give up using the trail camera and the knowledge of if there is a large buck out there and just kill the first 3 deer he comes across? Another question, do you look up salary stats on Glassdoor, etc before you consider open position or asking for a raise? Would you consider it offensive if someone told you to stop cheating and just learn to negotiate better? reply RamboRogers 14 hours agoparentprevThis is dependent on the antenna. With a short 915 mhz antenna it picks up stuff 50 feet away. It auto calibrates on boot so if you’re in the woods I bet it would work really well. Just make sure you turn it on without a strong nearby signal. reply jmward01 14 hours agoprevIn Japan there was a requirement to make a noise when taking a picture on a phone. I'm not a huge fan of that since there are a lot of reasonable reasons to not want noise, but I would be a fan if any capture device was require to advertise its presence wirelessly to make it easy for any smart device to notice an active recording device nearby. That wouldn't stop sophisticated surveillance but it would act like a cheap lock and stop a lot of the abusive stuff, or at least let people more quickly notice it. reply ddingus 11 hours agoparentOf course nefarious actors will ignore the requirement and or hack their gear. reply bbarnett 7 hours agorootparentThere is an upside though. An additional criminal charge, and making it easier to prove intent. (Note I said easier, not just \"prove\", for it is indeed only easier.) reply rahimnathwani 14 hours agoparentprev> but I would be a fan if any capture device was require to advertise its presence wirelessly to make it easy for any smart device to notice an active recording device nearby That would be convenient for burglars or dishonest cops. reply Cthulhu_ 4 hours agorootparentA burglar isn't deterred by a camera though. I mean for this use case they'd already be inside. Cameras don't prevent nor solve crime, at best they're for legal purposes if someone is caught, or for insurance claims. reply sriram_malhar 12 hours agorootparentprevDang. Never thought of that. No free lunch, eh? reply RamboRogers 14 hours agoparentprevThis Device lights up pretty good on wireless or cellular data transfer. If my wife starts browsing on her phone it lights up. reply beardyw 9 hours agoprevThose 128x64 displays are easy to use, but frustratingly variable. They have differing start up sequences which using the wrong one leaves a blank screen. reply severino 7 hours agoparent> They have differing start up sequences which using the wrong one leaves a blank screen. You mean, bricked? reply beardyw 5 hours agorootparentNo, just no clue why it is unhappy. reply o1o1o1 15 hours agoprevInteresting, thank you for sharing! Maybe somebody knows: Is there something similar for the Flipper Zero? reply RamboRogers 15 hours agoparentI could make it I suppose. reply x______________ 42 minutes agorootparentI've been lurking yc for a while and you inspired me to reach out to the community.. This would be pretty awesome, please advise if there's anything I (or anyone) could do to support you in getting this logic onto a flipper (project support, testing, etc). -x reply RamboRogers 4 minutes agorootparentOkay, I don't think it would be hard, most of the Flipper Modules use some sort of ESP module like an ESP8266 for the Wifi module. I've got a flipper right here. I find it cumbersome to use, but it's a pretty popular consumer product. I'll look at what the wiring cost could be to print a board. I've never done that. reply ffujdefvjg 15 hours agoprevCool project! I'd buy one of these if they were pre-assembled. reply RamboRogers 15 hours agoparentThanks, it costs about 30$ in parts. Not sure what a fair price would be. reply tomcam 13 hours agorootparentRule of thumb in manufacturing is 5x BOM costs. This comment will be downvoted but only by people who have not been associated with a successful manufacturer. I’d be happy to pay $150 for this. reply ffujdefvjg 13 hours agorootparentThat...doesn't sound unreasonable. reply Eisenstein 6 hours agorootparentprevBut does that work for putting together what are essentially modular pre-assembled boards? The RF detector, display, charge controller, and ESP are already consumer parts, and they are put together not unlike how a desktop computer can be built from retail parts. Would you say that 5x retail cost for the parts is fair for a custom built PC? reply ffujdefvjg 14 hours agorootparentprevNot sure what the time/labor looks like, but I'd easily pay $60 bucks for that. You may be able to sell them at $100 and still move quite a few. Honestly if you dressed it up a little you could probably charge quite a bit, it's just a matter of reaching that audience. reply _dark_matter_ 14 hours agorootparentAgreed, I'd buy this at $100 for sure. I stay at a lot of airbnbs and am the kind of person who regularly checks those places for bedbugs. reply woleium 13 hours agorootparenti just disconnect the provided router in airbnbs i stay at. Turns out the host usually drops round all worried if there is a hidden camera. reply RamboRogers 5 hours agorootparentThis is a great idea. reply bbarnett 7 hours agorootparentprevIt's sad we're letting bedbugs return. reply marsh_mellow 6 hours agoprevVery cool! Could this work for detecting nearby drones? reply RamboRogers 5 hours agoparentI would think it would work really well for that usage case. You could tune the antenna to focus on the in use bands. The automatic baselining solves a lot of this. reply Terr_ 17 hours agoprevIs the ESP32 mainly to drive the LCD display and provide a numeric readout, or is it also needed to control the sensor-side so that it cycles through different settings and frequencies? reply RamboRogers 15 hours agoparentIt runs the screen and reads the sensors, you can see it in the code. reply amelius 9 hours agoprevMight also be useful for initial EMC compliance testing, maybe. reply amelius 9 hours agoprevDoes it get confused by nearby WiFi transmitters? reply RamboRogers 5 hours agoparentIt baselines on power on. So you'll need to get closer to raise the baseline. It also doesn't seem to alert on beaconing (or very little), my wifes phone and other devices need an active transfer to trigger it. (more than a 1/2 second) reply rkagerer 14 hours agoprev\"If you don't have a 9V battery, you can use a 9V battery.\" reply RamboRogers 5 hours agoparentI fixed it, thanks for the comment :-) reply RamboRogers 14 hours agoparentprevlol, some bad summary there. It uses a lipo 3.7 reply consumerx 13 hours agoprevit seems multiple ESP32s would fit into this giant case. reply RamboRogers 5 hours agoparentYou could without boost converter and the battery. https://x.com/rogerscissp/status/1847430193113141549/photo/1 reply goodpoint 9 hours agoprevThis is ineffective against most recording devices. reply RamboRogers 6 hours agoparentOnly if it’s transmitting, this detects rf. It can’t detect ears. reply goodpoint 3 hours agorootparent...and only if the transmission is frequent enough. reply RamboRogers 7 minutes agorootparent100%, it needs to transmit pretty much constantly. Something like an H264 stream or an audio stream via TCP or UDP over something like wifi. reply sandworm101 5 hours agoprev>> It's useful to find hidden cameras, wiretapping devices, and other RF-enabled devices. Nope. It is used to find RF-emitting devices, the sort of low-sophistication stuff you can buy online for real-time continuing surveillance. For many decades, the real spy stuff has operated in burst mode: collecting data quietly and only transmitting it at an agreed time or in response to an external signal. To detect them you need to be monitoring 24/7 with a rig capable of triangulating signals that might only last a second or two. reply RamboRogers 11 minutes agoparentThis finds a Wyze camera or many of Wifi Cameras as demonstrated in my video. So yes, with proof attached. Thanks reply 18 hours agoprev [–] [deleted] GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The project involves creating an RF Signal Scanner using an ESP32 microcontroller and an AD8317 RF detector to detect and measure radio frequency signals.- The detected signal strength is displayed on an OLED screen, making it practical for locating hidden cameras and wiretapping devices.- This project is notable for its application in privacy and security, offering a DIY solution for detecting unauthorized surveillance equipment."
    ],
    "commentSummary": [
      "RF Hunter is a project utilizing an ESP32 microcontroller and an AD8317 RF detector to scan for RF signals, aiding in the detection of hidden cameras and wiretapping devices.",
      "The project has generated discussions on alternative detection methods, such as thermal cameras and nonlinear junction detectors, and its effectiveness in electronics-heavy environments.",
      "There is interest in pre-assembled versions and potential enhancements, including applications for drone detection and the use of phased arrays for improved detection capabilities."
    ],
    "points": 366,
    "commentCount": 116,
    "retryCount": 0,
    "time": 1729729296
  },
  {
    "id": 41931507,
    "title": "Pretty.c",
    "originLink": "https://github.com/aartaka/pretty.c",
    "originBody": "Pretty C: ✨Pretty✨ Scripting on Top of C Pretty C is a new scripting language compatible with C. Pretty C boosts your programs with dynamic typing, generic iteration, resource tracking and other niceties. And it’s backwards-compatible with C and all of its libraries! Inspired by Lua, Python, JavaScript, and Lisp. Here’s how a naive re-implementation of head utility might look like with Pretty C: #include \"pretty.h\" int main (int argc, string argv[]) { if (argc above 1) with (f, fclose, fopen(argv[1], \"r\")) fortimes (line, 10) with (buf, free, vector(200, char, 0)) when (fgets(buf, 200, f)) then print(buf) otherwise 0; else println(\"Please provide an input file\"); return EXIT_SUCCESS; } The goals for Pretty C are: Provide so much syntactic sugar as to cause any C developer a diabetes-induced heart attack. Deprecate Lua, Python, JavaScript, Ruby and a dozen other languages, because Pretty C is the ultimate scripting language, but lightning-fast and strongly typed! Including only one header (yes, Pretty C is a header-only library #include-able from arbitrary C file!) to turn any codebase into a beginner friendly one. Getting Started Checkout the repository git clone https://github.com/aartaka/pretty.c Or simply copy the pretty.h file—Pretty C is a header-only library, so you can #include \"pretty.h\" from any file in the directory you drop pretty.h to. Or from any file really, if you specify the path to Pretty C as an include (-I) path. Provided Conveniences Here are all the pretty changes making C hip again. Included Standard Headers stdbool.h for pretty booleans: true, false, and bool. stdint.h for fixed-width integer types like uint64_t. iso646.h for readable alternatives to regular operators, including and for && and or for ||. Neat! Simple macros Everyone defines these, so why not provide them? max and min of two numbers. len for array length. default for providing a fallback value. limit to ensure proper value range. between to check whether the number falls in a range. divisible to check whether a number is modulo divisible by another number. New types Type aliases: string == char*. byte == char. bytes == char*. any == void*. Integer shortcuts: uchar. ushort. uint. ulong. New aliases Mainly modeled after Lua and Lisp: eq, because iso646.h only has not_eq. is means == too. bitnot and bitxor for operations that used to be called inconsistently (compl and xor respectively) in iso646.h. below, above, upto, and downto comparison operators. even, odd, positive, negative, zero, and empty as predicates for numbers/data. nil for NULL. until for negated while. elif for else if. ifnt for if(!...). repeat from Lua as an alias for do. done~/~finish and pass as aliases for break and continue, respectively. always, forever, loop, and indefinitely so that you can make infinite (event? server?) loops always println(\"After all this time?\"); and never and comment to comment out some code with just one keyword, while still allowing the compiler to analyze/optimize it (similar to Clojure comment form): never println(\"This never runs, but never gets outdated, because compiler will shout at you if it does.\"); Type inference (GCC, Clang, or C23+) Yes, you can do var t = time(0); let lt = localtime(&t); local at = asctime(lt); println(at); With Pretty C. Generic printing (C11+) print prints whatever you feed it. println adds a newline after it. println(3.1); print(\"Hello world!\"); Generic equality (C11+) Compare all the things! equal(\"NA\", line); // true equal(0.3, 0.2 + 0.1); // true Pretty ternaries Ternaries are frightening, so it won’t hurt to add some plain text. if and else are taken, but there are proper linguistic alternatives that look quite Python/Lisp-like: return when some_condition then do_something() other do_something_else(); It’s ternaries underneath: when expands to empty string and is only provided for readability. unless expands to not to be a negative version of when. then expands to ?. other / otherwise expands to :. There’s also only for when the otherwise clause is unnecessary: return when done() then 42 only; and otherwhen for the next condition return when c is 'A' then 'a' otherwhen c is 'B' then 'b' only; for Macros These macros are aliases for certain for loop pattern, each abstracting away some of the frequent for loop uses. foreach (var, type, length, ...) This one walks an array or memory region initialized to the vararg expression. Every time it iterates, var is set to a pointer to the respective array element. Yes, pointer—so that you can modify the element in place if you have to. foreach (i, int, 10, vector(10, int, 1, 2, 3, 3, 4, 5)) println(*i); Also shows the use of vector. forthese (var, type, ...) Iterates over the provided varargs, binding each of these to type-d var. The loop above can be translated as: forthese (i, int, 1, 2, 3, 3, 4, 5) println(i); fortimes (var, times) A frequent case of going from 0 to some positive number. Saves you quite some time for your for (int i = 0; i < 28; i++) println(i+1); turning it into a simple fortimes (i, 28) println(i+1); println(\"28 stab wounds, you didn't want to leave him a chance, huh?\"); forrange (var, init, target) Iterate over a range of numbers from init to target. Pythonesque. Here’s Celsius to Fahrenheit conversion loop with forrange: forrange (c, -10, 20) printf(\"Celsius %i = Fahrenheit %f\", c, (32 + (c * 1.8))); Note that init and target are arbitrary integers, signed and unsigned. And init might be greater than target in which case the iteration step decreases the variable. forrangeby (var, type, init, target, by) Iterate type-d var from iter to target, stepping by by every time. Pythonesque. forrangeby (x, double, 1.0, 10.0, 0.5) println(x); Allocation macros These allow quick-and-dirty allocation for typical patterns. Mostly modeled after C++. new (type, ...) C++ new operator is nice, so it won’t hurt having something similar in C, right? Ask no more: struct ListNode { int val; struct ListNode *next; }; struct ListNode *node = new(struct ListNode, 2, new(struct ListNode, 1, nil)); Or, if you fancy, you can add even more syntax on top: #define cons(val, ...) new(struct ListNode, val, __VA_ARGS__) cons(2, cons(1, nil)); vector (length, type, ...) C++ again. std::vector is an extremely useful and versatile data structure that’s easy to reason about. While this macro is not even remotely as featureful as C++ counterpart, it simplifies a frequent pattern of “allocate an array of that much elements and with these contents”: double *vec = vector(10, double, 1, 2, 3, 4, 5); delete (...) In case you don’t like free-ing the resources and prefer a fancier C++ name. Otherwise the same as free. Block utilities These establish new local bindings, ensure deferred computations, or otherwise act on the block after them. lambda (ret, name, ...) (GCC, Clang, or C++) Nested functions/lambdas/closures, now in C! int *arr = vector(10, int, 23423, 23423, 234, 5233, 6, 4, 34, 643, 3, 9); lambda (int, cmp, int *a, int *b) { return *a - *b; }; qsort(arr, 10, sizeof(int), cmp); // arr becomes {3, 4, 6, 9, 34, 234, 643, 5233, 23423, 23423} with (var, close, ...) This ensures that you never have use-after-free, because you provide the freeing procedure (close) upfront. Especially useful for dynamically allocated objects and file designators. with (file, fclose, fopen(\"hello.txt\", \"w\")) fprintf(file, \"Hello world!\"); One of the downsides is that the bound var is a void *, so you might need to coerce it to your type before using it. defer (...) Offloads the code to be executed after the following block. Not at the end of function as in Go, because that’s impossible hard to implement in C. Still, Pretty C defer is useful enough. try,, and catch Fancy error handling, now in C. Refactored example from errno reference: try log(0.0); catch (NOERR) println(\"No error.\"); catch (EDOM, ERANGE) println(\"Math error!\"); NOERR and NOERROR are also provided by Pretty C, for convenience of error switch-casing.",
    "commentLink": "https://news.ycombinator.com/item?id=41931507",
    "commentBody": "Pretty.c (github.com/aartaka)305 points by synergy20 15 hours agohidepastfavorite178 comments sneed_chucker 5 hours agoCreating DSLs within C has a long tradition. Stephen Bourne wanted to write his shell in ALGOL so badly that he relentlessly beat C with its own preprocessor until it began to resemble his preferred language. https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh... reply sheepscreek 4 hours agoparentHere is an example of what we wrote using it: https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh... reply Keyframe 3 hours agoparentprevThis is not even half as bad as I expected it to be. reply kvirani 3 hours agoprev> Provide so much syntactic sugar as to cause any C developer a diabetes-induced heart attack. Haha love this! reply nneonneo 11 hours agoprevIt claims to be a scripting language but you still have to compile the programs. Boo! Add CINT (https://root.cern.ch/root/html534/guides/users-guide/CINT.ht...) and you can have instantaneous execution and even a REPL! reply maccard 9 hours agoparentGiven the idea behind this repo is to cause pain, why not add a shebang to your file [0] to make it executable. I saw a blog post a long time ago that went into the details of how ./foo worked, and how it executed an elf file. You could register `.c` programs in the same way to be compiled and run? [0] https://gist.github.com/jdarpinian/1952a58b823222627cc1a8b83... reply shakna 9 hours agoparentprevI'd prefer just using tcc [0]. Far lighter weight than that monster. And C, not C++. [0] https://bellard.org/tcc/tcc-doc.html reply suzumer 6 hours agoparentprevCern uses cling now (https://github.com/root-project/cling) reply aartaka 8 hours agoparentprevWell, who said that scripting language cannot be compiled? And yeah, Clang-REPL is another way to make it REPL-friendly. reply bityard 4 hours agorootparentSure, there is no \"rule\" against it. But words/phrases have commonly-accepted meanings and willfully ignoring or appropriating those meanings implies either cultural ignorance or a concealed agenda. If you want to insist that scripting languages can be either compiled or interpreted, then its better to just drop it altogether and just say \"language\" because the \"scripting\" part has utterly lost its identity at that point. reply knome 5 hours agorootparentprevgenerally they aren't, as scripting usually implies an interpreter, though no one is stopping you from using a wrapping script that quietly compiles on first run and caches a bunch of executables somewhere. not much different than python producing bytecode files as it goes along. reply randomdata 4 hours agorootparentScript usually implies some kind of task that runs once and the exits. As opposed to a system that is expected to run indefinitely. There are good reasons for why scripts are often interpreted and why systems are often compiled, but that's not what defines them. There are definitely scripts that are compiled and systems that are interpreted out in the wild. reply knome 18 minutes agorootparent'scripting' is an ill-defined term with many interpretations, certainly. reply codeflo 10 hours agoprevCan someone clarify whether this is intended as a joke or whether the author is actually confused? I mean, nothing about this makes sense: it's not \"scripting\"; it claims to introduce \"strong typing\" while it does nothing about typing; it introduces all kinds of operator aliases \"modeled after Lua and Lisp\" that are present in neither of these languages. But it's not an obvious parody either, so I'm genuinely not sure. reply sandos 8 hours agoparentI mean he has to be serious, right: \"Deprecate Lua, Python, JavaScript, Ruby and a dozen other languages, because Pretty C is the ultimate scripting language, but lightning-fast and strongly typed!!\" reply aartaka 7 hours agorootparentAuthor here. I don't see any problem with this reply byroot 7 hours agorootparentWell, as a starter C is rarely considered as \"strongly typed\". Statically typed yes, but strongly typed not so much. reply aartaka 7 hours agorootparentWith C23 (nullptr, auto typing, typeof) and C11 (generics) it got more guarantees and type-related primitives. You can still do void*, but you are strongly discouraged from it. reply byroot 7 hours agorootparent#include \"pretty.h\" void print_int(int value){ println(value); } int main (int argc, string argv[]) { long value = 23849234723748234; print_int(value); } How is this strongly typed? $ cc test.c -o test && ./test -1411401334 And to be clear, weak vs strong isn't a boolean property but a spectrum, but would be hard to argue with a straight face than C is a strongly typed language. reply brabel 1 hour agorootparentC is likely the only example of a programming language that is clearly statically typed while at the same time being weakly typed. For a reason: as your example shows, it's a really bad idea (but understandable for a language from the 60's). reply thiht 7 hours agorootparentprevThat's pretty clearly said jokingly reply AnthonBerg 9 hours agoparentprevI do not at all think the author is confused. Being confused is OK though. reply IgorPartola 6 hours agoprevFor what it’s worth this makes the same mistake that Python 2 did: string and bytes are not the same type and shouldn’t be treated as such. reply AlotOfReading 4 hours agoparentWhat do you consider the type of shell text, i.e. what's in argv and what you get from subprocess output? It's not well-formed utf8 strings because any random garbage can be in there, yet tools like awk and grep are ubiquitous. I'd argue that strings and bytes are the same general type, but it's sometimes useful to give well-formed utf8 bytes a different type internally. Rust gets this mostly correct with OsString and String. reply ryandrake 4 hours agorootparentThe way I understand it: Bytes are just bytes, until you provide an encoding. Then they can be can be converted to a string, if validly encoded. Taking an array of characters and just treating it or casting it as a string is usually a bad idea. The thing I think Rust maybe goofed, or at least made a little complicated, is their weird distinction between a String and a str (and a &str). As a newbie learning the language, I have no idea which one to use, and usually just pick one, try to compile, then if it fails, pick the other one. I'm sure there was a great reason to have two types for the same thing, that I will understand when I know the language better. reply steveklabnik 3 hours agorootparentI wrote a blog post that may help you! https://steveklabnik.com/writing/when-should-i-use-string-vs... If you want to understand more deeply, the Rust Programming Langauge, chapter 4, uses String and &String and &str to talk about ownership and borrowing. Here’s a link to the start of that chapter: https://doc.rust-lang.org/stable/book/ch04-00-understanding-... reply ryandrake 3 hours agorootparentHow timely and helpful, thanks! Your blog post is practical and clearly explains what to do, when, which is helpful. What's confusing is why Rust has the two types and why the language designers decided it was a good idea to have to convert back and forth between them depending on whether it was going in a struct or being passed as an argument. I suppose the \"why\" is probably better found in the Rust docs. As a long-time C++ user, it seems like std::string vs const char* all over again, and we somehow didn't find a better way. reply steveklabnik 3 hours agorootparentYep, that’s exactly it: I wanted to focus purely on what to do, rather than weigh it down with what’s already in the Rust book. It’s closer to std::string and std::string_view. But yes, in a language with value and reference semantics, when you also care about performance, you just can’t do any better: you need both types. Or at least, if you want the additional correctness guarantees and safety provided by communicating ownership semantics in the type. C gets away with just char * but then you have to read the docs to figure out what you’re allowed to do with it and what your responsibilities are. reply AlotOfReading 3 hours agorootparentprevIn C++ terms, String is std::string, &str is std::string_view. They're different things, but they can appear similar. reply brabel 1 hour agorootparentA Rust `String` reference (i.e. &String) can always be passed where `&str` is expected because `String` has a `Deref` impl... in that sense they don't just appear similar, they are polymorphic. reply AlotOfReading 3 hours agorootparentprevThere may not be a single encoding for every byte in a string. The encoding may not be knowable ahead of time. You might be trying to extract strings from a random blob of bytes with unknown origin. There's a thousand and one different variations. To give a real example, I once wrote some python scripts to parse serial messages coming off a bus. They'd read the messages, extract some values with regex, and move on. Unfortunately the bus had some electrical bugs and would intermittently flip random bits with no CRC to correct them. From my point of view, no big deal. If it's in something outside the fields I care about, I won't notice it. If it's flipped something I do care about we have a bad sample to drop or noise the signal processing will deal with. Either way, it's fine. Python on the other hand cared very much. I rewrote everything in C once I got sufficiently annoyed of dealing with it and more importantly explaining to others how they couldn't \"simplify\" things using the stdlib APIs. reply ptspts 54 minutes agorootparentPython stdlib conveniently supports both byte strings and Unicode strings, even for regexps. Ther is no need to migrate to any other language. reply umanwizard 5 hours agoparentprevWhat is your definition of \"string\"? If it's \"human-readable text\", then fine, a string is not the same thing as an arbitrary byte array. But lots of languages don't enforce that definition. reply bobbylarrybobby 5 hours agorootparentWell that's the very thing: not enforcing that distinction is the very mistake in question. reply michaelsbradley 5 hours agoparentprevGiven the nature of it (pretty.c) and the stated intention of being \"backwards-compatible with C and all of its libraries\", what would make more sense than sticking with C's multibyte strings? https://en.cppreference.com/w/c/string/multibyte reply samatman 3 hours agoparentprevI don't agree. This doctrine presumes all of the following: - String data will be properly encoded - There is one encoding of strings (UTF-8 usually) - Validation must occur when string data is created - Truncating a logical codepoint is never acceptable - You may not do string things to \"invalid\" bytes - Proper encoding is the beginning and the end of validation None of these things are consistently true. It's a useful practice to wrap validated byte sequences in a type which can only be created by validation, and once you're doing that, `Utf8String` and `EmailAddress` are basically the same thing, there's no reason to privilege the encoding in the type system. reply Alifatisk 7 hours agoprevIf you find this interesting, you might like libcello.h aswell! https://www.libcello.org reply aartaka 5 hours agoparentYes, it's one of the inspirations! reply shakna 9 hours agoprevWell, there's a few things I should probably get around to adding to CNoEvil[0] and ogw[1]... There always seem to be more every few months when this project reappears. [0] https://git.sr.ht/~shakna/cnoevil3/ [1] https://git.sr.ht/~shakna/ogw reply gpuhacker 12 hours agoprevReminds me of a C++ codebase I once had to inspect that was entirely written as if it were written in Java. With camelcase naming for everything, getters and setters for every class variable, interfaces everywhere. reply jart 11 hours agoparentYou ain't seen nothin. Check out the bourne shell source code from unix seventh edition. https://minnie.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd... I can't believe it's not ALGOL. reply froh 11 hours agorootparenthttps://minnie.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd... wow. thanks for this gem. reply teruakohatu 11 hours agorootparentprevWow, I was not expecting that! Was this style of C common back then? Before he wrote the Bourne shell the author wrote an ALGOL compiler, and ALGOL inspired Bourne syntax: https://en.wikipedia.org/wiki/ALGOL_68C reply pasc1878 11 hours agorootparentThere were article suggesting #define BEGIN { and #define end }; to make C look more like Pascal. I think in Europe C was not as common as other languages at the time so the terseness looked odd. reply pavlov 10 hours agorootparentAlso because the special characters were (and are) difficult to type on European keyboards. Characters like []{}\\|~ are behind multi-finger access and often not printed at all on the physical keys (at least in the past). You can see how this adds a hurdle to writing C… Pascal was designed by a European, so he preferred keywords which could be typed on every international keyboard. C basically just used every symbol from 7-bit ASCII that happened to be on the keyboards in Bell Labs. reply smatija 9 hours agorootparentJust as example, on my slovenian QWERTZ layout: [ - altgr+f, ] - altgr+g, { - altgr+b, } - altgr+n, \\ - altgr+q,- altgr+w, ~ - altgr+1. You get used to them, though you start feeling like a pianist after a short coding session. The one most annoying for me are the fancy javascript/typescript quotes, which I have to use all too often: ` - altgr+7. reply ulbu 8 hours agorootparentToday I learned that there exist people who use non-US layouts when coding. That’s spectacular! reply smatija 8 hours agorootparentI tried switching to US a few times, but every time muscle memory made me give up soonish - especially since there are big benefits to using same keyboard layout as other people in your office are using. Also practically everytime I need to write a comment, commit message or email I need my č, š and ž. It's kinda nice to have them only a single keypress away. reply oezi 8 hours agorootparentMy hack: use caps key to switch to local keyboard layout while holding it. reply dagw 6 hours agorootparentLove it! I use ctrl+space to switch, but your idea sounds even better reply cryptonector 2 hours agorootparentprevSpectacular?? Terrifying. If I need to type non-ASCII Latin characters I'll just use compose sequences. The thought of a non-U.S. keyboard layout with modifiers required to type []{} and so on is terrifying. reply pavlov 8 hours agorootparentprevHow did you think people outside the US learn programming? reply anthk 7 hours agorootparentsetxkbmap us -option ctrl:swapcaps -option compose:rwin Problem solved. US layout, and with the right Window keys you can compose European characters. reply pavlov 7 hours agorootparentThere’s so many assumptions here about a person who’s starting to learn programming. For starters, that they’re on Linux, they feel comfortable running complex CLI commands, they can memorize the U.S. layout just like that, and that they can type without looking at the physical keys (because changing the virtual mapping means keys produce something else than what the label says). In reality, the learner’s first exposure to C family languages is more likely to be a website where you can run some JavaScript in a text box. And the first hurdle is to figure out how to even type {}. American developers just completely forget about that. reply anthk 7 hours agorootparentOn the long term, using the native keyboard hinders yourself a lot. I tried to do so with the Spanish (es) layout, it's pretty much unergonomical. It's looks like being deliberately designed for press/office usage and not for proper programming. reply pavlov 5 hours agorootparentI’ve been writing C and its progeny (C++, JavaScript, Rust etc.) since 1990 on a Finnish keyboard. The AltGr brackets are fine. The truly annoying character to type is the backtick (which is a quite new addition to the pantheon of special characters, C doesn’t use it). My personal opinion is that Niklaus Wirth had the better overall ideas about clarity and inclusiveness in programming language design, but that battle is long lost. (What you consider the character set needed for \"proper programming\" is really a relatively new development, mid-1990s and later.) reply schoen 4 hours agorootparentBackticks were fairly important for shell scripting in the past, but have officially been replaced with $(), which can be nested. My intuition is that Perl would be the most challenging on a keyboard where it's harder to type unusual punctuation, since it feels like a very punctuation-heavy language, but I don't know whether it actually uses more than C (I think the backtick has a shell-style meaning in Perl too). reply psychoslave 3 hours agorootparentprev>it's pretty much unergonomical. Well unless opting for something like Dvorak, you are indeed doomed to something that was specificcaly designed to please typewriter mechanical constraints without much care for the resulting ergonomics. I use a Bépo layout personally, on a Typematrix 2030 most of the time, as French is my native language. reply SSLy 6 hours agorootparentprevor maybe popular proglangs were designed for writing on USAn press/office keyboards – remember that UNIX came to be as a typesetting appliance — disregarding anyone else. reply fuzztester 4 hours agorootparentprevIIRC, Pascal had/has (* and *) as an alternative to { and } , from the start, or from early on - as syntax for start comment and end comment. reply rauli_ 8 hours agoparentprevI've seen similar codebases as well written by people who have spent way too much time with Java. One even had it's own String class which was just a wrapper for std::string with Java-like methods. reply bpye 11 hours agoparentprevGood job they weren't using MSVC I guess... https://learn.microsoft.com/en-us/cpp/cpp/property-cpp?view=... reply worstspotgain 11 hours agoparentprev> camelcase naming for everything, getters and setters for every class variable, interfaces everywhere This is not far off from the guidelines in many cases, e.g. Windows code (well, not every variable of course.) A lot of Java design was copied from C++. reply pasc1878 11 hours agoparentprevI had that as well but also Java passes strings in as f(String *) so the C++ code was f(new String(\"Hello\") reply shortrounddev2 6 hours agoparentprevI think that's just OOP reply aartaka 6 hours agorootparentYou might like https://aartaka.me/oop-c reply tromp 11 hours agoprev> ifnt for if(!...). \"unless\" seems more readable than \"ifnt\". reply tux3 11 hours agoparentAnother bikeshed is the infinite for(;;) loop being called \"always\" I've seen \"loop\" in other languages. But Qt calls it \"forever\", and that is indeed very pretty. Very Qt, even reply poincaredisk 11 hours agorootparent#define ever ;; for(ever) {} reply codetrotter 8 hours agorootparent#define never ;0; for(never) {} reply teruakohatu 11 hours agorootparentprev> I've seen \"loop\" in other languages. But Qt calls it \"forever\", and that is indeed very pretty. Very Qt, even You can break a \"forever\" loop so I think \"loop\" is a better name. reply wwalexander 10 hours agorootparentI don’t know why “repeat” isn’t very common in place of while/loop/etc; it works out nicely grammatically. repeat {} repeat while{} repeat {} whilerepeat{} reply af78 9 hours agorootparentOne possible reason: > The word \"REPEAT\" should not be used in place of \"SAY AGAIN\", especially in the vicinity of naval or other firing ranges, as \"REPEAT\" is an artillery proword defined in ACP 125 U.S. Supp-2(A) with the wholly different meaning of \"request for the same volume of fire to be fired again with or without corrections or changes\" (e.g., at the same coordinates as the previous round). https://en.wikipedia.org/wiki/Procedure_word#Say_again More seriously, PASCAL has repeat-until loops, similar to do-while loops in C. reply aartaka 8 hours agorootparentprevPretty C does aliases \"repeat\" for \"do\", so yeah, I've got you covered! reply krylon 9 hours agorootparentprev\"indefinitely\" might be a better name. (But I think loop is indeed a better name.) reply aartaka 8 hours agorootparentAdded in commit ef510ca! reply aartaka 8 hours agorootparentprev\"loop\" added in commit 626408b, thank you! reply aartaka 8 hours agorootparentprev\"forever\" added in commit 67ff9ef, thank you! reply aartaka 8 hours agoparentprevIndeed! But I've reserved \"unless\" for a ternary conditional, which is more useful anyway. Oh shit wait, you're John Tromp, BLC creator! I'm a fan! reply textread 13 hours agoprevIs it possible to tangle the Readme into pretty.h? In other words, are the codeblocks in the orgfile exhaustive. I love the literate way you have explained your thought process in the readme. reply aartaka 7 hours agoparentYes, code blocks in Org are executable, but I was aiming for simple embedding and zero build-time, thus conservative choice of separating README and the actual header. reply yjftsjthsd-h 13 hours agoprevI have not decided how I feel in general, but: > Everyone defines these, so why not provide them? Honestly, that's fair. reply dymk 13 hours agoprev> turn any codebase into a beginner friendly one Okay then. I was hoping to see a “this is just for fun” disclaimer but didn’t see one. Please never actually use this in a project that other people will have to read or contribute to. reply ipsum2 13 hours agoparent> Provide so much syntactic sugar as to cause any C developer a diabetes-induced heart attack. seems like its obvious to me that its a joke reply rebolek 12 hours agorootparentIt's a joke that I would happily use. reply AnthonBerg 9 hours agorootparentC is funny, in many ways. reply aartaka 7 hours agorootparentprevYou're welcome! reply thiht 7 hours agoparentprevNot everything needs to be stated explicitly, where's the fun in that? reply TheRealPomax 3 hours agoparentprevNo promises, people who want to have fun are going to have fun despite requests not to have fun. reply mydriasis 14 hours agoprevWow, neat! The wildest part to me is > And it’s backwards-compatible with C and all of its libraries! I can't wait to give it a shot! This looks like a riot. reply geon 12 hours agoparentHave you heard of Zig? reply oguz-ismail 12 hours agorootparentIt requires a different compiler. This is just a collection of C preprocessor macros reply ptspts 44 minutes agorootparentThe Zig toolchain can compile both Zig and C. reply klardotsh 20 minutes agorootparentYes, but the Zig toolchain is not $YOUR_EXISTING_C_COMPILER_YOU_ALREADY_KNOW_AND_USE reply stankot 2 hours agoprevThis reminded me of ArnoldC https://lhartikk.github.io/ArnoldC/ reply nanis 8 hours agoprev> if (argc above 1) I give up. reply aartaka 7 hours agoparentYou're welcome! reply lpapez 12 hours agoprevAll that is missing is a garbage collector. Should be possible to implement one by overriding malloc & friends? reply vidarh 10 hours agoparentYou can use the Boehm-Demers-Weiser GC with C. It's conservative, because it has to be with C, so it may/will miss things (it will treat integers etc. as potential pointers, and so avoid freeing anything \"pointed to\" by them), and so it works best as an extra layer of protection/leak detector, but it can be used as a replacement for freeing memory too. reply taylorius 5 hours agoprevSorry for what is probably a stupid question. Does pretty.c act as a preprocessor or sorts, converting your pretty.c script into actual c, that is then compiled? Or is it a virtual machine that interprets your pretty.c script? reply aartaka 5 hours agoparentIt's a set of C Preprocessor macros, so you don't even need to somehow process the code—you just #include the header and hack away as if it was regular C! reply designed 5 hours agoparentprevPreprocessor of sorts. From the readme: The goals for Pretty C are: - Provide so much syntactic sugar as to cause any C developer a diabetes-induced heart attack. - Deprecate Lua, Python, JavaScript, Ruby and a dozen other languages, because Pretty C is the ultimate scripting language, but lightning-fast and strongly typed! - Including only one header (yes, Pretty C is a header-only library #include-able from arbitrary C file!) to turn any codebase into a beginner friendly one. reply wffurr 4 hours agoparentprevIt’s not a preprocessor or compiler. There’s no binary. It’s just a bunch of C code in a header: macros, functions, etc. that you can use to write different looking programs but that are still C. reply dfox 7 hours agoprevThe code asumes that C17 has C++-style auto (https://github.com/aartaka/pretty.c/blob/master/pretty.h#L11...), it does not (in C auto is storage specifier that is equivalent to no storage specifier). reply aartaka 7 hours agoparentC17 doesn't have auto, but C23 does, and thus my `__STDC_VERSION__ > 201710L` (notice the greater than sign, it doesn't include C17 itself.) reply dfox 7 hours agorootparentHa, apparently the N2310 working draft is not the last one :) reply DeathArrow 11 hours agoprevThis should have been invented 50 years ago! reply aartaka 7 hours agoparentYes, and it's a shame that underlying features were only shipped in C11 (generics) and C23 (auto type inference!) reply throwaway19972 10 hours agoprevDoes \"strong typing\" now just mean \"static typing\"? Afaik both lua and python are already strongly typed. Javascript is not and I have no clue about ruby. reply lelanthran 8 hours agoparent> Does \"strong typing\" now just mean \"static typing\"? The distinction strong and weak typing is irrelevant in practice. Weak (but present) static typing beats strong dynamic typing every single time, because what is valuable is NOT \"Do I see a type mismatch error only when a user accesses it?\", it's \"does this mismatch prevent a deployment?\" IOW, the only distinction in production is dynamic typing vs static typing, not strong typing vs weak typing. reply throwaway19972 4 hours agorootparent> because what is valuable is NOT \"Do I see a type mismatch error only when a user accesses it?\", it's \"does this mismatch prevent a deployment?\" I argue that understanding the semantics clearly and unambiguously is the most relevant thing, and strong typing tends to do that better (imho—with my only other examples being javascript and the \"stringly-typed\" perl and some random irrelevant BASIC dialects). > Weak (but present) static typing beats strong dynamic typing every single time, Can you give me an example? I don't think I've ever heard of such a thing. The closest I can think to this is maybe, arguably, the use of `void*` pointers in C which is difficult to see as anything other than pragmatism rather than some deeply beneficial way to write code—even explicit casts produce much more readable code. Another argument I could see is for operator overloading, which (IMO) produces much less readable code, or the implicit conversions feature of Scala (which also, IMO, produces less readable code, but they've addressed a lot of the major problems with it). reply syrrim 2 hours agorootparentprevrecommend setting up tests for your code s/t failures block deployment. can catch categories of bugs beyond typing errors reply OsrsNeedsf2P 13 hours agoprevThis is terrifying reply aartaka 7 hours agoparentThanks! reply Validark 12 hours agoprevEvil, yet beautiful. Hats off to you. reply aartaka 7 hours agoparentThanks! reply varjag 11 hours agoprevThis made me immediately think whether MIT Loop of Common Lisp was an inspiration here. Checked the user's profile and sure enough, a lisper! reply aartaka 7 hours agoparentYes, LOOP is a huge inspiration and my favorite programming language! reply ipsum2 13 hours agoprev`equal(0.3, 0.2 + 0.1); // true` how is this wizardry possible? reply masklinn 12 hours agoparentIt uses type dispatch to perform an epsilon comparison: static int pretty_float_equal (float a, float b) { return fabsf(a - b)The goals for Pretty C are: > Provide so much syntactic sugar as to cause any C developer a diabetes-induced heart attack. :-D reply spacedcowboy 5 hours agoparentAs someone who just got diagnosed with type-1 diabetes (the auto-immune variety, not the “you eat too much sugar” variety), this was far more depressing than funny. I’m probably being overly-sensitive, but man my life has gone to shit in the last couple of years… reply w4rh4wk5 9 hours agoprevI've seen this implementation of defer a few times now. I really dislike calling this defer (like the keyword in Go) as the given code won't be executed on return. reply aartaka 7 hours agoparentScoping defer to a block is actually more useful and explicit than function-exclusive that Go does, so I consider that a feature. reply w4rh4wk5 4 hours agorootparentNo no, I think you misunderstood my critic. Defer working on block-scope is fine; however, if I exit the block through a return (or break), the deferred function is not called. To my knowledge, you need a compiler extension to implement this in C (or use a C++ destructor). reply leetsbehonest 11 hours agoprevThat is pretty cool reply jay-barronville 4 hours agoprevThis project looks really cool! Unfortunately, there’s just way too much magic involved. In my humble opinion, C is simply not the language for this level of magic—extreme use of macros (and hidden behavior in general) is how you end up with hard-to-detect (and hard-to-debug) bugs and security vulnerabilities. As cool as this project looks, I’d never feel comfortable using it in anything serious. A+ for the effort though! reply mjan22640 5 hours agoprevAre variadic macros turning complete? reply ay 5 hours agoparentYes. https://github.com/rofl0r/chaos-pp reply bitwize 13 hours agoprevI'm reminded of the guy who did #define BEGIN { #define END } and a whole bunch of other macro-larkey just to make C look more like Pascal. Only then would he deign to code in it. reply epcoa 12 hours agoparenthttps://en.wikipedia.org/wiki/Stephen_R._Bourne https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh reply sph 12 hours agorootparentNow that's just silly. And I see the backwards keyword terminators (LOOP/POOL). I have wondered why we have case/esac, if/fi but while/done. I imagine the author himself figured that while/elihw would just be entirely ridiculous. reply giucal 8 hours agorootparent> I have wondered why we have case/esac, if/fi but while/done. With the reverse-keyword convention we'd get \"od\", not \"elihw\", though. while ... for ... do do ... ... od od The 'od' utility already existed, apparently, so Bourne opted for \"done\". [edit: typos] reply pavlov 10 hours agorootparentprevJust call it wyl/lyw. Pronunciation maintained, problem solved. reply pipeline_peak 5 hours agoprevFor each looks convoluted, you shouldn’t have to list the type. It should be no harder than C#’s foreach(var i in list) reply aartaka 5 hours agoparentIndeed, I might need to revisit foreach with type inference. Should be totally possible. reply azinman2 13 hours agoprev> Deprecate Lua, Python, JavaScript, Ruby and a dozen other languages, because Pretty C is the ultimate scripting language, but lightning-fast and strongly typed! Umm… that’s quite the goal. I’ll stick with deprecated Python. reply fancyfredbot 9 hours agoparentDeprecate Python?! You'll have to deprecate me first! ;-) reply psychoslave 7 hours agorootparentWe will all reach this status at some point, though the silly code we produced might stick a bit longer in some legacy codebase. :D reply Uptrenda 12 hours agoprevType names are nice; Perfect choice for the in-built func macros (like min); Len -- love it. Named boolean operators -- might be a bit much but go for it; Ternaries are illegible so you can only improve them; Not completely sold on all your loop definitions but some make sense to me; Resource tracking is impressive; The for... look a bit ugly -- could probably call it something else. All in all: quite a solid attempt. I'll give you 8/10 for the design of this. The way you sketched this out in C using macros is really elegant. This actually looks like good code. Would I use it? It's a new language and I like C already. It could help people learn C and think about language design. Since the way you've done this is very clear. reply aartaka 7 hours agoparentWell, you don't have to use it all. My projects mostly use booleans, len(), max/min, and some operator aliases, because there wasn't much need for other tasty stuff yet. So give it a shot, even if for a couple of operator macros! reply Uptrenda 7 hours agorootparentYou know I expected your macro file to be unreadable moon math. But it actually doesn't look bad. reply jcmontx 5 hours agoprevdoes this transpile to C or how does it actually work? reply looopTools 13 hours agoprevI cannot wait to show this to a colleague of mine. He will kill me XD reply aartaka 7 hours agoparentCan't wait to learn of how it went! reply nicman23 10 hours agoprevas someone that just started C, it looks pretty :) reply aartaka 7 hours agoparentThanks! reply fnord77 8 hours agoprevI feel like this would have been cool 25 years ago reply swiftcoder 11 hours agoprevThis is as horrific as it is wonderful. reply aartaka 7 hours agoparentThanks! reply pineaux 9 hours agoprevI feel compelled to try it out in a serious way and contribute to it. I have strong knowledge of python and am learning C. Are there good reasons -apart from attracting the ire of c-programmers- to not use it? reply aartaka 7 hours agoparentAuthor here. I'll be glad to accept any contribution that makes C more readable, so PR away! reply chris_wot 4 hours agoprevI’m waiting for someone to write a lambda calculus based C++ library that allows everything to be defined in terms of function. Peano axioms and all. reply revskill 5 hours agoprevOr just use Ruby. reply MrLeap 11 hours agoprevlove. It. reply aartaka 7 hours agoparentThanks! reply SuperHeavy256 11 hours agoprevSo sweet :)) reply aartaka 7 hours agoparentYeah, I love sugar ;) reply ngcc_hk 11 hours agoprevCan we just pascal? reply aartaka 7 hours agoparentI won't stop you, so be my guest. reply unwind 11 hours agoprev [–] Meta: the naming is ... strange. The actual name of the repo is \"pretty.c\", but the name used for the language/dialect/result/horrorshow[*] is \"Pretty C\". The actual code file you include is called \"pretty.h\", which makes sense since it's a header, of course. Confusing! Edit: escapes. [*] Yes, I'm a C programmer, currently hunting for black-marked insulin to combat the rapid-onset diabetic attack from all that sugar. Sorta. reply nneonneo 11 hours agoparent [–] I mean, don’t say the repo didn’t warn you! > The goals for Pretty C are: Provide so much syntactic sugar as to cause any C developer a diabetes-induced heart attack. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Pretty C is a new scripting language designed to enhance C programming by adding dynamic typing, generic iteration, and resource tracking, while maintaining compatibility with C and its libraries.",
      "Inspired by languages like Lua, Python, JavaScript, and Lisp, Pretty C introduces features such as type inference, generic printing, and enhanced for loops to simplify C programming.",
      "The language is easy to integrate into existing C projects, requiring only a single header file, and offers utilities like type aliases, new operators, and macros for common operations and error handling."
    ],
    "commentSummary": [
      "Pretty.c is a GitHub project by aartaka that introduces syntactic sugar to C, making it more similar to languages like ALGOL, with the goal of simplifying C code for beginners.- The project includes macros and functions to maintain compatibility with existing C libraries, sparking discussions about scripting languages, typing, and macro usage in C.- While some users find the project intriguing, others question its practicality for serious projects, as it draws inspiration from languages like Lisp to offer a fun, alternative way to write C code."
    ],
    "points": 305,
    "commentCount": 178,
    "retryCount": 0,
    "time": 1729738918
  },
  {
    "id": 41928529,
    "title": "Playstation Vita Architecture (Part 1)",
    "originLink": "https://www.copetti.org/writings/consoles/playstation-vita/",
    "originBody": "Supporting imagery Model Motherboard Original Slim TV The PlayStation Vita (model PCH-1000). Released on 17/12/2011 in Japan, 12/02/2012 in America and 22/02/2012 in Europe. A quick introduction The PSVita is a noteworthy intersection between the video-game establishment and the rapidly evolving mobile sector. Times have changed, and it won’t be easy for Sony as it faces fierce competition from cheap gadgets that do more than just make phone calls. The new analysis of this series dives into the contemporary technology behind Sony’s new delivery. Do expect to find recognisable circuitry - perhaps too familiar. Even so, Sony made clear efforts to steer away from any resemblance to the smartphone market. Models and variants As the console sat on store shelves, Sony revisited its product strategy multiple times, leading to three variants of the PSVita being shipped throughout its lifecycle: The original PSVita (sometimes called the ‘Fat’ model) is the series debut. The Slim revision retains the same architecture, but exchanges the OLED screen for an LCD to reduce costs. Furthermore, it doesn’t offer a 3G-capable variant anymore. It does, however, feature a bigger eMMC chip… only 52 MB larger! For some strange reason, that was enough to provide an internal 1 GB memory card. In any case, I’ll explain more in the ‘Games’ section. The PlayStation TV is just a Slim motherboard adapted for the non-portable setting. As you can see, the information in this article will easily apply to all three models, although I will dedicate extra paragraphs to talk about the puzzling eMMC changes of the last two variants. A new publishing model Until now, my delivery model involved finishing the whole analysis and then publishing a complete article at once. However, as I continue studying the 8th generation, my articles have considerably grown in complexity. They tend to take almost a year to finish, and the review process has become too cumbersome. Thus, for a change, I’d like to try a new phased approach where I publish by sections instead, starting with the CPU. This will also make the reviewing stage more efficient. Having said that, let’s start with the first section. CPU Sony had been an avid adopter of MIPS technology since the original PlayStation. Even at times when SGI/MIPS was losing market share in the late 90s, Sony shipped a successful product carrying MIPS’ revamped line. However, the next decade proved bitter: ARM managed to monopolise the mobile market and MIPS’ adoption only diminished. Thus, Sony ultimately put their faith in an ARM CPU instead, and Toshiba (Sony’s close manufacturing partner) would now play the role of ARM licensee. The resulting motherboard only houses a handful of integrated circuits, but they package a mix of designs authored by different companies. The main chip is called Kermit [1] (a name borrowed from ‘The Muppets’), it features the largest amount of circuitry, and it’s where the main CPU resides. The Kermit chip in the original PSVita model. This tiny block houses multiple CPUs, GPUs and ~640 MB of RAM… how far we’ve come! Now, while Kermit is considered a System-On-Chip (SoC), it exceptionally manages to combine large amounts of memory and processors within the same package. This is thanks to Toshiba’s Stacked Chip SoC (SCS) fabrication model [2]. Within it, circuitry is piled on top of others - as opposed to being externally connected side-by-side. The direct consequence is an increase of bandwidth and a reduction of surface footprint, at the cost of a more complex heat dissipation design. In any case, SCS fabrication enabled Sony and Toshiba to fit cutting-edge technology while maintaining an energy-efficient profile, just look at all the components Kermit houses: The main CPU, a quad-core ARM Cortex-A9 MPCore. The main GPU, a PowerVR SGX543MP4+ by Imagination Technologies. Many accelerators (some proprietary, others off the shelf), including an ‘AVC Decoder’, DMA Controllers, a large DSP and security blocks (which includes hidden ROM space). Around 640 MB of RAM (split into multiple types). Last but not least, legacy PlayStation Portable circuitry (the MIPS CPU and the Graphics Engine). …and throughout this article we’ll take a look at each of those! The main CPU Our new study subject is the ARM Cortex-A9 MPCore, a very mature processor from ARM Ltd. To make this study captivating and help understand all the technological progress since my last analysis of the ARM11 CPU, I’d like to begin with an overview of the new ‘Cortex’ line. Then, a quick look at the Cortex-A8 (the predecessor of the A9). Finally, the novelties of the Cortex-A9. Continued history The Game Boy Advance housed an ARM7TDMI. The Nintendo DS housed an ARM946E-S and ARM7TDMI. Past System-on-Chips (SoCs) housing iconic ARM CPUs. ARM has come a long way since the days of the Game Boy Advance, to recall its significant milestones: The ARM CPU was conceived as a replacement of the MOS 6502 CPU for Acorn’s computers, later reaching maturity thanks to Apple’s input. The ARM7TDMI paved the way for success in the embedded market. At the same time, competitors across the pond chose to avoid any mobile venture. The subsequent StrongARM/ARM9 line granted the company a spot in the performance sector. As the competition faded, the new ARM11 line demonstrated this CPU could now partake on 3D applications. The next achievement would become Cortex: a new brand carrying a revised instruction set and processor line. This time, ARM would adopt practices traditionally found in the desktop/workstation market, eventually coming heads-to-head with Intel’s x86. Curiously enough, Cortex’s marketing strategy is very similar to Intel’s Pentium, in the sense that the name ‘Cortex’ ultimately becomes an ambiguous term to hide the complicated identifications and variants of all its chips. The Cortex line-up With the announcement of Cortex as a brand, ARM’s product line diversified into three distinguishable sectors: industrial, performance and embedded. Thus, any Cortex CPU would be fitted into a ‘profile’ (Cortex-R, Cortex-A and Cortex-M, respectively), each targeting one of these markets. For this study, we’ll focus on the Cortex-A line, which focused on performance or ‘applications’ (in other words, user devices); and made a profound impact on smartphones. Some smartphones from the Cortex-A8 generation. From left to right: iPhone 3GS (2009), Nokia N900 (2009), Palm Pre (2009) and Nexus S (2010) ARM’s first delivery for ‘applications’ was the Cortex-A8 CPU. It shipped in 2005, but it wasn’t until four years later that smartphones started adopting it. The iPhone 3GS, Motorola Droid and Nokia N900 were its debuting flagship carriers. Be as it may, the CPU can’t work by itself, so these devices relied on Samsung and Texas Instruments to package all the necessary modules into a SoC (combining the CPU with the GPU, modem and other I/O). It’s worth mentioning that the Cortex CPU was also a decisive choice for manufacturers finally making the jump from Intel’s XScale, such as RIM and its Blackberry line. On the other side, certain smartphones like the Toshiba TG01 and the HTC HD2 only adopted Cortex’s technology partially (they implement the same instruction set, but its microarchitecture was designed by Qualcomm instead). Notice that these devices also coincide with a certain time when users considerably changed their attitude towards smartphones: these were initially trusted for trivial tasks such as text messages and e-mail, but now they were starting to provide access to bank accounts, with only a few years behind bringing contactless payments. More news Along the Cortex-A8 came the ARMv7 instruction set. This is the continuation of the ARMv6 ISA by expanding its multi-processing and SIMD capabilities [3]. ARMv7 is the longest-living 32-bit ISA from ARM, but also the last one. Its wide-spread adoption would still be highly fragmented, mainly due to the split of Cortex into the aforementioned profiles (spawning different subsets of the ISA), existing adoption of the ARMv6 (i.e. the first Raspberry Pi and Nokia’s Symbian platform only supported ARMv6) and the enlargement of Thumb. To avoid making this topic too dense, I’ve dedicated different sections further down to discuss these. The core So far I’ve talked about the Cortex-A8, that’s the first Cortex CPU. But the PSVita actually bundles the succeeding CPU, the Cortex-A9 (released two years later, in 2007). It’s curious to see that this console was just a few months apart from the Nintendo 3DS, a console designed with horizontal innovation in mind. Moving on, the full name of the PSVita’s CPU is ARM Cortex-A9 MPCore. Overall, this means the CPU is a cluster made of multiple Cortex-A9 cores, four in this case. It runs at a clock speed of up to 500 MHz [4], an underwhelming number considering contemporary adopters of the quad-core A9, such as the Samsung Galaxy S III, reached speeds of 1.4 GHz [5]. It’s possible that battery life was the main priority here. Nevertheless, clock speed is not the only decisive measurement, the inner workings of the CPU are as important. Cortex-A9 ARM11 Overview of the PSVita’s Cortex-A9 MPCore CPU. ‘Falcon’ is the codename of the Cortex-A9 core. Speaking of which, the new cores share many characteristics with their predecessor, the Cortex-A8, which includes [6]: The next-generation instruction set called ARMv7-A, I explain more details further on. 64 KB of L1 cache which inherently follows the Harvard architecture. Consequently, it’s divided into 32 KB for data and 32 KB for instructions. Cache coherency among the cores is automatically handled by the Snoop Control Unit, previously featured in the ARM11MpCore. 2-issue superscalar: For the first time, ARM has brought instruction-level parallelism. This means that, as long as there are no hazards, the CPU will try to execute two instructions using two separate pipelines. This increases the amount of instructions executed per clock cycle. MIPS and SuperH brought this a decade before, but the two suffered a quick demise, so it’s now ARM’s turn to carry it forward. Dynamic branch prediction: The CPU now predicts the execution path by relying on two dedicated buffers while fetching instructions. The first anticipates whether an upcoming instruction will be a branch, and the next buffer maps the previous flow of the program. Finally, the latter is used to predict whether upcoming branches will be taken or not [7]. It’s worth mentioning that this unit only predicts branching instructions, omitting other optimisation techniques such as conditionals or the IT instruction… Maybe that’s a hint about the future of the ARM ISA. A Memory Management Unit (MMU) with a Translation Lookaside Buffer (TLB). This is already typical on most CPUs. By the way, in the case of the Cortex brand, only the ‘Cortex-A’ profile includes this package (the ‘Cortex-R’ bundles an MPU instead and the ‘Cortex-M’ includes neither). TrustZone: A new security subsystem that adds a dimension to the privilege levels of the MMU. It’s implemented on both the hardware level (by segregating buses between non-secure and secure peripherals) and the software level (by executing a secondary and isolated operating system that handles confidential data). The special OS is called Trusted Execution Environment. The OS model of TrustZone reminds me of the isolated SPU of Cell. NEON Media Processing Engine (MPE), a new co-processor that carries out vector and floating-point operations. We’ll dive more into it in the next sections. Now, the Cortex-A9 (found in the PSVita) improves the original design by applying significant enhancements [8]: Multi-core support. This is most evident by looking at Sony’s choice of a quad-core package. As a side note, this also explains why portable devices like the iPad 2 and iPhone 4s (both carrying an A9) managed to debut a dual-core CPU. Out-Of-Order execution through the use of register renaming. This is a huge step for ARM in further scaling its Instruction level parallelism, considering other chips like PowerPC were forced to abandon it. This will also have a profound effect on the evolution of the ARM instruction set. You will see this in a future analysis of the Nintendo Switch. A variable-length pipeline, between 8 and 11 stages depending on the operation. The total number may also increase if execution continues in the multimedia co-processor (explained in the next section). Moreover, Sony customised the package by adding one of ARM’s upgrades called Primelink Level 2 Cache Controller along with 2 MB of L2 cache shared among all cores [9]. Primelink is a flexible cache subsystem which can be programmed with different types of cache associations, from direct mapping to 16-way. If you are curious, years later ARM renamed the Primelink brand to ‘CoreLink’ [10]. The grown-up ISA The ARMv7 instruction set in the Cortex-A9 features a multitude of extensions. The majority of changes will be in the form of SIMD capabilities and multiprocessing, you’ll notice this when we take a closer look into the novelties of the ARMv7. A quick glance Overshadowing features ARMv7 is a superset of the ARMv6 ISA. Its additions can be grouped into four areas: VFPv3, NEON, Security Extension and multi-processing. I explain each further down. Moreover, the alternative Thumb ISA (previously enhanced with Thumb v2) has undergone a major revision called Thumb-2. Truth to be told, it already debuted on embedded ARMv6 CPUs (implementing the ARMv6T2 variant), but it has now become a standard on the Cortex-A line. On the other side, it’s worth mentioning that Thumb-2EE, the successor of the deprecated Jazelle, has been left unused or even excluded from many Cortex-A CPUs. I don’t think the Vita’s SoC even bothers implementing this. If you want an idea of its adoption back in the day, let me tell you that Dalvik (Android’s Java interpreter, to put it simply) didn’t even bother using Jazelle/Thumb-2EE at all. That tells you the general attitude towards ARM’s Java efforts. Next » More accelerators The most notable component of the Cortex-A9, in particular for the PSVita, is the Media Processing Engine (MPE). This is ARM’s new coprocessor for 3D applications. It’s been engineered in a very convoluted way, however, as it executes two different but related instruction sets: The Vector Floating-Point v3 (VFPv3): A continuation of VFPv2 for floating-point capabilities. It’s IEEE-754 compliant and now extended to provide instructions like VCVT (to convert between fixed-point and floating-point values) and VMOV (to transfer values between the CPU and the FPU register file). This is helpful since the VFP only understands 32-bit and 64-bit floating-point values. The exact variant included in the Cortex-A9 is called ‘VFPv3-D32’, meaning it includes thirty-two 64-bit registers. Even though this ISA contains the word ‘vector’, ARMv7 deprecated the use of the vector instructions and the Cortex-A9 includes none [13]. So much for being called a ‘vector FPU’… The NEONv1, also known as ‘ARMv7 Advanced SIMD’, is the real vector instruction set, enabling to operate multiple scalars at once. NEON provides sixteen 128-bit registers, which can be also split into thirty-two 64-bit or 32-bit ‘virtual’ registers. The integers being operated may be as big as 64 bits, while floating-point types can’t surpass 32 bits. It’s worth reminding that Sony’s predecessor vector unit provided the immense amount of 128 registers, albeit 32-bit instead. If we do the math, the Cortex-A9 MPCore manages to match that number. Although, only 16 registers are accessible per core, and forget about the matrix-type addressing that made the VFPU special and efficient. On the bright side, perhaps there’s a new optimisation opportunity by having multiple cores compute SIMD instructions in parallel. NEON and VFPv3 share the same register file, but they’re still considered separate ISAs. Considering ancestral processors like the SH-4 delivered SIMD operations by simply extending its FPU, one can only wonder why ARM ended up producing two distinct ISAs. Well, the explanation is simple: neither is feature-complete. Particularly, VFPv3 doesn’t support fixed-point while NEON is not compliant with the IEEE 754 standard [14]. So, as an intermediate solution, the circuitry was segregated. The Dell Axim X51v (2005). This high-end PDA carried an Intel XScale PXA270 CPU, compatible with the ARMv5 ISA but also bundles proprietary SIMD extensions, which were only available on Intel’s CPU line. This conflicted with ARM’s business model. In response, ARM presented the NEONv1 set. By the way, this device also houses a PowerVR MBX GPU, which is related to the graphics chip of the PSVita. All in all, this means the compiler will need to work harder optimising the code, but it still makes you wonder why ARM’s engineers ended up complicating things to absurd levels. In my opinion, I believe NEON was rushed to rapidly counter Wireless MMX (Intel’s proprietary SIMD extension for the XScale, released a year before) as ARM didn’t enjoy seeing Intel bundling exclusive instructions only available on the XScale [15]. This is also complemented by the fact the official documentation on Cortex’s timings was hurried as well [16]. The master bus Another popular product from ARM, the AMBA protocol designed for interconnecting components, carries forward with the Cortex-A9. Still in its third revision, the AXI subset was selected for interfacing the cores and external components outside the MPCore cluster. Curiously enough, it’s the same choice found in the ARM11 and its well-known adopter, the Nintendo 3DS. Envisioning the future After the Cortex-A9, the line of succession became increasingly confusing. The Cortex-A series was broken down into four more categories, ranging from the top performer to the most energy-efficient. In doing so, the model numbering of each CPU became absurdly difficult to follow, but I guess it didn’t matter for the end user because these CPUs weren’t sold off-the-shelf! The next big milestone for ARM will debut in 2011, with the arrival of ARMv8. I’ll talk more about this in a future article about the Nintendo Switch. Media coprocessors Next to the ARM cluster, Sony bundled a couple of accelerators that support gaming-related tasks. Just like the previous Media Engine group, they are completely proprietary and act as a black box. Programmers are not meant to fiddle with them directly but through the official SDK. Venezia AVC Decoder Overview of Venezia. To start with, we’ve got Venezia. This is a complete and separate CPU package designed by Sony’s close partner, Toshiba, for image and sound processing [17]. With functionality closer to a Digital Signal Processor (DSP), Venezia was also sold as a synthesisable chip for multimedia appliances (i.e. DVD players) [18]. Consequently, Sony selected it to accelerate multimedia tasks, so you could say it’s the spiritual successor of the Media Engine. Similarly to the MPCore, Venezia is a cluster, this time made of eight ‘Media Processing Engine’ (MPE) cores operating at 266.7 MHz. Notice that its naming confusingly overlaps with ARM’s vector accelerators, but they are different silicon. That being said, each of Toshiba’s MPEs houses [19]: A proprietary ‘Media-embedded Processor’ (MeP) CPU. Particularly, a fifth revision called ‘MeP-c5’. This features a 32-bit RISC-based architecture. 32 KB L1 cache, split into 16 KB for instructions and 16 KB for data. 64 KB of general-purpose memory. This is where the MeP CPU executes its main program. A DMA controller for transferring between internal and external memory. An ‘Image Processing’ co-processor that executes 64-bit SIMD instructions. It can operate different packs of data, from eight 8-bit integers to two 32-bit ones. The cluster also features 256 KB of L2 cache, but its main selling point is found in its instruction set, which is based on the Very Long Instruction Word (VLIW) model. Essentially, a single line can encode multiple instructions at once. In the case of Venezia, three instructions (two for the image coprocessor and one for the CPU) [20]. This requires a very clever compiler capable of packing instructions efficiently, however. Interestingly enough, CPU designers once experimented with VLIW implementations back in the 90s when it was thought to be the future of mainstream CPUs. This led to Broadcom’s Firepath, the Transmeta Crusoe and, of course, the Intel Itanium - to name a few. However, the concept didn’t gain traction outside particular uses, as the resulting benchmarks proved disappointing. Thus, interests soon shifted to other parallelism techniques, such as out-of-order execution, which transferred the burden back to the CPU. Be as it may, Venezia is only accessible through an abstract API called ‘Codec Engine’ [21], which implements different kinds of image and audio encoding/decoding tasks. Next » Memory available Enough about CPU talk! Let’s now take a look at the memory bundled within the PSVita. As it’s customary with portable consoles, there are multiple memory types in this system. Main memory To start with, at the top of Kermit’s stack, we find a large block that houses 512 MB of LPDDR2 SDRAM and is used as the main working area. In case you are now wondering “I get the ‘512 MB’ part, but what’s with all those initials?”, you’re not alone. There’s a lot of terminology to unpack here, let’s start by breaking down the ‘LPDDR2 SDRAM’ name into two groups, from right to left, and then inspecting what’s inside each: SDRAM means ‘Synchronous Dynamic RAM’. Dynamic RAM (DRAM) is the opposite of ‘Static RAM’ (SRAM). DRAM is cheaper to produce but exhibits more latency. That’s why CPU cache is made of SRAM while external general-purpose memory is made of DRAM. Synchronous DRAM (SDRAM) means transfers are synchronised on par with the CPU clock, improving its throughput. LPDDR2 means ‘Low Power Double Data Rate 2’. Double Data Rate (DDR) states that transfers encode twice the information per cycle. Low Power (LP) is a novelty here. This is not typical DDR, but a distinct variant called ‘Low Power’. It was initially conceived as a modification of DDR SDRAM, then became its own brand alongside others (as it happened with GDDR). While DDR evolves to increase the bandwidth, new revisions of LP focus on reducing its operating voltage. As you may guess, its main adopters are phones and laptops. The ‘2’ at the end signifies it’s the second revision of LPDDR. Its specification was published in 2009 and, among other improvements, it only needs 1.2 Volts to work (compared to 1.35 V for DDR3). Other memory There’s another large block of 128 MB of Cached DRAM (CDRAM) predominantly connected to the GPU. CDRAM is yet-another type of RAM that combines the traditional (and cheap/slower) DRAM with a bit of SRAM [23]. The latter acts as cache to speed up frequent memory access. Last but not least, the SoC also fits 16 KB of SRAM, but it’s reserved for system functions [24]. You may want to know that it’s the exact amount of SRAM also found in the PlayStation Portable, you’ll soon see why. One last CPU Last but not least, there’s an additional CPU inside Kermit: The old MIPS32 4k (the same one bundled with the PlayStation Portable) [25]. The intention was to provide backwards compatibility with PlayStation Portable and PlayStation 1 games. That’s the one and only (official) use for the MIPS CPU, with no co-processing capability in place. The predecessor ‘Tachyon’ chip found on the PSP, housing the MIPS CPU and many other components. Speaking of backwards compatibility, Kermit doesn’t include the Media Engine [26], although being a black box means that the software doesn’t care about what’s behind the scenes. Thus, the functions of that co-CPU are replicated through Venezia instead. For the remaining I/O, MIPS is not physically connected to the rest of the hardware, only the Cortex-A9 is. Thus, the PSP emulation software (running on the MIPS CPU) requests services to the ARM CPU by following a protocol called ‘Remote Procedure Call’ (RPC) [27] [28]. Finally, 64 MB of CDRAM are also reserved for this service. Those 16 KB of SRAM are also allocated to the PSP emulator [29], as original PSP games would expect to find. Next: Graphics That’s it for now! In the next part we’ll take a look at VideoLogic’s evolution to become a leading GPU in the mobile market, culminating in their signature PowerVR MBX GPU. Stay tuned for the next delivery!",
    "commentLink": "https://news.ycombinator.com/item?id=41928529",
    "commentBody": "Playstation Vita Architecture (Part 1) (copetti.org)255 points by wicket 23 hours agohidepastfavorite75 comments BadJo0Jo0 22 hours agoI'm a huge fan of the original PSP and the homebrew/jailbreaking scene that came out of it. I recently acquired a PS Vita and have been enjoying it's native and homebrew offerings. It's also surprising that the homebrew scene is still fairly active there too. Apparently there's some potential for Android game ports. I wish Sony didn't let the PS Vita flop, it feels like it had so much potential at the time. reply tmtvl 22 hours agoparentI preordered a Vita back in the day and when I got it I immediately fell in love with it. It fits in a pocket and it has way better analogue sticks than that garbage the PSP had. I still use it to this day because I can't fit my Steam Deck in my pocket. And I concur that its potential did kinda go to waste. Imagine if we had Shadow of the Colossus and Demon's Souls available on it. reply johnnyanmac 21 hours agorootparentcalling the PSP nub an analog stick is almost an insult to the Vita. It was this flat protrusion that you can switch out caps on, and you move it around like some thinkpad nub for analog movement. It made sense for the time, but I still ponder why they never added two of them. Held back so many potential games. And yes, I still consider the Vita the last true \"portable\". potability in my mind implies pocketability, and the Switch and every other non-phone went beyond that. Devices like the Ayaneo Air do give me hope that that \"pocketable\" market may make a comback sooner than we think, though. reply flessner 5 hours agorootparentA \"pocketable\" gaming console in the modern world is essentially a smartphone with analog sticks. There are \"controller grips\" or \"controller mounts\" for phones readily available and you can even pair it with Steam in-house streaming or Moonlight to play games at a quality that is impossible at this form factor for cheap. Even at larger sizes it's difficult - The Nintendo Switch only worked because of great franchises and IP. The Steam Deck also required great technological investment into Linux and platform familiarity. It's not hard to see why barely anyone's trying... reply JansjoFromIkea 3 hours agorootparentprevthe nub was a last minute addition iirc, it probably would've been extremely complicated to squeeze two onto it The nub was announced at the same time as an announcement where the memory was quadrupled so I think it was probably intended to be only PS1 level games on it originally. reply s1gsegv 20 hours agorootparentprevI have a Retroid Pocket Flip that I’ve loved for this exact reason. It’s just about powerful enough for Gamecube. More recent iterations are definitely powerful enough, and Gamecube is the library I love to play most. reply bitmasher9 22 hours agorootparentprevThe Vita1000 OLEDs in general haven’t aged well, but the Vita2000 is still a strong option for mobile gaming. The handheld emulation machines aren’t made with the same build quality and the Steamdeck style consoles aren’t massive by comparison. The Switch Lite is another fine choice, but still much bigger than the PSPVita 2000. I’m hoping strong sales of the PSPortal encourages development into a standalone mobile device, but I’m not hopeful it’ll replace my PSP3000/Vita2000 for daily driving. reply dgellow 17 hours agorootparentMy vita1000 is still as it was on release, I personally love the screen reply JansjoFromIkea 3 hours agorootparentscreen is great, feels really high quality in general, but the proprietary charging port and lack of internal storage are huge negatives against it reply gambiting 21 hours agorootparentprev>>The Vita1000 OLEDs in general haven’t aged well Really? That's an interesting opinion - I own both and vastly prefer the original Vita due to that OLED screen, it's just better in every way(the screen). reply radicaldreamer 21 hours agorootparentThe white Vita OLED was an excellent device reply hx8 20 hours agorootparentprevThe 60 grams of weight and 3.5mm of depth are very noticeable on a handheld. reply tmtvl 16 hours agorootparentI dunno, I seem to recall the original Gameboy being this huge brick and that was entirely fine. Dunno where I put it, though... might've tossed it when I got my Gameboy Colour, which seems like the stupid kind of thing I would've done in my early teens. reply Hamuko 13 hours agorootparentprevThe slim fits in the hands better and charges via micro-USB. reply FactKnower69 20 hours agorootparentprevnot really an opinion, the mura effect is the ubiquitous and well-documented flaw of Vita 1000 OLEDs reply tightbookkeeper 18 hours agorootparentYou can’t have an opinion about whether a flaw bothers you? reply theshackleford 21 hours agorootparentprevMy vita oled still functions fine? I have non oled variants as well but I feel no reason to use them, they just exist as spares. Have the OLEDs all started dying or something? reply hx8 20 hours agorootparentOLEDs degrade faster and stronger than CRT or LCD. OLEDs have three major sources of degradation. The percentage of Vitas will good OLED screens are significantly decreasing. * Burn in. Everyone knows about this, not a huge issue on most Vitas. * Use degradation. Using the OLED panel will slowly cause it to become more dim, and each color dims at a different rate. Blue dims 10% by 1k hours, and by 10k hours you can expect half total brightness. The Vita was released 10 years ago, and many of them have seen thousands of hours of gameplay by now. * UV exposure. UV radiation is damaging to OLED displays, even when powered off. Long periods of small exposure, even if kept enclosed in storage, can damage the display. For Vita displays this is the major problem. Vitas that were rarely used outside/near windows, and were stored in dark places will have the least amount of UV damage. All of them should be noticeably more dim than their time of manufacture if it were possible to compare side by side. reply theshackleford 20 hours agorootparentAh yeah, i'm aware of OLED issues. But my Vita OLED shows none of these, save for some diminished brightness perhaps. But I only play them indoors anyway and honestly at this point, i've exhausted most of the library worth playing exclusively on the vita, and I have better emulation machines. The OLED vita side by side with the non OLED is still my preferred display. You are right though, if you want to rack up thousands of hours and add another decade onto the decade already past, the LCD unit is the better bet. reply hx8 18 hours agorootparentI have two OLED Vitas, a beat up one I used for 10 years and a gently used complete in box I imported from Japan. I prefer the LCD, and have for several years. However this is only a recent development (3-4 years) when I noticed the LCD at max brightness was significantly better in bright conditions than the OLED was. I've checked some of my friend's OLED Vitas too, and none of them are nearly as good as they were in the old days. The hue shift on some of the screens is pretty noticeable. Looking back the old screen was awesome. Going forward I think the LCD Vitas will be a better pick. reply radiKal07 12 hours agorootparentprevCheck out Ayn Odin 2 Mini, it's an Android handheld with a PS Vita design, you can use it to emulate lots of games too (including Vita using Vita3k emulator). reply BossingAround 11 hours agorootparentAt first, I thought it was like $35, and was almost ready to order it. Then, I realized, in my morning haze, that I'm not seeing the decimal point, and it is actually $340. For that kind of cash, you might as well get the real Vita from a second-hand market. Better yet, for that kind of cash, get Steam Deck, unless you have some restrictions like OP (i.e. \"SD is too big\") reply volfonibros 11 hours agorootparentThe real Vita can't play every PS2 game, or any GC game. Different device. And the Steam Deck is vastly different in pocketability, yes. reply tmtvl 8 hours agorootparentprevIt seems interesting, but I hate asymmetric gamepad layouts. That's one thing I quite like about the Steam Deck: that they made the layout symmetric. reply ninetyninenine 20 hours agorootparentprevthe ps2 emulator can run these pretty well (pcsx2). Though I haven't tried it on the steam deck I'm sure you can get SoTC and Demon's Souls on the deck via emulation. reply zerocrates 22 hours agoparentprevThey had a variety of issues around cost, competition with Nintendo, their fiddly and expensive proprietary memory card format, but I think just letting it die was a consequence of the then-widely-held view that handheld gaming, and maybe all dedicated console gaming, was sure to be killed by the smartphone. So they let themselves believe that its poor performance was just an inevitable result of a changing market, not the result of their own avoidable mistakes. reply johnnyanmac 20 hours agorootparent>I think just letting it die was a consequence of the then-widely-held view that handheld gaming, and maybe all dedicated console gaming, was sure to be killed by the smartphone. They were right in many regards. The casual gaming audience disappeared in real time over gen 8 to phones. Even the 3DS just did \"well\" as a result. So sony went all in on the PS4 and Nintendo converged handheld and console to stand out. It's coming around again now, but through emulators (Analog Pocket and various android handhelds), the blooming market of handheld PCs (Steam Deck, GPD, Aya, etc.), and the occasional novelty device aiming for small markets (Playdate, Gameshell). I don't know if we'll ever get another handheld like the Vita with its balance of power, build, and library. reply hbn 12 hours agorootparentThey could have compensated the way Nintendo did for so long, releasing games as late as 2019 for the 3DS - making good exclusive games people would actually want to play. Sony never really cracked the code of putting out good content at the consistency of Nintendo. Even though they managed to put out a handful of gems over the years, they just don't seem to know how to leverage it. And in the past few years they seem to want to actively undermine whatever they had, disbanding Sony Japan Studio, and they've floundered, spending the entirety of the PS5's life remastering PS4 games that didn't need a remaster. And sitting on Bloodborne all these years, while it's still stuck at 30fps... reply cubefox 16 hours agorootparentprev> They were right in many regards. The casual gaming audience disappeared in real time over gen 8 to phones. Even the 3DS just did \"well\" as a result. Exactly. Smartphone games were clearly the reason why Vita+3DS sold much worse than PSP+DS. The Vita failed because the market wasn't large enough anymore to support two systems, and the 3DS had more exclusive franchises. reply ThatPlayer 8 hours agorootparentI don't even think smartphone games were the killer, just smartphones in general. The audience isn't looking for specifically for gaming; they're looking for entertainment in their pocket. With smartphones that can be YouTube/Netflix/Facebook/etc. Those are good enough that you don't need games. reply cubefox 5 hours agorootparentOkay but that possibility would also predict that gaming in general would go down, not just on PS Vita and 3DS. It's true that the overall PC market shrunk (smartphones could replace PCs for many people) but I don't think the home console market was affected. reply fidotron 22 hours agorootparentprevHonestly, my view is the Vita was the wrong product at the wrong time. At the time it came out mobile SoCs were improving so rapidly it was never going to maintain an edge over phones for the normal console lifespan. You rightly call out the storage, but it is far from clear what other options really existed. Flash/SSD storage was quite expensive at that time. And market wise, the Sony audience (even more so then) would not have been remotely receptive to the sort of games that made the Switch popular later on. It was doomed from conception, and the other mistakes were inevitable after that. reply MegaDeKay 53 minutes agorootparentPeople too often conflagrate performance of a plateform vs the games you can get on that platform. The Nintendo 3DS was released about the same time as the Vita. It and the \"new 3DS\" that came after it were huge for Nintendo, despite the hardware being far from state of the art (unless you count the 3D display that was more a gimmick than anything). You can say the same thing about the Switch. One of the Vita's biggest problems was Sony itself. Proprietary & expensive memory cards plus poor corporate support doomed the platform. I have a hacked Vita Slim and it is wonderful. The size is great, the controls are great, and the homebrew scene is incredible. It really holds up. reply goosedragons 21 hours agorootparentprevHow many mobile games look better than what the Vita was putting out? Even today. CoD Mobile despite releasing 7 years after CoD Black Ops Declassified on Vita and having way better phone SoCs is barely an improvement. The Switch still happily runs games off microSD cards. The home consoles didn't get SSDs till 2020. For Vita, the cards were fast enough. The problem was the proprietary nature of the cards. They just cost way too much for the size especially as time wore on. I think at the time I imported my 64GB Vita card, a microSD card of the same size was half the price. By the end of the Vita's life the 32GB card was laughably bad value. reply fidotron 21 hours agorootparent> How many mobile games look better than what the Vita was putting out? This is a surprisingly profound question, because the mobile people absolutely could do games that look better than that and largely found it is not worth doing so. It is partly tech, in that people prefer battery life (you also cannot spend more if your battery has run out), but also technical aspects of graphics simply don’t impress people as much as they did in the 90s. “Content”, and volumes of it, is far more important. The Vita cards were fast enough but not big enough for games that the Sony demographic would want. For example, a Vita scale Gran Turismo or Metal Gear Solid entry is simply not going to improve on the (great) PSP entries. By the time the Vita launched we had already been releasing Android builds for the Xperia Play which were straight up ports from the PSP, as betrayed by the almost uniform 1.6GB per game. Edit: to add a concrete example, the developers of NBA Jam mobile (which was great) went back to 2D afterwards, and came up with a very nice engine for streaming 2D animation and a whole content pipeline system for using it. That ended up making huge amounts of money and entertained tens of millions of people for a long time. reply gambiting 21 hours agorootparentprevGenshin Impact mobile is pretty much on par with PC/console versions, and Vita couldn't do anything even remotely close to it in terms of scale. Although games like Killzone and Uncharted definitely pushed the envelope in terms of what was possible with the Vita, really great games. reply johnnyanmac 20 hours agorootparentprevBack then, only a few from companies like Glu (now owned by EA as of 2021) and Gameloft (Aquired by Vivendi) even tried. The mobilew became night and day by the turn of the decade, though. If Vita had a game like Genshin, then maybe its fate (in Asia) wouldn't have been so dire. But then again, Genshin was 8GB at launch. Definitely shouldn't underestimate how quick storage costs came down from 2012 to 2017 when the Switch launched. enabling larger games to casually be made. reply Vitamin_Sushi 21 hours agoparentprevI miss the PSP jailbreaking scene. Back when I was in high school, I made quite the pocket change cutting PCB traces on people's PSP batteries. Come to think of it, I'm pretty sure that got me interested in electronics in the first place. reply gambiting 21 hours agorootparentHaha, same. And that's how I got into programming, making homebrew games for my PSP - I taught myself C++, and I even participated in several competitions for homebrew, PSPSnake was one that got thousands of downloads, for a 15 year old that was crazy cool. reply yard2010 18 hours agorootparentHaha first piece of code I wrote in C++, when I was in highschool, was for April fools joke - I made a homebrew app that should do something really could (I can't remember) and after few seconds of loading, it displayed a blue screen saying \"skynet\" has breached your PSP and you got pawned. After 3 seconds it showed \"It's April 1 you fool\". It was so stupid. It took me forever to make, but it was worth it. I gave my friends from the local PSP scene a heart attack, then a good laugh of relief. Fun times. reply hansonkd 21 hours agorootparentprevWriting homebrew for PSP was my first introduction to programming and my gateway to Python (through PyGame). reply ElCapitanMarkla 21 hours agoparentprevHardware wise it was a fantastic console, I picked an OLED version up a couple of years ago. The problem I always had was the lack of games. There were a handful of good titles but nothing really blew me away. I think I spent more time playing Risk or Rain than anything else. reply zelos 21 hours agorootparentBack when I was commuting by train every day, the Vita was my favourite console. It felt like it got a lot of great ports of the big indie titles of the time, plus a decent number of bigger titles: Hotline Miami, Spelunky, Stealth Inc, Wipeout 2048, Resogun, Super stardust, Persona 4, Guacamelee. reply jonhohle 16 hours agorootparentIt’s a great indie machine. LRG and Playasia did a great job of keeping smaller games on carts throughout the Vita’s life. reply deergomoo 11 hours agoparentprevThe first code I ever wrote was for my PSP with custom firmware. I used the Lua Player homebrew, setting up a C toolchain was far over my head at the time. I think I spent more time tinkering with that console than I ever did playing games, even though the games were great. I picked up a PSP Go a couple of years ago and that thing is awesome. It flopped hard at the time due to being digital only before people were more okay with that, and because there was no way to play any UMD games you might have already owned. But with custom firmware it’s terrific; it’s less feasible to use a microSD card (unlike the cheap adapters for the original’s Memory Stick Duo), but it has 16GB onboard flash which is perfectly serviceable given PSP ISOs max out at 1.8GB before compression. reply corysama 21 hours agoparentprevI never followed the Vita homebrew scene. But, what I've read from following the single board computer emulation scene is that Vita homebrew took a while to pick up speed. But, today the Vita is a respectable portable emulation device on par with many small SBCs currently being manufactured. https://docs.libretro.com/guides/install-psv/ reply MegaDeKay 42 minutes agorootparentThat is \"just\" retroarch. There is a huge amount of homebrew out there for the Vita beyond retroarch. Dead Space, anyone??? https://www.rinnegatamante.eu/vitadb/#/ reply benoau 22 hours agoparentprevI remember getting the PSP, and this was the iPod and PDA era, the PSP was just absolutely amazing. It was better than anything else by far, even with the silly little UMD optical discs. Thanks to EU regulations pressuring Apple's restrictions you can get PPSSPP for iPhone now and the games still hold up amazingly well. reply goosedragons 22 hours agorootparentThe Vita, as flawed as it was, was pretty incredible at release too. The OLED screen, the PS3ish level visuals, a second analog stick finally. It was easily my favorite console from when I got it until I picked up a Switch. Sony really bungled it with the over draconian DRM and proprietary memory cards. Had it used microSD cards and not been SO anal about how anything got on there it could have done a lot better. And had they ditched the back touch panel and added real R2/L2 in New 3DS style and perhaps clickable thumbsticks, it could have been something! reply gambiting 21 hours agorootparentI think Sony was just incredibly scared of having a repeat of the PSP situation where piracy was absolutely dominating, they sold crazy number of consoles and very few games(comparatively). I knew at least 10-15 people with PSPs when I was a teenager and none of us ever owned a single actual PSP game on a disc. reply cheeseomlit 22 hours agoparentprevSame, the PSP was my first introduction to homebrew gaming and custom firmware. Having all those emulators on a handheld blew my mind back then. I actually still have it in a drawer somewhere- which reminds me, check your battery! You don't want a bloated battery ruining such a lovely device (or burning your house down) reply bpye 17 hours agorootparentI recently found my PSP with the battery cover popped off by a swollen battery! I'll need to pick up a new one but I'm glad to have caught it before anything too catastrophic happened. reply Sarkie 22 hours agoparentprevhttps://android.rinnegatamante.it/ reply pjmlp 11 hours agoparentprevFor a while PSP did had official indie support, there was an Objective-C SDK, a later one in C#, but unfortunely they killed both approaches, because like with PS2Linux, probably people weren't using them for actual new indie games. The related developer sites aren't even online anylonger. reply aktau 9 hours agorootparentObjective-C? That seems like an odd choice, did they want to attract iOS developers? (I know someone ported the mobile game Angry Birds to PSP at some point). Do you have more information about this? reply pjmlp 9 hours agorootparentI was partially wrong, it wasn't for the PSP, rather something else, https://apple.slashdot.org/story/10/11/25/0432204/Sony-Adopt... https://www.slashgear.com/sony-snap-connected-device-app-fra... And for completness here are some articles about the C# SDK, https://venturebeat.com/games/ps-vita-sdk/ https://www.codeproject.com/Articles/535325/Hello-World-on-t... reply atgreen 21 hours agoprevMany years ago I worked with Toshiba on the Media Embedded Processor (MeP), referenced in this article. We (Red Hat) did some toolchain work to support the configurable nature of the processor, which was novel at the time. The MeP didn't take over the world but I was happy to learn that it landed in the PS Vita. reply corysama 22 hours agoprevNote that this is but one article in a long running collection. https://www.copetti.org/writings/consoles/ reply throwaway918299 18 hours agoprevThis is awesome and feels providential. I just dug my Vita out of a drawer last week and have been playing some portable ports of some PS3 games that I wanted to play but can’t hook up the PS3 for (ratchet and clank, sly cooper, god of war 1 and 2, and some other indie games). Was shocked to discover the store is still functional. I bought the PS1 Armored Core games for it. Love this thing. It really got done dirty in the market and with Sony’s support. Tempted to jailbreak it and try to make some homebrew stuff. reply mmaniac 9 hours agoparentThe Vita homebrew scene is very mature and surprisingly active. \"It's surprisingly easy to hack your 3DS\" is a meme for good reason, but it holds even truer for the Vita. reply lxgr 2 hours agoprevBig fan of both this series of articles and the Vita! One thing I've been wondering for a while is whether the Vita actually includes both CPU and GPU of the PSP for backwards compatibility, or whether it's only the CPU, with the GPU being mapped to the Vita's. This article is claiming that it's the former, but hopefully we'll learn more (with references) in the next installment. reply PaulHoule 17 hours agoprevI went through two PS Vitas and replaced control buttons and such numerous times. I loved the Vita's mix of casual and \"serious\" games comparing Pixeljunk Monsters to Killzone Mercenary which was as good a 1P shooter as you'd find on a game console in a mobile package. A huge amount of Japanese content such as Akiba's Trip: Undead and Undressed, Danganronpa and Fate/Extella. They disconnected it from the PS Network and I was finding that the Japanese games I liked were coming out on Steam so I let go of my Vita kit, I have to admit I miss Pixeljunk Shooter. reply jonhohle 16 hours agoparentWhen was it disconnected? AFAIK it still is working and workarounds even lets you buy games (of you have funds in your PSN account). It’s been a while, but I’ve downloaded previous purchases recently. (I really need to backup everything before it does go down for good). reply jonhohle 16 hours agoprevI had no idea the Vita had PSP hardware. I figured backwards compatibility was software based, but I suppose they already had a long history of shipping backwards compatible hardware on consoles. However, by that time they also had a software PS1 emulator for the PS2 Slim and later PS3s. reply mmaniac 9 hours agoparentPS1 backwards compatibility on the PS2 has always been a mix of software and hardware. This includes the PS2 slim†. https://israpps.github.io/PPC-Monitor/docs/Architecture%20Ov... > The PPC-IOP ASIC, present in SCPH-75xxx and newer PS2 models, features a hybrid hardware and software approach to emulating the MIPS R3000A processor found in the PS1 and 70K or older PS2 models. The hardware portion of this emulation comes in the form of an Auxiliary Processing Unit or APU attached to a PPC 440 core clocked at 440MHz. The software portion comes in the form of the “DECKARD” emulation software. The PS3 has always used pure software emulation for the PS1. †Technically only the SCPH-7500x and later slim models feature the PPC-IOP and Deckard. The SCPH-7000x works the same as fat consoles, where the CPU side of PS1 games run natively on bare metal. reply 00000z 3 hours agoprevOhh boy thank you for this reply Pxtl 17 hours agoprevI'm still bewildered that Sony abandoned the portable industry when they were uniquely positioned with the fact that they also had a phone line. The Xperia Play was too early but I'm pretty confident that now that you've got people very comfortable dropping a lot of money on a phone or the Steam Deck that Sony could've made a very nice successor to both the Vita and the Xperia Play with some kind of Android device with a captive Sony game store. reply djtango 17 hours agoparentSony owns a record label and film studio, phones and has had a cloud distribution network since 2006 via the PS3 but they completely missed the boat on music and video streaming. Too many of their orgs were siloed from one another. As someone who has kind of admired their products, you can only laugh at how poorly things turned out for them given what we know today. reply djtango 12 hours agorootparentJust adding to this the peak was Sony acquiring Crunchyroll for over 1B - a \"company\" who started life as a pirating site for anime reply nikanj 7 hours agorootparentprevJust like Nokia, where the organization was made of dozens of business units trying to screw each other over. A great concept on paper (\"We have no credible competitors, so to remain fresh, we have to become our own competitor\"), but in reality they ended up shooting their own, supernumerous, feet reply magnetowasright 15 hours agoparentprevI loved my Xperia Play. PSX games on my phone with the controls? It was so good. Best phone I ever owned. It was ahead of its time in ways but I don't think the gaming landscape was all that suited/ready like it is now for handhelds. reply AbuAssar 14 hours agoprevVita was ahead of its time reply stonethrowaway 21 hours agoprev [–] Books like these fall into the pantheon of didn’t ask for it, didn’t expect it, but now that it’s here, I’m reading it from sunrise til sunset. The author has written several other books on processors and embedded architecture. Much needed, frankly. The embedded world leans much further towards disassembling, breaking down, explaining, reasoning and so on and so forth compared to the software world. Not sure why, these guys go all out to probe and put together circuit diagrams and just about fucking everything. The recent Nintendo modding scene shows this to an extreme. Software Reverse engineers clutch their IDA licenses and plugins like it’s going out of style. Copetti is the kind of individual we need more of. reply jonhohle 16 hours agoparentOn the PS1 side, Splat, m2c, decomp.me and a lot of custom tooling are used. reply anthk 20 hours agoparentprev [–] IDA? More like GHydra and diferent FLOSS tools. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The PlayStation Vita, released between December 2011 and February 2012, combines video gaming with mobile technology, competing against multifunctional devices.",
      "Sony introduced three variants: the original PSVita, a Slim model with an LCD screen, and the PlayStation TV, each with distinct features.",
      "The PSVita is powered by an ARM Cortex-A9 CPU and a PowerVR SGX543MP4+ GPU, supporting advanced processing and multimedia capabilities, including backward compatibility with PSP and PS1 games."
    ],
    "commentSummary": [
      "The PlayStation Vita, despite having advanced hardware features like an OLED screen and dual analog sticks, was hindered by Sony's decisions, including costly proprietary memory cards and insufficient game support.",
      "The console faced tough competition from smartphones and Nintendo's 3DS, leading to its commercial failure, yet it remains beloved by enthusiasts for its portability and unique offerings.",
      "The homebrew community continues to thrive, providing emulation and custom firmware, and many users credit the Vita and its predecessor, the PSP, for sparking their interest in programming and homebrew gaming."
    ],
    "points": 255,
    "commentCount": 75,
    "retryCount": 0,
    "time": 1729711911
  },
  {
    "id": 41934746,
    "title": "2048 turned 10 this year, I built an updated version to celebrate",
    "originLink": "https://play2048.co",
    "originBody": "Hi all! My name is Gabriele Cirulli, I’m the original creator of 2048. Ten years ago, someone posted 2048 on HN[1] and suddenly it seemed like everyone was playing it. Back then, I wrote a bit about my experience during those weeks[2].Even after all these years, that experience still feels a bit surreal to me. I’m deeply grateful to everyone who connected with the game, whether in small or significant ways, and for the stories shared along the way. Some people expressed how they were going through tough times and found some comfort, however small, in playing 2048.At the start of last year, I wanted to breathe new life into the game as it was starting to show its age. I quit my job last October to work on 2048 full time and spent a year building this new version (the original took just 5 days!). I wanted to pay tribute to what made 2048 great while modernizing and polishing the experience.The idea of adding powerups came when Prime Gaming and I connected to see if we could create a special version of 2048 for their members, with some exclusive extras. Some of those powerups made it into the main game, though there’s still a Classic[3] mode just like the original for those who prefer a more hardcore experience. The old site is also still online[4].2048 is now my full-time focus, and I’m excited about the ways it can keep improving. I wanted to share this update with the community where it all began, both for a bit of nostalgia and to hear your thoughts and feedback!Thank you all so much!— Gabriele[1]: https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=7373566[2]: https:&#x2F;&#x2F;medium.com&#x2F;@gabrielecirulli&#x2F;2048-success-and-me-7dc6...[3]: https:&#x2F;&#x2F;play2048.co&#x2F;classic[4]: https:&#x2F;&#x2F;classic.play2048.co",
    "commentLink": "https://news.ycombinator.com/item?id=41934746",
    "commentBody": "2048 turned 10 this year, I built an updated version to celebrate (play2048.co)229 points by terabytest 6 hours agohidepastfavorite109 comments Hi all! My name is Gabriele Cirulli, I’m the original creator of 2048. Ten years ago, someone posted 2048 on HN[1] and suddenly it seemed like everyone was playing it. Back then, I wrote a bit about my experience during those weeks[2]. Even after all these years, that experience still feels a bit surreal to me. I’m deeply grateful to everyone who connected with the game, whether in small or significant ways, and for the stories shared along the way. Some people expressed how they were going through tough times and found some comfort, however small, in playing 2048. At the start of last year, I wanted to breathe new life into the game as it was starting to show its age. I quit my job last October to work on 2048 full time and spent a year building this new version (the original took just 5 days!). I wanted to pay tribute to what made 2048 great while modernizing and polishing the experience. The idea of adding powerups came when Prime Gaming and I connected to see if we could create a special version of 2048 for their members, with some exclusive extras. Some of those powerups made it into the main game, though there’s still a Classic[3] mode just like the original for those who prefer a more hardcore experience. The old site is also still online[4]. 2048 is now my full-time focus, and I’m excited about the ways it can keep improving. I wanted to share this update with the community where it all began, both for a bit of nostalgia and to hear your thoughts and feedback! Thank you all so much! — Gabriele [1]: https://news.ycombinator.com/item?id=7373566 [2]: https://medium.com/@gabrielecirulli/2048-success-and-me-7dc6... [3]: https://play2048.co/classic [4]: https://classic.play2048.co 101008 3 minutes agoThis may be buried in the comments and you will never see it, but thank you very much Gabriele. Your game helped me in a very weird circumstance. I was afraid of flying, specially on the takeoff and landing (and turbulence as well, ha). So I read somewhere that if I focused on something else, it would help me. So for the past years, I played 2048 during takeoff and landing, and it worked. It helped me to focus on something else, not the airplane, and I started to enjoying more my trips. Now I don't need to do it anymore, but just for the experience I still do it when I fly. So thank you for helping me with my fear! reply nikeee 4 hours agoprevTypeScript was fairly new at that time and to learn it, I ported 2048 to TypeScript. It was fun! Fast forward a couple of years, I was debugging an issue with a react component and glanced over the .d.ts of react. I was quite surprised when I saw that my name was in them. I never contributed to react's types myself. It turned out that someone took some types I wrote for 2048 and used them in the very first type definitions for react: https://github.com/DefinitelyTyped/DefinitelyTyped/commit/4b... It's still there to this date, but I've lost my TS port in the sands of time. reply mordae 16 minutes agoprevThis doesn't make any sense. We should be celebrating 8 years, 16 years and so on. reply nicole_express 5 hours agoprevCongrats on the 10 year anniversary, though honestly I think having tried your new 2048 I'll go back to the classic build. It might just be the hours I've poured into the original but it feels faster without the additional animation. But still a lot of good work there and I'm wishing you the best of luck. As for the argument about Threes!, I have to say that I've generally found 2048 to be a much more fun game; the full-screen sliding and the lack of the 1+2 mechanic makes things move much faster, which for me is a priority. That's definitely personal taste, but I hate the vitriol that comes up on the topic. reply rob74 4 hours agoprevWow, has it already been ten years? I also wrote a clone of 2048 back then (https://github.com/nieware/gofusion), using Go and a QML-based UI, for a contest, and (to my astonishment) actually won the first prize, which consisted of a Nexus 7 tablet (which served me well for several years) and a rare original vinyl Gopher figurine (which is still sitting on my desk looking at me serenely with its googly eyes while I type this). reply ieuanking 37 minutes agoprevCannot believe this is a decade old - will always remember playing 2048 on the NYC subway to school with my friendsOk? But lots of people do want that “middle ground” game… Those lots of people can play threes, or other games that exist in such a middle ground. Not every game needs to support every play style, nor does every person need to like every game. Or to be facetious and answer you in your own style: > Ok? But lots of people do want that “middle ground” game… OK? But lots of people don't want the “middle ground” game, especially people who like more complex games on desktop/console and only simpler time-fillers on mobile. Or even more so: > Ok? But lots of people do want that “middle ground” game… Yes… and? reply MattRix 3 hours agorootparentAlright I'll admit the \"Ok? But\" was unnecessary, and I've taken it out. reply keeganpoppen 15 minutes agorootparentprevwhat? 2048 is for people who think that scrolling to the right and then down (rinse, repeat) is \"gaming\"... \"everything in the interstitial space of this false dichotomy is not a real game\" is a pretty awesome logical fallacy bingo play, though. i see, at the very least, \"false dichotomy\" and \"no true scotsman\", but surely there are others... when i need a break from mental work i club baby seals... i find it to be MUCH less mentally taxing than playing 2048, and, similarly, much less taxing than playing chess. thus, threes is not a \"real game\". shit-- is there an app for clubbing baby seals? i'd even settle for clubbing with baby seals... reply MattRix 4 hours agoparentprevThere is nothing wrong with pointing out the origins of ideas and concepts, especially on a site like Hacker News. 2048 was much more popular than Threes, often to the point where many people are unaware of Threes at all, so I think it’s important in these kinds of forums to make sure people know where the game idea came from, and that the originators get credit. reply pololeono 3 hours agorootparentThis manifestation of the threes trope below everything 2048 related reminds me of a comment I recently read below a Stephen Wolfram related post: https://news.ycombinator.com/item?id=41406645 All: please don't repeat the usual Wolfram trope. (If you don't know what I mean by that, a decade's worth of explanation can be found via https://hn.algolia.com/?dateRange=all&page=0&prefix=true&que....) The issue is not that it's wrong, it's that it's extremely repetitive and we want fresh discussion on HN, preferably about the specific content of an article. reply samatman 24 minutes agorootparentnext [2 more] I saw that comment but didn't follow the algolia link. I didn't realize Stephen Wolfram was dang's personal We Do Not Mention the Orangutan. I suppose that given the inevitable prevalence of clichéd back-and-forth tropes and exchanges on HN, there's little choice but to draw a line in the sand on specific versions and hope it serves as a stand-in for all of them. reply dang 12 minutes agorootparentI don't know who the orangutan is, but that's just one of a thwack of tropes that make me wince on HN. A multithwack. A plenithwack. They can't be stopped but one can maybe dampen them a bit sometimes. Or not. reply IshKebab 47 minutes agorootparentprevWasn't that just because Threes was a paid iPhone-only app and 2048 was a free near-clone? reply keeganpoppen 14 minutes agorootparentno, brah, 2048 had better game mechanics, brah reply doppp 4 hours agoparentprevTotally agree. I prefer Threes! myself but ultimately, the market determines what's fun. Grabriele has been so humble about his success and while I feel for the Threes! developers, they came across as exceptionally sore. reply Sharlin 25 minutes agoprev383,392 points on the first try, using the new powerups. At that point I had a 16384, 8192, 4096, 2048, 1024, 256 and two 128's, but getting that extra 512 and then successfully folding the tiles into a 32768 likely wouldn't have been feasible, even if I had had more luck. I think this was enough for me for a while =D reply dang 26 minutes agoprevnext [2 more] Here are the threads I could find with 20 or more comments. Smaller threads are listed in a collapsed reply. These are in chronological order for a change: 2048 - https://news.ycombinator.com/item?id=7373566 - March 2014 (410 comments) 2048 AI - https://news.ycombinator.com/item?id=7379821 - March 2014 (189 comments) 2048 – multiplayer - https://news.ycombinator.com/item?id=7384974 - March 2014 (113 comments) 2048 x 2 = 4096 - https://news.ycombinator.com/item?id=7396134 - March 2014 (24 comments) 2048 in the terminal - https://news.ycombinator.com/item?id=7398011 - March 2014 (88 comments) 2048 with Leaderboard and achievements, with Kivy (Python/OpenGL) - https://news.ycombinator.com/item?id=7404515 - March 2014 (25 comments) 2048 in 2048 bytes - https://news.ycombinator.com/item?id=7406605 - March 2014 (54 comments) 2048 in 3D - https://news.ycombinator.com/item?id=7416777 - March 2014 (66 comments) 2048 in 4D - https://news.ycombinator.com/item?id=7418219 - March 2014 (113 comments) Flappy 2048 - https://news.ycombinator.com/item?id=7431047 - March 2014 (121 comments) Logarithmic Flappy 2048 - https://news.ycombinator.com/item?id=7432448 - March 2014 (64 comments) HN Plays 2048 - https://news.ycombinator.com/item?id=7433524 - March 2014 (81 comments) 2048 Tetris - https://news.ycombinator.com/item?id=7435569 - March 2014 (60 comments) 2048 for physicists - https://news.ycombinator.com/item?id=7438567 - March 2014 (33 comments) 2048 Numberwang - https://news.ycombinator.com/item?id=7439444 - March 2014 (110 comments) 2048 without numbers - https://news.ycombinator.com/item?id=7443166 - March 2014 (46 comments) Dropbox 2048 - https://news.ycombinator.com/item?id=7443379 - March 2014 (2 comments) 8402: 2048 from the other side - https://news.ycombinator.com/item?id=7446139 - March 2014 (53 comments) 2(048) - https://news.ycombinator.com/item?id=7453543 - March 2014 (46 comments) 2048 in sed - https://news.ycombinator.com/item?id=7464294 - March 2014 (35 comments) 2048 game to the Atari 2600 VCS - https://news.ycombinator.com/item?id=7466097 - March 2014 (22 comments) 2048 Solver - https://news.ycombinator.com/item?id=7473486 - March 2014 (38 comments) Threes: The Rip-offs and Making Our Original Game - https://news.ycombinator.com/item?id=7484106 - March 2014 (208 comments) 2048 As A Service - https://news.ycombinator.com/item?id=7510670 - April 2014 (52 comments) 2048 implemented in 487 bytes of C - https://news.ycombinator.com/item?id=7535666 - April 2014 (45 comments) 2048 in 3D - https://news.ycombinator.com/item?id=7543483 - April 2014 (51 comments) Flappy 2048 - https://news.ycombinator.com/item?id=7637009 - April 2014 (32 comments) 2048 in Famo.us - https://news.ycombinator.com/item?id=7660206 - April 2014 (21 comments) 2048, success and me - https://news.ycombinator.com/item?id=7704800 - May 2014 (222 comments) 2048 in Swift - https://news.ycombinator.com/item?id=7845441 - June 2014 (34 comments) Implementing 2048 in 90 lines of Haskell - https://news.ycombinator.com/item?id=7896187 - June 2014 (24 comments) 243 Game – inspired by 2048 - https://news.ycombinator.com/item?id=7991773 - July 2014 (36 comments) Design Is Why 2048 Sucks, and Threes Is a Masterpiece - https://news.ycombinator.com/item?id=8030413 - July 2014 (80 comments) The Mathematics of 2048: Counting States with Combinatorics - https://news.ycombinator.com/item?id=15327837 - Sept 2017 (46 comments) The Mathematics of 2048: Counting States by Exhaustive Enumeration - https://news.ycombinator.com/item?id=15894126 - Dec 2017 (22 comments) The Mathematics of 2048: Optimal Play with Markov Decision Processes - https://news.ycombinator.com/item?id=16790338 - April 2018 (43 comments) 2048.cpp – Play 2048 in directly your terminal - https://news.ycombinator.com/item?id=17897283 - Sept 2018 (45 comments) The Mathematics of 2048: Optimal Play with Markov Decision Processes (2018) - https://news.ycombinator.com/item?id=28310842 - Aug 2021 (50 comments) 1024, a 2048 Puzzle Game - https://news.ycombinator.com/item?id=32405510 - Aug 2022 (48 comments) Exponentile – A match 3 game mixed with 2048 - https://news.ycombinator.com/item?id=39897112 - April 2024 (40 comments) King Thirteen: 2048 with chess pieces, in under 13 KB - https://news.ycombinator.com/item?id=41623814 - Sept 2024 (80 comments) reply dang 23 minutes agoparentnext [1 more] Here are the threads I could find with fewer than 20 comments—again in chronological order: Why is the 2048 post so popular? - https://news.ycombinator.com/item?id=7378022 - March 2014 (15 comments) 2048 was too easy : welcome 4096 - https://news.ycombinator.com/item?id=7386557 - March 2014 (9 comments) Simple trick to beat 2048: left up, left down, repeat - https://news.ycombinator.com/item?id=7388699 - March 2014 (3 comments) 2048 with undo - https://news.ycombinator.com/item?id=7389112 - March 2014 (5 comments) 2048 in Augmented Reality - https://news.ycombinator.com/item?id=7391322 - March 2014 (2 comments) JS1k demo details: 2048 - https://news.ycombinator.com/item?id=7407055 - March 2014 (14 comments) 2048 with shareable replays - https://news.ycombinator.com/item?id=7408918 - March 2014 (4 comments) 2048 Benchmark - https://news.ycombinator.com/item?id=7408952 - March 2014 (4 comments) How to win 2048 everytime - https://news.ycombinator.com/item?id=7410582 - March 2014 (6 comments) Invisible 2048 - https://news.ycombinator.com/item?id=7418310 - March 2014 (4 comments) Why Do I Find 2048 So Damn Addictive? - https://news.ycombinator.com/item?id=7418806 - March 2014 (2 comments) Words oh so great: 2048 meets Scrabble - https://news.ycombinator.com/item?id=7419264 - March 2014 (5 comments) Xkcd comic about 2048 game - https://news.ycombinator.com/item?id=7427895 - March 2014 (3 comments) Flappy 2048 in HTML5 Canvas - https://news.ycombinator.com/item?id=7428175 - March 2014 (17 comments) Flappy 2048 AI - https://news.ycombinator.com/item?id=7432754 - March 2014 (2 comments) HN Plays 2048 (democracy) - https://news.ycombinator.com/item?id=7434051 - March 2014 (14 comments) Gameboy port of 2048 - https://news.ycombinator.com/item?id=7434529 - March 2014 (2 comments) 2048 in bash - https://news.ycombinator.com/item?id=7435174 - March 2014 (18 comments) Flappy + 2048 side-by-side - https://news.ycombinator.com/item?id=7436813 - March 2014 (4 comments) All 2048 games - https://news.ycombinator.com/item?id=7438716 - March 2014 (4 comments) 2048 Directory - https://news.ycombinator.com/item?id=7439663 - March 2014 (4 comments) WebRTC 2-player 2048 on same board with matchmaking - https://news.ycombinator.com/item?id=7445906 - March 2014 (8 comments) 2048.py - https://news.ycombinator.com/item?id=7446524 - March 2014 (2 comments) 2048 with Stats - https://news.ycombinator.com/item?id=7446608 - March 2014 (4 comments) 2048 game – How it started? Interview with the author - https://news.ycombinator.com/item?id=7448745 - March 2014 (3 comments) 1125899906842624 - https://news.ycombinator.com/item?id=7448931 - March 2014 (3 comments) Popular versions of 2048 with previews - https://news.ycombinator.com/item?id=7449160 - March 2014 (2 comments) What is the optimal algorithm for the game 2048? - https://news.ycombinator.com/item?id=7450244 - March 2014 (13 comments) 2048 showcase - https://news.ycombinator.com/item?id=7459448 - March 2014 (2 comments) Myo armband controlling 2048 [video] - https://news.ycombinator.com/item?id=7463808 - March 2014 (4 comments) Why doesn't 2048 have a '1' tile? - https://news.ycombinator.com/item?id=7464533 - March 2014 (2 comments) how do you commercialize something like 2048? - https://news.ycombinator.com/item?id=7473770 - March 2014 (4 comments) 2048 Golf - https://news.ycombinator.com/item?id=7474824 - March 2014 (2 comments) Code a 2048 bot on hackerrank - https://news.ycombinator.com/item?id=7481542 - March 2014 (8 comments) I found a way to 'cheat'/solve 2048 (With live demo) - https://news.ycombinator.com/item?id=7486762 - March 2014 (10 comments) Free Open Source Software and the 2048 Problem - https://news.ycombinator.com/item?id=7490316 - March 2014 (9 comments) Udacity Course: Make Your Own 2048 - https://news.ycombinator.com/item?id=7536123 - April 2014 (2 comments) Building 2048 in AngularJS - https://news.ycombinator.com/item?id=7554348 - April 2014 (14 comments) 2048 for stars - https://news.ycombinator.com/item?id=7603732 - April 2014 (2 comments) A 2048 spinoff to raise funds for cancer - https://news.ycombinator.com/item?id=7606252 - April 2014 (3 comments) A physics version of 2048 – stellar nucleosynthesis - https://news.ycombinator.com/item?id=7618293 - April 2014 (2 comments) 2048 on 8-bit Sega Systems - https://news.ycombinator.com/item?id=7620914 - April 2014 (4 comments) 2048 Game of Thrones Edition - https://news.ycombinator.com/item?id=7656436 - April 2014 (2 comments) 2048 in Idris - https://news.ycombinator.com/item?id=7668540 - April 2014 (11 comments) 2048 in Emacs - https://news.ycombinator.com/item?id=7705947 - May 2014 (15 comments) 2048 in bash - https://news.ycombinator.com/item?id=7708183 - May 2014 (6 comments) (Yet another) parody of 2048, where you try to lose as fast as possible - https://news.ycombinator.com/item?id=7713249 - May 2014 (5 comments) 2048, Wolfram Style - https://news.ycombinator.com/item?id=7721685 - May 2014 (6 comments) 2048 gestures - https://news.ycombinator.com/item?id=7780359 - May 2014 (2 comments) 2048 in Erlang - https://news.ycombinator.com/item?id=7869179 - June 2014 (14 comments) Cubic 2048 - https://news.ycombinator.com/item?id=8022498 - July 2014 (4 comments) Gunoki – Trainyard-and-2048-inspired Puzzle Game for iOS and Android - https://news.ycombinator.com/item?id=8329527 - Sept 2014 (4 comments) Twilio Plays 2048 – Multiplayer Without Internet - https://news.ycombinator.com/item?id=8498398 - Oct 2014 (3 comments) Can AI beat 2048? - https://news.ycombinator.com/item?id=8724754 - Dec 2014 (12 comments) Play 2048, get paid in Bitcoins - https://news.ycombinator.com/item?id=9195167 - March 2015 (3 comments) Zer0: addictive Web number-game like 2048 between two news from HN ^^ - https://news.ycombinator.com/item?id=11202264 - March 2016 (5 comments) WebRTC Serverless 2-player 2048 Game with Annotated Source - https://news.ycombinator.com/item?id=12788147 - Oct 2016 (13 comments) Hex 2048 - https://news.ycombinator.com/item?id=15890753 - Dec 2017 (3 comments) What are other awesome games like 2048? - https://news.ycombinator.com/item?id=16471374 - Feb 2018 (3 comments) Adversarial 2048 - https://news.ycombinator.com/item?id=31922891 - June 2022 (2 comments) x86-64 Operating System to Play 2048 - https://news.ycombinator.com/item?id=36516496 - June 2023 (3 comments) reply randomblast 4 hours agoprevYou know how the distribution of 2-value vs 4-value for new tiles is a weighted random function? And sometimes you get an unlikely 4 that really screw you over? Have you thought about adding a mode which always creates the worst option of the 2? You could call it “God does play dice with the universe. They're loaded and he hates you.” reply amadeuspagel 3 hours agoparentLike HATETRIS: https://qntm.org/files/hatetris/hatetris.html reply rzodkiew 3 hours agoprevI've opened the game without reading the post. When I've hovered over the crown and saw the prime stuff I thought it was some kinda' joke or parody. Turns out it isn't. Which I think is even funnier in some meta/state-of-the-things-today way. As there's nothing left but laugh at the absurdity of our reality. reply red_admiral 6 hours agoprevCongratulations! \"Powerups with Amazon Prime\" sounds like the famous bug report that grep (I think) should search on Amazon if it doesn't find the string locally, which was submitted IIRC in protest at the Ubuntu \"lens\" doing just that. reply iainmerrick 6 hours agoprevFor those who haven't heard of Threes, I highly recommend giving it a try. It's the original game that 1024, 2048 etc were cloned from (and I think it's still the best by far). Wikipedia has a good summary: https://en.wikipedia.org/wiki/Threes#Legacy reply terabytest 5 hours agoparentThank you for your comment. I wanted to add that credit should indeed be given where it's due and that while I didn’t mention Threes in my original post, it has played a significant role in 2048’s existence. Threes is credited on the play2048.co site (and now also on GitHub), and I’ve always tried to acknowledge its influence. That said, I think there’s a balance to strike. As I mentioned before, I created 2048 before I became aware of Threes, and while it’s important to credit inspiration, I’m not convinced that every creative project needs to trace back every indirect influence. 2048 began as a small experiment without any intent of gaining popularity, and it grew into something distinct, shaped by the viral spread and its community of its open-source variations. I understand the value of recognizing origins, but I also believe 2048 has developed its own identity over time. I appreciate the feedback, and I’m always open to improving where needed. Thanks for sharing your thoughts. reply MattRix 5 hours agorootparentnext [9 more] I feel like this is a bit misleading. You say you weren’t aware of Threes at all when you made 2048, which may be technically true, but then you should probably clarify that 2048 was a clone of 1024 which was a clone of Threes. And this all happened within around a month of when Threes released… to the point where many people started accusing Threes of being a clone of 2048. reply doppp 4 hours agorootparentLet it go, Matt. reply MattRix 4 hours agorootparentnext [8 more] [flagged] ziddoap 4 hours agorootparentIt seems like you are piling on just to pile on, not simply \"pointing out the origin\". There's already 52 matches for \"Threes\" on this submission. I think we get it. The author of has added credits to Threes. You won! reply MattRix 3 hours agorootparentnext [7 more] [flagged] ziddoap 3 hours agorootparentIf this was your only comment, I wouldn't have said anything. But you have 5 (now 6!) separate comment chains going on about Threes. In addition to the other 5 top-level comments, and ~20 replies that talk about Threes. All saying the same stuff. It's boring. reply MattRix 2 hours agorootparentI didn't post any top level comments, I'm only correcting people who I see posting misinformation. Isn't the point of Hacker News for people to talk about things they have expertise in? This happens to be a situation I know a lot about since I was also a mobile puzzle game developer at the same time this happened. reply ziddoap 2 hours agorootparent>Isn't the point of Hacker News for people to talk about things they have expertise in? No. Although that certainly can help, it's not the main point. From the guidelines: \"If you had to reduce it to a sentence, the answer might be: anything that gratifies one's intellectual curiosity.\" Seeing the exact same thing posted about Threes in over half of the comments here is the opposite of gratifying one's intellectual curiosity. It's boring. Especially when the comment is just a slight rephrasing of a comment that's already been posted several times (or worse, solely a link to your own comment elsewhere in the submission). reply MattRix 1 hour ago [flagged]rootparentnext [2 more] Oh come on, you're not really going to claim that my comment where I linked to my other comment is the problem, vs the person who initially told me \"Let it go, Matt.\". And for the record my initial comment was bringing up new information anyway, since I was the first and only person to point out that OP cloned 1024 rather than Threes directly. reply dang 14 minutes agorootparentPlease don't do this. 13 comments on this is too much, and (as is typical) they've gotten progressively more off-topic and flamewarrish. When people start arguing about what they did or didn't say, with swipes like \"Oh come on,\" it's clear that curious conversation was left behind quite a while ago and it's time to stop. throwaway199956 2 hours agorootparentprevBut the comments largely doesn't add anything further interesting to the discussion. Its been mentioned and spoken about ad nauseam. reply makeitdouble 5 hours agoparentprevAs Threes was getting famous I bought it and tried a bit, but it didn't really stick. It's with 2048 that I actually got hooked, it felt like a more natural and seamless game to play. I think it's the simplicity (no cuteness, no craftyness) that helps abstract the game, and of course dealing with powers of two makes it all the more natural. It felt a lot easier to get in and out of the game, be it for 30 sec to check the train station or 4 hours until lunch break. I feel like Threes was the cute and whimsical game, while 2048 could probably become the classic game, in the same kind of spot as Tetris. reply lifthrasiir 5 hours agoparentprevWhile it's unfortunate that the Threes team didn't receive a proper recognition, I believe the popularity of 2048 mainly comes from the fact that it can be, in some sense, \"finished\" unlike Threes. Yes, you can continue after 2048, but it was a good milestone that is initially hard but can be done relatively easily once you've got the hang of it. The clear milestone makes every game play much more disposable unlike Threes, even though you can surely continue even after that. (I did play Threes a bit before 2048 got popular and realized this in retrospect.) The same principle applies to more recent Suika Game and I still find it amusing that the only major change for both was the title. reply iainmerrick 5 hours agorootparentHmm, I'd guess that difference isn't significant for the vast majority of players. And for those that care, the greater depth of Threes is surely an advantage. I think 2048 became more popular because it was a) on the web, and b) free, whereas Threes was only on the iPhone and cost a few bucks. Oh, and c) the OP, to give him his due credit, did a really nice job with it! It had the same kind of simplicity and virality as Wordle. reply zahlman 1 hour agorootparentprevSuika Game has the same core mechanic (and many clones) but still represents a fundamentally different game. The gameplay is not even in the same category, as it involves some kind of physical simulation. ... or did you mean that Suika Game itself wasn't the original game with the falling-circles mechanic? reply rubslopes 6 hours agoparentprevHere's a great blog post from the Threes dev about their creation process and the impact of the rip-offs: https://asherv.com/threes/threemails/ reply zahlman 5 hours agorootparent>2048 is a broken game. Something we noticed about this kind of system early on (that you'll see hidden in the emails below). We wanted players to be able to play Threes over many months, if not years. We both beat 2048 on our first tries. We’d wager most people that have been able to score a 768 or even a 384 in Threes would be able to do the same using the fabled “corner strategy”. You probably could too! Just try tapping “up” then “right” in alternating order until you can’t move. Then press left. You may not get to a 2048, but you might just see your highest score ever. >When an automated script that alternates pressing up and right and left every hundreth time can beat the game, then well, that's broken. From my experience, this greatly overstates the \"exploit\". In 2048 you get to maybe 128 this way typically before you can't move up/right any more, then you have to start thinking after the left press. Basically whenever you slide away from the \"preferred\" corner, supposing your plan is to slide back promptly, there's always a chance that a random spawn gets in your way and complicates the plan. Getting to 2048 on the first try doesn't sound like a modal experience at all. (Of course, most new 2048 players won't have had the experience of developing Threes first.) For that matter, the developer talks about how rare it is to see a 6144, but doesn't seem to acknowledge that reaching a 4096 in 2048 is far more difficult than reaching 2048. At any rate, it's not at all immediately clear why having the player join 1+2 first before making blocks of 3*2^n, should noticeably improve the gameplay over having only powers of two. So IMO it's not that the gameplay of 2048 is fundamentally less interesting; the implementation just sets a lower standard. (Though for what it's worth, I've wondered how it might go with the Fibonacci sequence - allowing 1s to merge either with 2s or other 1s.) reply keeganpoppen 9 minutes agorootparentyou're right, it's not an \"exploit\"; it is literally the gameplay. go watch anyone play 2048 for more than 9 seconds and then try to tell me that isn't the case... and why is the fact that the difference between threes and 2048 \"not immediately obvious\" salient... at all? what is it even supposed to mean? i'm not so great at number theory... that doesn't make me think that all those people are gods among humans. same with the obverse: i am really good at geometry, so honestly are we sure that the ancient greeks were even good at math? it's not immediately obvious to me that geometry even is math. they didn't even have calculators for god's sake! reply MattRix 5 hours agorootparentprevYou just have to play Threes for a few hours and it becomes obvious it’s a much more interesting and deep game than 2048. Of all the things that can be debated about this situation, that feels like the biggest stretch of all. reply zahlman 1 hour agorootparentI don't mean to \"debate\" the depth of Threes (having not played it), only to say that it isn't obvious from a description. On the other side of the equation, 2048 is clearly interesting enough to have sold (and, from what I can tell, marketed by word of mouth), and its players would seem to disagree with the Threes author that 2048 is \"a broken game\". The corner shake might seem like a tedious but powerful strategy; but it doesn't come anywhere close to trivializing the object of the game, and this is a casual time-waster anyway. 2048 might well have won out for its simplicity (although personally I think the audio had a lot to do with it). Screenshots of Threes development (from the page linked in the post I quoted) imply that for quite a while it allowed for making numbers of any 2^x*3^y form, and earlier versions of the game must have tried even more complex rules - even larger prime numbers like 79 show up. Eventually this reduced to only numbers of the form 2^x*3 (as well as 1 and 2). To me that looks like a strange left-over irregularity, even if it does improve gameplay. (After reading the rest of the thread, I think I regret replying at all.) reply mysterydip 5 hours agorootparentprevI love being able to see the prototype evolution of the game on here. Thanks for sharing! reply smitelli 5 hours agoparentprevThrees was (I believe) the first iOS game I actually paid money for. You could tell that the author was a true craftsperson who really cared about every detail of the product. It always felt unjust that the clones got all the attention, and now the nostalgia. reply mrgoldenbrown 2 hours agorootparentThrees would have worked fine as a free web game if they prioritized attention, but they chose to make it an iOS only paid app, presumably because they preferred making money over gaining attention. That's a very reasonable tradeoff in my book, I'd rather have money in pocket than stranger's upvotes. reply lanthade 6 hours agoparentprevI still play Threes regularly. It’s super accessible but still remains challenging after years of play. I even occasionally still set a new high score. reply tym0 5 hours agoparentprevCame here to post a link to Threes, it does make me a bit sad whenever people mention 2048 without Threes. reply Suppafly 2 hours agorootparent> it does make me a bit sad Does it though? reply keeganpoppen 8 minutes agorootparentuhhhh. well if reading their personal attestation is insufficient... reply matsemann 5 hours agoparentprevI don't understand the peeve people have about mentioning Threes all the time. Does every discussion about a FPS game need to point out it's the same concept as Doom or Quake or whatever? The vitriol in some of the comments here are quite weird to me. It's also dishonest to label 2048 as a clone. Personally I never cared much for Threes, and same I guess with my parents etc which all got hooked for a while on 2048. 2048 strikes a good balance on being accessible and challenging, most people don't want it more complicated or deeper. If anything, the 2048 hype must have helped Threes tremendously. Instead, many people act as if 2048 was a slight on Threes somehow, stealing their thunder. I actually bought Threes based on all the comments back then, but didn't really like it. Too cutesy, and too challenging when I just wanted to mindlessly swipe. reply echoangle 2 minutes agorootparent> Does every discussion about a FPS game need to point out it's the same concept as Doom or Quake or whatever? Well the great differentiator between puzzle games is the idea of the playing mechanism. The great differentiator between FPS is implementation. If I make an FPS, I didn’t really steal from Doom because the idea is pretty obvious. But if I make a sliding game that’s very similar to 2048, you might say I stole the idea. It’s like with patents, subjectively the mechanism of a FPS shouldn’t be patentable to me, but three or 2048 might be. reply iainmerrick 2 hours agorootparentprevDoes every discussion about a FPS game need to point out it's the same concept as Doom or Quake or whatever? It's a fair question, but Doom and Quake were both very famous and successful. What sticks in my craw a bit with Threes is that the clones came out really fast, and 2048 in particular because much more famous and successful, so Threes never really got the chance to shine as much as it deserved (except when die-hard fans like me keep coming out of the woodwork to hype it, as you say). And I still think Threes has a much better and deeper game design than any of the clones! If one of the many clones and variants of Wordle had been a runaway success, and the excellent original had been relatively overlooked and forgotten, I'd similarly be promoting Wordle in threads like this. It's not that I resent the success of 2048 -- to the contrary, the OP did a great job with it and the success is deserved. But I assume that many people who have heard of 2048 have not heard of Threes, and I'd like them to try it, because it's great. reply Suppafly 2 hours agorootparent>If one of the many clones and variants of Wordle had been a runaway success, and the excellent original had been relatively overlooked and forgotten, I'd similarly be promoting Wordle in threads like this. Why? It's not a job, or even a fun hobby, to try and ensure forgotten things get the recognition they deserve. reply iainmerrick 1 hour agorootparentI'm surprised it's hard to understand! I see it as like recommending a cult movie or book to people -- that's not an unusual thing to do, right? Like when you're talking about time travel movies and there's always that one person who pops up and says \"OK, but have you seen Primer? You should see Primer!\" It can get tedious if you overdo it, sure. reply Suppafly 1 hour agorootparent>Like when you're talking about time travel movies Sure, but this wasn't a thread about games, or sliding number games, in general, it was a thread about 2048 specifically. reply zahlman 1 hour agorootparentprev>It's not a job, or even a fun hobby However, some might imagine it to be virtuous. reply Suppafly 2 hours agorootparentprev>If anything, the 2048 hype must have helped Threes tremendously. This. I've never heard anyone mention Threes outside of a sub discussion about 2048. For all the people here that claim to love it, it has had very little impact outside of being discussed as being similar to, or a precursor of, 2048. reply mega_dean 5 hours agoprevInteresting to see the times for speedruns of this game: https://www.speedrun.com/2048 2048: 24s 4096: 1m 37s 8192: 4m 53s 16384: 13m 34s 32768: 55m 24s reply simonebrunozzi 6 hours agoprevBravo Gabriele, 2048 was an amazing piece of design and UI. Loved it. You did amazing work. reply rane 22 minutes agoprevHow did you do animations for the menus and stuff? reply vitaly-pavlenko 1 hour agoprevYour game has inspired me back then to create a game on quickly finding isomorphic graphs. Since then, I haven't created any other game in 10 years. So thank you for a powerful stimulus! https://vpavlenko.github.io/fluffy-graph/ reply andrewf 4 hours agoprevRandom thing I noticed last week: there's a version of 2048 buried in the United Airlines iPhone app. Hamburger -> Games -> 2048. reply a_t48 45 minutes agoparentAlso in some inflight entertainment systems! reply WesleyLivesay 5 hours agoprevuBlock Origin blocks 330 items on that page, which I think is a personal record for the sites I have been to. reply seafoamteal 3 hours agoprevThis feels so much snappier than the original. I don't know if I'd use the powerups, because usually I play 2048 mindlessly and when I don't really want to think too much, but I might find myself pleasantly surprised in the future. reply speps 6 hours agoprevAlways interesting to hear the other side of the story: https://asherv.com/threes/threemails/ HN thread: https://news.ycombinator.com/item?id=7484106 reply eirikbakke 3 hours agoprevI made a version with llamas at some point, as a valentine's card. (Source code is yours, I just swapped the images!) # of llamas = log2(original number) https://people.csail.mit.edu/ebakke/twothousandandfortyppaca... reply wiether 6 hours agoprev> suddenly it seemed like everyone was playing it That's exactly how I remember it, yes. It started with only the tech people, but then it spread to all coworkers, friends, grandparents... Anyway, congrats on this game but I won't fall in the same trap as 10 years prior, wasting hours upon hours of productivity! reply jmclnx 5 hours agoprev2048 is only 10 years old, I am shocked. I found it a while ago when looking for the source of xjumpjump and instantly liked it. Thanks for creating 2048. Every so often I try and see if xjumpjump is available on cell phones, but none yet. reply MzHN 5 hours agoprevSometimes I have trouble listening without my thoughts drifting elsewhere. I found out that playing a Tetris clone that never increases in speed and never ends is a good way to keep a clear focus on listening. After changing phones recently my perfect Tetris clone stopped working as it was 32bit and the support was dropped. I've been looking for an alternative and finally found one in a 2048 clone with an Undo button. I thank you for that. It has saved me a lot of trouble staying focused! reply patatino 1 hour agoprevI play it evertime when I watch a tv show. I played it probably 10 thousands time. reply chubot 3 hours agoprevI remember seeing it back then, and playing it for quite awhile. Great game, thank you! reply bla3 5 hours agoprevStill very fun! I didn't notice anything different from how it was in my memory. That seems like a successful modernization :) I didn't notice that there were power ups until reading your post. reply itchyouch 4 hours agoprevJust downloaded the new classic version with ads and wanted to pass along a suggestion that Thor makes. While I understand that you’ve gotta make a living, ads are far more palatable if the user can consent to them. And the way to make the user a part of the process is to offer a trade for the ad, rather than obtrusively running them. “Would you like 500 gold to watch an ad?” Yes? Ad for in-game currency that provides powerups? That’s a great deal and it’s win/win. No? Okay, no ad, but no power up. Statistically, you almost always get a yes, but the players are 100x happier than the slimey games that force ads in unscrupulous ways. reply terabytest 4 hours agoparentThis is interesting feedback. I always thought that ads being unobtrusive and not part of gameplay would be the saner choice. In my mind, when games ask you to trade watching an add for some kind of in-game benefit or currency, that feels like an unreasonable demand. The ads impinge on the gameplay. The way I've set up the site, ads are tucked in their own corner and should never affect gameplay (though there have been instances of ads spilling over the powerup bar, I'm working on that). Thanks for sharing! reply Suppafly 2 hours agoparentprev>And the way to make the user a part of the process is to offer a trade for the ad I think that is a worse pattern overall. It's essentially converting from the idea of watching ads to support the developer to watching ads as a pay to win mechanism. Pay to win mechanisms are always worse than any other alternative. reply igleria 4 hours agoprevThank you for the entertainment 2048 gave me years ago, hope your new version has the reach you want! reply rathboma 3 hours agoprev2048 is fantastic, and going full time on your project is a huge milestone. Congrats! reply navent 6 hours agoprevWas a fun game, I still remember trying it back then! reply Twelveday 6 hours agoprevIt seems like there's a little pay to win even in a simple game like 2048 nowadays :) reply jnsaff2 4 hours agoprevMy favorite version is the wasm implementation written in rust. Source: https://github.com/dev-family/wasm-2048 Playable here: https://2048.dev.family/ reply Azrael3000 5 hours agoprevCongratulations on creating such a wonderful game. My wife still plays it, I would claim, daily. I would claim it's part of her evening relaxation :) I will most certainly forward your new developments to her and also try it myself. Good luck with your new job. reply diimdeep 3 hours agoprev20k run on the first try, enough for next 10 years https://cdn.jpg.wtf/futurico/8d/36/1729783571-8d36e171f9deb9... reply andrewmcwatters 4 hours agoprevHi gab, thanks for sharing. This was fun to play back during our Facepunch era, and it’s still entertaining now. reply Saming 1 hour agoparentHello as well from a past Facepunch user, 10 years go by very quickly @Terabytes glad to see your work, the new release is really nice reply mass_and_energy 4 hours agoprevI'm disappointed in HN for stomping this person for the game that they made. They had no idea Threes existed, made this game as an experiment, and it went viral. Despite this, they still acknowledge Threes on their site. But they post here and are dogpiled on by people saying they ripped off another game and should feel like a scumbag. That's wrong, let's be kind to each other instead of exhibiting rude behavior that discourages people from pursuing their projects because \"it's a ripoff of xyz\". This started as an experiment, and is now this person's full time career. Can we instead encourage others to follow? We're not talking about a 1:1 ripoff, we're talking about a game whose gameplay is adjacent to another game. Is Call of Duty a rip-off of Medal of Honor because they're both WWII FPS games? reply dang 4 minutes agoparentHN isn't a person—it's a statistical cloud. There is always a spectrum of opinion. Most people commenting agree with you. There are some bilious and excessive responses but that's inevitable when a thread is large. We do our best to moderate the site so that they don't dominate. reply keeganpoppen 5 minutes agoparentprevwhere is the stomping happening? i think everyone here knows the score, and both teams have points. reply The-Bus 2 hours agoparentprevEspecially when other merge games (Triple Town) existed for years. They're all in the same general genre. reply Suppafly 2 hours agorootparent>Especially when other merge games (Triple Town) existed for years. That matt guy that's posted like 100 times in this thread doesn't want to hear it, but I've literally only ever heard Threes brought up in comparison to 2048 and Triple Town. No one brings up Threes on their own organically. reply MattRix 2 hours agoparentprev\"They had no idea Threes existed\" This makes it even worse, because it means they ripped off 1024 instead (the game that ripped off Threes). That means they put even less effort into their clone, even the name is a rip off of that game. I genuinely don't get how people here can say \"Oh it's just like Call of Duty and Medal of Honor\" or say that Triple Town and Threes were similar. Obviously there's a spectrum from inspiration to cloning, but 2048 is so far on the cloning end of that spectrum that the whole comparison seems like a joke. reply pests 2 hours agorootparentI think 2048 is a better game and I like it more. reply abcd_f 6 hours agoprevnext [6 more] [flagged] samatman 15 minutes agoparent2048 is a better game, which is why it's 100x or more popular than Threes. I'm sure that you, a connoisseur, greatly prefer Threes, which is great. It can be fun to have a taste which is that of a very small minority. But, to state the nearly tautological, the difference in popularity is because 2048 is better, in the view of the vast majority. It's more fun to play, and that's what makes a game good. reply mass_and_energy 5 hours agoparentprevWhy is everybody saying this when the game mechanic of 2048 is fundamentally different. The difference in play between swiping over one tile at a time VS swiping and moving all tiles to one side is a big difference. Furthermore, the author didn't know Threes existed when they made it, so calling it a \"blatant rip\" is rudely false. Let's lift each other up instead of pushing each other down. reply jasonlotito 5 hours agoparentprevAnd Threes is a blatant rip off of other games before it as much as 2048 is of Threes. Let's go down that rabbit hole. reply MattRix 3 hours agorootparentnext [3 more] [flagged] The-Bus 3 hours agorootparentForget it, Jack, it's Tripletown. reply MattRix 2 hours agorootparentTriple Town was great in its own right, but the games are very different and have lots of different mechanics. Nobody would argue that Threes is as similar to Triple Town as 2048 is to Threes. reply abcd_f 6 hours agoprev [–] [flagged] terabytest 5 hours agoparentI wanted to address this, because I understand where you come from. Threes is actually credited in the about page[1] on play2048.co. The frustration is completely understandable, as Threes is definitely where the concept originated. Due to the chain of derivative games that led to the creation of 2048, I had not seen or heard of Threes until after it went viral. I think the inspiration Threes provided, although valid, is somewhat indirect in the case of 2048. I did try my best to reflect this in the about page and when I talked about my experience here[2]. I noticed there's no mention of it on GitHub, so I'll add it there. I am happy to do better given the feedback, but I'm not sure what kind of improvement I could make here. Let me know [1]: https://play2048.co/about [2]: https://medium.com/@gabrielecirulli/2048-success-and-me-7dc6... reply abcd_f 5 hours ago [flagged]rootparentnext [2 more] What you've done back then was questionable. What you are trying to do now is outright unethical. reply terabytest 5 hours agorootparentAgain, I understand where you’re coming from, but I don’t fully agree. While Threes was an definitely inspiration along the chain, by your logic, any creative work would need a detailed credit trail, even when it grows and evolves into something different. 2048 was not intended as anything other than an experiment, yet it took on its own life, driven by the unexpected virality and maybe by its simplicity. I’ve always tried to acknowledge Threes’ role, but I don't know that I should attach this label on every mention of 2048. I appreciate the perspective you shared. reply npinsker 5 hours agoparentprev [–] He mentions Threes! prominently in both link [1] and link [2]. reply abcd_f 5 hours agorootparent [2 more] [flagged] jckahn 5 hours agorootparent [–] What’s the problem, exactly? Is there some stated HN rule that requires a developer to clearly state the inspiration for their work? reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Gabriele Cirulli, the creator of the viral game 2048, has decided to focus on updating the game full-time, leaving his previous job.- New updates include the addition of powerups in collaboration with Prime Gaming, while still maintaining a Classic mode for traditional players.- Cirulli expresses gratitude for the game's continued popularity and seeks feedback from the community on these developments."
    ],
    "commentSummary": [
      "Gabriele Cirulli, the creator of the viral game 2048, celebrates its 10th anniversary with an updated version, adding new features like powerups while retaining the classic mode.",
      "Originally developed in just five days, 2048 became a comforting sensation for many, despite debates over its originality compared to the game Threes.",
      "Cirulli expresses gratitude to the community for their support and invites feedback on the new version, highlighting the game's enduring popularity and unique identity."
    ],
    "points": 229,
    "commentCount": 109,
    "retryCount": 0,
    "time": 1729772127
  },
  {
    "id": 41931035,
    "title": "NetGuard – rootless Android outbound per-app OSS firewall, like LittleSnitch",
    "originLink": "https://netguard.me/",
    "originBody": "Toggle navigation NetGuard Contact FAQ Changelog Support NetGuard A simple way to block access to the internet per application Google Translate NetGuard A firewall app for Android Provided by FairCode B.V. Click to enlarge NetGuard provides simple and advanced ways to block access to the internet - no root required. Applications and addresses can individually be allowed or denied access to your Wi-Fi and/or mobile connection. Blocking access to the internet can help: reduce your data usage save your battery increase your privacy Features Simple to use No root required 100% open source No calling home No tracking or analytics No advertisements Actively developed and supported Android 5.1 and later supported IPv4/IPv6 TCP/UDP supported Tethering supported Multiple device users supported Optionally allow when screen on Optionally block when roaming Optionally block system applications Optionally notify when an application accesses the internet Optionally record network usage per application per address Material design theme with light and dark theme There is no other no-root firewall offering all these features. Pro features The following pro features are available for in-app purchase: View traffic log - allows displaying and exporting1 a detailed outgoing IP traffic log for all applications, so you can exactly see what your device is doing at any moment Filter network traffic - allows selective blocking of network traffic per address per application, so you can block applications from calling home, etc while retaining internet access; enable/disable filtering mode using a settings tile (settings tiles are available from Android 7 Nougat) New application notifications - enables new application notifications from which you can directly block or allow an application Network speed graph notification - allows displaying the current network speed as a graph in a status bar notification (the top three apps are shown on Android 5 Lollipop or earlier) Appearance (theme, colors) - allows selecting from five additional application themes, all available in a light and dark variant Support development - support ongoing development, like adding new features, improving existing features, fixing bugs and adapting NetGuard to new Android versions 1 Exports are in the popular PCAP format, which can be opened in for example Wireshark If you want to use the NetGuard pro features without Google services, please see here (select \"NetGuard standalone\"). Detailed global traffic log Click to enlarge Detailed app traffic log Click to enlarge Access / speed notifications Click to enlarge Blue/orange light theme Click to enlarge Orange/grey light theme Click to enlarge Yellow/blue dark theme Click to enlarge Donate You can get all current and future NetGuard pro features (including updates) without Google Play services for the GitHub or F-Droid version by a one time donation of € 0.10 or more. If you donate 7 euros or more, you can activate the pro features on all Android devices you personally own, else you can activate the pro features one time only. By donating, some data will be processed and stored, please see the privacy notice (imprint) for which data, for what purposes and what your rights are. Please note that the Play Store rules do not allow the use of a Play Store purchase outside the Play Store, and the pro features of the Play store version can only be activated with a Play Store purchase. You can donate with PayPal or a credit card: €Instructions about how to activate the pro features will be automatically sent to your (PayPal) email address. Please make sure it is correct! To support the project with a recurrent donation, please click here. PayPal donations are not possible from some countries, in these cases you can send money directly to marcel@faircode.eu. Please mention 'NetGuard' in the remark field. or you can do a (SEPA) bank transfer to: Bank: N26 GmbH IBAN: DE31 1001 1001 2620 6925 85 BIC: NTSBDEB1XXX Country of bank: Germany (address) Account holder: Marcel Bokhorst Address: Van Doesburg-Erf 194, 3315 RG Dordrecht, the Netherlands Remark: NetGuard After a bank transfer, please contact me for instructions. Interac e-Transfers are not supported, because European banks do not support them. or you can send Bitcoin (BTC) to: bc1qykre8zgflvx70zt7ha8m6m5s8yft2s0tj2vd9t The Lightning Network is not supported. After a Bitcoin transaction, please contact me for instructions. Due to cost and low volumes, it isn't feasible to support other donation options, including other crypto currencies. Terms and conditions By donating you agree to these terms and conditions Donations are completely voluntary, so there are no refunds You are liable for any processing fees that occur due to a chargeback of a donation NetGuard is provided \"as-is\", for details see the license Privacy policy Privacy is my policy: I will not, under any circumstances whatsoever, give out or sell privacy sensitive information to anyone, unless required by law. Copyright © 2015–2024 by Marcel Bokhorst (M66B)",
    "commentLink": "https://news.ycombinator.com/item?id=41931035",
    "commentBody": "NetGuard – rootless Android outbound per-app OSS firewall, like LittleSnitch (netguard.me)215 points by transpute 17 hours agohidepastfavorite121 comments okso 13 hours agoInstalling NetGuard was revelation regarding the amount of tracking in most Android apps. You can configure it to block access by default and notify you every time an app attempts a new connection. And it rings all the time. Some software call home at 4am every day, other every hour, some send data to a dozen \"analytics\" services - services that I never opted-in for, which shows how few apps respect the RGPD. At least most apps still work when those are blocked, and NetGuard allows you to block connections to Google servers except for Google Apps, which network firewalls and DNS solutions can't. reply 0x1ceb00da 5 hours agoparent> Some software call home at 4am every day Which app? reply daghamm 2 hours agoparentprevnext [3 more] [flagged] PawgerZ 2 hours agorootparentI'm curious, how would looking at the Microsoft MFA app convince me that android apps aren't spying on me? reply daghamm 2 hours agorootparentnext [2 more] [flagged] mistermann 1 hour agorootparentYou did the same thing above but in the opposite direction. reply dsissitka 16 hours agoprevFrom the developer of FairEmail. Every once in a while I consider making the switch to KeePassXC. I trust KeePassXC but I don't really trust the mobile apps so last time around I looked into NetGuard. It's really nice but it wasn't a good fit for my use case: > NetGuard will do its best, but it is limited by the fact it must use the Android VPN service. This is the trade-off required to make a firewall which does not require root access. The firewall can only start when Android \"allows\" it to start, so it will not offer protection during early boot-up (although you can disable your network before rebooting). Also, the Android VPN service needs to be restarted to apply new rules when connectivity has changed or when the screen is being turned on or off. It will, however, be much better than nothing. I believe that also means you can't use it with Tailscale or similar. reply distances 11 hours agoparent> I trust KeePassXC but I don't really trust the mobile apps I'm using Keepass2Android Offline. It doesn't have the network permission, which for me adds a ton of trust already. Of course there are other ways to infiltrate data too, but you can be only so paranoid if you want to get things done. https://play.google.com/store/apps/details?id=keepass2androi... reply dugite-code 15 hours agoparentprev> I believe that also means you can't use it with Tailscale or similar. You sort of can. It can route over a socks5 proxy to the work profile where you can have a second VPN running. Wouldn't be an easy solution, but it can work reply 3np 8 hours agorootparentWould be curious to hear if anyone actually did (or attempted) this and have results to share. I know I have experienced VPN leaks on Android (not the one they publically fixed as it was after). A second layer wouldn't fix that properly but it should make it less likely. reply dugite-code 8 hours agorootparentHere you go, a fairly detailed blog post about it: https://itsignacioportal.github.io/netguard-pdnsf-any-vpn-co... Got this from a thread about Tracker Control, a NetGuard fork, and VPN chaining https://github.com/TrackerControl/tracker-control-android/is... reply seanw444 2 hours agoparentprev> I trust KeePassXC but I don't really trust the mobile apps Even KeePassDX? That's what I use, and it's been rock solid for me. reply transpute 15 hours agoparentprev> better than nothing Is \"nothing\" the only Android per-app outbound firewall alternative to NetGuard? reply Springtime 12 hours agorootparentAt the OS level LineageOS offers per-app network permissions, which I've used and functions as expected. One quirk from what I understand of this ticket[1] is if there's a proxy set up via a separate internet allowed app it can bypass the restriction via that app. GrapheneOS' implementation is said to prevent this. [1] https://gitlab.com/LineageOS/issues/android/-/issues/3228 reply thatloststudent 6 hours agorootparentprevThere's RethinkDNS [1](not affiliated to them, just like their software). Sometimes it gets killed on my phone, but otherwise it's a great replacement, adds some much-needed features like proxies and wireguard VPNs on top of a DNS and app level control. [1] - https://f-droid.org/packages/com.celzero.bravedns/ reply saganus 4 hours agorootparentprevI have used GlassWire (not affiliated) for a few years without issues. It's also rootless so I assume it has the same restrictions, but it's been very helpful with apps like Uber, which I use seldomly, but prefer not to have their notifications shoved in my face every 30 minutes. It's also helpful for disabling access to most of the bloatware that comes with e.g. Samsung phones and such. Probably not blocking everything, but I feel like it's at least something. reply pmontra 13 hours agorootparentprevI've been using Blockada for many years but that's a firewall against ads and trackers. No ads inside apps. Ideally I would use NetGuard to block the apps and Blockada to block ads and trackers for the apps that I allowed to perform network traffic in NetGuard. But Android allows only one active VPN and they can't be chained, so it's a hard choice. Actually it's not so hard: I keep blocking ads and trackers. reply saint_yossarian 11 hours agorootparentNetGuard does ad-blocking with a DNS blacklist, but it's a Pro feature (which I use and works great). reply flanbiscuit 3 hours agorootparentOn NetGuard's F-Droid page it lists \"Optionally block ads using a hosts file\" under its \"features\" section and not under its \"PRO Features\" section Seems like I can get ad blocking for free. https://f-droid.org/en/packages/eu.faircode.netguard/ https://github.com/M66B/NetGuard/blob/master/ADBLOCKING.md reply Onavo 11 hours agorootparentprevBlockada is most likely a DNS level blocker, netguard supports that. Alternatively you can configure it to point the DNS servers at NextDNS if you just want a nice UI to configure block lists (though NextDNS might track you). reply esperent 11 hours agorootparentNextDNS as a manual DNS server on Android is the adblocking solution I've been using for years. Is there any reason to believe they would track you, any more than any other DNS provider? reply trissi1996 4 hours agorootparentUnlike most other dns providers, they often have an account or even payment to identify you, not just your outbound IP.... reply esperent 4 hours agorootparentDo they keep logs though? reply miroljub 3 hours agorootparentThat's the whole point, you don't know if they keep logs. reply colordrops 15 hours agorootparentprevNo, if you have a rooted phone you can use AFWall+. And there are other non-root firewalls. reply catlikesshrimp 15 hours agorootparentprevMy favorite is another FOSS, but this one is special because it doesn't need network permissions. No root, ofc, so that sticks. Karma Firewall https://f-droid.org/packages/net.stargw.fok/ reply t0bia_s 6 hours agoprevIt drains battery because of VPN service solution, which is only non-rooted solution. Also if you use VPN (like Wireguard), you cannot use both. Every app has own settings for allowing WiFi, data, VPN, background data connections natively in Android. I use custom ROM that has turned off internet connection for all apps by default and you need manually allow them to connect. Which solve mine problem with constant unwanted connections. If you want really control over traffic on Android and combine with VPN, try ReThing DNS. https://www.rethinkdns.com/ reply baby_souffle 4 hours agoparent> It drains battery because of VPN service solution, which is only non-rooted solution. It's not the _only_ solution. If you're on a modern (read: last 6 years or so) version of android, you can specify a DNS over TLS server to use. If that DNS server also happens to be a PiHole, you have a good filter mechanism that doesn't hit battery life / data quotas quite like an always-on VPN does. It's a bit old, but I put together a basic project for this here: https://github.com/kquinsland/skyhole/ reply t0bia_s 3 hours agorootparentI prefer to connect via Wireguard to home network that has DNS filters (ie Pi-hole or NextDNS), because I can benefit with connection to home network any time. reply g-b-r 5 hours agoparentprev> It drains battery because of VPN service solution It doesn't really, just try it (and take actual battery duration measurements, Android misreports VPN apps battery usages) reply t0bia_s 3 hours agorootparentI did, battery drains 5-10% faster. reply g-b-r 3 hours agorootparentIf it's so, it's not a lot for privacy and security --- ReThink DNS uses the VPN service as well, by the way. And it is possible to use two VPN apps, see https://news.ycombinator.com/item?id=41933464 (yes, the battery usage adds up). Rethink DNS seems fine, anyhow. reply ignoramous 2 hours agorootparent(I work on rdns) > ReThink DNS uses the VPN service as well, by the way. Rethink (since a year ago) has had the ability forward connections per-app to multiple WireGuard upstreams at the same time. https://old.reddit.com/r/rethinkdns/comments/15r1eq9/v055_mu... / https://archive.md/RqUPe (to us, it turned out to be a deceptively difficult thing to integrate with the rest of the firewall). reply thatloststudent 2 hours agorootparentNot really on topic, but is there any plan on integrating tailscale with it? There's a userspace mode for tailscale that exposes a socks proxy, but you currently have to spawn that with Termux or another terminal, then forward your traffic on Rethink. reply ignoramous 1 hour agorootparentYes (short of anyone sponsoring us to implement it immediately) we do plan to add tsnet support (https://github.com/celzero/rethink-app/issues/1047) once we iron out existing issues with WireGuard. I'm unsure if we'd be able to support all of Tailscale's features as easily (taildrop, exit nodes etc), we'll see. reply qwertox 11 hours agoprevIts' really telling that Google doesn't offer an API to access a firewall which provides a clear list of connections and the apps which create them and a way to prohibit such specific connections, possibly also according to blacklists. They really don't want users to have control over this. reply alexashka 3 hours agoparentIt's more telling that governments haven't made it a mandatory feature on all devices with networking capabilities. Google hasn't made a successful product in over a decade (nor have their existing products improved in any meaningful sense) - these people are not capable of anything besides hoarding power (and passing leet code I guess :P). reply ilbeeper 6 hours agoparentprevIs it? Do Fedora or Ubuntu provide an API like that? reply lightdot 6 hours agorootparentYou mean, like unrestricted access to the kernel with full firewalling capabilities? ;) Yes, GNU/Linux distributions provide exactly that. reply irundebian 6 hours agorootparentNo, you have to install additional software for that. reply prophesi 2 hours agorootparentThe linux kernel has a built-in firewall, and provides iptables to configure it. Firewalld is also installed by default at least on Fedora, and UFW for debian-based. Unless this is just a battle of semantics on the fact iptables/firewalld/ufw are user space apps. reply irundebian 2 hours agorootparentThere is no clean interface to configure app-based network rules. reply bragr 1 hour agorootparentBoth SELinux and AppArmor support per app network rules, however they both leave something to be desired in terms of ease of use and features. https://selinuxproject.org/page/NetworkStatements https://manpages.ubuntu.com/manpages/bionic/en/man5/apparmor... reply prophesi 2 hours agorootparentprevI think the main gripe is Google's lack of API to access a firewall. It would make sense for the kernel to provide that API and leave the UI to user space apps. Edit: and to clarify, you can have a user space app on Android to configure a firewall but they will either require root or a VPN-based solution like NetGuard. reply kristofferg 4 hours agorootparentprevYes. reply aucisson_masque 10 hours agoprevPcapdroid is a very good alternative that allows to see which connections are made from what app to what server and at what time. You just leave it in background, check one day later and see what sneaky app you never thought of have been sending tons of data in the background. For me it helped me remove and search alternative for 4 apps, including a pill reminder (mytherapy). I would never have thought the trade-off to be reminded to take vitamin would be to constantly spy on me and sell all my data. Had i known, I would have put a reminder in my calendar. reply boneitis 3 hours agoparentThanks for chiming in; I will probably try this out in the near future and see what insights I can glean. Kind of wish there was more discussion about solutions for rooted devices and how much unwanted traffic is already blocked by AdAway (in rooted mode). reply baby_souffle 4 hours agoparentprev> including a pill reminder (mytherapy) This is an app you wanted to replace? Or this is one of the apps that you found to be a good replacement? (I am also looking for a basic medication reminder/logging app) reply aucisson_masque 3 hours agorootparentno that's the rogue app. i checked on the play store, all full of trackers. open source is great but always having issue, either it lacks functionalities or it's buggy. at the end, i decided i could put a reminder on my phone and be done with that. reply miroljub 5 hours agoparentprevNetguard does the same. You can see a per-app list of connections. Furthermore, you can many hosts either globally, or on an app level. reply g-b-r 10 hours agoparentprevExcept that... that doesn't block anything?? reply aucisson_masque 3 hours agorootparentit can block, i think it's a 'donation' feature. anyway, it's not the same as netguard. Pcapdroid helps to identify bad application that you can either remove, or if not possible, use netguard later on to block. reply octygen 6 hours agorootparentprevYeah, but you can just uninstall offenders reply aucisson_masque 3 hours agorootparentWhat about microsoft office ? I want to be able to open word and excel file on my phone, but i don't want to give microsoft access to everything on my phone including dick pics, sextape, bank sheet and other personal data. Because android allows such bad practice, blocking internet access can be usefull. reply g-b-r 5 hours agorootparentprevWith a firewall you can keep using them, instead (and maybe only let through some of the traffic) reply bramhaag 2 hours agoprevI occasionally set up notifications when apps make requests using NetGuard and let it run for a day. The result is always depressing, lots of apps phoning home that I haven't opened in days... I let it run today, and the worst offenders I have installed are Spotify (various requests to Facebook endpoints, I have no Facebook integration turned on) and Speedtest (constant requests to their logging endpoint and ad partners). This is all happening without me actually using those apps. reply achristmascarl 3 hours agoprevAfter seeing the post[0] yesterday about how much surveillance can be done using mobile app data that can be bought online by pretty much anyone... I am very happy to learn about NetGuard today. [0] https://news.ycombinator.com/item?id=41923931 reply noname120 8 hours agoprevAdGuard is also rootless, but in addition if you have root then it can install a system-wide certificate that enables it to decrypt HTTPS requests to do granular filtering (not just at the domain level). Basically just like uBlock does, except that it's system-wide and works in all apps[1]. [1] Except apps that pin their certificates. But you can exclude those or install another module[2] (not from AdGuard) which disables certificate pinning. [2] For example: https://github.com/cryptoexpertssss/TrustMeAlready reply notpushkin 13 hours agoprevThis is really good. Using it on my Oculus to block connections to Facebook servers. (On my phones, I use LineageOS which can manage network permissions per app right in app settings.) reply p0w3n3d 13 hours agoprevI'm using netguard. It's really good, but conflicts with wireguard (another VPN I am using). It's because the firewall is realised using VPN API, when running netguard it uses VPN API to control the traffic reply oever 5 hours agoparentYou could put a firewall at the other end of the wireguard connection. reply qwertox 4 hours agorootparentThis doesn't tell you which app is connecting to which IP. reply okso 13 hours agoparentprevI am dreaming of an open-source app that adds Wireguard capabilities to NetGuard or vice-versa. Having to switch from one to the other is very annoying. reply thatloststudent 6 hours agorootparentThere's no need to dream about it, it already exists: https://f-droid.org/packages/com.celzero.bravedns/ I used to use it when I wasn't on grapheneOS and needed to block internet access. reply miroljub 5 hours agorootparentIt's annoying to see so much RethinkDNS propaganda on every Netguard or Invizible Pro thread on the internet. That gives me a bad feeling, and it's the reason I started to consider RethinkDNS scummy. reply lightdot 3 hours agorootparentWas the above post propaganda? Or was it just a user recommendation? Perhaps the reason it gets mentioned often is simply because it's a good piece of software. Then again, perhaps not! In any case, I'd be careful about using 3rd party DNS (and other) services, but that's for the user to decide, depending on the situation one is in. Using one's own resolver is always a good practice, even in countries where ISPs are not selling customer's private data to anyone that comes along and where governments don't monitor and repress their citizens on every step... We live in strange times where even EU countries misuse resolvers to censor certain web pages, while, for example, independent Balkan countries do not. Go figure... reply thatloststudent 2 hours agorootparentprevI didn't intend for this to be propaganda, I don't even use it anymore since I'm on grapheneOS now. But I have tried all three. I need to use a VPN in split mode for certain apps, and since using Tor with apps wasn't part of my threat model, I ended up using RethinkDNS (the app only). I don't necessarily like their upstream DNS servers, but considering that I can use my own server (and do), I don't consider that to be an issue. reply p0w3n3d 7 hours agorootparentprevespecially that Wireguard silently disables NetGuard, and then the communication undergoes (at least in my case) silent reply o999 2 hours agoprevGrapheneOS has Network as an Android permission, that you can grant/revoke per app reply microflash 15 hours agoprevIs there something like this for iOS? I know Adguard but it is not open source. reply transpute 14 hours agoparentLockdown claims to be open-source. Their appstore client has paid mode for per-app blocklists. I don't know if they support per-app allow lists. https://github.com/confirmedcode/Lockdown-iOS reply zuhsetaqi 11 hours agoparentprevSomething similar would be Proxyman: https://apps.apple.com/de/app/proxyman-network-debug-tool/id... But it’s more designed to be a debug tool than to block traffic from specific apps reply alibert 10 hours agoparentprevSomething already included in iOS is App Privacy Report feature. https://support.apple.com/en-us/102188 reply halfcat 8 hours agorootparentThis doesn’t seem to show any site I browse in the DuckDuckGo app, which raises the question, if DDG can hide connections it makes from showing in privacy report, can any (more nefarious) app do the same? reply quaff 12 hours agoparentprevhttps://github.com/AdguardTeam/AdguardForiOS I am pretty sure it is open source. I’ve been using it for years both for upstream DNS and blocklist filtering. reply microflash 10 hours agorootparentHuh, didn’t know about the repo. Thanks for posting it here. reply radicality 12 hours agoparentprevIsn’t AdGuard just dns protection (and Safari extension). Afaik something like this isn’t easily doable in iOS. Some options are: * Shadowrocket - you can set complex rules on what hosts/connections should be routed by what, but afaik you are not able to isolate traffic on a per-app basis. * I think you can set up per-app VPN on iOS, but you must use MDM, can’t do it on an unmanaged profile. Link: https://support.apple.com/guide/deployment/vpn-overview-depa... reply transpute 11 hours agorootparent> per-app VPN on iOS, but you must use MDM Yet iOS allows Safari per-site VPN without enterprise MDM, via Apple Configurator profile. reply varenc 12 hours agoparentprevThe APIs to implement traffic policies on a per-app basis just don’t exist on iOS. You can create a VPN connection and have an app manage all network traffic that way, but you can’t associate traffic with specific apps since this would run afoul of their sandbox. At least without jailbreaking. reply newscracker 11 hours agoparentprevI came here to ask a similar question, looking for alternatives to Lockdown Privacy on iOS/iPadOS. [1] I've been using Lockdown for some years as a local and system firewall to block trackers across all apps, but this company got sold a few years ago and has since been annoyingly and frequently pushing for its paid subscription. It also moved some free blocking lists to the paid subscription. Any alternatives to Lockdown on iOS/iPadOS would be nice to know about. [1]: https://lockdownprivacy.com/ reply saagarjha 11 hours agoparentprevOnly in China I believe. reply udev4096 14 hours agoprevAfaik, this requires an active VPN connection. With GrapheneOS, there is a network toggle which disables the INTERNET access to any individual app so it doesn't make sense to use NetGuard reply str3wer 13 hours agoparent> it doesn't make sense to use NetGuard unless you use any other phone that is not a google pixel running GrapheneOS reply palata 10 hours agorootparentWhich is literally the meaning of \"With GrapheneOS, [...] it doesn't make sense to use NetGuard\", isn't it? reply notpushkin 11 hours agorootparentprevLineageOS has this too, and it’s available on a fair bit of non-Pixel phones. reply udev4096 11 hours agorootparentLineageOS doesn't really cut off the INTERNET access properly. Graphene's approach is more robust. I still wonder why such an important feature is not in the AOSP itself reply notpushkin 11 hours agorootparentHmm, I haven’t looked much into it, but I assumed they both expose the same mechanism from AOSP? reply udev4096 9 hours agorootparenthttps://grapheneos.org/faq#firewall reply aucisson_masque 10 hours agorootparentprev> still wonder why such an important feature is not in the AOSP itself Really? Remind yourself who works on Android. Google have been removing functionalities that benefit privacy for ever, and then put half backed alternative buried under tons of settings. reply udev4096 9 hours agorootparentI am well aware of that. AOSP still has quite a lot of contributors outside of google reply immibis 6 hours agorootparentWhich company decides which contributions get accepted? reply wanderingmind 13 hours agoparentprevIt can do other things. It can monitor network traffic and block ads within apps through multiple host files . Also having a single app to toggle is more UX friendly than toggling multiple apps network access. reply udev4096 11 hours agorootparentRunning pihole as your home DNS is far more feasible for blocking ads and other intrusive requests. The UX perspective is a valid point reply prmoustache 11 hours agorootparentBut that ties you down to connecting to a vpn every single time you leave home. reply udev4096 9 hours agorootparentYou can have a remote instance of pi hole, normally renting a cheap VPS reply attendant3446 9 hours agoparentprevNetGuard allows you to block specific hosts. I use it on GrapheneOS for monitoring and selective host blocking. reply saint_yossarian 11 hours agoparentprevI use NetGuard on GrapheneOS to block mobile data for certain apps. reply sheerun 4 hours agoprevLineageOS is fine for me, just I wish I could restrict connections to some ip ranges somehow, like allowing only 10.x.x.x in/out connections from given app on os level reply user070223 12 hours agoprevDon't forget to periodicly update the hosts file: Settings -> Backup -> Download hosts file. The creator also made XPrivacyLua (hooks Android API system calls to block premissions) reply acidburnNSA 7 hours agoprevDoes this show anything at all without purchases? I installed it and turned on notify on access and I have gotten no notifications so far. reply ldoughty 2 hours agoparentLooks like most of the information features require a purchase... And the price is only visible at checkout. reply g-b-r 5 hours agoparentprevIf you downloaded the Play Store version, it can't intercept all the apps reply tuananh 8 hours agoprevis this the best available option on Android? Is there any alternative I should give a try? reply palata 10 hours agoprevHow does that compare to having filtering done by the VPN? Many VPN services tend to do that nowadays, right? reply colordrops 15 hours agoprevIf you use a rootless firewall doesn't it act like a VPN? And then you aren't able to use VPNs unless you disable it? Useless IMO for heavy VPN users. reply attendant3446 9 hours agoparentYou can split the usage by profiles (e.g. work profile with Shelter[1]) or separate users. 1. https://f-droid.org/en/packages/net.typeblog.shelter/ reply g-b-r 5 hours agorootparentYou can also have NetGuard actually go through the VPN (https://news.ycombinator.com/item?id=41933464) reply extraduder_ire 8 hours agoprevWhile I'm normally not someone who pays for apps, and is annoyed at fdroid releases having paid features, I had such a fun time figuring out and bypassing the challenge/response part of the app (without just commenting it out and recompiling) that I decided to send €1.23 his way. reply cinntaile 9 hours agoprevWhen you try to purchase pro features it should really display the price... reply mcsniff 15 hours agoprevAOSP has a pretty well functioning firewall, good enough that GrapheneOS implements and builds on it. https://grapheneos.org/faq#firewall Yeah there's no stats or traffic info, but until Android has a real way of using multiple VPN interfaces or exposes adding routes to users/apps, these VPN-based local tools are a no-go. reply lopkeny12ko 15 hours agoprevHow do you use this if you already have an always-on VPN enabled? reply dilawar 15 hours agoparentYou cant. It complains that some other VPN is already running. reply g-b-r 10 hours agoparentprevThere's a somewhat complex way to use it together with another VPN app, with work profiles, see see https://itsignacioportal.github.io/netguard-pdnsf-any-vpn-co... But in case the VPN app supports running as a simple proxy, without using the VPN service, you can avoid work profiles and just have NetGuard connect to it. reply kyleee 16 hours agoprevSoftware worth paying for. I bought a license for a Google free lineage os phone that I’ve since moved on from, but still use as a media and general purpose computing device. reply calvinmorrison 5 hours agoprevNetGuard is amazing. Whats disgusting is that android has so many permissions controls EXCEPT network access! it's insane and its because its just a data vacuuming device. reply awsation 6 hours agoprevBlokada (blokada.org) is another good alternative. reply stevenhuang 15 hours agoprev [–] Similar but open source: https://github.com/celzero/rethink-app reply transpute 15 hours agoparent [–] > similar but open source Netguard (per HN title) is open-source GPLv3: https://github.com/M66B/NetGuard Rethink uses cloud services by default? The [DNS] resolver is deployed to Fly.io at max.rethinkdns.com and Deno Deploy at rdns.deno.dev too, apart from the default deployment on Cloudflare Workers. reply ignoramous 14 hours agorootparentrdns dev here > Rethink uses cloud services by default? There isn't anything sinister going on here with the use of \"cloud services\" [0][1]. Rethink, which is geared more towards anti-censorship, has its default resolver \"ip-fronted\" on Cloudflare (whose IPs are seldom blocked) and it works great in countries where the app is popular. Users can opt to switch to any DoH, DoT, ODoH, DNSCrypt v3 resolver of their choice. In fact, we encourage users on our reddit/telegram groups to use ODoH (we also run a public-facing ODoH proxy) and DNSCrypt upstreams because of their privacy guarantees. [0] If anything, hosting it cost us a bomb: https://old.reddit.com/r/rethinkdns/comments/17h2y6r / https://archive.md/slpZ9 [1] Our stub resolvers are open-source & \"open deploy\" (ie deploy straight from github actions): https://github.com/serverless-dns/serverless-dns/actions/ reply justmarc 13 hours agorootparentFWIW, Netguard's UI feels like one of an average opensource mobile app, while Rethink is a very polished experience. Well done! reply miroljub 4 hours agorootparentprev> rdns dev here I have a question for you about RethinkDNS: Can you point me the link to one thread or question about Netguard on some major internet forums like HN, Reddit or similar, where you or other RethinkDNS devs did not jump in and hijacked the thread? Only one example, please? Your spammy marketing tactics of spamming makes your product looks like a scum, and I don't even have a desire to test. Also, why do you keep comparing one on device firewall like Netguard with a cloud first solution like RethinkDNS? reply ignoramous 4 hours agorootparent> hijacked the thread I (try and) mostly only respond to subthreads that mention Rethink. > why do you keep comparing one on device firewall like Netguard with a cloud first solution like RethinkDNS Rethink isn't cloud-first. > where you or other RethinkDNS devs There's 2 of us. The other one isn't on HN, or reddit, or any other forum. > spammy marketing tactics of spamming makes your product looks like a scum I'm sorry you think that. reply stevenhuang 15 hours agorootparentprev [–] Right, I saw their pro features listed and skipped over the oss mention. Yes rethink uses public fly resolver by default but you can self host that as well. Apologies, that's something I should have mentioned. https://github.com/serverless-dns/serverless-dns reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "NetGuard is an Android firewall app that allows users to block internet access on a per-application basis without needing root access.- The app is open-source, supports Android 5.1 and later, and emphasizes privacy by not tracking user data.- Pro features, such as traffic logs and network filtering, can be accessed through in-app purchases or donations, with no reliance on Google services."
    ],
    "commentSummary": [
      "NetGuard is a rootless Android firewall that blocks app connections, highlighting the extensive tracking conducted by apps and allowing users to block connections to Google servers.",
      "Users note limitations such as the requirement for Android's VPN service, which can impact battery life and conflict with other VPNs, prompting discussions on alternatives like RethinkDNS and LineageOS's network permissions.",
      "Some users prefer rooted solutions like AFWall+, and there are discussions about iOS alternatives and the absence of built-in Android firewall APIs."
    ],
    "points": 215,
    "commentCount": 121,
    "retryCount": 0,
    "time": 1729733476
  },
  {
    "id": 41932225,
    "title": "Goodbye from a Linux Community Volunteer",
    "originLink": "https://lore.kernel.org/netdev/2m53bmuzemamzc4jzk2bj7tli22ruaaqqe34a2shtdtqrd52hp@alifh66en3rj/T/#u",
    "originBody": "netdev.vger.kernel.org archive mirror help / color / mirror / Atom feed * linux: Goodbye from a Linux community volunteer @ 2024-10-24 4:27 Serge Semin 2024-10-24 6:55 ` Reimar Döffinger ` (4 more replies) 0 siblings, 5 replies; 17+ messages in thread From: Serge Semin @ 2024-10-24 4:27 UTC (permalink / raw) To: Jon Mason, Dave Jiang, Allen Hubbe, ntb, Andy Shevchenko,Andy Shevchenko, Kory Maincent, Cai Huoqing, dmaengine,Mark Brown, linux-spi, Damien Le Moal, linux-ide, Paul Burton,Thomas Bogendoerfer, Arnd Bergmann, Jiaxun Yang, linux-mips,Bjorn Helgaas, Manivannan Sadhasivam, Yoshihiro Shimoda,linux-pci, David S. Miller, Jakub Kicinski, Paolo Abeni,Andrew Lunn, Russell King, Vladimir Oltean, Keguang Zhang,Yanteng Si, netdev, Rob Herring, Krzysztof Kozlowski,Guenter Roeck, linux-hwmon, Borislav Petkov, linux-edac,Greg Kroah-Hartman, linux-serial Cc: Andrew Halaney, Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan,Dmitry Kozlov, Sergey Shtylyov, Evgeniy Dushistov,Geert Uytterhoeven, Sergio Paracuellos, Nikita Shubin,linux-renesas-soc, linux-kernel Hello Linux-kernel community, I am sure you have already heard the news caused by the recent Greg' commit 6e90b675cf942e (\"MAINTAINERS: Remove some entries due to various compliance requirements.\"). As you may have noticed the change concerned some of the Ru-related developers removal from the list of the official kernel maintainers, including me. The community members rightly noted that the _quite_ short commit log contained very vague terms with no explicit change justification. No matter how hard I tried to get more details about the reason, alas the senior maintainer I was discussing the matter with haven't given an explanation to what compliance requirements that was. I won't cite the exact emails text since it was a private messaging, but the key words are \"sanctions\", \"sorry\", \"nothing I can do\", \"talk to your (company) lawyer\"... I can't say for all the guys affected by the change, but my work for the community has been purely _volunteer_ for more than a year now (and less than half of it had been payable before that). For that reason I have no any (company) lawyer to talk to, and honestly after the way the patch has been merged in I don't really want to now. Silently, behind everyone's back, _bypassing_ the standard patch-review process, with no affected developers/subsystem notified - it's indeed the worse way to do what has been done. No gratitude, no credits to the developers for all these years of the devoted work for the community. No matter the reason of the situation but haven't we deserved more than that? Adding to the GREDITS file at least, no?.. I can't believe the kernel senior maintainers didn't consider that the patch wouldn't go unnoticed, and the situation might get out of control with unpredictable results for the community, if not straight away then in the middle or long term perspective. I am sure there have been plenty ways to solve the problem less harmfully, but they decided to take the easiest path. Alas what's done is done. A bifurcation point slightly initiated a year ago has just been fully implemented. The reason of the situation is obviously in the political ground which in this case surely shatters a basement the community has been built on in the first place. If so then God knows what might be next (who else might be sanctioned...), but the implemented move clearly sends a bad signal to the Linux community new comers, to the already working volunteers and hobbyists like me. Thus even if it was still possible for me to send patches or perform some reviews, after what has been done my motivation to do that as a volunteer has simply vanished. (I might be doing a commercial upstreaming in future though). But before saying goodbye I'd like to express my gratitude to all the community members I have been lucky to work with during all these years. Specifically: NTB-folks, Jon, Dave, Allen. NTB was my starting point in the kernel upstream work. Thanks for the initial advices and despite of very-very-very tough reviews with several complete patchset refactorings, I learned a lot back then. That experience helped me afterwards. Thanks a lot for that. BTW since then I've got several thank-you letters for the IDT NTB and IDT EEPROM drivers. If not for you it wouldn't have been possible. Andy, it's hard to remember who else would have given me more on my Linux kernel journey as you have. We first met in the I2C subsystem review of my DW I2C driver patches. Afterwards we've got to be frequently meeting here and there - GPIO, SPI, TTY, DMA, NET, etc, clean/fixes/features patch(set)s. Quite heat discussions in your first reviews drove me crazy really. But all the time we managed to come up with some consensus somehow. And you never quit the discussions calmly explaining your point over and over. You never refused to provide more detailed justification to your requests/comments even though you didn't have to. Thanks to that I learned how to be patient to reviewers and reviewees. And of course thank you for the Linux-kernel knowledges and all the tips and tricks you shared. * Andy, please note due to the situation I am not going to work on my DW DMAC fixes patchset anymore. So if you ever wish to have DW UART stably working with the DW DMA-engine driver, then feel free to pick the series up: Link: https://lore.kernel.org/dmaengine/20240911184710.4207-1-fancer.lancer@gmail.com/ Linus (Walleij), after you merged one of my pretty much heavy patchset in you suggested to me to continue the DW APB GPIO driver maintaining. It was a first time I was asked to maintain a not-my driver. Thank you for the trust. I'll never forget that. Mark, thank you very much for entrusting the DW APB SSI driver maintenance to me. I've put a lot of efforts into making it more generic and less errors-prune, especially when it comes working under a DMA-engine control or working in the mem-ops mode. I am sure the results have been beneficial to a lot of DW SPI-controller users since then. Damien, our first and last meeting was at my generic AHCI-platform and DW AHCI SATA driver patches review. You didn't make it a quick and easy path. But still all the reviews comments were purely on the technical basis, and the patches were eventually merged in. Thank you for your time and experience I've got from the reviews. Paul, Thomas, Arnd, Jiaxun, we met several times in the mailing list during my MIPS P5600 patches and just generic MIPS patches review. It was always a pleasure to discuss the matters with such brilliant experts in the field. Alas I've spent too much time working on the patches for another subsystems and failed to submit all the MIPS-related bits. Sorry I didn't keep my promise, but as you can see the circumstances have suddenly drawn its own deadline. Bjorn, Mani, we were working quite a lot with you in the framework of the DW PCIe RC drivers. You reviewed my patches. I helped you to review another patches for some time. Despite of some arguing it was always a pleasure to work with you. Mani, special thanks for the cooperative DW eDMA driver maintenance. I think we were doing a great work together. Paolo, Jakub, David, Andrew, Vladimir, Russell. The network subsystem and particularly the STMMAC driver (no doubt the driver sucks) have turned to be a kind of obstacle on which my current Linux-kernel activity has stopped. I really hope that at least in some way my help with the incoming STMMAC and DW XPCS patches reviews lightened up your maintainance duty. I know Russell might disagree, but I honestly think that all our discussions were useful after all, at least for me. I also think we did a great work working together with Russell on the DW GMAC/QoS ETH PCS patches. Hopefully you'll find a time to finish it up after all. Rob, Krzysztof, from your reviews I've learned a lot about the most hardwary part of the kernel - DT sources and DT-bindings. All your comments have been laconic and straight to the point. That made reviews quick and easy. Thank you very much for that. Guenter, special thanks for reviewing and accepting my patches to the hwmon and watchdog subsystems. It was pleasure to be working with you. Borislav, we disagreed and argued a lot. So my DW uMCTL2 DDRC EDAC patches even got stuck in limbo for quite a long time. Anyway thank you for the time you spent reviewing my patches and trying to explain your point. * Borislav, it looks like I won't be able to work on my Synopsys EDAC patchsets anymore. If you or somebody else could pick them up and finish up the work it would be great (you can find it in the lore archive). The patches convert the mainly Zynq(MP)-specific Synopsys EDAC driver to supporting the generic DW uMCTL2 DDRC. It would be very beneficial for each platform based on that controller. Greg, we met several times in the mailing lists. You reviewed my patches sent for the USB and TTY subsystems, and all the time the process was straight, highly professional, and simpler than in the most of my other case. Thank you very much for that. Yoshihiro, Keguang, Yanteng, Kory, Cai and everybody I was lucky to meet in the kernel mailing lists, but forgot to mention here. Thank you for the time spent for our cooperative work on making the Linux kernel better. It was a pleasure to meet you here. I also wish to say huge thanks to the community members trying to defend the kicked off maintainers and for support you expressed in these days. It means a lot. A little bit statics of my kernel-work at the end: Signed-off patches:518 Reviewed and Acked patches: 253 Tested patches: 80 You might say not the greatest achievement for seven years comparing to some other developers. Perhaps. But I meant each of these tags, be sure. I guess that's it. If you ever need some info or consultation regarding the drivers I used to maintain or the respective hardware or the Synopsys IP-cores (about which I've got quite comprehensive knowledge by this time), feel free to reach me out via this email. I am always willing to help to the community members. Hope we'll meet someday in more pleasant circumstances and drink a couple or more beers together. But now it's time to say good bye. Sorry for a long-read text. I wish good luck on your Linux-way. Best Regards, -Serge(y) ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 4:27 linux: Goodbye from a Linux community volunteer Serge Semin @ 2024-10-24 6:55 ` Reimar Döffinger 2024-10-24 7:32 ` Philipp Stanner ` (3 subsequent siblings) 4 siblings, 0 replies; 17+ messages in thread From: Reimar Döffinger @ 2024-10-24 6:55 UTC (permalink / raw) To: Serge Semin Cc: Jon Mason, Dave Jiang, Allen Hubbe, ntb, Andy Shevchenko,Andy Shevchenko, Kory Maincent, Cai Huoqing, dmaengine,Mark Brown, linux-spi, Damien Le Moal, linux-ide, Paul Burton,Thomas Bogendoerfer, Arnd Bergmann, Jiaxun Yang, linux-mips,Bjorn Helgaas, Manivannan Sadhasivam, Yoshihiro Shimoda,linux-pci, David S. Miller, Jakub Kicinski, Paolo Abeni,Andrew Lunn, Russell King, Vladimir Oltean, Keguang Zhang,Yanteng Si, netdev, Rob Herring, Krzysztof Kozlowski,Guenter Roeck, linux-hwmon, Borislav Petkov, linux-edac,Greg Kroah-Hartman, linux-serial, Andrew Halaney, Nikita Travkin,Ivan Kokshaysky, Alexander Shiyan, Dmitry Kozlov, Sergey Shtylyov,Evgeniy Dushistov, Geert Uytterhoeven, Sergio Paracuellos,Nikita Shubin, linux-renesas-soc, linux-kernel Hello Serge! I do not have many contributions to show to give it extra weight nor do I actually know you. Nevertheless I still wanted to say thank you for your nice message even if it is for a sad occasion, and share your sentiment of hoping for more pleasant circumstances. Best regards, Reimar (and apologies if anyone is annoyed by the wide CC list, but I think it's important for at least some thank yous to be public and nobody else seems to have written one yet) > On 24 Oct 2024, at 06:27, Serge Seminwrote: > > Hello Linux-kernel community, > > I am sure you have already heard the news caused by the recent Greg' commit > 6e90b675cf942e (\"MAINTAINERS: Remove some entries due to various compliance > requirements.\"). As you may have noticed the change concerned some of the > Ru-related developers removal from the list of the official kernel maintainers, > including me. > > The community members rightly noted that the _quite_ short commit log contained > very vague terms with no explicit change justification. No matter how hard I > tried to get more details about the reason, alas the senior maintainer I was > discussing the matter with haven't given an explanation to what compliance > requirements that was. I won't cite the exact emails text since it was a private > messaging, but the key words are \"sanctions\", \"sorry\", \"nothing I can do\", \"talk > to your (company) lawyer\"... I can't say for all the guys affected by the > change, but my work for the community has been purely _volunteer_ for more than > a year now (and less than half of it had been payable before that). For that > reason I have no any (company) lawyer to talk to, and honestly after the way the > patch has been merged in I don't really want to now. Silently, behind everyone's > back, _bypassing_ the standard patch-review process, with no affected > developers/subsystem notified - it's indeed the worse way to do what has been > done. No gratitude, no credits to the developers for all these years of the > devoted work for the community. No matter the reason of the situation but > haven't we deserved more than that? Adding to the GREDITS file at least, no?.. > > I can't believe the kernel senior maintainers didn't consider that the patch > wouldn't go unnoticed, and the situation might get out of control with > unpredictable results for the community, if not straight away then in the middle > or long term perspective. I am sure there have been plenty ways to solve the > problem less harmfully, but they decided to take the easiest path. Alas what's > done is done. A bifurcation point slightly initiated a year ago has just been > fully implemented. The reason of the situation is obviously in the political > ground which in this case surely shatters a basement the community has been built > on in the first place. If so then God knows what might be next (who else might > be sanctioned...), but the implemented move clearly sends a bad signal to the > Linux community new comers, to the already working volunteers and hobbyists like > me. > > Thus even if it was still possible for me to send patches or perform some > reviews, after what has been done my motivation to do that as a volunteer has > simply vanished. (I might be doing a commercial upstreaming in future though). > But before saying goodbye I'd like to express my gratitude to all the community > members I have been lucky to work with during all these years. Specifically: > > NTB-folks, Jon, Dave, Allen. NTB was my starting point in the kernel upstream > work. Thanks for the initial advices and despite of very-very-very tough reviews > with several complete patchset refactorings, I learned a lot back then. That > experience helped me afterwards. Thanks a lot for that. BTW since then I've got > several thank-you letters for the IDT NTB and IDT EEPROM drivers. If not for you > it wouldn't have been possible. > > Andy, it's hard to remember who else would have given me more on my Linux kernel > journey as you have. We first met in the I2C subsystem review of my DW I2C > driver patches. Afterwards we've got to be frequently meeting here and there - > GPIO, SPI, TTY, DMA, NET, etc, clean/fixes/features patch(set)s. Quite heat > discussions in your first reviews drove me crazy really. But all the time we > managed to come up with some consensus somehow. And you never quit the > discussions calmly explaining your point over and over. You never refused to > provide more detailed justification to your requests/comments even though you > didn't have to. Thanks to that I learned how to be patient to reviewers > and reviewees. And of course thank you for the Linux-kernel knowledges and all > the tips and tricks you shared. > > * Andy, please note due to the situation I am not going to work on my DW DMAC > fixes patchset anymore. So if you ever wish to have DW UART stably working with the > DW DMA-engine driver, then feel free to pick the series up: > Link: https://lore.kernel.org/dmaengine/20240911184710.4207-1-fancer.lancer@gmail.com/ > > Linus (Walleij), after you merged one of my pretty much heavy patchset in you > suggested to me to continue the DW APB GPIO driver maintaining. It was a first > time I was asked to maintain a not-my driver. Thank you for the trust. I'll > never forget that. > > Mark, thank you very much for entrusting the DW APB SSI driver maintenance to > me. I've put a lot of efforts into making it more generic and less errors-prune, > especially when it comes working under a DMA-engine control or working in the > mem-ops mode. I am sure the results have been beneficial to a lot of DW > SPI-controller users since then. > > Damien, our first and last meeting was at my generic AHCI-platform and DW AHCI > SATA driver patches review. You didn't make it a quick and easy path. But still > all the reviews comments were purely on the technical basis, and the patches > were eventually merged in. Thank you for your time and experience I've got from > the reviews. > > Paul, Thomas, Arnd, Jiaxun, we met several times in the mailing list during my > MIPS P5600 patches and just generic MIPS patches review. It was always a > pleasure to discuss the matters with such brilliant experts in the field. Alas > I've spent too much time working on the patches for another subsystems and > failed to submit all the MIPS-related bits. Sorry I didn't keep my promise, but > as you can see the circumstances have suddenly drawn its own deadline. > > Bjorn, Mani, we were working quite a lot with you in the framework of the DW > PCIe RC drivers. You reviewed my patches. I helped you to review another patches > for some time. Despite of some arguing it was always a pleasure to work with > you. Mani, special thanks for the cooperative DW eDMA driver maintenance. I > think we were doing a great work together. > > Paolo, Jakub, David, Andrew, Vladimir, Russell. The network subsystem and > particularly the STMMAC driver (no doubt the driver sucks) have turned to be a > kind of obstacle on which my current Linux-kernel activity has stopped. I really > hope that at least in some way my help with the incoming STMMAC and DW XPCS > patches reviews lightened up your maintainance duty. I know Russell might > disagree, but I honestly think that all our discussions were useful after all, > at least for me. I also think we did a great work working together with Russell > on the DW GMAC/QoS ETH PCS patches. Hopefully you'll find a time to finish it up > after all. > > Rob, Krzysztof, from your reviews I've learned a lot about the most hardwary part > of the kernel - DT sources and DT-bindings. All your comments have been laconic > and straight to the point. That made reviews quick and easy. Thank you very > much for that. > > Guenter, special thanks for reviewing and accepting my patches to the hwmon and > watchdog subsystems. It was pleasure to be working with you. > > Borislav, we disagreed and argued a lot. So my DW uMCTL2 DDRC EDAC patches even > got stuck in limbo for quite a long time. Anyway thank you for the time > you spent reviewing my patches and trying to explain your point. > > * Borislav, it looks like I won't be able to work on my Synopsys EDAC patchsets > anymore. If you or somebody else could pick them up and finish up the work it > would be great (you can find it in the lore archive). The patches convert the > mainly Zynq(MP)-specific Synopsys EDAC driver to supporting the generic DW > uMCTL2 DDRC. It would be very beneficial for each platform based on that > controller. > > Greg, we met several times in the mailing lists. You reviewed my patches sent > for the USB and TTY subsystems, and all the time the process was straight, > highly professional, and simpler than in the most of my other case. > Thank you very much for that. > > Yoshihiro, Keguang, Yanteng, Kory, Cai and everybody I was lucky to meet in the > kernel mailing lists, but forgot to mention here. Thank you for the time spent > for our cooperative work on making the Linux kernel better. It was a pleasure to > meet you here. > > I also wish to say huge thanks to the community members trying to > defend the kicked off maintainers and for support you expressed in > these days. It means a lot. > > A little bit statics of my kernel-work at the end: > > Signed-off patches: 518 > Reviewed and Acked patches: 253 > Tested patches: 80 > > You might say not the greatest achievement for seven years comparing to some > other developers. Perhaps. But I meant each of these tags, be sure. > > I guess that's it. If you ever need some info or consultation regarding the > drivers I used to maintain or the respective hardware or the Synopsys IP-cores > (about which I've got quite comprehensive knowledge by this time), feel free to > reach me out via this email. I am always willing to help to the community > members. > > Hope we'll meet someday in more pleasant circumstances and drink a > couple or more beers together. But now it's time to say good bye. > Sorry for a long-read text. I wish good luck on your Linux-way. > > Best Regards, > -Serge(y) > ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 4:27 linux: Goodbye from a Linux community volunteer Serge Semin 2024-10-24 6:55 ` Reimar Döffinger @ 2024-10-24 7:32 ` Philipp Stanner 2024-10-24 11:01 ` Jiaxun Yang ` (2 subsequent siblings) 4 siblings, 0 replies; 17+ messages in thread From: Philipp Stanner @ 2024-10-24 7:32 UTC (permalink / raw) To: Serge Semin, Jon Mason, Dave Jiang, Allen Hubbe, ntb,Andy Shevchenko, Andy Shevchenko, Kory Maincent, Cai Huoqing,dmaengine, Mark Brown, linux-spi, Damien Le Moal, linux-ide,Paul Burton, Thomas Bogendoerfer, Arnd Bergmann, Jiaxun Yang,linux-mips, Bjorn Helgaas, Manivannan Sadhasivam,Yoshihiro Shimoda, linux-pci, David S. Miller, Jakub Kicinski,Paolo Abeni, Andrew Lunn, Russell King, Vladimir Oltean,Keguang Zhang, Yanteng Si, netdev, Rob Herring,Krzysztof Kozlowski, Guenter Roeck, linux-hwmon, Borislav Petkov,linux-edac, Greg Kroah-Hartman, linux-serial Cc: Andrew Halaney, Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan,Dmitry Kozlov, Sergey Shtylyov, Evgeniy Dushistov,Geert Uytterhoeven, Sergio Paracuellos, Nikita Shubin,linux-renesas-soc, linux-kernel On Thu, 2024-10-24 at 07:27 +0300, Serge Semin wrote: > Hello Linux-kernel community, > > I am sure you have already heard the news caused by the recent Greg' > commit > 6e90b675cf942e (\"MAINTAINERS: Remove some entries due to various > compliance > requirements.\"). As you may have noticed the change concerned some of > the > Ru-related developers removal from the list of the official kernel > maintainers, > including me. > > The community members rightly noted that the _quite_ short commit log > contained > very vague terms with no explicit change justification. No matter how > hard I > tried to get more details about the reason, alas the senior > maintainer I was > discussing the matter with haven't given an explanation to what > compliance > requirements that was. I won't cite the exact emails text since it > was a private > messaging, but the key words are \"sanctions\", \"sorry\", \"nothing I can > do\", \"talk > to your (company) lawyer\"... I can't say for all the guys affected by > the > change, but my work for the community has been purely _volunteer_ for > more than > a year now (and less than half of it had been payable before that). > For that > reason I have no any (company) lawyer to talk to, and honestly after > the way the > patch has been merged in I don't really want to now. Silently, behind > everyone's > back, _bypassing_ the standard patch-review process, with no affected > developers/subsystem notified - it's indeed the worse way to do what > has been > done. No gratitude, no credits to the developers for all these years > of the > devoted work for the community. No matter the reason of the situation > but > haven't we deserved more than that? Adding to the GREDITS file at > least, no?.. > > I can't believe the kernel senior maintainers didn't consider that > the patch > wouldn't go unnoticed, and the situation might get out of control > with > unpredictable results for the community, if not straight away then in > the middle > or long term perspective. I am sure there have been plenty ways to > solve the > problem less harmfully, but they decided to take the easiest path. > Alas what's > done is done. A bifurcation point slightly initiated a year ago has > just been > fully implemented. The reason of the situation is obviously in the > political > ground which in this case surely shatters a basement the community > has been built > on in the first place. If so then God knows what might be next (who > else might > be sanctioned...), but the implemented move clearly sends a bad > signal to the > Linux community new comers, to the already working volunteers and > hobbyists like > me. I'm also quite shocked and even baffled about how this has been handled. This is not how leaders should communicate difficult or big decisions. It's the most disappointing event I have witnessed in the project. There is the form and there is the content – about the content one cannot do much, when the state he or his organization resides in gives an order. But about the form one can indeed do much. No \"Thank you!\", no \"I hope we can work together again once the world has become sane(r)\"... srsly, what the hell. No idea why they felt the need to do it that way, but it certainly is not the open source way, neither is it decent or honorable. That said, thank you for all your work, Serge! I believe that nothing that has been accomplished with a candid mindset and decent intentions is ever done for nothing, although it often pays off way differently than expected. So I hope this will be the case for you, too. Take care, Philipp > > Thus even if it was still possible for me to send patches or perform > some > reviews, after what has been done my motivation to do that as a > volunteer has > simply vanished. (I might be doing a commercial upstreaming in future > though). > But before saying goodbye I'd like to express my gratitude to all the > community > members I have been lucky to work with during all these years. > Specifically: > > NTB-folks, Jon, Dave, Allen. NTB was my starting point in the kernel > upstream > work. Thanks for the initial advices and despite of very-very-very > tough reviews > with several complete patchset refactorings, I learned a lot back > then. That > experience helped me afterwards. Thanks a lot for that. BTW since > then I've got > several thank-you letters for the IDT NTB and IDT EEPROM drivers. If > not for you > it wouldn't have been possible. > > Andy, it's hard to remember who else would have given me more on my > Linux kernel > journey as you have. We first met in the I2C subsystem review of my > DW I2C > driver patches. Afterwards we've got to be frequently meeting here > and there - > GPIO, SPI, TTY, DMA, NET, etc, clean/fixes/features patch(set)s. > Quite heat > discussions in your first reviews drove me crazy really. But all the > time we > managed to come up with some consensus somehow. And you never quit > the > discussions calmly explaining your point over and over. You never > refused to > provide more detailed justification to your requests/comments even > though you > didn't have to. Thanks to that I learned how to be patient to > reviewers > and reviewees. And of course thank you for the Linux-kernel > knowledges and all > the tips and tricks you shared. > > * Andy, please note due to the situation I am not going to work on my > DW DMAC > fixes patchset anymore. So if you ever wish to have DW UART stably > working with the > DW DMA-engine driver, then feel free to pick the series up: > Link: > https://lore.kernel.org/dmaengine/20240911184710.4207-1-fancer.lancer@gmail.com/ > > Linus (Walleij), after you merged one of my pretty much heavy > patchset in you > suggested to me to continue the DW APB GPIO driver maintaining. It > was a first > time I was asked to maintain a not-my driver. Thank you for the > trust. I'll > never forget that. > > Mark, thank you very much for entrusting the DW APB SSI driver > maintenance to > me. I've put a lot of efforts into making it more generic and less > errors-prune, > especially when it comes working under a DMA-engine control or > working in the > mem-ops mode. I am sure the results have been beneficial to a lot of > DW > SPI-controller users since then. > > Damien, our first and last meeting was at my generic AHCI-platform > and DW AHCI > SATA driver patches review. You didn't make it a quick and easy path. > But still > all the reviews comments were purely on the technical basis, and the > patches > were eventually merged in. Thank you for your time and experience > I've got from > the reviews. > > Paul, Thomas, Arnd, Jiaxun, we met several times in the mailing list > during my > MIPS P5600 patches and just generic MIPS patches review. It was > always a > pleasure to discuss the matters with such brilliant experts in the > field. Alas > I've spent too much time working on the patches for another > subsystems and > failed to submit all the MIPS-related bits. Sorry I didn't keep my > promise, but > as you can see the circumstances have suddenly drawn its own > deadline. > > Bjorn, Mani, we were working quite a lot with you in the framework of > the DW > PCIe RC drivers. You reviewed my patches. I helped you to review > another patches > for some time. Despite of some arguing it was always a pleasure to > work with > you. Mani, special thanks for the cooperative DW eDMA driver > maintenance. I > think we were doing a great work together. > > Paolo, Jakub, David, Andrew, Vladimir, Russell. The network subsystem > and > particularly the STMMAC driver (no doubt the driver sucks) have > turned to be a > kind of obstacle on which my current Linux-kernel activity has > stopped. I really > hope that at least in some way my help with the incoming STMMAC and > DW XPCS > patches reviews lightened up your maintainance duty. I know Russell > might > disagree, but I honestly think that all our discussions were useful > after all, > at least for me. I also think we did a great work working together > with Russell > on the DW GMAC/QoS ETH PCS patches. Hopefully you'll find a time to > finish it up > after all. > > Rob, Krzysztof, from your reviews I've learned a lot about the most > hardwary part > of the kernel - DT sources and DT-bindings. All your comments have > been laconic > and straight to the point. That made reviews quick and easy. Thank > you very > much for that. > > Guenter, special thanks for reviewing and accepting my patches to the > hwmon and > watchdog subsystems. It was pleasure to be working with you. > > Borislav, we disagreed and argued a lot. So my DW uMCTL2 DDRC EDAC > patches even > got stuck in limbo for quite a long time. Anyway thank you for the > time > you spent reviewing my patches and trying to explain your point. > > * Borislav, it looks like I won't be able to work on my Synopsys EDAC > patchsets > anymore. If you or somebody else could pick them up and finish up the > work it > would be great (you can find it in the lore archive). The patches > convert the > mainly Zynq(MP)-specific Synopsys EDAC driver to supporting the > generic DW > uMCTL2 DDRC. It would be very beneficial for each platform based on > that > controller. > > Greg, we met several times in the mailing lists. You reviewed my > patches sent > for the USB and TTY subsystems, and all the time the process was > straight, > highly professional, and simpler than in the most of my other case. > Thank you very much for that. > > Yoshihiro, Keguang, Yanteng, Kory, Cai and everybody I was lucky to > meet in the > kernel mailing lists, but forgot to mention here. Thank you for the > time spent > for our cooperative work on making the Linux kernel better. It was a > pleasure to > meet you here. > > I also wish to say huge thanks to the community members trying to > defend the kicked off maintainers and for support you expressed in > these days. It means a lot. > > A little bit statics of my kernel-work at the end: > > Signed-off patches:518 > Reviewed and Acked patches: 253 > Tested patches: 80 > > You might say not the greatest achievement for seven years comparing > to some > other developers. Perhaps. But I meant each of these tags, be sure. > > I guess that's it. If you ever need some info or consultation > regarding the > drivers I used to maintain or the respective hardware or the Synopsys > IP-cores > (about which I've got quite comprehensive knowledge by this time), > feel free to > reach me out via this email. I am always willing to help to the > community > members. > > Hope we'll meet someday in more pleasant circumstances and drink a > couple or more beers together. But now it's time to say good bye. > Sorry for a long-read text. I wish good luck on your Linux-way. > > Best Regards, > -Serge(y) > ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 4:27 linux: Goodbye from a Linux community volunteer Serge Semin 2024-10-24 6:55 ` Reimar Döffinger 2024-10-24 7:32 ` Philipp Stanner @ 2024-10-24 11:01 ` Jiaxun Yang 2024-10-24 14:50 ` James Bottomley 2024-10-24 18:52 ` Oleksiy Protas 4 siblings, 0 replies; 17+ messages in thread From: Jiaxun Yang @ 2024-10-24 11:01 UTC (permalink / raw) To: Serge Semin, Jon Mason, Dave Jiang, Allen Hubbe, ntb,Andy Shevchenko, Andy Shevchenko, Kory Maincent, Cai Huoqing,dmaengine, Mark Brown, linux-spi, Damien Le Moal, linux-ide,paulburton@kernel.org, Thomas Bogendoerfer, Arnd Bergmann,linux-mips@vger.kernel.org, Bjorn Helgaas, Manivannan Sadhasivam,Yoshihiro Shimoda, linux-pci, David S . Miller, Jakub Kicinski,Paolo Abeni, Andrew Lunn, Russell King, Vladimir Oltean,Kelvin Cheung, Yanteng Si, netdev, Rob Herring,Krzysztof Kozlowski, Guenter Roeck, linux-hwmon, Borislav Petkov,linux-edac, Greg Kroah-Hartman, linux-serial Cc: Andrew Halaney, Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan,Dmitry Kozlov, Sergey Shtylyov, Evgeniy Dushistov,Geert Uytterhoeven, Sergio Paracuellos, Nikita Shubin,linux-renesas-soc, linux-kernel 在2024年10月24日十月 上午5:27，Serge Semin写道： > Hello Linux-kernel community, > > I am sure you have already heard the news caused by the recent Greg' commit > 6e90b675cf942e (\"MAINTAINERS: Remove some entries due to various compliance > requirements.\"). As you may have noticed the change concerned some of the > Ru-related developers removal from the list of the official kernel maintainers, > including me. > > The community members rightly noted that the _quite_ short commit log contained > very vague terms with no explicit change justification. No matter how hard I > tried to get more details about the reason, alas the senior maintainer I was > discussing the matter with haven't given an explanation to what compliance > requirements that was. I won't cite the exact emails text since it was a private > messaging, but the key words are \"sanctions\", \"sorry\", \"nothing I can do\", \"talk > to your (company) lawyer\"... I can't say for all the guys affected by the > change, but my work for the community has been purely _volunteer_ for more than > a year now (and less than half of it had been payable before that). For that > reason I have no any (company) lawyer to talk to, and honestly after the way the > patch has been merged in I don't really want to now. Silently, behind everyone's > back, _bypassing_ the standard patch-review process, with no affected > developers/subsystem notified - it's indeed the worse way to do what has been > done. No gratitude, no credits to the developers for all these years of the > devoted work for the community. No matter the reason of the situation but > haven't we deserved more than that? Adding to the GREDITS file at least, no?.. > > I can't believe the kernel senior maintainers didn't consider that the > patch > wouldn't go unnoticed, and the situation might get out of control with > unpredictable results for the community, if not straight away then in > the middle > or long term perspective. I am sure there have been plenty ways to > solve the > problem less harmfully, but they decided to take the easiest path. Alas > what's > done is done. A bifurcation point slightly initiated a year ago has > just been > fully implemented. The reason of the situation is obviously in the > political > ground which in this case surely shatters a basement the community has > been built > on in the first place. If so then God knows what might be next (who > else might > be sanctioned...), but the implemented move clearly sends a bad signal > to the > Linux community new comers, to the already working volunteers and > hobbyists like > me. Hi Serge, I was shocked by the way senior maintainers handle that patch when people put it under my radar. Then I scroll down it and see all those familiar names including Sergey Shtylyov and you... This is certainly not the way things should be done. Even if legal requirements necessitate the action, there are far better ways to handle it. Instead, the most absurd and shameful option has been chosen. It's deeply disappointing to me that, when doubts were raised about the process, Linus resorted to personal attacks rather than addressing our concerns. As a hobbyist driven by the ideals of free software, with Linus as a role model, I now find myself questioning my own beliefs. Where are we going? Where should we go? > [...] > > Paul, Thomas, Arnd, Jiaxun, we met several times in the mailing list during my > MIPS P5600 patches and just generic MIPS patches review. It was always a > pleasure to discuss the matters with such brilliant experts in the field. Alas > I've spent too much time working on the patches for another subsystems and > failed to submit all the MIPS-related bits. Sorry I didn't keep my promise, but > as you can see the circumstances have suddenly drawn its own deadline. Thank you, Serge. It's always a pleasure working with you. Your professionalism has been truly impressive, and our discussions were consistently constructive. I especially appreciate how your bug reports and review comments are always backed by detailed reasoning, it really stood out to me. You'll be missed. I'll see what I can do here for your work on MIPS. > [...] > > Hope we'll meet someday in more pleasant circumstances and drink a > couple or more beers together. But now it's time to say good bye. > Sorry for a long-read text. I wish good luck on your Linux-way. I'm happy to have a pint with you if we can meet someday. For now, take care. Thanks > > Best Regards, > -Serge(y) -- - Jiaxun ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 4:27 linux: Goodbye from a Linux community volunteer Serge Semin ` (2 preceding siblings ...) 2024-10-24 11:01 ` Jiaxun Yang @ 2024-10-24 14:50 ` James Bottomley 2024-10-24 15:59 ` Jiaxun Yang ` (2 more replies) 2024-10-24 18:52 ` Oleksiy Protas 4 siblings, 3 replies; 17+ messages in thread From: James Bottomley @ 2024-10-24 14:50 UTC (permalink / raw) To: Serge Semin, Jon Mason, Dave Jiang, Allen Hubbe, ntb,Andy Shevchenko, Andy Shevchenko, Kory Maincent, Cai Huoqing,dmaengine, Mark Brown, linux-spi, Damien Le Moal, linux-ide,Paul Burton, Thomas Bogendoerfer, Arnd Bergmann, Jiaxun Yang,linux-mips, Bjorn Helgaas, Manivannan Sadhasivam,Yoshihiro Shimoda, linux-pci, David S. Miller, Jakub Kicinski,Paolo Abeni, Andrew Lunn, Russell King, Vladimir Oltean,Keguang Zhang, Yanteng Si, netdev, Rob Herring,Krzysztof Kozlowski, Guenter Roeck, linux-hwmon, Borislav Petkov,linux-edac, Greg Kroah-Hartman, linux-serial Cc: Andrew Halaney, Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan,Dmitry Kozlov, Sergey Shtylyov, Evgeniy Dushistov,Geert Uytterhoeven, Sergio Paracuellos, Nikita Shubin,linux-renesas-soc, linux-kernel On Thu, 2024-10-24 at 07:27 +0300, Serge Semin wrote: > Hello Linux-kernel community, > > I am sure you have already heard the news caused by the recent Greg' > commit 6e90b675cf942e (\"MAINTAINERS: Remove some entries due to > various compliance requirements.\"). As you may have noticed the > change concerned some of the Ru-related developers removal from the > list of the official kernel maintainers, including me. > > The community members rightly noted that the _quite_ short commit log > contained very vague terms with no explicit change justification. No > matter how hard I tried to get more details about the reason, alas > the senior maintainer I was discussing the matter with haven't given > an explanation to what compliance requirements that was. Please accept all of our apologies for the way this was handled. A summary of the legal advice the kernel is operating under is If your company is on the U.S. OFAC SDN lists, subject to an OFAC sanctions program, or owned/controlled by a company on the list, our ability to collaborate with you will be subject to restrictions, and you cannot be in the MAINTAINERS file. Anyone who wishes to can query the list here: https://sanctionssearch.ofac.treas.gov/ In your specific case, the problem is your employer is on that list. If there's been a mistake and your employer isn't on the list, that's the documentation Greg is looking for. I would also like to thank you for all your past contributions and if you (or anyone else) would like an entry in the credit file, I'm happy to shepherd it for you if you send me what you'd like. Again, we're really sorry it's come to this, but all of the Linux infrastructure and a lot of its maintainers are in the US and we can't ignore the requirements of US law. We are hoping that this action alone will be sufficient to satisfy the US Treasury department in charge of sanctions and we won't also have to remove any existing patches. Regards, James Bottomley ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 14:50 ` James Bottomley @ 2024-10-24 15:59 ` Jiaxun Yang 2024-10-24 16:18 ` Dragan Milivojević 2024-10-24 16:27 ` James Bottomley 2024-10-24 16:30 ` Peter Cai 2024-10-24 16:56 ` Hantong Chen 2 siblings, 2 replies; 17+ messages in thread From: Jiaxun Yang @ 2024-10-24 15:59 UTC (permalink / raw) To: James Bottomley, Serge Semin, Jon Mason, Dave Jiang, Allen Hubbe,ntb, Andy Shevchenko, Andy Shevchenko, Kory Maincent, Cai Huoqing,dmaengine, Mark Brown, linux-spi, Damien Le Moal, linux-ide,paulburton@kernel.org, Thomas Bogendoerfer, Arnd Bergmann,linux-mips@vger.kernel.org, Bjorn Helgaas, Manivannan Sadhasivam,Yoshihiro Shimoda, linux-pci, David S . Miller, Jakub Kicinski,Paolo Abeni, Andrew Lunn, Russell King, Vladimir Oltean,Kelvin Cheung, Yanteng Si, netdev, Rob Herring,Krzysztof Kozlowski, Guenter Roeck, linux-hwmon, Borislav Petkov,linux-edac, Greg Kroah-Hartman, linux-serial Cc: Andrew Halaney, Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan,Dmitry Kozlov, Sergey Shtylyov, Evgeniy Dushistov,Geert Uytterhoeven, Sergio Paracuellos, Nikita Shubin,linux-renesas-soc, linux-kernel 在2024年10月24日十月 下午3:50，James Bottomley写道： > On Thu, 2024-10-24 at 07:27 +0300, Serge Semin wrote: >> Hello Linux-kernel community, [...] Hi James, Sorry to chime in here, and thanks for making things clear. However, I have some questions regarding this statement, please see below: > Please accept all of our apologies for the way this was handled. A > summary of the legal advice the kernel is operating under is In what capacity this statement was made, i.e, who is \"our\" here and \"we\" below? Are you representing any formal group in this case? > > If your company is on the U.S. OFAC SDN lists, subject to an OFAC > sanctions program, or owned/controlled by a company on the list, our > ability to collaborate with you will be subject to restrictions, and > you cannot be in the MAINTAINERS file. > > Anyone who wishes to can query the list here: > > https://sanctionssearch.ofac.treas.gov/ I did a quick search and found the following entry: HUAWEI TECHNOLOGIES CO., LTD. Under CMIC-EO13959 sanction program. Although it's a Non-SDN sanction, it can still be interpreted as \"subject to an OFAC sanctions program\". How should we handle it? > [...] > > Again, we're really sorry it's come to this, but all of the Linux > infrastructure and a lot of its maintainers are in the US and we can't > ignore the requirements of US law. We are hoping that this action > alone will be sufficient to satisfy the US Treasury department in > charge of sanctions and we won't also have to remove any existing > patches. I truly appreciate that someone has finally addressed the underlying issue. I understand the importance of protecting infrastructure and maintainers from potential legal threats by ensuring compliance. My intent in asking these questions is not to place anyone in a difficult position, but simply to gain a better understanding of the situation, so I can take appropriate action to keep everyone safe. Disclaimer: I have no connection to any sanctioned body, and I'm a resident of UK. Thanks > > Regards, > > James Bottomley -- - Jiaxun ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 15:59 ` Jiaxun Yang @ 2024-10-24 16:18 ` Dragan Milivojević 2024-10-24 16:27 ` James Bottomley 1 sibling, 0 replies; 17+ messages in thread From: Dragan Milivojević @ 2024-10-24 16:18 UTC (permalink / raw) To: Jiaxun Yang Cc: James Bottomley, Serge Semin, Jon Mason, Dave Jiang, Allen Hubbe,ntb, Andy Shevchenko, Andy Shevchenko, Kory Maincent, Cai Huoqing,dmaengine, Mark Brown, linux-spi, Damien Le Moal, linux-ide,paulburton@kernel.org, Thomas Bogendoerfer, Arnd Bergmann,linux-mips@vger.kernel.org, Bjorn Helgaas, Manivannan Sadhasivam,Yoshihiro Shimoda, linux-pci, David S . Miller, Jakub Kicinski,Paolo Abeni, Andrew Lunn, Russell King, Vladimir Oltean,Kelvin Cheung, Yanteng Si, netdev, Rob Herring,Krzysztof Kozlowski, Guenter Roeck, linux-hwmon, Borislav Petkov,linux-edac, Greg Kroah-Hartman, linux-serial, Andrew Halaney,Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan, Dmitry Kozlov,Sergey Shtylyov, Evgeniy Dushistov, Geert Uytterhoeven,Sergio Paracuellos, Nikita Shubin, linux-renesas-soc,linux-kernel > > HUAWEI TECHNOLOGIES CO., LTD. Under CMIC-EO13959 sanction program. > > Although it's a Non-SDN sanction, it can still be interpreted as > \"subject to an OFAC sanctions program\". > > How should we handle it? It has already been \"handled\" using the same vague justifications with a cherry on top: some good old American bigotry and supremacy about the \"free world\". https://lore.kernel.org/all/20241024032637.34286-1-quake.wang@gmail.com/ ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 15:59 ` Jiaxun Yang 2024-10-24 16:18 ` Dragan Milivojević @ 2024-10-24 16:27 ` James Bottomley 2024-10-24 16:58 ` Jiaxun Yang 1 sibling, 1 reply; 17+ messages in thread From: James Bottomley @ 2024-10-24 16:27 UTC (permalink / raw) To: Jiaxun Yang, Serge Semin, Jon Mason, Dave Jiang, Allen Hubbe, ntb,Andy Shevchenko, Andy Shevchenko, Kory Maincent, Cai Huoqing,dmaengine, Mark Brown, linux-spi, Damien Le Moal, linux-ide,paulburton@kernel.org, Thomas Bogendoerfer, Arnd Bergmann,linux-mips@vger.kernel.org, Bjorn Helgaas, Manivannan Sadhasivam,Yoshihiro Shimoda, linux-pci, David S . Miller, Jakub Kicinski,Paolo Abeni, Andrew Lunn, Russell King, Vladimir Oltean,Kelvin Cheung, Yanteng Si, netdev, Rob Herring,Krzysztof Kozlowski, Guenter Roeck, linux-hwmon, Borislav Petkov,linux-edac, Greg Kroah-Hartman, linux-serial Cc: Andrew Halaney, Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan,Dmitry Kozlov, Sergey Shtylyov, Evgeniy Dushistov,Geert Uytterhoeven, Sergio Paracuellos, Nikita Shubin,linux-renesas-soc, linux-kernel On Thu, 2024-10-24 at 16:59 +0100, Jiaxun Yang wrote: > > > 在2024年10月24日十月 下午3:50，James Bottomley写道： > > On Thu, 2024-10-24 at 07:27 +0300, Serge Semin wrote: > > > Hello Linux-kernel community, > [...] > > Hi James, > > Sorry to chime in here, and thanks for making things clear. > > However, I have some questions regarding this statement, please see > below: > > > Please accept all of our apologies for the way this was handled. A > > summary of the legal advice the kernel is operating under is > > In what capacity this statement was made, i.e, who is \"our\" here and > \"we\" below? Are you representing any formal group in this case? It's Linux, so no official capacity at all. However, I am expressing the views of a number of people I talked to but it's not fair of me to name them. > > If your company is on the U.S. OFAC SDN lists, subject to an > > OFAC > > sanctions program, or owned/controlled by a company on the list, > > our > > ability to collaborate with you will be subject to restrictions, > > and > > you cannot be in the MAINTAINERS file. > > > > Anyone who wishes to can query the list here: > > > > https://sanctionssearch.ofac.treas.gov/ > > I did a quick search and found the following entry: > > HUAWEI TECHNOLOGIES CO., LTD. Under CMIC-EO13959 sanction program. > > Although it's a Non-SDN sanction, it can still be interpreted as > \"subject to an OFAC sanctions program\". > > How should we handle it? A big chunk of the reason it's taken so long just to get the above is that the Lawyers (of which I'm not one) are still discussing the specifics and will produce a much longer policy document later, so they don't want to be drawn into questions like this. However, my non- legal-advice rule of thumb that I'm applying until I hear otherwise is not on the SDN list, not a problem. James ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 14:50 ` James Bottomley 2024-10-24 15:59 ` Jiaxun Yang @ 2024-10-24 16:30 ` Peter Cai 2024-10-24 17:18 ` Dragan Milivojević 2024-10-24 17:33 ` Jiaxun Yang 2024-10-24 16:56 ` Hantong Chen 2 siblings, 2 replies; 17+ messages in thread From: Peter Cai @ 2024-10-24 16:30 UTC (permalink / raw) To: James Bottomley, Serge Semin, Jon Mason, Dave Jiang, Allen Hubbe,ntb, Andy Shevchenko, Andy Shevchenko, Kory Maincent, Cai Huoqing,dmaengine, Mark Brown, linux-spi, Damien Le Moal, linux-ide,Paul Burton, Thomas Bogendoerfer, Arnd Bergmann, Jiaxun Yang,linux-mips, Bjorn Helgaas, Manivannan Sadhasivam,Yoshihiro Shimoda, linux-pci, David S. Miller, Jakub Kicinski,Paolo Abeni, Andrew Lunn, Russell King, Vladimir Oltean,Keguang Zhang, Yanteng Si, netdev, Rob Herring,Krzysztof Kozlowski, Guenter Roeck, linux-hwmon, Borislav Petkov,linux-edac, Greg Kroah-Hartman, linux-serial Cc: Andrew Halaney, Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan,Dmitry Kozlov, Sergey Shtylyov, Evgeniy Dushistov,Geert Uytterhoeven, Sergio Paracuellos, Nikita Shubin,linux-renesas-soc, linux-kernel, Kexy Biscuit, jeffbai,Linus Torvalds Hi James, Thanks for your clarification. This sort of non-provocative clarifications of the regulations you need to comply to has always been what the community wants to see. _This_ should have been the first official statement when anyone raised the concern, instead of Greg's attempt to \"defuse\" the situation over private correspondence, or Linus Torvald's outright defamation and accusing anyone who dares to disagree of being a \"Russian troll\". This is not even to mention the _complete ignorance_ and arrogance shown by his statement on what sending a revert patch means. With sanctions in place, there is no reasonable person who will demand the LF or the Linux Kernel maintainers to do otherwise. However, as someone who does rely on Linux for daily work, and as someone who has contributed to the Linux project and its community, I think seeing the following should be the minimum: 1. Linus Torvalds (+Cc) send an apology letter to **everyone** who he accused of being a Russian troll; 2. Linus Torvalds need to **unconditionally retract** his personal attack on Kexy Biscuit, the person who sent the revert patch in protest (+Cc), and acknowledge that people who work with AOSC.io aren't \"state-sponsored paid actors\"; 3. This type of statement should be included somewhere public as soon as practically possible should sanction compliance affect kernel development again in the future; 4. No personal attacks should be allowed based on tinfoil-hat reasoning. Thanks, Peter. On 10/24/24 10:50 AM, James Bottomley wrote: > On Thu, 2024-10-24 at 07:27 +0300, Serge Semin wrote: >> Hello Linux-kernel community, >> >> I am sure you have already heard the news caused by the recent Greg' >> commit 6e90b675cf942e (\"MAINTAINERS: Remove some entries due to >> various compliance requirements.\"). As you may have noticed the >> change concerned some of the Ru-related developers removal from the >> list of the official kernel maintainers, including me. >> >> The community members rightly noted that the _quite_ short commit log >> contained very vague terms with no explicit change justification. No >> matter how hard I tried to get more details about the reason, alas >> the senior maintainer I was discussing the matter with haven't given >> an explanation to what compliance requirements that was. > > Please accept all of our apologies for the way this was handled. A > summary of the legal advice the kernel is operating under is > > If your company is on the U.S. OFAC SDN lists, subject to an OFAC > sanctions program, or owned/controlled by a company on the list, our > ability to collaborate with you will be subject to restrictions, and > you cannot be in the MAINTAINERS file. > > Anyone who wishes to can query the list here: > > https://sanctionssearch.ofac.treas.gov/ > > In your specific case, the problem is your employer is on that list. > If there's been a mistake and your employer isn't on the list, that's > the documentation Greg is looking for. > > I would also like to thank you for all your past contributions and if > you (or anyone else) would like an entry in the credit file, I'm happy > to shepherd it for you if you send me what you'd like. > > Again, we're really sorry it's come to this, but all of the Linux > infrastructure and a lot of its maintainers are in the US and we can't > ignore the requirements of US law. We are hoping that this action > alone will be sufficient to satisfy the US Treasury department in > charge of sanctions and we won't also have to remove any existing > patches. > > Regards, > > James Bottomley > ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 14:50 ` James Bottomley 2024-10-24 15:59 ` Jiaxun Yang 2024-10-24 16:30 ` Peter Cai @ 2024-10-24 16:56 ` Hantong Chen 2024-10-24 17:35 ` Theodore Ts'o 2 siblings, 1 reply; 17+ messages in thread From: Hantong Chen @ 2024-10-24 16:56 UTC (permalink / raw) To: james.bottomley Cc: ajhalaney, allenbh, andrew, andriy.shevchenko, andy, arnd,bhelgaas, bp, broonie, cai.huoqing, dave.jiang, davem, dlemoal,dmaengine, dushistov, fancer.lancer, geert, gregkh, ink, jdmason,jiaxun.yang, keguang.zhang, kory.maincent, krzk, kuba, linux-edac,linux-hwmon, linux-ide, linux-kernel, linux-mips, linux-pci,linux-renesas-soc, linux-serial, linux-spi, linux, linux,manivannan.sadhasivam, netdev, nikita.shubin, nikita, ntb,olteanv, pabeni, paulburton, robh, s.shtylyov, sergio.paracuellos,shc_work, siyanteng, tsbogend, xeb, yoshihiro.shimoda.uh [-- Warning: decoded text below may be mangled, UTF-8 assumed --] [-- Attachment #1: Type: text/plain, Size: 3482 bytes --] > If you haven't heard of Russian sanctions yet, you should try to read > the news some day. And by \"news\", I don't mean Russian > state-sponsored spam. > As to sending me a revert patch - please use whatever mush you call > brains. I'm Finnish. Did you think I'd be *supporting* Russian > aggression? Apparently it's not just lack of real news, it's lack of > history knowledge too. Hi James, Here's what Linus has said, and it's more than just \"sanction.\" Moreover, we have to remove any maintainers who come from the following countries or regions, as they are listed in *Countries of Particular Concern* and are subject to impending sanctions: - Burma, People’s Republic of China, Cuba, Eritrea, Iran, the Democratic People’s Republic of Korea, Nicaragua, Pakistan, Russia, Saudi Arabia, Tajikistan, and Turkmenistan. - Algeria, Azerbaijan, the Central African Republic, Comoros, and Vietnam. For People’s Republic of China, there are about 500 entities that are on the U.S. OFAC SDN / non-SDN lists, especially HUAWEI, which is one of the most active employers from versions 5.16 through 6.1, according to statistics. This is unacceptable, and we must take immediate action to address it, with the **same** reason. On 10/24/24 10:50 AM, James Bottomley wrote: > On Thu, 2024-10-24 at 07:27 +0300, Serge Semin wrote: >> Hello Linux-kernel community, >> >> I am sure you have already heard the news caused by the recent Greg' >> commit 6e90b675cf942e (\"MAINTAINERS: Remove some entries due to >> various compliance requirements.\"). As you may have noticed the >> change concerned some of the Ru-related developers removal from the >> list of the official kernel maintainers, including me. >> >> The community members rightly noted that the _quite_ short commit log >> contained very vague terms with no explicit change justification. No >> matter how hard I tried to get more details about the reason, alas >> the senior maintainer I was discussing the matter with haven't given >> an explanation to what compliance requirements that was. > > Please accept all of our apologies for the way this was handled. A > summary of the legal advice the kernel is operating under is > > If your company is on the U.S. OFAC SDN lists, subject to an OFAC > sanctions program, or owned/controlled by a company on the list, our > ability to collaborate with you will be subject to restrictions, and > you cannot be in the MAINTAINERS file. > > Anyone who wishes to can query the list here: > > https://sanctionssearch.ofac.treas.gov/ > > In your specific case, the problem is your employer is on that list. > If there's been a mistake and your employer isn't on the list, that's > the documentation Greg is looking for. > > I would also like to thank you for all your past contributions and if > you (or anyone else) would like an entry in the credit file, I'm happy > to shepherd it for you if you send me what you'd like. > > Again, we're really sorry it's come to this, but all of the Linux > infrastructure and a lot of its maintainers are in the US and we can't > ignore the requirements of US law. We are hoping that this action > alone will be sufficient to satisfy the US Treasury department in > charge of sanctions and we won't also have to remove any existing > patches. > > Regards, > > James Bottomley > ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 16:27 ` James Bottomley @ 2024-10-24 16:58 ` Jiaxun Yang 0 siblings, 0 replies; 17+ messages in thread From: Jiaxun Yang @ 2024-10-24 16:58 UTC (permalink / raw) To: James Bottomley, Serge Semin, Jon Mason, Dave Jiang, Allen Hubbe,ntb, Andy Shevchenko, Andy Shevchenko, Kory Maincent, Cai Huoqing,dmaengine, Mark Brown, linux-spi, Damien Le Moal, linux-ide,paulburton@kernel.org, Thomas Bogendoerfer, Arnd Bergmann,linux-mips@vger.kernel.org, Bjorn Helgaas, Manivannan Sadhasivam,Yoshihiro Shimoda, linux-pci, David S . Miller, Jakub Kicinski,Paolo Abeni, Andrew Lunn, Russell King, Vladimir Oltean,Kelvin Cheung, Yanteng Si, netdev, Rob Herring,Krzysztof Kozlowski, Guenter Roeck, linux-hwmon, Borislav Petkov,linux-edac, Greg Kroah-Hartman, linux-serial Cc: Andrew Halaney, Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan,Dmitry Kozlov, Sergey Shtylyov, Evgeniy Dushistov,Geert Uytterhoeven, Sergio Paracuellos, Nikita Shubin,linux-renesas-soc, linux-kernel 在2024年10月24日十月 下午5:27，James Bottomley写道： > On Thu, 2024-10-24 at 16:59 +0100, Jiaxun Yang wrote: [...] Hi James, > > It's Linux, so no official capacity at all. However, I am expressing > the views of a number of people I talked to but it's not fair of me to > name them. Fair enough, I was hoping that it's from Linux Foundation but it's still good news to me that it do represent some respectful individuals. > [...] >> How should we handle it? > > A big chunk of the reason it's taken so long just to get the above is > that the Lawyers (of which I'm not one) are still discussing the > specifics and will produce a much longer policy document later, so they > don't want to be drawn into questions like this. However, my non- > legal-advice rule of thumb that I'm applying until I hear otherwise is > not on the SDN list, not a problem. Thank you for sharing your insights. I'm looking forward to the document. While I remain quite upset about how things were handled, your message has helped restore some of my confidence in the community. I agree with Peter Cai's earlier comment that steps should be taken to address the harm caused by the initial reckless actions, particularly to those who were humiliated. It is also important to put measures in place to prevent such drama from recurring. A formal procedure for handling urgent compliance requests may be a sensible step forward. I hold our community in high regard and would be heartbreaking to see the reputation of the Linux Kernel undermined in such an unfortunate manner. I would appreciate it if you could convey those thoughts to the relevant individuals. Thanks > > James -- - Jiaxun ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 16:30 ` Peter Cai @ 2024-10-24 17:18 ` Dragan Milivojević 2024-10-24 17:59 ` Andy Shevchenko 2024-10-24 17:33 ` Jiaxun Yang 1 sibling, 1 reply; 17+ messages in thread From: Dragan Milivojević @ 2024-10-24 17:18 UTC (permalink / raw) To: Peter Cai Cc: James Bottomley, Serge Semin, Jon Mason, Dave Jiang, Allen Hubbe,ntb, Andy Shevchenko, Andy Shevchenko, Kory Maincent, Cai Huoqing,dmaengine, Mark Brown, linux-spi, Damien Le Moal, linux-ide,Paul Burton, Thomas Bogendoerfer, Arnd Bergmann, Jiaxun Yang,linux-mips, Bjorn Helgaas, Manivannan Sadhasivam,Yoshihiro Shimoda, linux-pci, David S. Miller, Jakub Kicinski,Paolo Abeni, Andrew Lunn, Russell King, Vladimir Oltean,Keguang Zhang, Yanteng Si, netdev, Rob Herring,Krzysztof Kozlowski, Guenter Roeck, linux-hwmon, Borislav Petkov,linux-edac, Greg Kroah-Hartman, linux-serial, Andrew Halaney,Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan, Dmitry Kozlov,Sergey Shtylyov, Evgeniy Dushistov, Geert Uytterhoeven,Sergio Paracuellos, Nikita Shubin, linux-renesas-soc,linux-kernel, Kexy Biscuit, jeffbai, Linus Torvalds On Thu, 24 Oct 2024 at 18:31, Peter Caiwrote: > > Hi James, > > Thanks for your clarification. This sort of non-provocative > clarifications of the regulations you need to comply to has always been > what the community wants to see. _This_ should have been the first > official statement when anyone raised the concern, instead of Greg's > attempt to \"defuse\" the situation over private correspondence, or Linus > Torvald's outright defamation and accusing anyone who dares to disagree > of being a \"Russian troll\". This is not even to mention the _complete > ignorance_ and arrogance shown by his statement on what sending a revert > patch means. > > With sanctions in place, there is no reasonable person who will demand > the LF or the Linux Kernel maintainers to do otherwise. However, as > someone who does rely on Linux for daily work, and as someone who has > contributed to the Linux project and its community, I think seeing the > following should be the minimum: > > 1. Linus Torvalds (+Cc) send an apology letter to **everyone** who he > accused of being a Russian troll; > 2. Linus Torvalds need to **unconditionally retract** his personal > attack on Kexy Biscuit, the person who sent the revert patch in protest > (+Cc), and acknowledge that people who work with AOSC.io aren't > \"state-sponsored paid actors\"; > 3. This type of statement should be included somewhere public as soon as > practically possible should sanction compliance affect kernel > development again in the future; > 4. No personal attacks should be allowed based on tinfoil-hat reasoning. > > Thanks, > Peter. > That list is great but it will never happen, Linus is high on his western supremacy complex. Most of the anger (including mine) comes from people who have just realized what kind of a person Linus is. He has exposed his lack of morals and inability of self reflection with the trolls comment. He has exposed his ignorance, coming from his state media brainwashing, with the media comment. He has exposed his ignorance, arrogance and blatant Russophobia with his \"I'm Finish\" comment, as if Finland has any high moral ground when it comes to WWII (for the historically ignorant: Finnish \"concentration camps\"). And this is not over, there are plenty of other countries and entities on the official USA enemies list. The real majority of the world, all of us outside the USA and their vassal states, their so called \"free world\" (one maintainer actually used that blatant display of American supremacy in a commit removing Huawei maintainers) are looking at this with sadness and anger. The Cold War 2.0 has came to the Linux world and as in the first one, the Iron curtain has been erected by those that claim moral high ground with their false values of freedom, openes, merit etc. ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 16:30 ` Peter Cai 2024-10-24 17:18 ` Dragan Milivojević @ 2024-10-24 17:33 ` Jiaxun Yang 1 sibling, 0 replies; 17+ messages in thread From: Jiaxun Yang @ 2024-10-24 17:33 UTC (permalink / raw) To: Peter Cai, James Bottomley, Serge Semin, Jon Mason, Dave Jiang,Allen Hubbe, ntb, Andy Shevchenko, Andy Shevchenko, Kory Maincent,Cai Huoqing, dmaengine, Mark Brown, linux-spi, Damien Le Moal,linux-ide, paulburton@kernel.org, Thomas Bogendoerfer,Arnd Bergmann, linux-mips@vger.kernel.org, Bjorn Helgaas,Manivannan Sadhasivam, Yoshihiro Shimoda, linux-pci,David S . Miller, Jakub Kicinski, Paolo Abeni, Andrew Lunn,Russell King, Vladimir Oltean, Kelvin Cheung, Yanteng Si, netdev,Rob Herring, Krzysztof Kozlowski, Guenter Roeck, linux-hwmon,Borislav Petkov, linux-edac, Greg Kroah-Hartman, linux-serial Cc: Andrew Halaney, Nikita Travkin, Ivan Kokshaysky, Alexander Shiyan,Dmitry Kozlov, Sergey Shtylyov, Evgeniy Dushistov,Geert Uytterhoeven, Sergio Paracuellos, Nikita Shubin,linux-renesas-soc, linux-kernel, Kexy Biscuit, jeffbai,Linus Torvalds 在2024年10月24日十月 下午5:30，Peter Cai写道： > Hi James, > > Thanks for your clarification. This sort of non-provocative > clarifications of the regulations you need to comply to has always been > what the community wants to see. _This_ should have been the first > official statement when anyone raised the concern, instead of Greg's > attempt to \"defuse\" the situation over private correspondence, or Linus > Torvald's outright defamation and accusing anyone who dares to disagree > of being a \"Russian troll\". This is not even to mention the _complete > ignorance_ and arrogance shown by his statement on what sending a revert > patch means. > > With sanctions in place, there is no reasonable person who will demand > the LF or the Linux Kernel maintainers to do otherwise. However, as > someone who does rely on Linux for daily work, and as someone who has > contributed to the Linux project and its community, I think seeing the > following should be the minimum: > > 1. Linus Torvalds (+Cc) send an apology letter to **everyone** who he > accused of being a Russian troll; > 2. Linus Torvalds need to **unconditionally retract** his personal > attack on Kexy Biscuit, the person who sent the revert patch in protest > (+Cc), and acknowledge that people who work with AOSC.io aren't > \"state-sponsored paid actors\"; > 3. This type of statement should be included somewhere public as soon as > practically possible should sanction compliance affect kernel > development again in the future; > 4. No personal attacks should be allowed based on tinfoil-hat reasoning. I agree those actions and IMHO this should be addressed under Linux's Code of Conduct enforcement [1] framework. I also look forward to a formal investigation report on the entire event. It may eventually result in an overhaul of our governance model. [1]: https://docs.kernel.org/process/code-of-conduct.html Thanks > > Thanks, > Peter. [...] -- - Jiaxun ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 16:56 ` Hantong Chen @ 2024-10-24 17:35 ` Theodore Ts'o 2024-10-24 18:19 ` Hantong Chen 0 siblings, 1 reply; 17+ messages in thread From: Theodore Ts'o @ 2024-10-24 17:35 UTC (permalink / raw) To: Hantong Chen Cc: james.bottomley, ajhalaney, allenbh, andrew, andriy.shevchenko,andy, arnd, bhelgaas, bp, broonie, cai.huoqing, dave.jiang, davem,dlemoal, dmaengine, dushistov, fancer.lancer, geert, gregkh, ink,jdmason, jiaxun.yang, keguang.zhang, kory.maincent, krzk, kuba,linux-edac, linux-hwmon, linux-ide, linux-kernel, linux-mips,linux-pci, linux-renesas-soc, linux-serial, linux-spi, linux,linux, manivannan.sadhasivam, netdev, nikita.shubin, nikita, ntb,olteanv, pabeni, paulburton, robh, s.shtylyov, sergio.paracuellos,shc_work, siyanteng, tsbogend, xeb, yoshihiro.shimoda.uh On Thu, Oct 24, 2024 at 04:56:50PM +0000, Hantong Chen wrote: > > For People???s Republic of China, there are about 500 entities that > are on the U.S. OFAC SDN / non-SDN lists, especially HUAWEI, which > is one of the most active employers from versions 5.16 through 6.1, > according to statistics. This is unacceptable, and we must take > immediate action to address it, with the **same** reason. There are multiple sanctions programs, and at least in the US, for the sanctions program which Huawei is in, there is an exception for conversations and patches that take place in a public mailing list, such as LKML. As a result, as the ext4 maintainer, I am comfortable taking patches from engineers employed by Huawei, and I consider them valued members of the ext4 development community. However, note that China is *not* actively attacking Taiwai militarily, while there are Russian missiles and drones, some of which may controlled by embedded Linux systems, that are being used against Ukraine even as we speak. Hence, it should not be surprising that the rules imposed by the US Government might be different for Huawei compared to other sanctioned entities that are directly or indirectly controlled by the Russian Military-Industrial complex. There are also other sanctions regimes imposed by Japan, European Countries, etc., which might be more or less strict. So in general, if you are not sure what you need to do as an US, European, Japanese, etc. citizen who might be subject to civil or criminal penalties ---- talk to a lawyer. The bottom line is that it is a false equivalence to claim that sanctions involving China and Russia are the same. They very much aren't; one country is engaging in an active shooting war (or if you prefer, \"special military operation\"), and the other is not. Of course, if China were to militarily attack Taiwan or some other country in Asia, circumstances might change at some point in the future. Hopefully Chinese leaders will pursue a path of wisdom and those consequences won't come to pass. Ultimately, though, that's not up to any of us on this mail thread. Cheers,- Ted ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 17:18 ` Dragan Milivojević @ 2024-10-24 17:59 ` Andy Shevchenko 0 siblings, 0 replies; 17+ messages in thread From: Andy Shevchenko @ 2024-10-24 17:59 UTC (permalink / raw) To: Dragan Milivojević Cc: Peter Cai, James Bottomley, Serge Semin, Jon Mason, Dave Jiang,Allen Hubbe, ntb, Kory Maincent, Cai Huoqing, dmaengine,Mark Brown, linux-spi, Damien Le Moal, linux-ide, Paul Burton,Thomas Bogendoerfer, Arnd Bergmann, Jiaxun Yang, linux-mips,Bjorn Helgaas, Manivannan Sadhasivam, Yoshihiro Shimoda,linux-pci, David S. Miller, Jakub Kicinski, Paolo Abeni,Andrew Lunn, Russell King, Vladimir Oltean, Keguang Zhang,Yanteng Si, netdev, Rob Herring, Krzysztof Kozlowski,Guenter Roeck, linux-hwmon, Borislav Petkov, linux-edac,Greg Kroah-Hartman, linux-serial, Andrew Halaney, Nikita Travkin,Ivan Kokshaysky, Alexander Shiyan, Dmitry Kozlov, Sergey Shtylyov,Evgeniy Dushistov, Geert Uytterhoeven, Sergio Paracuellos,Nikita Shubin, linux-renesas-soc, linux-kernel, Kexy Biscuit,jeffbai, Linus Torvalds On Thu, Oct 24, 2024 at 07:18:44PM +0200, Dragan Milivojević wrote: > On Thu, 24 Oct 2024 at 18:31, Peter Caiwrote: ... > He has exposed his lack of morals and inability of self reflection > with the trolls comment. > He has exposed his ignorance, coming from his state media > brainwashing, with the media comment. > He has exposed his ignorance, arrogance and blatant Russophobia with > his \"I'm Finish\" comment, as if > Finland has any high moral ground when it comes to WWII (for the > historically ignorant: Finnish \"concentration camps\"). Yeah, with my hat of the person whose home town is under (Russian) attack for the 10+ years (don't be surprised, please, the war lasts more than a decade already) on I am fully understand Linus' arguments about history and being not very friendly about Russians. As you showed above seems like you also will benefit from digging to the history a bit. The nice questions to be answered (but not limited to) are: 1) What had happened to Finland in 1939? 2) Has Finland territory been changed (occupied by another country) in time? 2a) (bonus Q) How many times and by which countries / empires? 3) (speaking of WW II) How many Jews were killed by Finland? May be this helps changing a bit your understanding of Linus and other Finns. -- With Best Regards, Andy Shevchenko ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 17:35 ` Theodore Ts'o @ 2024-10-24 18:19 ` Hantong Chen 0 siblings, 0 replies; 17+ messages in thread From: Hantong Chen @ 2024-10-24 18:19 UTC (permalink / raw) To: tytso Cc: ajhalaney, allenbh, andrew, andriy.shevchenko, andy, arnd,bhelgaas, bp, broonie, cai.huoqing, cxwdyx620, dave.jiang, davem,dlemoal, dmaengine, dushistov, fancer.lancer, geert, gregkh, ink,james.bottomley, jdmason, jiaxun.yang, keguang.zhang,kory.maincent, krzk, kuba, linux-edac, linux-hwmon, linux-ide,linux-kernel, linux-mips, linux-pci, linux-renesas-soc,linux-serial, linux-spi, linux, linux, manivannan.sadhasivam,netdev, nikita.shubin, nikita, ntb, olteanv, pabeni, paulburton,robh, s.shtylyov, sergio.paracuellos, shc_work, siyanteng,tsbogend, xeb, yoshihiro.shimoda.uh > However, note that China is *not* actively attacking Taiwai > militarily, while there are Russian missiles and drones, some of which > may controlled by embedded Linux systems, that are being used against > Ukraine even as we speak. Hence, it should not be surprising that the > rules imposed by the US Government might be different for Huawei > compared to other sanctioned entities that are directly or indirectly > controlled by the Russian Military-Industrial complex. I wonder some of Ukrainian misiles and drones might also be using the embedded Linux controllers, and why aren't there any sanctions. This cannot be used as an excuse. What LF and Linus done will inevitably create a climate of fear where contributors and maintainers from the *Countries of Particular Concern* feels endangered. This is clearly NOT what contributors truly want. People from around the world once firmly believed that Linux was a free and open-source project. However, Greg's commit and Linus' response deeply disappoint them. Open-source projects might be international, but the people or organizations controlling them are not. This is the source of concern and disappointment. > Of course, if China were to militarily attack Taiwan or some other > country in Asia, circumstances might change at some point in the > future. Hopefully Chinese leaders will pursue a path of wisdom and > those consequences won't come to pass. Ultimately, though, that's not > up to any of us on this mail thread. Finally, I must point out that Taiwan's status as part of China has never changed and will never change. The term \"military attack\" is therefore **inappropriate**. The move to solve the Taiwan question and achieve China's reunification is coming soon and before that China must make full preparation for the upcoming *sanctions* from the U.S. government, including handling the issue of high dependence on any international open-source projects. ^ permalink raw reply [flat|nested] 17+ messages in thread * Re: linux: Goodbye from a Linux community volunteer 2024-10-24 4:27 linux: Goodbye from a Linux community volunteer Serge Semin ` (3 preceding siblings ...) 2024-10-24 14:50 ` James Bottomley @ 2024-10-24 18:52 ` Oleksiy Protas 4 siblings, 0 replies; 17+ messages in thread From: Oleksiy Protas @ 2024-10-24 18:52 UTC (permalink / raw) To: fancer.lancer Cc: ajhalaney, allenbh, andrew, andriy.shevchenko, andy, arnd,bhelgaas, bp, broonie, cai.huoqing, dave.jiang, davem, dlemoal,dmaengine, dushistov, geert, gregkh, ink, jdmason, jiaxun.yang,keguang.zhang, kory.maincent, krzk, kuba, linux-edac, linux-hwmon,linux-ide, linux-kernel, linux-mips, linux-pci, linux-renesas-soc,linux-serial, linux-spi, linux, linux, manivannan.sadhasivam,netdev, nikita.shubin, nikita, ntb, olteanv, pabeni, paulburton,robh, s.shtylyov, sergio.paracuellos, shc_work, siyanteng,tsbogend, xeb, yoshihiro.shimoda.uh Dear Serge, On behalf of a long time Linux user and developer I thank you for your hard work and contributions to the kernel. > For that reason I have no any (company) lawyer to talk to I think you should contact the lawyers of Baikal Electronics JSC which are listed as your work place in your GitHub profile and which is under sanctions due to it being directly involved in the ongoing war. Specifically the production of your company makes its way into rockets and drones which I see explode out of my window every night. Given your history contributing Baikal patches in 2023 you do not seemed to have a problem with this fact I suppose. It's quite apalling that this needs to be broken down to adult people. Take care and consider rethinking your life choices. Oleksiy ^ permalink raw reply [flat|nested] 17+ messages in thread end of thread, other threads:[~2024-10-24 18:52 UTCest] Thread overview: 17+ messages (download: mbox.gz follow: Atom feed -- links below jump to the message on this page -- 2024-10-24 4:27 linux: Goodbye from a Linux community volunteer Serge Semin 2024-10-24 6:55 ` Reimar Döffinger 2024-10-24 7:32 ` Philipp Stanner 2024-10-24 11:01 ` Jiaxun Yang 2024-10-24 14:50 ` James Bottomley 2024-10-24 15:59 ` Jiaxun Yang 2024-10-24 16:18 ` Dragan Milivojević 2024-10-24 16:27 ` James Bottomley 2024-10-24 16:58 ` Jiaxun Yang 2024-10-24 16:30 ` Peter Cai 2024-10-24 17:18 ` Dragan Milivojević 2024-10-24 17:59 ` Andy Shevchenko 2024-10-24 17:33 ` Jiaxun Yang 2024-10-24 16:56 ` Hantong Chen 2024-10-24 17:35 ` Theodore Ts'o 2024-10-24 18:19 ` Hantong Chen 2024-10-24 18:52 ` Oleksiy Protas This is a public inbox, see mirroring instructions for how to clone and mirror all data and code used for this inbox; as well as URLs for NNTP newsgroup(s).",
    "commentLink": "https://news.ycombinator.com/item?id=41932225",
    "commentBody": "[flagged] Goodbye from a Linux Community Volunteer (kernel.org)192 points by ajb 13 hours agohidepastfavorite171 comments Symbiote 11 hours agoThis developer worked for Baikal Electronics (from the Google snippet of his GitHub page, and earlier emails from him to the Linux kernel lists — showing his work was for that company). That company received very significant subsidy from the Russian state. They produced CPUs for the Russian military. https://en.wikipedia.org/wiki/Baikal_CPU https://ge.usembassy.gov/targeting-russias-senior-officials-... reply DeathArrow 11 hours agoparentnext [15 more] [flagged] whatshisface 10 hours agorootparentA lot of other maintainers are, in the sense of needing to comply with sanctions so fully that they cannot even be charged with violating them. reply ogurechny 10 hours agorootparentThe main problem, and the reason why these actions exploded, is that people actually believe that they are “owned” by some country, all the time, or just “in these difficult times”. And then they dare to call some other citizens “too obedient”. Note that self-professed “freedom loving” doesn't not mean much. There's always a million of excuses to tell yourself that you're an exception. reply tankenmate 9 hours agorootparentHow people feel about the situation is not the same thing as what is legal (as well as the obvious statement that not everyone feels the same way about the adjacent issue of what is happening in the war between Ukraine and Russia). In this situation it is fairly obvious there are legal implications to having these people as maintainers; so the choice becomes \"go with the feels\" or run headlong into legal complications. The decision made at this juncture says about the decision maker. Turning your back on the rule of law is a big step. reply oytis 7 hours agorootparent> In this situation it is fairly obvious there are legal implications to having these people as maintainers It's not really obvious to me, and looks like to some other people too. It would really help if gkh explicitly said what law prohibits collaboration with Russia-based maintainers or what specific legal consequences they are avoiding in this manner. The vagueness just creates a sense of uncertainty for every non-Western contributor reply ogurechny 5 hours agorootparentprevYou seem to think it's a different issue. It is not. There are “legal implications” of disobeying the orders and disagreeing to serve in the military. There are “legal implications” of calling the glorious leader a crooked mobster. There are “legal implications” of having banned books on display in a library. (Not officially banned, but the officials are making scary faces because someone heard that higher ups discussed something, and the librarian rushes to hide the you-know-whom and you-know-what without any specific orders.) There are “legal implications” of discussing this and that, and posting links, when it is officially declared “illegal information”. etc. Comrade Stalin does not force anyone to do that himself. Regular people — you and me — do that. If was possible to handle the case properly without bowing to anyone. If there was an immediate security danger, announce that. If legal team told you to stop working with certain entities, inform the people properly. I suspect that Linux leadership is now between the rock and the hard place because some men in suits only strongly hinted they need to do that, and now, then they acted, they don't have a single piece of paper to prove it was under someone's pressure. A classic trick to manipulate people who believe in “matters of national security”. It is highly likely that most people who vehemently show support, and ignore the obvious “nothing to see here, citizen” details are simply trying to keep the bubble of “living in a democratic country, unlike those shitty places” intact. After all, media and politicians are 100% set on using war spectacle to sell the feeling of (in)security, and blame everything on external and internal enemies. It's the same tool Putin and company used to remain in power. reply kalloc 5 hours agorootparentprevMaybe it would be fairly to remove patches too? :) reply oytis 7 hours agorootparentprevHonestly it's the first time I hear about sanctions prohibiting private persons from collaborating on a project. Is there a precedent for that? How were e.g. Iranian or Cuban contributors treated on Linux kernel before? reply SSLy 7 hours agorootparentSeems like the individuals were hit because of their employers. This is the first widely public instance of such things happening. I'd assume non-maintainer developers from Iran or Cuba could have been just ignored. reply oytis 6 hours agorootparentThe way they communicate doesn't really make it clear whether they refuse to work with sanctioned companies, with all residents of the sanctioned countries or with all nationals of the sanctioned countries wherever they reside. For some individuals it can indeed be tracked that their employer may be sanctioned, but IMO community should not be left guessing reply SSLy 6 hours agorootparentYeah, I don't disagree with your assessment. It could have been handed both more bluntly and yet with just a little more grace than what we are seeing. reply doikor 10 hours agorootparentprevNo but Linus lives in US and is a US citizen. reply nabla9 9 hours agorootparentprevRussian government is the enemy of Finland and Russia is in sanctions list in the US. https://lore.kernel.org/all/CAHk-=whNGNVnYHHSXUAsWds_MoZ-iEg... Linus Torvalds comments: ... If you haven't heard of Russian sanctions yet, you should try to read the news some day. And by \"news\", I don't mean Russian state-sponsored spam. As to sending me a revert patch - please use whatever mush you call brains. I'm Finnish. Did you think I'd be supporting Russian aggression? Apparently it's not just lack of real news, it's lack of history knowledge too. Linus reply stop_nazi 6 hours agorootparentOh, really? Embassies continue to operate, trade continues. As it was for 80 years. reply nabla9 6 hours agorootparentYes. I said enemy, not in open war. Borders are closed. Russians are engaging in sabotage and misinformation operations. They are also ideological enemies of any individual who wants to live free. The perfect counterarguments from Russian friends: 1. Authoritarian regimens need security guarantees or their attacks against smaller countries are the fault of the West 2. Western liberal democracies are not perfect, this means that they are just as bad as Russians. reply whatshisface 11 hours agoparentprevnext [2 more] [flagged] doikor 10 hours agorootparentUS or EU are not sanctioning Amazon, US Department of Defense or US. reply mytailorisrich 11 hours agoparentprevnext [10 more] [flagged] ffsm8 10 hours agorootparentnext [10 more] [flagged] mytailorisrich 10 hours agorootparentPlease read the guidelines and abstain from insults. I am commenting on Linus' communication on this issue that has been exactly how I described. reply ffsm8 10 hours agorootparentnext [9 more] [flagged] pvg 9 hours agorootparentYou can't talk to people on HN like that, regardless of how you feel about their feelings and positions or else the forum goes to shit. That's why it's in the site guidelines. reply ffsm8 8 hours agorootparent...what? In what dystopian world is it not okay to point out if someone is verifiably lying? Linus made very few comments in the context of this removal, and they were very easy to understand. It was abundantly clear why the maintainers were removed and that they could be reinstated if they provided sufficient proof/documents that the sanctions don't apply to them. Thus, they were lying. reply pvg 8 hours agorootparentPeople can be mistaken or misinformed. They could just be wrong. You could just be wrong. On HN, you can't start yelling 'liar!' at random internet strangers, that's just how the site works or else it wouldn't. If you think a comment is particularly bad you can downvote it, flag it or email the site moderators about it at hn@ycombinator.com This is all in https://news.ycombinator.com/newsguidelines.html and https://news.ycombinator.com/newsfaq.html reply ffsm8 8 hours agorootparentI didn't \"start yelling liar\". I observed they were doing so, and provided evidence that their claims were lies. reply pvg 7 hours agorootparentIf I observe you are a dunderhead, it's still namecalling and an insult even if I believe the observation is factual. Lots of mod commentary about it (beside being the the site guidelines) https://hn.algolia.com/?dateRange=all&page=0&prefix=false&qu... reply ffsm8 5 hours agorootparentYes , what you're doing there is name-calling and a direct insult. You might note that I used a verb, not a noun. I literally described the action the person I was responding to took It's akin to saying \"he's talking nonsense\" when someone is just putting random syllables after each other. If that is insulting, than the fact he took the action is the insult, not my pointing it out. reply pvg 3 hours agorootparentThat's not how insults work and it's definitely not how HN works. You can't start telling people you disagree with that they are lying, out of nowhere. It's not some convoluted or difficult guideline, it's not 'akin to' your example, it's just plain name calling. Don't do it here, please. reply mytailorisrich 7 hours agorootparentprevYou have not observed anything nor providing any evidence of anything. You are insulting me by calling me names and implying that I am in bad faith (You did not write that I was \"wrong\", you wrote that I was \"lying\"), and those were your very first words to me. I have only expressed my opinion based on what I have read [1], including the mailing list. The very fact that the whole affair is causing so much waves suggests that the communication has been poor. You are free to disagree but don't be a dick about it. [1] https://www.theregister.com/2024/10/23/linus_torvalds_affirm... reply gn4d 5 hours agoparentprevOh no, good thing there are no tech or defense personnel from non-Russian countries that contribute to the Linux kernel! Stop the presses!!! reply skeptrune 12 hours agoprevOther related posts [flagged] Getting Called \"Paid Actor\" by Linus Torvalds - https://news.ycombinator.com/item?id=41929585 - Oct 23 2024 (24 comments) [PATCH] MAINTAINERS: Remove some entries due to various compliance requirements. - https://news.ycombinator.com/item?id=41923749 - Oct 23 2024 (1 comment) Re: [PATCH] Revert \"MAINTAINERS: Remove some entries due to compliance\" - https://news.ycombinator.com/item?id=41928532 - Oct 23 2024 (3 comments) Linus Torvalds comments on the Russian Linux maintainers being delisted - https://news.ycombinator.com/item?id=41927838 - Oct 23 2024 (35 comments) reply keepamovin 12 hours agoprevThis is a nice (and sad) goodbye email from Serge(y). It's moving to see all this time and work, what it meant to the person, and also to imagine what the contributions made mean to so many people who use the software. :`( The situation is sad for individual contributors indeed. The overall backdrop does seem in line with sanctions requirements for ITAR, OFAC etc. reply krick 11 hours agoparentI mean, for me (as well as him, obviously) it is a matter of \"how\" rather than \"what\". It is understandable, that what for some government officials is political reasons, for Linux end up being legal reasons, so no matter how ugly it is, it is not surprising at all that it came down to banning somebody who works for a sanctioned organization. It also doesn't matter that it makes no sense whatsoever (after all, you don't have to show your documents applying to the Linux mailing list), since most adult people get the fact that there's no justice in life. But it is one thing when it's \"sorry man, nothing I can do\" (as in his private conversations with senior maintenaners), and other thing entirely, when for all your good work you are being dealt with like that, no heads-up, no good-bye, instead you get these things Linus has said today. Like, seriously, it doesn't even matter if Linus hates Russians and truly personally thinks this is desirable to get rid of these maintainers, it is just a matter of human decency to not make it any more than it has to be against individual person that basically worked for you (for free). And even if you don't have any human decency, it still just would be smarter to play it more neutral. So, yeah, it was really even surprisingly ugly. reply keepamovin 10 hours agorootparentThat’s sad, too. Sounds like you got caught up in this, nothing that’s your fault, as well. I’m sorry to hear it. I agree the how should have been way better implemented. For the human enterprises that they are it certainly seems like insufficient consideration is often paid to that. Better to have difficult conversations than pretend it will be okay and everyone will be fine. Sometimes people are just saving themselves by avoiding that. Unfortunately to the detriment of others! reply alkyon 11 hours agoparentprevnext [13 more] [flagged] keepamovin 10 hours agorootparentI know you must have really strong feelings about it and may have even personally suffered, that is terrible and sad too! In war time a lot of companies supply the country. The war is obviously no fault of his. But the leap to persecution is actually a more war-like attitude that is where we lose some of our humanity and decency, so it’s better to skip it. reply alkyon 10 hours agorootparent\"Supply the country\" is misrepresentation. He's not a baker. Microprocessors manufacrured by Baikal Electronics were used by military (however defective they were). I don't think it's persecution what Linus did, it is a necessity reply keepamovin 9 hours agorootparentBy leap to persecution I was referring to your comment about him. But I guess Linus' words count too. Anyway, I feel sorry for you that you think that way. When abusing people based on their country becomes a necessity, we are not far from war. reply thoroughburro 7 hours agorootparentYou’re weirdly intent on painting antiwar actions as prowar. No argument; you just state it over and over. Peace is war, war is peace? Nah. You’re just propagandizing. reply Veen 7 hours agorootparentprevWe are not far from war because Russia invaded Europe. This developer works for a company supplying materiel to the Russian military. reply kalloc 5 hours agorootparentprevand it's still open source? reply Symbiote 9 hours agorootparentprevWhat an utterly false equivalence. One guy loses his \"volunteer\" position, which in fact he was being paid to do by either the Russian government or the Russian military (via Baikal Electronics). The other side has missiles and drones falling on their cities. reply keepamovin 9 hours agorootparentLosing the sense of balance and proportionality, with everyone being equal, is what takes you down the road to war...Not good. reply Symbiote 7 hours agorootparentThe West was trying that. We were trading with Russia and so on. Russia invaded, and again, and again, and again. reply cpluseq 9 hours agorootparentprevAt the moment the most bombed place in the world is probably Lebanon. What should be done to make sure Linux is not involved in this bombing of civilians? At the very least, we should figure out which military contractors are involved, and which countries they are from. reply alkyon 4 hours agorootparentThis is whataboutism. Isreal maybe is not my cup of tea, but at least they have some justification for waging their war because they were attacked first. So Israel with all its faults is not in the same league with Russia. Edit: typo reply TiredOfLife 7 hours agorootparentprev> The war is obviously no fault of his. Citation needed. reply Gentil 4 hours agoprevIt's interesting to note that Linux Foundation is not even mentioned anywhere in the discussions. It is all Linus Torvalds for people apparently. Linux Foundation and their corporate lawyers should be the ones who recommended this right? Moreover, I am interested if this effects FreeBSD which is not run by corporates like Linux Foundation but is still US. And what about OpenBSD which is Canadian? reply kragen 12 hours agoprevI wonder if we'll see persistent Russian and Chinese forks of the Linux kernel to address this problem? Large parts of the kernel are written by Russian and Chinese people, and the US's sanctions regime against the PRC is nearly as aggressive as that against Russia. The GPL guarantees they can still merge in code from Linus, as long as he doesn't intentionally make it incompatible, and probably a lot of contributors will want to get their code into Linus's tree and also the Russian and/or Chinese tree, which could lead to pushback on deliberate compatibility breakage. reply xtracto 5 hours agoparentI was just looking at the Ubuntu work on the OEM kernel release. Apparently it is maintained by someone from China. It will be a bummer if that work stops. reply BSDobelix 10 hours agoprevWhy is that submission so harshly suppressed? Honest question. reply luckycones 9 hours agoparentIt seems like a pretty lame rug sweep attempt. I understand that the moderation burden of these kind of threads is high and not every moderation action needs to be public. But for something of this significance it is disappointing that there hasn't even been any communication ( that I have seen) and imo is not in the spirit of hackernews. reply pvg 9 hours agorootparentUsers flag stuff. There are lots of topics that tend not to have sane discussions (or simply don't fit HN) and people regularly flag these without any need for 'lame rug sweep attempts'. But if you're concerned about that you can always email the mods and ask. reply BSDobelix 8 hours agorootparentIt's not flagged, it got pretty fast to 120 upvotes witch is normally a top page 1 submission. But it was in the lower page 2, 10 minutes later page 4, so yes it is definitely a 'lame rug sweep attempt', all the \"Maintainer removed\" submissions in fact are suppressed, so i ask why is this? Is it not a: [1] \"What to Submit: On-Topic: Anything that good hackers would find interesting. That includes more than hacking and startups.\" https://news.ycombinator.com/newsguidelines.html reply pvg 8 hours agorootparentIt has [flagged] now which almost always reflects user flagging. People don't agree on what's interesting but many HN users agree flamewars are not interesting. reply BSDobelix 7 hours agorootparentFlame-war in the comments right? But here the submission is flagged. EDIT: 2 minutes later away from page 1 and completely flagged with removed title (still thinking it's user-side flagging?) reply pvg 7 hours agorootparentPeople flag things that generate flamewars and this topic has generated a bunch, beside having had some front page time in various guises and extensive 'discussions'. EDIT: 2 minutes later away from page 1 and completely flagged with removed title (still thinking it's user-side flagging?) I'm not sure what that means but things that drop off the fp and gain the [flagged] tag are just about always flagged by users. Flagged submissions lose rank through user flags long before they get tagged [flagged]. reply SSLy 6 hours agorootparentprev> EDIT: 2 minutes later away from page 1 and completely flagged with removed title (still thinking it's user-side flagging?) yes, that's effect of user flags. Just more of them came. reply BSDobelix 3 hours agorootparentI have not seen removed titles just from flagging, maybe i am wrong here (over flagging maybe removes the title?) reply pvg 2 hours agorootparentFlagging does not remove titles. Maybe you don't have showdead turned on? reply BSDobelix 14 minutes agorootparentHey thank you very much (showdead was turned off) SSLy 8 hours agorootparentprevit is flagged now reply BSDobelix 7 hours agorootparentThat one is not: https://news.ycombinator.com/item?id=41934219 Page 1 with 27 points ;) EDIT: 2 minutes later away from page 1 and completely flagged with removed title reply SSLy 7 hours agorootparent[flagged] [dead] reply BSDobelix 7 hours agorootparentAh ok, thx reply luckycones 8 hours agorootparentprevIn that case I would classify the flagging automated system as it is implemented as a lame rug sweep. It's a dark pattern. You see it all the time as a way to avoid accountability under the guise of user/community self determination. reply TiredOfLife 7 hours agorootparentprevEvery thread about this is filled with Russian apologists. reply gn4d 5 hours agoparentprevnext [5 more] [flagged] ktosobcy 4 hours agorootparentOh look, another sleepy account just woke up :D reply gn4d 4 hours agorootparentWishing you had a life outside of HN? reply ktosobcy 2 hours agorootparentYou mean you? It took mere minutes to respond. :D reply gn4d 2 hours agorootparentYou don't get notifications? D: reply sampo 12 hours agoprevSome context: Linus Torvalds Comments On The Russian Linux Maintainers Being Delisted - https://news.ycombinator.com/item?id=41927838 reply shiroiushi 12 hours agoprevThis is pretty sad to see, but this post was full of a lot of acronyms that might only make sense to people active in this space, so it was a bit difficult to read. Among others, what are NTB and DW here? reply l1k 12 hours agoparentNTB = Non-Transparent Bridge DW = DesignWare reply jpeeler 5 hours agoprevI find it strange that I haven't seen it written anywhere that suspects the entire commit message was probably drafted by legal. Sort of like a warrant canary where the message is in what's not said, they may have been recommended (just theorizing) to keep the commit brief and not be specific. reply oytis 5 hours agoparentLinus explicitly commented later that lawyers told them to do that, and refused to provide details of what exactly they said. reply DeathArrow 10 hours agoprevI wouldn't wonder if, at some point, developers from Russia, China and other BRICS countries will fork the Linux kernel. That way they can still can do the changes they need. If BSD were forked, I can't see a practical reason why Linux can't be forked. reply Gud 10 hours agoparentThere are already many patch sets for the Linux kernel which I suspect is realistically what would happen. What I don’t get is why individuals in sanctioned countries can’t submit their patches still? reply sd1010 5 hours agoprevThey only removed him from the maintainer list, he can still continue to contribute normally (and he even says he will probably continue to contribute in the future commercially). People are making drama out of nothing. reply tessierashpool9 8 hours agoprevwhat's up with the flaggings here? this as well as the linus one are totally valid topics. reply sumosudo 6 hours agoprevWe could definitely use this talent on the BSD's reply fuoqi 11 hours agoprevIt look like the Biden's Executive Order 14071 may be behind the ban. See this video https://www.youtube.com/watch?v=L5Ec5jrpLVk (discussion: https://news.ycombinator.com/item?id=41933079). If true, then potential consequences may be much farther than just the Linux kernel and can affect the wider open source development. reply secondary_op 10 hours agoparentexactly, Linus and et. al. are just being a cowards to admit this and point finger to their own government. reply oneshtein 10 hours agorootparentLinus put this into the title of the patch, but Russians are turning blind eye on this connection between agressive war against Ukraine, NATO, and West in general started by Russia and the patch. reply tpkee 10 hours agoprevWhat is the point of open source if it doesn’t protect individuals from the control of corps and non-democratic countries? What’s the damn point of open source if law enforcers can just hijack the project? I don’t care about the Russians shenanigans but I’m dumbfounded by the lack of transparency, the obvious racism, from Linus. reply lifthrasiir 9 hours agoparentThe only point of open source is that you are still free to inspect, use and possibly fork everything and start anew. The concept you actually want is open governance, which is much more vague and less established. I guess this incident clearly demonstrates that Linux is less openly governed than what people assumed, but also it doesn't change anything about being open source. (We are even not very sure whether open governance is necessarily good in general!) Also, at least try to say that you do care about \"the Russians shenanigans\" (but you can also don't support the incident as well), because it's also a highly political matter and inducing any useless emotion is just as bad as Linus' reply. reply tpkee 8 hours agorootparentI supposed it was clear that I was referring to FOSS, in hindsight it wasn’t clear at all. > Russian shenanigans I do care about the conflict and hope for a swift victory by Ukraine, but in this instance it could have been anyone really. It doesn’t matter these people are Russians: Linus, to comply with “legal requirements”, threw out maintainers without giving an actual reason. If he is so eager to comply with legal requirements now, I wonder what he — he or any other software maintainer — would do were the “legal requirements” be for an unjust cause; countries shouldn’t dictate who can and cannot work for FOSS projects. And on the matter of “we are the good guys, nothing can go wrong”: In EU politicians tried to make cryptography useless again, and while I don’t believe the law will pass I can’t help but wonder if FOSS maintainers, just like Linus, will happily comply. reply lifthrasiir 6 hours agorootparentMy answer doesn't change for F/OSS, which has been widely mistaken to subsume open governance. Their underlying motivation does differ: the free software movement is concerned about user's freedom with respect to softwares and viral licenses were just means to that freedom, while the open source software movement cares more about the collaboration in the development phase but doesn't dictate the exact nature of collaboration, which the term \"open governance\" seeks to clarify. While my point might be already a lost cause (sigh), I believe this distinction is very important because we don't know how to do open governance in general. We have a relatively strong case for F/OSS licensing mainly because it was easy to follow and therefore spreaded like fire. But every sizable project trying open governance is different from each other. In this regard: > countries shouldn’t dictate who can and cannot work for FOSS projects. This statement is irrelevant because it was the maintainers' decision to decide \"who can and cannot work\" for the Linux kernel. It's just your ideal---and honestly speaking, also my ideal---, and most real world F/OSS projects suffer from at least one issue against that ideal. We can't talk about how to achieve or move closer to the ideal without the correct understanding of terminology and situation, which your comment did (and still) miss. For example, the correct starting point would be this: why did many large projects have to create legal entities in some jurisdiction? reply bigfatkitten 10 hours agoparentprevYou don't get to operate in a legal vacuum just because you're writing software. reply tpkee 9 hours agorootparentThen what is the point of free software? By existing within the law mechanism it is on itself pointless: it is free labor companies tolerate because it suits their interests and it is for now allowed because we don’t live in a dictatorship, but it is easily hijackable and, as Linus proves, there is not even a need to actually write malicious code. I wonder what would you think projects like signal, but the FOSS community too, should do if the “chat control” law actually passed in Europe. EDIT: if, as you say it doesn’t exist in a legal vacuum, then FOSS is worthless and, I reiterate, just free labor for corporations reply Arainach 9 hours agorootparentThe point is software which is free for anyone to inspect and build upon. That's it. It doesn't have to have geopolitical significance, and geopolitical events don't change the overall benefits. reply tpkee 9 hours agorootparentFOSS is inherently political, it stands for softwares both free, per your definition, and free as in people’s freedom. If now any political entity large enough to pull its weight can hijack an entire project, then FOSS is pointless and the people contributing to these projects are just doing some good ol’ work for free, with no benefits for nobody but corporations. https://www.gnu.org/philosophy/floss-and-foss.en.html reply gn4d 5 hours agoparentprevnext [4 more] [flagged] aa_is_op 5 hours agorootparentFor a good reason, though! Invading another country and having \"human safaris\" with their citizens is kind of a pretty valid reason. reply gn4d 4 hours agorootparentThose darned Belgian maintainers! reply timeon 2 hours agorootparentWhich country is currently under Belgian invasion? reply misiek08 11 hours agoprevSo we’ve got into politics in software. Good lord (spaghetti one, of course)! I thought we already have problem with quality diving in IT, because of all those newcomers wanting money and laziness only. Sad to see we learned nothing from hundreds of years of wars and occupations. Glad someone mentioned Poland and India. Millions killed by USA joining every war to just sell weapons to both sides of conflict - will be funny too when many people stop dreaming and see this is the truth. Edit: of course I’m waiting for all this flagging and downvotes, because I’ve spoken badly about The Greatest Nation Ever. reply whatshisface 11 hours agoparentPolitics in open source is not new. I think one person in this thread has quoted a CoC. They did not always exist... :-) What is new is hackers speaking in favor of nationalist boundaries, after having spent the 90s in opposition to things like cryptographic export controls. reply anal_reactor 11 hours agoprevSome decisions are difficult and no matter what you do, it's going to be bad. reply Garvi 12 hours agoprevWhat a sad day for open source. I expected better from Linus Torvalds. I know writing more will just get this post removed. reply gn4d 4 hours agoparentBe brave, what is the point of open discussion if you are too afraid to speak your mind? If you get banned or your post removed, so be it. Why self-censor? You are doing a disservice to yourself. reply sharas- 12 hours agoprevalas reply ein0p 12 hours agoprevnext [7 more] [flagged] guytv 11 hours agoparentSanctioning individuals who aid a criminal government serves two purposes: 1) it applies pressure on that government and 2) ensures that we don’t indirectly support its crimes. However, sanctioning an entire population — citizens who are already suffering under a leader who disregards their wellbeing — achieves little and seems more like an act of revenge than a strategic measure. reply exe34 11 hours agoparentprevnext [3 more] [flagged] ein0p 11 hours agorootparentI get them from the UN and from watching the entire Gaza Strip get flattened with people inside, financed by my taxes. Where do you get your numbers? reply exe34 8 hours agorootparentwhere does the UN get their numbers? every bbc article that quotes the UN reluctantly adds (later on in the article) \"according to the health in authority in Gaza\", which means hamas. I think hamas has achieved in practice something the Christians can only claim in faith - transmogrification. a hamas soldier transmogrifies into an innocent civilian upon death. even Sinwar would have been a UN teacher if his body hadn't been identifiable - he even carried a stolen UN teacher's passport. reply coldtea 11 hours agoparentprevThose casualties are not the cause of the day from western governments (rather the opposite) so they don't matter /s reply ein0p 11 hours agorootparent“It’s ok when we do it”? I thought at least the FOSS community was above hypocrisy. Apparently not. And I get why there might be legal reasons (as tenuous as they may be) to not allow folks to be paid, but this particular dude was working for free. reply coldtea 11 hours agorootparentIf it was just legal reasons it would be totally understanable. Can't go against the law - but you can voice your reservations against it. Instead Linus is celebrating this. reply npn 12 hours agoprevnext [2 more] [flagged] globalnode 12 hours agoparenti think one of the hardest parts of writing an o/s would be drivers for the h/w reply llm_trw 12 hours agoprevnext [7 more] [flagged] tivert 11 hours agoparent> The kernel has a gray hair problem. > No one in the West wants to do volunteer work any more because it pays a lot more to work at Evil Corp and wave some flags around during the appropriate month. I thought most of the kernel \"volunteers\" were actually working for some \"Evil Corp\" or another that was paying them to \"volunteer\" in some way related to the company's business. reply sampo 10 hours agoparentprev> No one in the West wants to do volunteer work any more because it pays a lot more to work at Evil Corp This post is about an engineer in the East, who apparently works for a company called Baikal Electronics. \"BAIKAL ELECTRONICS JSC is a Russian electronics company that manufactures semiconductors and computer processors. Baikal Electronics JSC produces computer processors for the Russian military.\" https://ge.usembassy.gov/targeting-russias-senior-officials-... Do you somehow think these companies in the East are less Evil than Silicon Valley companies? reply oneshtein 10 hours agorootparentWe need to know at which side of border you are to answer this question. reply Conscat 11 hours agoparentprevI'm confused why you insinuate that \"flag waving\" in June has anything to do with this topic. You frame it as though that is something developers tolerate because they are paid to, in contrast to how developers behave in volunteer work (demonstrably untrue). reply llm_trw 11 hours agorootparentI wasn't talking about you personally. I was talking about the type of human who is shown in this commercial: https://www.youtube.com/watch?v=X55JPbAMc9g We need to be very clear that they are human, and not a reptile wearing human skin and using human words to get to eat human babies. reply anal_reactor 11 hours agoparentprevIt's not only about work for Evil Corp being better. It's also about \"how the fuck do I even start?\" reply yapyap 12 hours agoprevsad reply indulona 12 hours agoprevThis is good. \"West\" and \" Global South\" need separate so there can be more competition and innovation in the world. I had no Idea linux got so political since it is not my OS, though recent wokenization of Debian should have made it clear OSS is screwed, but something good will come out of something bad. reply rossant 11 hours agoprevIs it plausible that some three letter agencies are involved in this decision? reply whatshisface 10 hours agoparentSanctions fall under the State Department and OFAC which is under the Treasury. reply Yizahi 6 hours agoparentprevYes, it's called KGB (or FSB after renaming). reply fuoqi 12 hours agoprevI don't think many Western developers understand how much damage Linus just single-handedly dealt to the accumulated respect and trust towards the Linux Foundation leadership. If you think that the Russian IT community will think \"damn, this evil Putin, we need to overthrow him\", think again after taking a look at these discussions (in Russian) [1][2]. And many developers from other countries (especially from China) certainly have started to think \"hm, we may be next\" and act accordingly because of that, e.g. by not actively participating in the Linux development in the first place. They could've handled it MUCH better, most people understand that the removal by itself is understandable (properly navigating the current regime of sanctions is extremely hard and it's better for an US-based organization to be conservative, doubly so with people from the directly sanctioned companies like Baikal Electronics), but lack of transparency, sneakiness, and the extremely aggressive, unnecessary and dehumanizing remarks from Linus just the situation from unfortunate bad to extreme worse. [1]: https://habr.com/ru/news/852962/comments/ [2]: https://www.linux.org.ru/news/linux-general/17766938/page3#c... reply andreasmetsala 11 hours agoparent> the extremely aggressive, unnecessary and dehumanizing remarks from Linus Linus being Linus. I thought he had gotten some comms training but it’s hard to change when you’ve spent most of your career communicating very directly. reply llm_trw 11 hours agorootparentLinus and the Linux foundation breaking their own COC: >In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, _ethnicity_, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, _nationality_, personal appearance, race, religion, or sexual identity and orientation. reply shiroiushi 11 hours agorootparentI don't see \"employer\" on that list. Apparently, these people are being removed from their maintainership status due to their employer, not their nationality. reply 4bpp 11 hours agorootparentI assume your interlocutor was referring to how he dismissed those who complained about the move as \"Russian trolls\" more than the original delisting itself. reply oneshtein 10 hours agorootparentprevI don't see \"war\" in this list. reply gn4d 4 hours agorootparentprevThis is markedly different afaict. In the past, Linus was brash with individuals, and sometimes corporations, judging them by their actions (even if at times unfairly). Now he is demonizing people based on their country of origin, and citing historical military conflicts as justification for demonizing them. The shark has been jumped. reply gn4d 4 hours agoparentprevWell said. reply 0dayz 11 hours agoparentprevWhat's you point here exactly? Without russia/China we're doomed? Is it the same for these two countries too if the west moves away from them? And where exactly is Linus this evil strawman you created? reply fuoqi 11 hours agorootparentMy point is that do not act surprised when you will see a noticeable reduction of contributions from Russian, Chinese, etc. developers. Most of people leaving (or not joining in the first place) will not be as visible as the Sergey's goodbye. By itself it may not be a huge deal, especially in the near term, but it compounds with other factors like dwindling (relative) popularity of C and the recent Rust debacle. >And where exactly is Linus this evil strawman you created? \"Strawman\"? Sure... https://typeblog.net/55833/getting-called-paid-actor-by-linu... reply 0dayz 9 hours agorootparent>My point is that do not act surprised when you will see a noticeable reduction of contributions from Russian, Chinese, etc. developers. Most of people leaving (or not joining in the first place) will not be as visible as the Sergey's goodbye. By itself it may not be a huge deal, especially in the near term, but it compounds with other factors like dwindling (relative) popularity of C and the recent Rust debacle. I highly doubt anyone would be surprised that people would not stop contributing if they agree with their country's interest in which said countries has questionable interests juxtaposition to USA's - which is where Linux is based. If anything they would be surprised if they continue to contribute despite their country's geopolitical dumbfuckery and good for them, they got my support all the way. >https://typeblog.net/55833/getting-called-paid-actor-by-linu... First just going to state: Linus/Greg issue of lack of transparency is not something I've said that I'm neither agree/disagree with. But nothing in this blogpost does very much of anything in showing some new revelation of Linus being a person who \"dehumanizes\" unless the phrase: > I'm also not going to start discussing legal issues with random > internet people who I seriously suspect are paid actors and/or have > been ----->_riled up by them_ As to sending me a revert patch - please use whatever mush you call brains. I'm Finnish. Did you think I'd be supporting Russian aggression? Apparently it's not just lack of real news, it's lack of history knowledge too. The concerning part to me is that kernel development will not only be based on technical discussion anymore (or maybe it never was): why would a revert patch or not has anything to do with nationalities or personal's political and hisotrical view. Bias towards either side to accept/reject technical contributions for such large project is only going to be harmful for the project regardless of open-source or not. reply nicman23 12 hours agoparentyou get that the revert patch was for non code? reply xgstation 12 hours agorootparentBy technical, it means decision is to be made objectively through logical reasoning following certain rules. It is a patch at the end and should follow kernel development process. However, the reason for that patch removing Russian maintainers until now is still not made fully transparent by either GKH or Linus. Instead, calling it \"I am Finish\" and \"Russian aggression\" has nothing to do with the patch itself and is not constructive discussion. Even we trace down to the road, none of the maintainers today has done that aggression to Finland. If the reasoning of rejecting the revert patch is \"Compliance issues based on our lawyers suggestsion\" etc. then just say it. reply jeroenhd 12 hours agorootparentIf the Russian invasion was the cause for this removal, it's rather late. The invasion started back in 2014 and strengthened two years ago. There probably also wouldn't be any lawyers involved. My guess is that some secretive agency got in contact with the Linux team. Whether this is about infiltration of kernel development or an attempt to stop Russia from powering its war machines by Linux I'm not so sure, but I don't know about any laws that would require this specific process. As for \"none of the maintainers today has done that aggression\": they haven't _yet_, but they can be made to by their government if that's what Putin wants. Countries bordering Russia are on edge, and, as has been proven in Georgia and Ukraine, rightfully so. The current anti Russian sentiment isn't a consequence of any historic events as much as it is an anticipation of a Russian invasion in future. I would much prefer knowing why exactly removing Russian contributors would be legally required, but given the secrecy surrounding it, I don't think there's much public information around it. reply Hamuko 12 hours agorootparent>If the Russian invasion was the cause for this removal, it's rather late. Sanctions don't move lockstep with military actions and neither do the courts that interpret and enforce the sanctions. reply sumosudo 6 hours agorootparentThis is a knee-jerk reaction from the West. They loosing the battle, so have to get petty now reply doikor 12 hours agoparentprevAnd the sentence before that said > If you haven't heard of Russian sanctions yet, you should try to read the news some day. And by \"news\", I don't mean Russian state-sponsored spam. And the sentence right before that > And FYI for the actual innocent bystanders who aren't troll farm accounts - the \"various compliance requirements\" are not just a US thing. Meaning there is also valid legal reasons to do this with both the country he is living in (US) and the country he is from (Finland) having sanctions on the companies whose employees are being excluded. I think the is also a US citizen. tl;dr; read the whole post instead of taking a single quote out of context. reply xgstation 12 hours agorootparentIf I have to guess that is likely the case, but if that is the case then reasoning and formal process should me made clear and transparent, while the weird part is that Huawei is also under sanctions and has a lot people contributed to Linux, but they are not removed. So what is our standard process here? reply doikor 12 hours agorootparentAFAIK the US Huawei sanctions are not a blanket \"have nothing to do with them at all\" but instead apply to telecoms equipment and phones and their components. Don't think software is a component. There was some talk about banning Huawei access to AOSP but I don't think that ever went through. And yes sanctions are weird. Finland is sanctioning a lot of Russian business including travel over the border for most part but still there is a train load of copper and nickel ore coming over every day or two. reply Hamuko 8 hours agorootparentFinnish–Russian border being closed isn't because of any sanctions, but rather because Russia flooded the border with refugees, up to a point where it even prevented their own citizens from getting back to Russia through the border crossings. reply andreasmetsala 12 hours agorootparentprevThis does seem a bit like throwing the baby out with the bath water but it’s understandable that the kernel project doesn’t have the resources for a more granular approach when even large organizations struggle with this problem. I’m always in for making more clear and transparent processes though. reply five_lights 11 hours agorootparentprevI think they have been transparent as they legally can be. We're going to have to read between the lines here. reply readthenotes1 12 hours agoparentprevThank God Linus is not from India or Poland (tops on the lists of 'most invaded countries' found on a brief search) reply praptak 11 hours agorootparentThat's missing the point, India has nothing to do with it. When Linus speaks about being Finnish it's about being invaded by Russia and I don't believe India ever was. reply Paradigma11 4 hours agorootparentThey tried, though: https://www.rbth.com/history/330174-russia-tried-to-conquer-... reply smallstepforman 7 hours agorootparentprevDont you love myopic viewing of history. It was Russian tzar Alexander who liberated Finns from sweden, granted them their own language as official language (as oppised to Swedish), and were the first to grand Finland autonomy and self rule. They even expanded Finnish territory from war reparations with Sweden. After 1917 Finns wanted full autonomy, this was granted but negotiations about territory borders were unresolved. Finns used the turmoil in SSSR in 1917-1923 to get maximalistic gains. The winter war was just restoring borders to fair ethnic borders. reply praptak 9 hours agorootparentprevPoland though... hoo boy :) reply humanlity 10 hours agorootparentprevLOL reply idiocrat 12 hours agoprev [–] This reminds of the Anti-German sentiment during WWI. https://en.wikipedia.org/wiki/Anti-German_sentiment \"The Justice Department attempted to prepare a list of all German aliens, counting approximately 480,000 of them. The Committee of Internment of Alien Enemies recommended sending them to internment camps, though the idea was opposed by the War Department and the Attorney General. More than 4,000 German aliens were imprisoned in 1917–1918. The allegations included spying for Germany and endorsing the German war effort. When the United States entered the war in 1917, some German Americans were looked upon with suspicion and attacked regarding their loyalty. Propaganda posters and newspaper commentary fed the growing fear. In Wisconsin, a Lutheran minister faced suspicion for hosting Germans in his home, while a language professor was tarred and feathered for having a German name and teaching the language. The Red Cross barred individuals with German last names from joining in fear of sabotage. One person was killed by a mob; in Collinsville, Illinois, German-born Robert Prager was dragged from jail as a suspected spy and lynched. Some aliens were convicted and imprisoned on charges of sedition for refusing to swear allegiance to the United States war effort. Thousands were forced to buy war bonds to show their loyalty.\" reply shiroiushi 11 hours agoparentI'm not sure why you think this is comparable at all. These aren't Russian immigrants or descendants living in the west, they're Russians living in Russia, and working for Russian companies on the sanctions list. As a result, they've been stripped of their maintainership status, so they can still contribute, but they have to go through the regular send-a-patch process that any other random contributor would have to. It surely doesn't feel good to them after their history of contributions, but international law and politics cause things like this to happen. reply idiocrat 8 hours agorootparentYes, what you are saying is fair enough. I can imagine technological \"divorces\" will happen more often going forward, as the polarization between the G7 and the BRICS++ members grows. reply whatshisface 11 hours agorootparentprev>No matter the reason of the situation but haven't we deserved more than that? Adding to the GREDITS file at least, no? The author of the linked article suggests that they should get some form of memorialization. When Linus is finished berating Sam for working at Halliburton during the Iraq war, something that by analogy I guess he has every right to do, this advice should probably be taken. reply InsideOutSanta 11 hours agoparentprev\"German Americans were looked upon with suspicion\" This isn't about Russian Americans, though. This is about Russian developers working for Russian companies that are involved in the actual war. reply prmoustache 11 hours agorootparentHave we seen the same about Israeli contributors? reply InsideOutSanta 11 hours agorootparentPointing out hypocrisy is not the same as pointing out a flaw in a decision. This can be both the correct, legally required decision, and also be hypocritical. reply oneshtein 10 hours agorootparentprevIsrael attacked by Hamas, which, in turn, was bribed by Russia to start the war. Hamas captured and killed citizens of few nations, completely unrelated to occupation of Palestina by Israel. It's not like one side is completely innocent, while other side is pure evil. reply prmoustache 9 hours agorootparentThe action of a terrorist group do not justify a genocide. reply xenospn 8 hours agorootparentprevHas Israel been sanctioned by any major western government? reply diegolas 7 hours agorootparentno and that's exactly why those sanctions are bullshit reply prmoustache 7 hours agorootparentprevIt should but won't because the likoud always play the criticizing_Israel choices = antisemitism card to shutdown any discussion and most western gov have too much baggage against jews to feel entitled to argue against. This + it is a matter of who you hate the most. Most far right political groups in western countries are hating islam and arabs even more than jews at the moment. The irony is that some neonazis in european countries who used to make jokes about gaz chambers are currently calling out parties expressing concern about Israel politics as antisemitists and islamists. reply idiocrat 12 hours agoparentprevAnd then the next paragraph of the wikipeida: \"In Chicago, Frederick Stock was forced to step down as conductor of the Chicago Symphony Orchestra until he finalized his naturalization papers. Orchestras replaced music by German composer Wagner with French composer Berlioz. After xenophobic Providence Journal editor John R. Rathom falsely accused Boston Symphony Orchestra conductor Karl Muck of refusing to play The Star-Spangled Banner and triggered a trial by media in October 1917, Muck and 29 of the orchestra's musicians were arrested and interned in Fort Oglethorpe, Georgia, until well after the Armistice. \" reply krick 11 hours agorootparentAnd of course notorious renaming hamburgers to \"liberty steaks\" in some restaurants in the timeframe between WWI and WWII. reply oneshtein 12 hours agoparentprev [–] It looks like typical wartime politics. It's better to say sorry rather than to risk millons of lives due to espionage. There is no liberals at war. reply whatshisface 11 hours agorootparent>It's better to say sorry rather than to risk millons of lives due to espionage. We can't open a discussion about obfuscated FSB patches if we aren't going to ask what we're doing about obsfucated NSA patches. reply Arnt 11 hours agorootparentThis isn't about patches at all. They can submit patches. Anyone can. This is about being listed as a contact. You can EITHER work for a company that produces CPUs for the Russian army OR answer mail on behalf of the linux kernel maintainers, but not both. reply whatshisface 11 hours agorootparentSo, what, the espionage concern is that a person who is listed as a contact might read emails on LKML.org? The only possible justification for this is the one being offered, that some lawyers do not believe it is safe for Linus to head a project with ties that could be made real to a jury between its leaders and sanctioned entities. Considering the fact that individual people need to stay out of court as badly as they need to avoid being convicted this is not such a difficult decision to empathize with, but it is being conducted in a typical Kernel fashion, with personal views being injected at all the worst moments and contributors leaving who would not have had any quarrels if they had not been fabricated. reply oneshtein 10 hours agorootparentThey still able to read LKML, so it's not, but they no longer ask questions like \"Tell me details of your hardware because I'm official kernel maintainer while you is just engineerer, so I can easily harm you career if you refuse to cooperate.\", then use this information to improve hardware used in Russian weapons. reply whatshisface 10 hours agorootparentIf official kernel maintainers could harm careers over not telling them proprietary hardware details, NVIDIA would be selling hot dogs at a street corner. reply Arnt 10 hours agorootparentIt doesn't matter. The sanctions say \"don't cooperate with those companies\", not \"unless the cooperation is harmless\" or \"only according to your judgment\" or anything like that. reply whatshisface 10 hours agorootparentThat explains why it had to happen, but says little about what our opinion about it should be. reply Arnt 5 hours agorootparentA rule that's simple enough to understand reasonably quickly is also simple enough to mishandle some corner case. In this case: Pity for the guys who build Putin's glide bombs. reply Arnt 11 hours agorootparentprevWhat espionage concern? Has anyone involved said there is one? reply whatshisface 11 hours agorootparentYes, and I quoted the comment I had replied to. It sounds like we agree except for misunderstanding. reply oneshtein 11 hours agorootparentprev> Could this have been an NSA attack? Maybe. But there were many others who had the skill and motivation to carry out this attack. Unless somebody confesses, or a smoking-gun document turns up, we’ll never know. USA? Russia? China? Israel? North Korea? Iran? reply ogurechny 11 hours agorootparentprev [–] You managed to read about the results of that idiocy, and believe it's a promotion of that same idiocy. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Serge Semin, a Linux community volunteer, announced his departure after being removed from the official kernel maintainers list by Greg Kroah-Hartman, citing compliance requirements without detailed justification.",
      "The lack of explanation for the removal has caused frustration and disappointment among developers, highlighting concerns about the handling of such situations and its potential negative impact on the community.",
      "Despite his departure, Serge expressed gratitude to colleagues, shared his past contributions, and offered assistance to those needing information on his work, while also mentioning his future plans."
    ],
    "commentSummary": [
      "A Linux community volunteer from Baikal Electronics, associated with the Russian military, was removed from the Linux kernel maintainers list due to sanctions compliance.",
      "This action has ignited debate over the legal and ethical implications, questioning the alignment with open-source principles.",
      "The situation underscores tensions between legal obligations and the open-source community's values, raising concerns about the impact on contributions from sanctioned countries."
    ],
    "points": 192,
    "commentCount": 171,
    "retryCount": 0,
    "time": 1729747790
  },
  {
    "id": 41931392,
    "title": "TSMC cuts off client after discovering chips sent to Huawei",
    "originLink": "https://www.bloomberg.com/news/articles/2024-10-23/tsmc-cuts-off-client-after-discovering-chips-diverted-to-huawei",
    "originBody": "Bloomberg Need help? Contact us We've detected unusual activity from your computer network To continue, please click the box below to let us know you're not a robot. Why did this happen? Please make sure your browser supports JavaScript and cookies and that you are not blocking them from loading. For more information you can review our Terms of Service and Cookie Policy. Need Help? For inquiries related to this message please contact our support team and provide the reference ID below. Block reference ID: 767cf720-923a-11ef-a0d9-d7a9299b5192",
    "commentLink": "https://news.ycombinator.com/item?id=41931392",
    "commentBody": "TSMC cuts off client after discovering chips sent to Huawei (bloomberg.com)192 points by teleforce 16 hours agohidepastfavorite110 comments jszymborski 15 hours agoI'm out of my depth here, but I wonder that, since microchips are finding their way into all manner of places they shouldn't (e.g. Shahed drones and Russian missles), how hard would it be for batch identifiers to be made into the silicon. They can then be cross-ref'd to clients. I know instances of Easter eggs finding their way into chips back in the day. Feels possible. https://en.wikipedia.org/wiki/Chip_art reply kayson 15 hours agoparentThis is often done already. In fact I wouldn't be surprised if this is how they track things down. Silicon die usually have some burnable fuses that can be set once and at some point during manufacturing the wafer lot number and even XY coordinates of the die on the wafer are recorded. It helps track down yield issues. reply walterbell 14 hours agorootparenthttps://www.scientificamerican.com/article/the-pentagon-rsqu... Each chiplet will itself have up to 100,000 transistors and include a two-way radio, data encryption engine and way to detect tampering—all while consuming under 50 microwatts (50 millionths of a watt) and costing less than one penny each. Identifying information on each dielet would be read using a penlike probe plugged into a smartphone.. a dielet would be inductively powered by the probe, which would communicate via radio frequency signals when placed within a half millimeter of the chiplet. The probe would relay encrypted information to an app on the smartphone. reply readyplayernull 13 hours agorootparenthttps://archive.md/GTRrY reply mmoskal 14 hours agoparentprevAll except for the cheapest microcontrollers (everything above half dollar) have serial numbers (unique identifiers) burned into one time programmable memory. reply 15155 12 hours agorootparentARM M0 cores at 9 cents have unique IDs burned into flash OTP typically in my experience. reply Tempest1981 11 hours agorootparentAnyone remember the Dallas Semiconductor DS2400/DS2401 https://www.analog.com/media/en/technical-documentation/data... 1-Wire, unique 48-bit ID. I don't remember the year it was introduced, or cost. reply tivert 4 hours agorootparent> 1-Wire, unique 48-bit ID. I don't remember the year it was introduced, or cost. IIRC, their 1-wire temp sensors also have that (at least they did about 10 years ago when I was messing around with hobbyist electronics): https://www.adafruit.com/product/374 reply csomar 15 hours agoparentprevThere is probably multiple ways to identify who the client is for a particular chip. The problem is that you'll whitelist clients instead of blacklisting them. This will affect business. reply andreasmetsala 11 hours agoparentprevI wonder if it was possible to build chips in a way that they could disable themselves if used in a way not approved of by the manufacturer. Perhaps a set of pre-generated keys that have preset validity times. You would then need to contact the manufacturer to receive the next key in the set. Probably too much effort for the gain though. For military chips maybe? reply tazjin 11 hours agorootparentYou really want hardware DRM to support your political ideology? Good thing this sort of thing has never been abused! reply silverliver 9 hours agorootparentI hope whichever country/company that champions this kind of DRM gets their infra compromised and permanently disabled. It's absurd that we're at a point where we are entertaining this level of control as a possibility. This is not going to end well for anyone. reply perihelions 10 hours agorootparentprevThen the manufacturer becomes a military target, since destroying their authentication infrastructure has the effect of disabling operational military hardware. reply ok_dad 10 hours agorootparentprevThe military wants the simplest things possible. The only thing you could even reasonably want to have a way to disable would be crypto-related systems. For weapons, heck, even nuke missile codes are set to 0000 or something similarly stupid, because in crunch time you don't want to have to look up the code for launching a nuclear missile that is already secured by several doors of thick steel. A missile with a way to disable it would be a nightmare, some dumb military officer or enlistee would routinely destroy them by pressing the wrong button, guaranteed. reply slowmovintarget 4 hours agorootparentprevWhat do you think Microsoft's been pushing for the last ten years? The impulse for control generally has truly awful unintended consequences. reply shash 10 hours agorootparentprevFor anything programmable, _maybe_. But power management? Analog frontends? Very difficult... reply vasco 11 hours agorootparentprevI'm sure all your enemies would love for the US to add remote-disable to all the weapons. On the other hand remote hardware disable being already in all military equipment the US sells to allies, just in case they ever change their mind, would be a cool conspiracy theory. reply android521 11 hours agorootparentprevimagine your phone turning into a rock because you loaded an image or song in your browser. Is that the future you want to have? reply curiousgal 12 hours agoparentprevChips getting to China seems like a purely political issue to me. reply andreasmetsala 11 hours agorootparentThat’s like saying you don’t care what the business side of your company does, you just want to write code. Well, if your company goes bankrupt because engineering didn’t work with the product guys you don’t have a job anymore. reply rightbyte 15 hours agoparentprevYou can probably engrave with a laser. That art is fixed. But I don't think we need more ways for the US gov. to track us. reply Sabinus 15 hours agorootparentPhysical identifiers on the chip to identify the company of purchase isn't going to help the US government track you, they have far more useful methods. reply rightbyte 11 hours agorootparentJust becouse they have far more useful methods I am not very keen on another one. There would have to be some 'know you customer' type of tracking for ordering from electronics suppliers to avoid liability. Like with banks. DigiKey rejecting your order because who knows what their black box said. It would hardly help versus people that can afford front buyers anyway. And even if it would work the microchips still end up in bombs dropped on children since the gov. hand them over willingly in the first place. reply Sabinus 15 hours agoprevIn a global trading environment, sanctions regimes are an added cost to procurement you impose on adversaries, not an impenetrable denial of materials. Huawei can't cost compete if it has to smuggle chips constantly. reply JumpCrisscross 14 hours agoparent> Huawei can't cost compete if it has to smuggle chips constantly It also trashes their R&D. Imagine if every LLM researcher in America had to smuggle in Iranian cores to do any work. One of the saddest stories of the 21st century is China’s decline into despotism. They didn’t have democracy, but they had internal political competition and a peaceful transfer of power. In an alternate world, Xi is comfortably retired while China and America drive a new century of human prosperity. reply hilux 12 hours agorootparentIn the 21st century, China's per capita GDP has grown about 2.5x as much as that of democratic India, which is also the only other country of comparable population. reply edouard-harris 10 hours agorootparentTrue, but the overwhelming majority of that growth in percentage terms occurred prior to their recent decline into despotism. Xi didn't take power until 2013, and it took him several years to fully consolidate. See, e.g., https://www.macrotrends.net/global-metrics/countries/CHN/chi... reply hackernewds 13 hours agorootparentprevThey're not smuggling the cores for usage. They're smuggling to reverse engineer, and the Chinese are much better (even if more willing) at it than Americans. You are also discounting that China has driven a new century of human prosperity for their country and globally through highly efficient manufacturing that has proven tough to replicate. reply 15155 12 hours agorootparentHow many IC samples are required to do a layer-by-layer reverse engineering of something at single-nm feature sizes? Ok, now you've got \"something\" here even resembling a netlist (lol), what do you do with it? Keep in mind: you don't actually have the manufacturing technology to use this IP. By the time you do, the IC you reversed is no longer state of the art. I think state-sponsored corporate espionage would be a lot more fruitful and cheaper. reply vasco 10 hours agorootparentprev> highly efficient manufacturing Is \"highly efficient manufacturing\" a euphemism for low paid labor and slave labor? As far as I know pretty much any product that moved production to China did it because of low labor costs. It's also been reported that companies have also exited China into other low paid labor countries in the region. Meanwhile the only factories that return to the US are exactly the ones that invested in automation and efficient manufacturing, as it's the only way to beat the low costs. They've also managed to pump out really cheap solar panels and EVs, but it's not clear to me how much of that is upgraded automation vs government subsidies. reply jpgvm 10 hours agorootparentAlmost all of it is better automation, shorter supply lines and abundance of highly skilled labor. Manufacturing electronics in China hasn't been about labor costs for a decade. It's still about costs overall but instead of people it's access to the right machines, close enough to where everything else is being sourced and final assembly is done etc. reply hilux 1 hour agorootparentprevWhat China has done to lift the living standards of over one billion people is unprecedented. (S Korea's progress was even greater, but on a much smaller scale.) Everyone can see this. Only (some) white Americans don't want to acknowledge it, or need to explain it away. reply CorrectHorseBat 13 hours agorootparentprevNot in this case, the chips were detected in Huawei products reply nradov 12 hours agorootparentprevReverse engineering is the easy part. China still lacks EUV lithography manufacturing technology. They'll figure it out eventually but the point is to stay a generation ahead. Just like China can manufacture turbine engines but only ones equivalent to what we had some years ago. reply datadeft 10 hours agorootparentI think China does not need cutting edge of everything to be successful. If they build a nuclear power plant that has turbines from 5 years ago they are still going to be ok. The question what kind of power plant to build is much more important. reply jumping_frog 12 hours agorootparentprevA company probably needs a couple of 100s chips to reverse engineer. Not much. reply huijzer 1 hour agorootparentprevYou could say the same for Russia. But on the other hand, maybe they were despots all along? reply roenxi 14 hours agorootparentprevThat sounds like it'd be something of a non-issue. If a GPU researcher wants a GPU someone will be willing to smuggle it out for them. Like GP says, a sanctions wall is penetrable. The problem would be more that leading researchers at something like China's OpenAI can't procure a billion dollars worth of GPUs for industrial research. Although I do want to endorse the idea that their political system is probably going to undermine the successes of their businesses. From the outside it looks like a disaster waiting to happen. reply justahuman74 13 hours agorootparentThe smuggling increases costs though. They may have only so much budget - perhaps the sanctioned-country researcher could only afford an H100 now instead of an H200 if you had excluded the smuggling > their political system is probably going to undermine the successes of their businesses I do agree with this reply fxtentacle 10 hours agorootparentprevYou should probably read about the \"century of humiliation\" to understand why dominance through strength is being seen as something very positive in modern China. reply Paradigma11 6 hours agorootparentUnderstand, sure. Care, no. All nations and ethnicities have tons of grievances in their closet. That is how you get centuries of warfare and jingoism. China had a good thing going, they decided to change for this aggressive path. reply eunos 10 hours agorootparentprev> Xi is comfortably retired while China and America drive a new century of human prosperity They told the same during the Hu era and they will write the same to Xi successor. The enmity is structural. reply aurareturn 10 hours agorootparentprev>One of the saddest stories of the 21st century is China’s decline into despotism. They didn’t have democracy, but they had internal political competition and a peaceful transfer of power. In an alternate world, Xi is comfortably retired while China and America drive a new century of human prosperity. I think the US and the west would be doing the exact same things to China regardless of what happened with Xi. When China decided to design phones instead of manufacturing them for American companies, that's when their fate was sealed and the west (and Japan) took action. China wanted to move up the value chain. The west wanted China to remain as their factory. The \"China bad\" propaganda is just to convince western commoners that doing these things to China is justified. It's about economics and power. Always is. Always has been. reply kasey_junk 9 hours agorootparentThat didn’t happen when Japan or Korea moved up the value chain. reply aurareturn 8 hours agorootparentIt did happen for Japan. >“When governments permit counterfeiting or copying of American products, it is stealing our future, and it is no longer free trade.” So said US President Ronald Reagan, commenting on Japan after the Plaza Accord was concluded in September 1985. But Japan and Korea weren't/aren't nearly the threat of China due to size. reply russli1993 14 hours agorootparentprevlol, china is doing good in keeping up with llm development, Huawei is happily building AI processors in Chinese fabs and selling them equal the price as Nvidia chips. Huawei profits exploded this year, I wonder why. This article is a joke. US should sanction tsmc as it's caught breaking sanction. Chinese semi tools company revenue is exploding. We will see in 10 years. Also China is driving human prosperity. 1.4b people live in healthy lives, life expectancy is higher than US, a farmer's kid can grow up and working on 5G technology, funny is the US that stops and punish a Chinese person work on 5G, AI, EVs. What happened to freedom of pursuit of happiness and everyone is equal? On the economy, people say China doesn't bring prosperity, China bad, then tell Apple, Tesla to not sell in China, phone up Elon and Tim. US starts trade war, banning Chinese industries, weaponize supply chain, exchanges, collaboration in attempt to destroy Chinese economy, cause 1.4B to go back to proverty. What is US' aim here? Make 1.4b ppl suffer so they will listen to US's demands? To prove a political point? Please tell me is there any Chinese person US haven't attacked? US only loves Chinese if they are dissidents because they help the US destroy China from within. Chinese person just make up a story China government did something bad to me and they get an invitation to Congress. And Congress has stopped even pretending they care to help these Chinese anymore, they use this to justify more attacks on Chinese people and make more Chinese people suffer. US government: yes we care about Chinese ppl and that's why we ban all of their products, destroy all their labor, now these Chinese are jobless can't afford food on the table, what? The supposed solution to lack of freedom is more bans and oppression. We can build a prosperous, mutually respected, win-win world today, no conflict, no attacks, no suffering, if US allows it to be. You are attacking people, and you can stop. Did we steal 5G, did we steal EV batteries? Last I heard Huawei is paying billions to Qualcomm for 5G patent licenses, dispute can be negotiated with good faith and mutual respect. But it doesn't work if one party just to demonize you and want you dead so he can be only kid in the block. China does want to buy US goods, but the one we want to buy you don't sell. We are happy to pay 10k for Nvidia chips but you stopped selling not us. World is large enough for US and China to both succeed. reply Dylan16807 12 hours agorootparentThe idea that blocking a handful of technologies is going to push china into poverty is ridiculous. If the most meaningful attack someone has to face is their country getting stuck with a few tariffs, that person leads a charmed life. reply butterlettuce 14 hours agorootparentprev@dang reply hackernewds 13 hours agorootparentwhy, simple because it is broken English? they speak with passion but make valid points. also it doesn't seem AI written sincereply larme 12 hours agorootparentprevdon't act like kids calling their parents to stop an argument reply 15155 12 hours agorootparentprevHow are the Uyghurs doing in this magical land? Tibetans? Protesters at Tiananmen Square? People who value their organs? reply datadeft 10 hours agorootparentThey are doing roughly the same as J6 people ¯\\_(ツ)_/¯ reply 15155 10 hours agorootparentAre thoseChina’s decline into despotism I am confused. What were they before? reply Longlius 12 hours agorootparentThey had a lot of problems but power was still highly decentralized (a lot of decisions were left to local and regional party bosses). Human rights were never especially high on the list of priorities but you tended to see the government allow for a degree of experimentation that produced a lot of innovation and led to a vibrant culture. Things are very different now with a one-man cult of personality. reply labster 12 hours agorootparentprevChina was a one-party state where party elections actually mattered. reply gpvos 11 hours agorootparentFree speech on political topics was still limited, e.g. about Tiananmen Square. reply JumpCrisscross 32 minutes agorootparentNot among the elites, to my knowledge. Within the Chinese oligarchy there was political competition. Compare it to American democracy when we excluded women, Blacks and Indians. reply mppm 11 hours agoparentprevI will add that costs are imposed not only on adversaries, but on everyone. Between reporting requirements, economic sanctions, anti-money-laundering and anti-tax-evasion provisions, perfectly legitimate businesses are probably losing close to a trillion dollars a year on compliance and lost opportunities. reply bb88 15 hours agoprevhttps://archive.ph/wCreq reply walterbell 14 hours agoprevStep right up to the Silicon Pillow Fight™ Dec 2023, https://www.tomshardware.com/tech-industry/manufacturing/usc... > there is a functioning system in place where companies request permission to sell certain products to China, and the DoC approves exports of products that offer lower performance but still belong to the latest generation of technologies developed in the U.S.. the idea of a strict ban on advanced technology exports to China does not match reality.. \"There are Swiss cheese holes in it. And right now, chipmakers are driving cars through them.\" Hopefully the Linux kernel does not become theatrical collateral damage, https://news.ycombinator.com/item?id=41919670 reply justahuman74 13 hours agoparentWatch the linux foundation eventually move to Switzerland like the RISC-V foundation did reply azinman2 13 hours agorootparentAnd then watch a parallel structure emergence from China that usurps it all. reply ChrisArchitect 13 hours agoprevRelated: TSMC told US of chip in Huawei product after TechInsights finding, source says https://news.ycombinator.com/item?id=41917990 reply mrweasel 11 hours agoprev> Research firm TechInsights recently discovered that Huawei’s latest AI servers contained processors made by TSMC, Nvidia Corp.’s most important manufacturing partner. So they cut off Nvidia? Or do Nvidias customer order chips directly from TSMC and it's one of those clients? It would be funnier if it was Nvidia, but probably not. reply parhamn 15 hours agoprevHauwei ships 12 million phones per quarter [1]. If even a small percent of them included these chips, it should be pretty damn obvious no? [1] https://huaweicentral.com/huaweis-global-smartphone-shipment... reply greenknight 15 hours agoparent12 million, say its 1% thats 120k phones. https://www.tsmc.com/english/dedicatedFoundry/manufacturing/.... TSMC produced in 2023 16 million wafers, apples die size is about 105mm2 which fits around 230 chips per wafer... say its 200 good chips... thats 3.2 billion chips. 3.2B to 120k is a rounding error. reply parhamn 1 hour agorootparentTIL thanks reply gruez 14 hours agoparentprevAren't the chips in question used for AI accelerators rather than phones? Moreover for phones SIMC is probably competitive at the mid end range, which makes up most of their sales. reply surfpel 12 hours agoprevThis is a strange time to be imposing chip sanctions, given AI isn’t at the forefront at real scale yet. They’re still able to access compute now, albeit at a higher cost. But in the future when scale and margins are much more relevant than today, that won’t be the case. Market forces to develop IC tech (lithography, foundries, patents, etc..) inside China are surging. So by the time they really need quantity, it’s much more likely they’ll have a domestic high end IC supply chain implemented. Obviously nobody could really predict the timelines with good certainty, but it seems like a good development for them long term. reply 15155 11 hours agoparent> They’re still able to access compute now, albeit at a higher cost. Perfect is the enemy of good. If massive resources must be diverted from R&D and into evading sanctions, it's harder to catch up as quickly or cheaply. Meanwhile: TSMC and the collective West are also making significant strides. reply surfpel 8 hours agorootparentLarge market demand for a product is in itself a driver for R&D investment. With CCP level strategic investment it's a non-issue. They also have some of the best models out there already, so if they are being slowed down on AI development, it's clearly insignificant. reply wordofx 15 hours agoprevHauwei back to 10yo old tech now that it can’t pass off TSMC tech as its own. reply rapsey 14 hours agoparentChina is not that far behind and likely to catch up. The entire US STEM workforce is how many STEM graduates China has per year. The US sanctions is just a stumbling block and will result in a stronger China down the line, with a completely independent supply chain. reply throwaway2037 12 hours agorootparentBy this logic, why doesn't the US or China have their own equivalent of ASML or TSMC? Number of STEM grads means little if the quality is low. See other developing countries in South/East Asia that pump out lots of low quality engineers. reply rapsey 12 hours agorootparentThe quality is no longer low. That was true 10 years ago. Since then China has made significant progress and is on the forefront. China has their own ASML and TSMC, they are just behind. But not as far as the west likes to think. The problem with US is that Google and finance pay engineers too much. They get the most talent so they can show you better ads and make better trading algos. In the US the government works against you, whereas in China the regulation burden is none. reply nneonneo 11 hours agorootparentCorrection: in China the regulation burden is none until they disappear your CEO. reply carlmr 11 hours agorootparentprev>See other developing countries in South/East Asia that pump out lots of low quality engineers. South Asia sure, large quantity, low (average) quality. East Asia if you include Japan and Korea has pretty good engineering talent, I'd say, lots of people would run circles there around US graduates, it's more that their economies are hampered in other ways by demographic shifts, bad investing environment (Japan mostly), and monopolies that don't innovate and control the government (mainly Korea). Chinese engineering is pretty damn good now. But it takes time still to catch up to the highest levels of technology, but they have a government investing in its people, in its infrastructure, in its companies. The only question is whether the government will run out of money before the plan unfolds or the demographic time bomb hits. reply throwaway2037 10 hours agorootparentJapan, Korea, and Taiwan are no longer considered developing countries. I was being very specific about STEM grads in developing countries. From first hand experience, yes, there are \"diamonds in the rough\", but the average/median STEM grad is much lower quality from South/Southeast/East Asian developing countries _compared_ to their developed counterparts. reply carlmr 4 hours agorootparentFair, I overlooked the developing part. However can't think of many East Asian countries that would qualify then. reply hackernewds 13 hours agorootparentprevNot to mention a ton of the US STEM workforce is not American / is Chinese origin. when the incentives align not only will they leave, they will also take all their learnings with them. reply misiu1 15 hours agoparentprevIs there evidence of this reply ptek 14 hours agoparentprevIf you have 10 y/o tech with todays code and algorithms, surely you could modify and improve 3G and get better speeds / quality? My iPhone 6S drops to 3G all the time. As long as you cut all the bloat (i.e tracking code in html..). At the end of the day it all depends on the person and their skill level using the tech. reply spacebanana7 12 hours agorootparentIn fairness it can be hard for a vendor / platform like Huwawei to cut the bloat, because so much of it sits at the application layer. Users will blame you if Jira works more slowly on your devices than on Apple’s. reply WhereIsTheTruth 14 hours agoprevnext [3 more] [flagged] throwaway2037 12 hours agoparentWhat is the Xiaomi 3nm breakthrough? I couldn't find anything about it. reply ianeigorndua 14 hours agoparentprevnext [2 more] [flagged] rgreekguy 13 hours agorootparentDo you know how I can report a comment for ~~being too American~~ providing nothing in the discussion (at best)? reply heroprotagonist 14 hours agoprevFrankly, the US government should be doing more at this point. All departments, not just legislative or executive. Defense, intelligence, state, education, energy.. It is not unbelievable for the race to AGI (or whatever close enough approximation of it is necessary for dominance) to possibly be a \"first to the posts wins forever\" sort of race. We can't even secure our key technologies. Security at TSMC being a consideration, but not just them. The US is allowing NVIDIA to keep selling strategic assets to whoever can afford them, like they're selling mining picks in a gold rush. The legislation to restrict their sales to China was almost laughable. NVIDIA actively worked to do the bare minimum to comply with it. China is still a key market for them. I've seen projections of $12bn in sales of AI chips to China (though this is hearsay from financial news sites). Is that really a long term profit motive, pissing off the US government who will inevitably investigate their monopoly in the space one day. Good monopolies, like the cable companies that enable mass surveillance on the population, get to entrench to the point that no level of incompetence can unseat them. I'm sure they could use a little \"AI safety\" legislation that only their graphics cards can provide. Or is NVIDIA's motive political neutrality? Hedge their bets and hope they can balance on the tightrope long enough for a few political cycles to make the US forget, while avoiding alienating China due to the possibility China will eventually win the race? There are constant reports of industrial espionage, both within the US and all along our critical supply chain internationally. Admittedly, it's a lot easier to steal from an open society than a closed, homogeneous one. But where are the armies of advisors to assess critical infrastructure or even help assess threats on an ongoing basis. We should _almost_ be treating our and our allies high tech industrial infrastructure like they are weapon and munitions factories in a wartime environment. But assuming we're still at the start of the race, and not quite at that level yet -- there doesn't seem much fostering of future development going on to properly position the US for success. Specifically, development of companies and of future talent. There's no industrial knowledge-share program (think, 'open source initiative for critical algorithms and tech, but only for allies, and only for those who can meet security criteria'). There's no equivalent of anything like the Manhattan Project. AGI _will_ have the same, if not higher, social and political impact than the Manhattan Project. Instead we've got... DARPA, running years behind the curve as always. They're not an organization to win a race. As far as future talent goes.. There are no special schools or training programs to develop talented youth into important contributors in the space. We can't even get autistic savants through school or into those places they'll potentially thrive or work magic in. Particularly if they happen to have been born poor or can't properly navigate a social system. Even above-average, over-achieving kids aren't being incentivized to focus their development into areas of strategic interest. We're leaving our talent pool to the market, which operates way too late to properly foster early development, and leaving too much early development up to broken or ineffective educational institutions. China has a much larger pool of talent to develop. They have a more directive government with long term planning capacity. They have a much stronger industrial base that is only lacking some key technologies. They've got enough electrical power, or at least capacity to develop it, to run all the hardware. They have much better industrial espionage and cyber capabilities. We have.. a short lead in knowledge. Industrial deals with key allies that are dependent on a dollar that is frankly at risk of collapse any year now with no plan in sight for getting national debt to where we could conceivably be able to pay off _the interest_ on it. A few individual talents pushing forward the technology. The willingness of billionaires to open their wallets for a ton of useless things in hope of striking a rich vein of something salable. A political system which will reward said billionaires for that investment by not taxing their profits towards a social safety net for those who will inevitably be displaced by more productive technologies. To simplify that, almost the only thing we have driving the bus at this point is corporate greed. What kind of AGI will come out of that? Will it be better than an over-controlling one which is personally and politically manipulative, that is feared will come out of China? Anyway. That's my not-so-crazy rant for the day. reply bitmasher9 13 hours agoparent> It is not unbelievable for the race to AGI (or whatever close enough approximation of it is necessary for dominance) to possibly be a \"first to the posts wins forever\" sort of race. The winner of that race is AGI, not the hairless apes that happen to be near the geographic region where it was born. reply card_zero 13 hours agorootparentNeither the AGI nor its creators get awarded the throne of world leadership or however this is supposed to work, because the AGI is just like a person and the whole thing is an anticlimax, although a scientific triumph. In fact the AGI is less useful than a regular AI, because it's inclined to be moody and lazy. reply exe34 11 hours agorootparentmoody and lazy is a function of our past through the lower mammals and ape phase, not necessarily related to the higher brain function. reply Vegenoid 13 hours agorootparentprevWhen humans went brainiac mode, the further away you were from them the better. reply shiroiushi 13 hours agorootparentprevHopefully the AGI will take over before long, because it's obvious that humans aren't very good at managing themselves or working together. reply throwaway2037 12 hours agoparentprevHomogeneous? Mainland China is anything but. It is wildly diverse with regards to ethnicities/tribes/etc, similar to India. How does this myth persist in 2024? reply hilux 12 hours agorootparentChina is 92% Han Chinese. reply datadeft 10 hours agorootparent> China is 92% Han Chinese. I am not sure if I understand. You have a country on Earth where the vast majority of people is one kind and happily co-exists with 56 minorities. Can you point me to another country (the size does not even matter) where this happens like this? > Soon after the establishment of the People's Republic of China, 39 ethnic groups were recognized by the first national census in 1954. This further increased to 54 by the second national census in 1964, with the Lhoba group added in 1965. The last change was the addition of the Jino people in 1979, bringing the number of recognized ethnic groups to the current 56. The following are the 56 ethnic groups (listed by population) officially recognized by the People's Republic of China. reply throwaway2037 8 hours agorootparentHow about Indonesia, South Africa, or Brazil? All are incredibly diverse and have pretty good inter-ethno/religious relations. And I would not say that Tibetans nor natives from Xinjiang are happy with their current situation. The central govt has actively promoted the domination of Han people in these regions for more than 30 years. It has a real cultural impact. Another thing from GP: 8% of 1.5 billion is a huge number of people! As I understand, Japan and Korea are the most ethnically homogeneous countries in the world. reply aniviacat 9 hours agorootparentprev> happily co-exists They do not. reply datadeft 10 hours agoparentprev> The US is allowing NVIDIA to keep selling strategic assets to whoever can afford them You mean free market capitalism? That would be way to crazy. reply heroprotagonist 1 hour agorootparentSure, and if they made nuclear devices they should sell those without restriction too? Neverminding the race to AGI, these cards can power things like targeting system, drone swarms, and other weapon systems. In any military conflict that is increasingly powered by non-human devices, it will be the speed and quality of AI which matters most. Which is part software, and part hardware. Perhaps more importantly, though, our development of AI could be significantly enhanced by cheaper access to NVIDIA's devices. Which would be the case if we didn't have to compete as much with China, who have positioned themselves as adversaries, to buy them. reply WhereIsTheTruth 13 hours agoparentprev> We can't even secure our key technologies. Security at TSMC being a consideration, but not just them. TSMC is not yours, is Taiwan sovereign or not? According to you, it's not, but when China claims it, it suddenly becomes sovereign? very conveniant > There are constant reports of industrial espionage, both within the US and all along our critical supply chain internationally. Admittedly, it's a lot easier to steal from an open society than a closed, homogeneous one. But where are the armies of advisors to assess critical infrastructure or even help assess threats on an ongoing basis. We should _almost_ be treating our and our allies high tech industrial infrastructure like they are weapon and munitions factories in a wartime environment. Right, https://www.mediapart.fr/en/journal/france/290615/revealed-m... https://www.spiegel.de/international/world/how-the-nsa-spies... https://www.reuters.com/world/europe/us-security-agency-spie... You are being engineered to support the idea of a full scale war with China, it won't go well for americans if you decide to choose that path reply card_zero 13 hours agorootparentInteresting proposal, I hadn't considered that before. I'm usually against war, but your warning makes it sound like it might go well. reply heroprotagonist 13 hours agorootparentprevI don't support the idea of a war. I do support the idea of the US improving it's security posture, and improving its own possibility of success. Make getting into and out of key industrial facilities more difficult for the unauthorized, both physically and digitally. Enhanced background checks on employees who have access to critical technology. Expand those security requirements to international technology partners. If it's a race, incentivize partners to support our interests. China does all of these things. If you would consider the US bad for doing so as well, how would you consider China for being better at it? Nobody is suggesting that we invade Chinese factories. But suggesting we secure our allies industrial facilities is somehow 'engineering support for a war with China'? You would have the US just.. give Taiwan over to China, against the will of Taiwan's own people, and against US financial and strategic interest? Or else _we're_ the bad guys if China invades? reply WhereIsTheTruth 12 hours agorootparent> You would have the US just.. give Taiwan over to China, against the will of Taiwan's own people According to this article, Taiwanese still want to do business with China, so your suggestion is to prevent Taiwanese to do business with China, against their will? wait, something doesn't sound right, i can't pin point it just yet! > Expand those security requirements to international technology partners. If it's a race, incentivize partners to support our interests. Well, again, according to this article, Taiwanese wants China as partners, at a least as business partners You keep contradicting yourself.. oh wait... > incentivize partners to support our interests oh right! your interests above theirs! now it all make sense! thanks reply heroprotagonist 11 hours agorootparentYou're ignoring key points and cherry picking what to respond to based on your ability to try and twist my words into statements I never made. And you're extrapolating what must be a very obscure reference in the article into some kind of supporting evidence for your argument. All to support your words against, apparently, some perceived made-up position that you think I have. According to this article, Huawei is barred from doing business with TSMC, and when Huawei violated the sanctions through a third party, TSMC cut off that third party and reported them. Incentivizing partners is NOT 'your interests above theirs'. If the incentive is not good enough, they don't have to take it. If the incentive is good, then both your interests and theirs align. Neither is 'above' the other. Now, if you steal by violating sanctions, and you wargame a blockade of their territory, you are being a threat. You are NOT offering them more of what they want until they happily offer you what you want. Instead, you are pushing them to act based on fear of you. THAT is 'your interests above theirs!' style of diplomacy and business negotiation. I can tell you're not approaching this conversation with any form of sincerity in your arguments. I won't speculate about why you would do this. But I'm just not going to engage anymore. reply sangnoir 13 hours agoparentprev\"I think we should look at this from the military point of view. I mean, supposing the Chinese stashes away some big cluster, see. When they come out in a ten years they could take over!\" \"I agree, Mr. President. In fact, they might even try an immediate sneak attack so they could take over our AI space.\" \"Yeah. I think it would be extremely naive of us, Mr. President, to imagine that these new developments are going to cause any change in Chinese expansionist policy. I mean, we must be... increasingly on the alert to prevent them from taking over other AI space, in order to train more prodigiously than we do, thus, knocking out our models in superior exaFlOps when we emerge! Mr. President, we must not allow... an AGI gap!\" reply heroprotagonist 12 hours agorootparentI don't understand the reference? Is this from a movie or show, or some kind of over-the-top dialogue you're having between made-up characters in your head? reply hnbad 10 hours agorootparentMy memory is hazy but I think it's a reference to a dialog in Doctor Strangelove Or How I Learned To Love The Bomb. EDIT: Found it. It's indeed from Doctor Strangelove: > TURGIDSON: I mean, we must be... increasingly on the alert to prevent them from taking over other mineshaft space, in order to breed more prodigiously than we do, thus, knocking us out in superior numbers when we emerge! Mr. President, we must not allow... a mineshaft gap! Explaining the context would spoil parts of the movie so I'll instead suggest watching it if you haven't. reply feverzsj 14 hours agoprev [–] Taiwan and China's economies heavily rely on each other. I won't be surprised if Taiwan companies are still sending chips or technologies to China. reply robjan 14 hours agoparentThe chips go to China regardless since most US technology is assembled in China. reply geopopol 12 hours agoparentprev [–] There is no sanction preventing Taiwan from trading with mainland China. In fact it's their largest export market. Once there, those chips are used to build Western-branded products, Chinese-branded products and some, I'm sure, are re-exported to Russia. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [],
    "commentSummary": [
      "TSMC has terminated a client relationship after discovering that chips were sent to Huawei, breaching international sanctions.",
      "This incident has initiated discussions on the feasibility of tracking chips and the difficulties in enforcing sanctions within the global market.",
      "The situation underscores the complexities of international trade and the geopolitical tensions involving technology exports, especially among the US, China, and Taiwan."
    ],
    "points": 192,
    "commentCount": 110,
    "retryCount": 0,
    "time": 1729737563
  },
  {
    "id": 41929826,
    "title": "iOS 18.2 Lets EU Users Delete App Store, Safari, Messages, Camera and Photos",
    "originLink": "https://www.macrumors.com/2024/10/23/ios-18-2-eu-delete-apps/",
    "originBody": "iOS 18.2 Lets EU Users Delete App Store, Safari, Messages, Camera and Photos Wednesday October 23, 2024 12:00 pm PDT by Juli Clover With iOS 18.2, iPhone users in the European Union can fully delete a number of core apps, including the App Store, Safari, Messages, Camera, and Photos. Apple said in August that it planned to make additional changes to its Digital Markets Act compliance in the European Union, and one update included the option for EU users to remove system apps. Almost all apps can now be deleted in the EU, with the exception of the Phone app and the Settings app. Apps that are removed, such as the App Store, can be re-downloaded using an \"App Installation\" section in the Settings app. In the U.S. and other countries, core apps like Photos and the App Store can be hidden but not entirely removed from the iPhone and replaced with third-party apps. Related Roundups: iOS 18, iPadOS 18 Tag: European Union Related Forums: iOS 18, iPadOS 18 [ 132 comments ]",
    "commentLink": "https://news.ycombinator.com/item?id=41929826",
    "commentBody": "iOS 18.2 Lets EU Users Delete App Store, Safari, Messages, Camera and Photos (macrumors.com)144 points by sandwichsphinx 20 hours agohidepastfavorite192 comments alberth 5 hours agoGenuine question ... Why doesn't the EU apply these same rules to video game consoles (Xbox/PlayStation)? They arguably have an even more restrictive environment than iOS. reply whizzter 4 hours agoparentPhones has become everyday items (and as a sibling comment pointed out, gone past the DSA regulation threshhold), homeless people in the Stockholm subway will go around with crappy Androids asking for \"Swish\" (immediate money transfer app, used for P2P and other fast small amount transactions around here like restaurants and at open air markets). Low-tech people often don't bother buying new computers since their phones are required for banking (BankID identification) whilst the computer is optional. reply latexr 3 hours agoparentprev> They arguably have an even more restrictive environment than iOS. Yet they inarguably have less marketshare and a reduced role in citizens’ lives. Modern living in society necessitates some digital access to the internet. Even homeless people have smartphones. Yet all those crucial interactions are mediated by devices controlled by too few players, meaning that a couple of foreign rich companies dictate too much of what you can do and have provably and repeatedly abused that power to entrench themselves further. Consoles are entirely different, people don’t depend on them for interacting with society. reply firecall 4 hours agoparentprevWho’s to say they won’t at some point? This isn’t about punishing Apple. It’s about economic opportunity for EU citizens and businesses. The EU has a responsibility to promote the prosperity of its citizens. If that means dictating how a US company does business, then that’s what they are going to do. Which is the EUs prerogative. As an aside, and something that is seldom mentioned, but if Apple and the other trillion dollar tech giants just paid their fair share of taxes then they may not be in this mess! reply guestbest 4 hours agoparentprevCan the XBox or PlayStation let users access online banking and manage assets? reply jim180 4 hours agorootparentPS4 has the browser, so yes. reply jasonlotito 4 hours agorootparentI'd love to see someone pull out a console in the town square to make payments. The answer is no. reply kergonath 3 hours agorootparentThe original point was “let users access online banking and manage assets”, not whether you could “pull [it] out in the town square to make payments”. As an aside, why the town square? It’s oddly specific and is a phrase I’ve mostly read in stupid comments about Twitter in the last couple of years. Anyway, please consider stopping trolling. reply jasonlotito 37 minutes agorootparent> The original point was “let users access online banking and manage assets”, e.g. Can you pay for groceries with it like you can with a phone? Can you use it to pay for food at a restaurant, buy train tickets, or many other things are in many cases cashless. \"access online banking and manage asset\" is a shorter way of saying all of the myriad of ways people need to use online banking day to day. > a phrase I’ve mostly read in stupid comments about Twitter in the last couple of years. I try not to read stupid content so I don't know. > Anyway, please consider stopping trolling. The irony. reply wccrawford 4 hours agorootparentprevThe PS5's browser is hidden (it'll pop up when clicking links in Youtube video descriptions, etc), but it seems that the XBox one is just there to be used. So, yes. reply jasonlotito 4 hours agorootparentHaving a browser online does not mean you can do your banking. It just means you have a browser. It's also almost guaranteed to not be a browser supported by the banks. Not to mention the myriad of other things that mobile phones provide in the context of mobile phones. The answer is only \"yes\" if you ignore reality. reply kergonath 4 hours agorootparentThere are serious problems with this reasoning. A bank supporting a platform or not does not change the nature of that platform. That would be stupid. reply rsynnott 4 hours agoparentprevPhones are, honestly, more of an obvious first target, and harder for the manufacturers to argue about. Everyone has a smartphone. Game console sales in Europe are in the 5-10 million/year range, by contrast. And only one of the console manufacturers (Microsoft) is covered by the DMA at all, AFAIK; the other two just aren't significant enough. That said, I wouldn't be amazed if attention is paid to consoles sooner or later, possibly bundled in with smarttvs. reply EasyMark 4 hours agoparentprevYou have to start somewhere maybe? Might as well be the 1800lb gorilla reply 2OEH8eoCRo0 4 hours agoparentprev> Genuine question ... It's so genuine that it's asked in every single thread on this topic. reply colejohnson66 4 hours agorootparentThere's more than one person in these threads. It's entirely possible (in fact, it's actuality), that the people asking it before are not those asking it now. From the rules: do not assume astroturfing or that others are non-genuine. reply 2OEH8eoCRo0 3 hours agorootparentI didn't assume astroturfing, I assumed that it wasn't actually genuine. Most things that people say are genuine, there is no need to say, \"genuine question!\" reply Mindwipe 4 hours agoparentprevBecause none of them have sold enough units to count as very large platforms under the DSA. reply alberth 4 hours agorootparentBoth XBox and PlayStation have more MAU than what the DSA states as the threshold. 45M MAU is the DSA threshold [0] ----------------------------- 120M MAU is what XBox has [1] 116M MAU is what PSN has [2] [0] https://www.eu-digital-services-act.com/ [1] https://www.statista.com/statistics/531063/xbox-live-mau-num... [2] https://www.statista.com/statistics/272639/number-of-registe... reply rsynnott 4 hours agorootparentThat's global, not Europe. reply yunohn 5 hours agoparentprevHuh? They play video games; not provide your portal into the entire digital world and life that is unavoidable in the modern day. reply pests 4 hours agorootparentSame thing for some people. reply yunohn 3 hours agorootparentWhat do you mean? I’ve never heard of a bank force you to login with a PlayStation or Xbox, but they do often force you to use the iOS or android apps for various functionality. reply galkk 20 hours agoprevNice. I hope that eventually they will force app stores to allow users to resell/inherit/gift digital goods such as apps. If I can sell something physical that I don't need anymore, I should be able to do so with the things I \"bought\" on, let's say, Steam. reply illiac786 12 hours agoparentIf that happens, prices may have to go up, that mathematical. Currently lots of people bought digital stuff they don’t need anymore. If they resell, people buying it don’t need to buy it from somewhere else. I know it’s not really a zero sum game, but it’s obvious it would have a significant impact. And I’m not even talking about media, which I’m sure some platform would start mass renting/selling in a fully automated fashion (upload all your licenses, watch whatever you want anytime because there will always be somewhere a license which is unused and a copy of the movie which is not actively watched at this moment). Basically they would only sell as many copies as the peak number of simultaneous watchers… That would be amazing actually. reply cesarb 4 hours agorootparent> If that happens, prices may have to go up, that mathematical. I'd expect the opposite: competition between the \"used\" and the \"new\" markets would drive prices down, not up. Mathematically, you'd be increasing the supply, while keeping the demand nearly the same, which in the traditional supply and demand model means lower prices. reply voytec 5 hours agoparentprev> allow users to resell/inherit/gift digital goods such as apps. Users can't gift/resell what they don't own ;-) reply Matheus28 1 hour agoparentprevSo how are the developers who make these products going to get paid? When you resell a physical item it’s worn and costs time & effort to resell. Software is very different. That means no one would ever buy the software from the developer once a few copies are sold and can be passed around. That would force SaaS even harder, since developers would need to justify it being a license. reply threeseed 19 hours agoparentprevAll that will happen is that all software will move to a SaaS or IAP model. As well as making the most expensive price the same globally e.g. buying apps in Bangladesh to resell in the US. Making the entire industry worse off for everyone else except you. reply mrweasel 5 hours agorootparent> All that will happen is that all software will move to a SaaS or IAP model. Seems a little to late for that, everything is a bloody in-app purchase or subscription already. I really wish I could filter out apps with in-app purchases or subscriptions when searching the app store, but that would probably ruin the business of countless companies. reply Gud 12 hours agorootparentprevOr lower the prices for everyone. Why does Adobe Photoshop still cost a small fortune. Hasn’t improved much for the last two decades has it? Why can’t I rent it from my buddy for the few hours a month I might use it? reply tpmoney 5 hours agorootparentDoes it really cost a “small fortune”? You can “rent” Photoshop from Adobe for 3¢ an hour. Way back when you could buy a permanent license for PS, you were looking at about $700, which is just shy of 3 years at the current subscription rates. reply threeseed 12 hours agorootparentprevThere is a 20x difference in the price of Youtube across various countries: https://www.androidauthority.com/youtube-premium-cost-around... The idea that every developer is going to reduce their revenue by 20x is delusional. reply braiamp 4 hours agorootparentThat's regional pricing. reply anticensor 4 hours agorootparentprevOr, take the geometric mean of all the existing prices. reply spacebanana7 19 hours agoparentprevTo play devils advocate, couldn’t that allow a single purchase of a movie to be watched by millions of people? At which point no studio would sell it digitally. In theory this could’ve happened with DVDs, but it was too much hassle for a single disc to be shared by that many people. You could compromise with restrictions on how many times a file could be sold etc, but that concedes the point of a digital good not really being your property. And it might be used as a Trojan horse for even more DRM and surveillance. reply n_ary 4 hours agorootparentIn theory, same is very much applicable for nearly all non-hygienic physical goods, but that did not make any business to stop. A popular book can change hand a million times and save a lot of money, carbon emission, tree cutting, paper production cost, transport and logistics. The problem is careful usage and patience, i.e. not spilling coffee or food and waiting may be a year before a copy is available. reply pests 4 hours agorootparentIsn't there a quote about how if libraries didn't already exist, they couldn't be created in the modern day? reply protimewaster 19 hours agorootparentprevI don't feel like this would be a major issue in practice. People can already pirate, sneak into the theater, etc., if they want to game the system. Most people aren't interested in routinely selling and buying their media, so I would wager that most digital copies will end up on the digital \"shelf\" just like physical copies do, rather than being routinely sold off. reply spacebanana7 19 hours agorootparentOne person could buy a million ‘new’ units of a movie and continuously rent them out (via short term repurchase agreements) on demand to make something resembling a streaming site. reply protimewaster 18 hours agorootparentI don't see why that's an issue, either. A library can already buy multiple copies of books/ games and loan them out. It's not streaming, sure, but somebody with a little patience can avoid buying a copy by just going to the library. reply alphan0n 17 hours agorootparentCheck out Hoopla [0] > Borrow and enjoy audiobooks, eBooks, comics, movies, TV, magazines, or music everywhere you have a screen-your computer, your phone, your car, even your TV. All you need is a library card. Also, Libby [1] [0]https://www.hoopladigital.com [1]https://libbyapp.com reply prattmic 19 hours agorootparentprevI can’t quite tell if this is satire! You may be familiar with a small startup (https://en.m.wikipedia.org/wiki/Netflix) in the business of buying a million DVDs and continuously renting them out on demand to make something resembling a video rental store. reply xp84 4 hours agorootparentI'm pretty sure that even video rentals were not allowed without the consent of the copyright holder. The videotapes or DVDs you could buy at retail weren't licensed for commercial use. Lending them without cost, like a library, I don't think they could stop you. But commercially renting out the physical media wasn't an automatic right, as far as I know. reply eviks 12 hours agorootparentprevHow long would millions of sequential hours of watching take for the devil to have its due? reply gjsman-1000 19 hours agorootparentprev> To play devils advocate, couldn’t that allow a single purchase of a movie to be watched by millions of people? At which point no studio would sell it digitally. You're not thinking creatively enough. One day, somebody's going to use the law and make the \"sales\" API-driven. This will then turn it into a rental service where you can \"buy\" a game for two hours for $37.50 and then \"sell\" the game back to the mother ship for $36.50 of credit. The mother ship being, of course, whatever VC firm puts millions into having the world's largest Steam account. I don't have to like the current ecosystem of no-transfers and DRM, to acknowledge breaking all that down would have major economic consequences against studios. Right now is especially not the time to be asking for this, because the whole video game industry is in deep financial trouble at the moment. reply sn0wf1re 19 hours agorootparentIsn't that just a (expensive) library? And libraries are constantly being lobbied against by publishing groups, yet there doesn't seem to be major harm (financial) caused by them. reply threeseed 19 hours agorootparentThe difference is that libraries are local and so the impact is minimal. With software you can share it out to anyone in the world. reply protimewaster 19 hours agorootparentprevWhy is this worse than a company renting out physical copies, though? This is the way games rentals work for physical copies. The renter buys one copy and rents it out numerous times. (It's also the way libraries work for books, of course.) reply IanCal 19 hours agorootparentThe amount of time makes a practical difference. Books you take out for a week or more usually, games rentals and films (from the olden days when I'd get to go to an actual store) were at least several days. Renting a film is something you could do from the second you start watching it to the second it finishes. Going from a few days to hours makes this in the region of 10-100 times faster turnaround. Having to physically move things just adds significant time. reply protimewaster 18 hours agorootparentI'm still not seeing it the issue, though. A significant portion of the world's population lives within a short distance of a library. Even if each individual library branch serves a relatively small chunk of the population, the collection of libraries effectively makes a global network that enables people to almost instantaneously rent books, movies, and games. Having this exist out in the world really doesn't ruin things. reply IanCal 3 hours agorootparentIt's nowhere near instantaneous for physical items. I live near a library and it's a drive or a half hour walk away, open a few days a week during shortened times. That's nothing like clicking a button and renting a film for exactly the length I watch it for. reply ClumsyPilot 19 hours agorootparentprevOh dear, imagine if people bought a bunch of books, let’s say Harry Potter, and then let anyone come in and read books for a fee! Or even rent them! would be horrible! Isn’t it hilarious how having property rights and freedoms over Things You Paid For is now unthinkable?? reply spacebanana7 19 hours agorootparentThe challenge with digital goods is having a system where multiple people can have property rights. Digitising your library example, would likely result in a price of zero. Someone like Apple would be well placed to turn its books app into a library of books it purchased once. And use this to get more hardware sales. The current system of only one entity having rights isn’t desirable. But alternatives aren’t easy. Even if you tried to rule out sales for profit then marketplaces and bulletin boards would make things complicated. reply catlikesshrimp 19 hours agorootparentprevCannot be resold for a year after last purchase. reply space_oddity 5 hours agoparentprevMaybe we'll see these changes sooner rather than later reply eviks 11 hours agoparentprevSince you have \"bought\" in quotes, you realize it's not the same as something physical, so why should it follow the same rules? reply andy_ppp 5 hours agoprevIf I buy a phone in the EU can I keep this ability everywhere even with a UK Apple ID? Seems pretty nice having everything separate like this. I hope it forces them to allow different browser engines than Safari too. reply josephcsible 4 hours agoparentNo. Apple spent a lot of time and money building a service called \"countryd\" with the sole purpose of making sure that people outside the EU can't use any of the features that they already did the work to develop anyway. reply jorvi 3 hours agorootparentI'm assuming at some point they'll move away from bespoke ROM-level settings like \"Japan-bought iPhones always have a shutter sound\" or \"Chinese iPhones use the term \"WLAN\" instead of \"WiFi\", and instead path all of that through `countryd`. Maybe for WiFi and cellular regulations also. reply kmlx 3 hours agorootparentprevthis one? https://theapplewiki.com/wiki/Filesystem:/usr/libexec/countr... > countryd determines the user's physical country based on multiple characteristics. It is used by the eligibility system to ensure it is difficult to spoof the user's true physical location. It was introduced in iOS 16.2 and macOS 13.0. reply andy_ppp 2 hours agorootparentCreepy that they feel the need to know exactly where you are IMO... reply Pesthuf 4 hours agorootparentprevHow wonderful of Apple to make sure non-EU citizens are protected from the terrible dangers of freedom to choose, forced upon EU iOS users by the tyrannical EU government /s reply eptcyka 4 hours agoparentprevI'm sure if you jailbreak the phone, you'll be able to enable this capability natively. reply space_oddity 5 hours agoparentprevTheoretically this ability should remain active regardless of using a UK Apple ID, as it's tied to the device's region reply yurishimo 4 hours agorootparentAfter staying in one region consistently, all the big tech companies will automatically switch your region for you. Some might take longer to force you than others, but it’s not certain that you can forever stay on another region. But what makes most people have to switch eventually is a bank/government app that is region locked and you need it to live your life without pulling your hair out jumping through stupid hoops. A VPN and two devices is the only way to stay truly separate from the region you live in full time over the long term. reply kergonath 3 hours agorootparent> After staying in one region consistently, all the big tech companies will automatically switch your region for you. I have been using an iPhone with a British Apple ID and the British App Store, and the UK regional settings on some devices despite not living there anymore for a couple of years now. I am fairly confident switching countries requires the user to do it consciously. [edit] for this feature specifically, they are more aggressive: https://www.theverge.com/2024/3/7/24093437/apple-iphone-thir... I don’t think they change anything about your accounts or device settings themselves, though. reply fragmede 4 hours agoparentprevSorry if it's a sore question, but is the UK in the EU (For the purposes of Apple's DMA compliance)? Edit: best I could find is \"no\", according to techcrunch from August 2024 https://techcrunch.com/2024/08/21/uks-competition-authority-... reply ryandrake 4 hours agorootparentI wonder, if another country were to leave the EU in the future, would Apple actually go in and modify the code (or enable a server flag) to remove the feature from all of those country's users' devices? It just seems so wrong to own a device, but still have the manufacturer dictate what that device is allowed to do, AND they have the ability to change those capabilities at will. It feels like buying a physical calculator, where the manufacturer can one day wave a magic wand and I lose the \"divide\" button. I'm generally an Apple fan and I get that people like Apple's \"walled garden\" but even to me this seems like an abuse. reply kergonath 3 hours agorootparentThey need to do that anyway, because the laws depend on the country. There is no other option: different sets of laws are often incompatible, there is not always a common subset that works everywhere. So the behaviour of the device has to change depending on the location. But yes, it is silly in this specific case. I’d like someone to explain credibly why letting users delete apps is wrong. In the worst case it’s a minor pain and the user has to re-download it from the store. These apps are thin UI layers over system frameworks anyway. reply pests 4 hours agorootparentprevIt used to be, it's not anymore. reply firecall 4 hours agorootparentprevNo, it is not! Brexit meant leaving the EU. reply andy_ppp 4 hours agorootparentLook at all the freedom we gained in the UK! reply thimabi 20 hours agoprevWhy gate such a basic functionality for users in the European Union? People elsewhere do not have access to alternative app stores anyway. Is allowing them to uninstall such apps too much? reply afavour 20 hours agoparentApple aren’t doing this out of the goodness of their own hearts, they’re being forced to by the EU. So unless their hand is being forced elsewhere they’re not going to do it. reply xp84 4 hours agorootparentYup. You can bet most developed countries will start to follow suit now. Remember Apple's argument before they exhausted their appeals with the EU was that they could never do any of this, and the sky would fall, and their whole business would be destroyed. Now, that will have been proven to be absolute poppycock as they begin to abide by all these regulations in this one (large) region. I expect regulators in Japan, UK, Australia, etc. will start to say \"Yeah, we want that too.\" And Apple has zero plausible argument left for why consumers everywhere else don't deserve or can't have the same level of choice. Obviously not in America though, since we don't have a functioning government, just an executive branch that doesn't have the support of Congress, and a judicial branch that believes strongly that only an act of Congress could create the authority needed to actually rein them in. And a Congress which would ideally like to avoid doing any legislating besides passing a continuing resolution or debt ceiling bill every now and then, since there's too much fundraising work to do. reply latexr 2 hours agorootparentprevI think GP’s point is that in this case gating the feature is extra work with zero benefit for Apple², so why not just do it anyway³? ¹ At the very least more code and cases and testing where it could go wrong. ² Maybe reduced support calls? ³ Spite could be a reason. reply afavour 2 hours agorootparentZero benefit? They get to keep a captive audience using the App Store. What's not to like? reply stavros 20 hours agoparentprevBecause it doesn't benefit Apple to allow you to uninstall these apps. reply thimabi 20 hours agorootparentI mean, on their own, many of the core apps probably don’t bring much revenue to Apple. I can understand their reluctance to allow uninstalling the App Store, but what do they gain by preventing someone from uninstalling the Camera, for instance? Those who want to do so will use an alternative app anyway. reply spacebanana7 19 hours agorootparentSafari generates billions of dollars in revenue for Apple through the default search engine deal with Google. reply latexr 2 hours agorootparentGoogle lost an antitrust case specifically because of that, so doesn’t look like that’s a deal that can continue. https://www.ghacks.net/2024/08/07/u-s-judge-rules-that-googl... reply thimabi 19 hours agorootparentprevYou’re right, I forgot about that. reply _rs 19 hours agorootparentprevBecause you'll have users who do it by accident and lose basic hardware functionality of their device without knowing how to fix it reply ronsor 19 hours agorootparentI don't know why this is downvoted. There are definitely a ton of users who will accidentally delete the camera and then complain their phone is broken, wasting everyone's time. reply kergonath 3 hours agorootparentPeople have already apps they can delete. And when they do it by mistake, they just go to the App Store to download it again, wasting nobody’s time. Why would it be any different? There’s just need to be a button in the settings if the App Store itself is deleted. reply LordKeren 5 hours agorootparentprev- reply betaby 19 hours agoparentprevFolks in USA/CA would remove Safari and then return phone to the carrier/Apple as defective. No, I'm not kidding. I saw that multiple times - Windows messed on laptop? Laptop within return window? Return it is! reply rty32 19 hours agorootparentEh, people return their devices because don't know how to correctly use them all the time, I don't see how it is different here. And people definitely don't need to intentionally do this -- in the US, most major retailers allow you to return opened products within the return window (although it could get complicated with so-called \"activatable devices\") reply betaby 19 hours agorootparent> I don't see how it is different here. iPhones are almost 'idiot proof' for a lack of a better description. Allowing removal ( or rather hiding ) of the apps will 'break' that impression. I'm surely in favour of making iPhones/IPads general computers, but that not going to happen. Those legislations from EU are no help. reply xp84 4 hours agorootparentThere are already a ton of default apps that can be removed, so I don't see how this matters. The only thing I don't understand is the App Store, since today that's the place you go if you have \"deleted\" say, Notes or Music, and want it back. I guess they'll have to add a button in Settings or something called \"Restore App Store.\" And while people in general are certainly idiots and will certainly find a way to screw up, I don't think it's going to be a massive big deal to tell them \"go to the App store and redownload _____\" (plus whatever the way is to put the App Store back). We all know that the way to get it back isn't going to be like, SSH into the phone. Apple will have some way to do it that takes 10 seconds when people call into AppleCare, or literally the first person you see at the Apple Store will know about it. reply downWidOutaFite 19 hours agorootparentprevi must be an idiot. As an iphone user for about a year i'm constantly confused what's happening or stuck on some screen or can't find what i need or mysteriously trigger some screen or popup. reply wtallis 19 hours agorootparentprevIt's not even a matter of whether the user knows how to use their device. I've seen plenty of Windows laptops shipped with a somewhat-broken software configuration out of the box, and on multiple occasions I've seen two \"identical\" machines fresh out of the box get offered different software updates with the end result that a few hours and several reboots later, one system is noticeably misbehaving. reply dgellow 16 hours agoparentprevThe EU forced them. Apple has been fighting pretty hard to not have to do any of these changes, it seems they gave up reply yapyap 20 hours agoparentprevcause they dont need to, if Apple isn’t forced to give up their deathgrip on the user they won’t. reply al_borland 19 hours agoparentprevI’m sure a non-trivial number of users would delete apps that are required for basic functionality. Stopping them prevents support issues that could require resetting to factory settings, if they didn’t add some other way to get the App Store back. reply seam_carver 3 hours agorootparentDefinitely. I’ve had family members delete a bunch of the stock apps and then complained to me that various fitness and health functions stopped working. Turns out the fitness and health apps were important. reply prmoustache 19 hours agorootparentprevIt is mentionned in the article that the apps that can be uninstall have a quick reinstall option in the settings. reply SirMaster 4 hours agorootparentSounds anti-competitive to have special install options for your own apps right in the settings menu of the device... /s reply Teever 19 hours agorootparentprevIs that really sufficient justification for stopping users from having more control over their device? Like should we really let the 'Grandma Finds the Internet'[0] meme be the reason that you and I can't make decisions for ourselves? Whatever cost savings that Apple has from avoiding support for these people is dwarfed by the money they make from stopping competitors to these apps from growing due to these control mechanisms. That's the real reason apple doesn't want to do this and has to be kicked dragging and screaming by the EU. [0] https://imgflip.com/memegenerator/Grandma-Finds-The-Internet reply gjsman-1000 19 hours agorootparent> Is that really sufficient justification for stopping users from having more control over their device? People who want more control over their devices; have Android. Not all solutions need fit all desires. reply Teever 19 hours agorootparentThat isn't enough. The public interest is served by the end users having more control over their devices than Android and Apple currently offer. reply al_borland 17 hours agorootparentForcing both companies to have the same features reduces customer choice in the overall market. Some people want to choose the simple curated experience and the EU and others backing their decisions are removing that option from the market. iOS has already become significantly more complex over the years and this keeps dialing up the complexity and areas where a user can get tripped up. The support calls I’ve received from family since they all moved to Apple have dropped dramatically. It may not be the platform for you, but it’s the platform a lot of people prefer. This is because of the curation, not in spite of it. Infinite choice and control means an infinite potential for problems. A lot of people don’t want that. If they did, desktop Linux would be mainstream instead of a meme. I like that open platforms exist, but I also like that other platforms exist that don’t require much effort. Rarely do those things exist in a single package. I don’t know why people, who I only assume don’t use Apple products, feel the need to change them and take away what people like. Not being able to delete literally everything doesn’t seem like that big of a deal. Especially when those apps are ones a significant number of other applications assume exist and try to interact with. Where is the line? Or is there no line? Will people try to compel Apple to keep removing stuff until iOS boots up to a prompt where the user can net boot the OS of their choice? reply amiga386 4 hours agorootparent> reduces customer choice in the overall market What is this bollocks? Slavery being illegal \"reduces customer choice in the overall market\". Being compelled to clean up industrial waste rather than pump it straight into the air and rivers \"reduces customer choice in the overall market\". Being required to be honest about financial investments \"reduces customer choice in the overall market\" - the market for RUBES. The EU is not compelling Apple to remove anything, it's compelling Apple to offer their end-users the CHOICE to use third-party apps and app-stores where Apple mercilessly locked it all down for their own financial benefit - deliberately calculating what would benefit them the most. You know who reduces customer choice? Apple. When they lock you in for their own benefit. \"I think this is all pretty simple — iBooks is going to be the only bookstore on iOS devices. We need to hold our heads high. One can read books bought elsewhere, just not buy/rent/subscribe from iOS without paying us, which we acknowledge is prohibitive for many things.\" https://www.macrumors.com/2020/07/31/emails-apple-blocked-ki... ...the executive wrote to Jobs about [an ad promoting cross-platform compatibility], saying that one “message that can’t be missed is that it is easy to switch from iPhone to Android. Not fun to watch.” The suit doesn’t quote Jobs' response at length, but says he wrote that Apple would “force” developers to use its payment system to lock in both developers and users on its platform. https://www.wired.com/story/4-internal-apple-emails-helped-d... reply ziddoap 4 hours agorootparent>Slavery [...] industrial waste [...] Only on HN will you see the ability to uninstall a phone app be contrasted with slavery and industrial waste. reply amiga386 3 hours agorootparentAll three are outcomes of unfettered capitalism. If laws and regulations are not vigourously enforced, companies will do anything they can get away with. Including kidnapping, torture, starting wars, poisoning millions, and in this case abusing a monopoly in one area to force out competition in others and enrich themselves by depriving people of choice. Like Standard Oil before them. Do you want the robber barons back? reply dns_snek 11 hours agorootparentprev> This is because of the curation, not in spite of it. Infinite choice and control means an infinite potential for problems. A lot of people don’t want that. And those people don't have to opt into the unclean world of freedom that hasn't been blessed by Apple. All your family would need to do is NOT check the box that says \"Let me explore outside this walled garden\", which would be accompanied with a plethora of scaremongering confirmation screens. reply tpmoney 5 hours agorootparentNot everyone who receives a computing device is the same one who set it up. I’ve told this story before but I’ll repeat it because it’s illustrative. Back when MacBooks ran intel processors and bootcamp was both new (and explicitly unsupported) I spent a few hours assisting a new and very irate customer in figuring out why their new MacBook was having all sort of problems that as they described it were not possible in macOS or had already been solved by software/firmware updates. Turns out they’d bought their new MacBook and given it to their nephew who was “smart with computers” to set up. Said nephew decided on their own that what their aunt needed was not a MacBook running macOS but an expensive windows laptop. So they installed bootcamp, installed windows, shrank the mac boot partition to the smallest it could be and configured it to boot directly into windows. As a result, all their usual issues with windows were still present and firmware updates weren’t being installed because it never booted to macOS to run the macOS software updates. I spent a few hours with the woman explaining what her nephew had done, the general concept of an OS/dual booting and fixing things so she could use the MacBook as a mac, without losing data in a drive re-partition. The reality is that not every end user is making informed decisions about their devices, and not only does that harm the user, but it also harms Apple. From their perspective I spent hours supporting unsupported software and trying to repair their brand and reputation in the eyes of an irate customer for something that wasn’t even their fault, and caused by giving other people the choice to leave the curated path. That customer later became one of our better customers, but if they hadn’t happened to get the store employee who understood bootcamp, and who had a manager that would allow them to spend that time supporting unsupported software, they might have both never been a customer and been an active detractor. reply al_borland 6 hours agorootparentprevI think we’ve all met the people who know just enough to be dangerous, while overestimating their abilities. These were always the worst support calls when I was younger, and are the co-workers that give me pause was setting up access for the team. reply Teever 16 hours agorootparentprevThe world is a better place because the government mandated interoperability between POTS telephones and that car manufacturers must be supply owners with parts that can be installed by any mechanic. We can and will have the best of both worlds with open devices that are user friendly. Apple has the resources both financial and technical to make this happen. It's just a matter of regulators making them do it. I thank the EU for pushing companies like Apple in the right direction first with USB-C, 3rd party app stores and now this. > Will people try to compel Apple to keep removing stuff until iOS boots up to a prompt where the user can net boot the OS of their choice? Hopefully regulators will compel Apple to open their mobile devices up the same way that their personal computers are. If I can install linux on my macbook why can't I install it on my iPhone? It doesn't affect people like your grandmother one bit. reply space_oddity 5 hours agoparentprevAnd push Apple to improve their default apps reply a2128 19 hours agoparentprevReleasing it as a feature everywhere would require at least a bit of public explanation and might give the appearance that EU forced Apple into doing something good for everyone. Being petty and releasing the bare minimum georestricted only to EU requires no public explanation and gives more the appearance that this is some dumb law Apple was forced to comply with. At least that's probably their thinking. reply mrweasel 5 hours agorootparentThat is probably a more likely explanation that \"because it would lose them money\". I suspect that the number of people who are actively going to switch to a different App Store is minimal. Users can already install other browsers, even if they are still using WebView, same of messaging apps and I doubt that many would care to replace the camera app. Photos maybe, but is that really a huge lose for Apple? That saves them from storing your photos. People on HN is often assuming that people would leave the App Store in droves, if given to option. I really don't see that happening. reply cassianoleal 8 hours agoprevWhat is required to unlock all these EU goodies on iOS? An iCloud account on an EU country? What happens if I have accounts in other countries and switch between them? reply josephcsible 4 hours agoparentThey track the physical location of your phone and revoke your access to them if you're ever out of the EU for a month. https://9to5mac.com/2023/04/25/ios-16-restrict-features-base... https://www.theverge.com/2024/3/7/24093437/apple-iphone-thir... reply LeicaLatte 19 hours agoprevEU iOS is the closest thing to a OS X like experience on iPhones. Wish these features came to more regions. reply NotPractical 18 hours agoparentNo, it's not close at all. macOS allows you to sideload, EU iOS still does not. macOS allows you to write programs for your own device without paying Apple $100 every year, EU iOS still does not. macOS provides an environment for general purpose computing, EU iOS still does not. Maybe not for long though: https://digital-markets-act.ec.europa.eu/commission-sends-pr... reply jerkstate 17 hours agorootparentYou can turn developer mode on an iPhone and write programs on it for “free” as far as I can tell. reply eviks 11 hours agorootparentIt's limited in time and number of apps, so not really reply NotPractical 17 hours agorootparentprevThose apps are deactivated after 7 days unless you pay for an Apple Developer subscription. There's the non-EU version of the AltStore which attempts to circumvent this restriction, but it's a dirty hack and I expect Apple to patch it out eventually. reply extraduder_ire 4 hours agorootparentIt doesn't circumvent anything, it just re-signs the apps so they continue working. reply Pesthuf 3 hours agorootparentThis. It's just one more annoying weekly chore to keep in mind, as the automatic backround refresh, in typical iOS fashion, only works when it feels like it. And doesn't work at all if you use energy saving mode. The solution is as Apple as it gets: Pay up. reply m463 18 hours agorootparentprevwhen you said \"maybe not for long\" I wondered if macos would be locked down... reply AshleysBrain 20 hours agoprevAre the apps actually uninstalled for real, or does the system just hide them to create the same appearance as uninstalling to satisfy legal requirements? reply amelius 20 hours agoparentI suspect that Safari is still needed as a \"webview\" component for various services. reply space_oddity 5 hours agorootparentI have the same suspicion reply wslh 20 hours agorootparentprevIt is the reverse... Safari uses the webview. reply EasyMark 3 hours agorootparentDon’t they use a more cutting edge/faster version of webview and other browsers like firefox/chrome/brave get an older less optimized version? reply wslh 7 minutes agorootparentYes, (search) indeed they use WebKit [1] [2]. You also have the option to use WKWebView. But in this context you should use WKWebView if you want to access WebKit as a developer and be able to publish in the App Store. If you don't need to be accepted in the App Store you can use WebKit compiling it from the source. [1] https://webkit.org/blog/15443/news-from-wwdc24-webkit-in-saf... [2] https://developer.apple.com/documentation/webkit reply leoh 13 hours agorootparentprevThis is correct and I don’t understand why it is being downvoted at all. WebKit is a framework, Safari is an application that uses that framework. reply amelius 20 hours agorootparentprevMaybe but that's just semantics. reply saurik 20 hours agorootparentSort of? Like, the way it at least used to work, is that there was a MobileSafari.app that used the UIWebDocument class from UIKit.framework and which in turn used WebKit. I don't think anyone is expecting Apple to uninstall the UI widgets that are being used by numerous existing third-party applications, and yet it is still meaningful to be able to delete the Safari \"app\". reply sleepybrett 19 hours agorootparentprevIt's not. None of the UI is present in webview. Webview is just the 'rendering pane'. reply wslh 19 hours agorootparentprevNo, it is not. Just create an app in Xcode and see that you have a WebView component. Easy to check: https://developer.apple.com/documentation/webkit/webview reply gjsman-1000 20 hours agoparentprevThey are part of the iOS System partition, so almost certainly just hidden. Considering that the entire point is to improve competitiveness, hidden is almost certainly good enough, as it's not the EU's job to be disk space czars. reply vlovich123 20 hours agorootparentBeyond just that, if you uninstall the app store, how would you get it back without it already being available on-device? You'd probably need Safari but then if that's removed too? > Apps that are removed, such as the App Store , can be re-downloaded using an \"App Installation\" section in the Settings app. Whether that's really a redownload or restore from disk cache probably doesn't matter unless the EU starts to argue that it being available with 0 latency from disk is a competitive advantage. reply toast0 4 hours agorootparentThey'd need some hook to get the app store back if you really uninstalled everything. Worst case, a box where you type in the url for an ipa (and a restriction that you must have at least one keyboard installed; although if your keyboard always crashes...) Even worse case, use iTunes on a computer to push apps to the phone, although that imposes a requirement of access to a computer. Maybe a way to push apps between iPhones. reply eviks 11 hours agorootparentprev> if you uninstall the app store, how would you get it back without it already being available on-device via a different install mechanism? How do you install Windows apps without MS store? reply Almondsetat 5 hours agorootparentWhat does Windows have to do with this? reply eviks 5 hours agorootparentIt serves as an example of what is possible reply vlovich123 3 hours agorootparentOr you know, just keep it around on disk without removing it fully. The bigger issue is I’m surprised they’re being allowed to remain the default. I wonder why the different tack vs what they forced Windows to do with IE in Europe. reply yunohn 5 hours agoprevThe problem is not that I can’t use alternative apps - it’s that they don’t have access to various important system level features. Some examples: Only Messages and Mail can provide OTPs, again only when using the system keyboard. When swiping the lock screen to the left, only the system Camera is allowed to appear. When using navigation, only Apple Maps is allowed to provide the navigation overlay on the lock screen and Apple Watch. After years, the default Mail app can be changed, but AFAICT that doesn’t do anything other than override mailto links. However, this functionality isn’t available for Calendar for example. Similarly, you can’t override natural language Siri incantations to use your preferred apps. Like “message X” always uses Messages or “remind me of X” can only use Reminders. And alarms and timers can only use the Clock app. I really want Apple to fix all of this, but I guess it’s easier to act like the “deletion” of system apps provides a level playing field. The real problem is that the default apps lack a lot of other features that only third parties provide - but Apple can’t be assed to improve them. reply space_oddity 5 hours agoparentEqual access to core system functions for all apps is needed reply HumblyTossed 5 hours agoparentprevApple seems to have a culture of being assholes. \"Okay, we'll comply, but here's the shittiest version of comply we can offer.\" reply wang_li 3 hours agorootparentYes, why would they go above and beyond to create unrecaptured expenses for themselves? I mean, you as a human only ever pay the minimal price for a product that they will sell it to you for. Why would any other human do otherwise? reply latexr 2 hours agorootparent> why would they go above and beyond Your parent comment isn’t suggesting they go “above and beyond”, they’re saying they don’t even do the bare minimum to comply. Those are wildly different things. And as to why Apple would do it (either comply or go above and beyond), there are numerous reasons: * To avoid government intervention. All the stuff they’re being forced to do was absolutely avoidable. The writing has been on the wall for long. * To not have to keep paying fines. * To not trash their reputation. * For long-term customer satisfaction. * So developers, which they depend on, don’t hate them. Just look at the Vision Pro, which shipped with no apps from the big players. In short, being an asshole only made short-term business sense. In the long run, they should strive to do better. reply wang_li 36 minutes agorootparentReasonably certain that when the parent wrote \"We'll comply\" they very explicitly said Apple is complying. Which removes the majority of your bullet points. reply crop_rotation 5 hours agoparentprevThe thing is most normal users don't really want random apps to be able to provide OTPs. While it would be nice to have an API for every system functionality like reminders where every app is allowed to register as the reminder app, it would necessitate far more complexity and far slower pace of development on the reminder interfacing. This is where there is a big difference in what the ultra few power users want and what normal users want. Ultra power users want to be able to install an app file for a random app with app store like experience and with as less hurdles as possible, while normal users are very scared of receiving an apk file in whatsapp and installing it by mistake (there is a spectrum here and it's not binary). reply HumblyTossed 5 hours agorootparent> The thing is most normal users don't really want random apps to be able to provide OTPs. You're right! But most normal users DO really want the app they CHOOSE to be able to provide OTPs! reply crop_rotation 4 hours agorootparentThey do, but they also want to be safe from being able to choose unexpectedly and doing this in a way that both protects the user and gives them choices is hard. I also want mobile OSes to be flexible but they should always err on the side of caution given most of their users don't have time and energy to understand how to use such features safely and correctly. reply yunohn 3 hours agorootparentCould you explain the security problem you foresee? The Gmail app already has received an email which has the OTP in it. Why can’t it provide that to your keyboard? What’s the vulnerability here? reply crop_rotation 3 hours agorootparentI used to think similarly. However in the past 4-5 years I have observed closely my non tech family member's usage of smartphones and they frequently install totally random apps, they have no idea what their default browser/keyboard is at any moment or how to change it and who frequently receive apks on whatsapp and almost always click on it (only the android hurdle against apks protects them) so on. Sure it might be fine for gmail to write OTP but what about abcdmail, what about go pro SMS style apps. I think there is a fine balance here between flexibility and non tech user safety. reply yunohn 5 hours agorootparentprevYou don’t need to invent a “random apps” strawman. Apple already restricts which apps can be used as default mail/browser, just allow them access to the same APIs. Why not at least Gmail, Chrome, and gBoard? Millions of “non power users” use these apps over Apple’s offering. reply nikeee 19 hours agoprevWhat will happen if I uninstall Messages and someone sends me a text message? reply flohofwoe 5 hours agoparentProbably not much because everybody uses WhatsApp anyway ;) (in Europe that is) reply SirMaster 4 hours agoparentprevSame thing that happens when someone sends you a message on any messaging platform when you don't have the app to view the message. It just sits unviewed by you. reply non-nil 19 hours agoparentprevAnd where will photos be saved? In a folder in the Files app? The horror! The Photos app has been so deeply integrated into the OS it’s almost difficult to imagine it not being there. Not that I would mind, I recently switched to Android so I can rsync my .dng files around, thankyouverymuch. reply g-b-r 13 hours agoparentprevHas someone ever sent you a message while your phone was off? reply alberth 19 hours agoprevIf Apple was a European company, I really wonder if EU would be putting all these restrictions on Apple. reply caseyy 17 hours agoparentYes EU would. Believe it or not, companies in the EU currently have to comply with the same EU laws. reply graeme 5 hours agorootparentThere are zero EU companies designated as gatekeepers by the DMA. That will likely affect the dynamic of how the EU perceives any complaints about the law by companies. Edit: I was incorrect. Booking.com, based in the EU, was added earlier this year. See below reply jkaplowitz 4 hours agorootparent> There are zero EU companies designated as gatekeepers by the DMA. Not true. Booking.com is also designated as a gatekeeper and is based in the Netherlands. Yeah, they're the only one, but there are only seven designated gatekeepers total. reply graeme 3 hours agorootparentAh thank you. I see my error, there were six non-EU companies originally designated last year. Booking was added earlier this year, and I missed that. Though I would note that Booking.com are a subsidiary of an American company, Booking. reply Sakos 17 hours agoparentprevThe EU wouldn't need to if the US gave a crap about regulating their own companies. What's the state of privacy regulations in the US? Anti-trust? Power cable standardisation? Nothing. Well then. I'm not surprised though. Whenever companies are \"forced\" to abide by California's more stringent regulations (such as with cars), I always see Americans bitch and moan about how unfair it is. Instead of trying to improve things, some of you just don't seem to care about anything except the bottomline of some billion dollar corporation. It's weird and disturbing. reply g-b-r 13 hours agorootparent> Instead of trying to improve things, some of you just don't seem to care about anything except the bottomline of some billion dollar corporation. > > It's weird and disturbing. In that vein... https://www.wfae.org/energy-environment/2024-04-12/florida-b... reply josu 18 hours agoparentprevYeah, and that's arguably the reason why there is no European Apple, or Facebook, or Google, or Microsoft... reply flohofwoe 5 hours agorootparentOTH there's Spotify which isn't any better than Google, Facebook or Apple when it comes to enshittifying their user experience. Also: https://www.edpb.europa.eu/news/national-news/2023/imy-issue... reply caseyy 16 hours agorootparentprevPopular soundbite but not true. When the US was making leaps in technological and computing advancements around the 60s, one third of Europe was under the iron curtain and its economic stagnation. The other two thirds had just about finished rebuilding their infrastructure and amenities after World War 2. The Marshall Plan led to the establishment of very strong trade relationships between the US and Europe, and it was a time of economic boom in the US. The Cold War led to technological advancements in computing, communication, and aerospace, where the US government funded much tech the like ARPANET to stay ahead of the Soviets in all these fields. You take a stable business environment not disrupted by world wars, a government showering businesses with free hand-me-down technologies, and a huge economic boom fuelled by a whole continent of people suddenly looking to buy your products (some of which are computers), and you get Silicon Valley just a decade later. When Woz was tinkering on the first Apple computers with Jobs, their peers in East Germany were looking for ways to go around the Berlin Wall. The economic circumstances and business opportunities couldn't have been more different. Believe it or not, in the 1970s and 80s when Apple and Microsoft were born, Europe didn't have many of the consumer rights protections that it has today. It was largely focused on protecting its people from the USSR. In many European countries, consumer rights came into political focus only in the last 20 or so years. Today things are different. European Apple, Facebook, Google and Microsoft all exist and I believe are incorporated in Ireland. These companies do a large portion of their business in Europe. And if you consider today's tech, EU is very competitive with the US. In fintech, Revolut, Klarna and Adyen have similar user numbers as US alternatives. In AI, Google DeepMind is and has always been a UK company, and Graphcore makes NVIDIA's specialised AI chips. In the EV space, you may have heard of Volkswagen, Porsche, Land Rover, etc. In the business environment, SAP dominates ERP worldwide. And in games, you may have heard of Ubisoft, CD Projekt Red, Arkane, Playground Games, and many other European companies. The list goes on and on. The argument that Europe didn't form Silicon Valley post WW2 because of its current consumer protection laws is inane. Or that Europe doesn't have the same FANGMAN companies that operate in the US, or that it doesn't have strong tech competitors in the global space on the scale of FANGMAN. There were much larger forces at play than being able/not able to delete the App Store in the formation and development of tech hubs around the world. reply kcb 4 hours agorootparentI don't think your examples really prove your point. You include 100 year old auto manufacturers, companies long acquired by US tech giants, and a failing AI hardware company that has nothing to do with Nvidia. Probably the most valid example is SAP but even then it's in the slowest moving most bureaucratic ridden industry. reply 7thpower 19 hours agoprevPlease Siri next, please, please, please. reply latexr 2 hours agoparentYou can disable Siri and there’s no app for it on the Home Screen. What exactly are you asking for? reply solarkraft 13 hours agoprevThis is a good thing! But it’s also a token gesture. Wake me up when I can ACTUALLY sideload apps and it’s possible to use a synchronization service other than iCloud. reply wiether 4 hours agoprevThe difference in the comment section between the source and here is quite impressive. I can't understand why people feel the need to throw so much hate in reaction to this kind of announcement. There isn't even the beginning of a reflection, just pure hate. It's sad, really. reply hs86 3 hours agoparentProbably another instance of people who somehow couple the success of their chosen team/group to their own self-worth. Depending on the intensity of the manifestation, we call it national pride, gang affiliation or John Gruber. reply EasyMark 3 hours agoparentprevBecause you’re on a site where a lot of people believe in less regulation and more free market? I would guess that’s the thing. And people have strong opinions on both sides. reply andrewmcwatters 4 hours agoparentprevIt’s really odd to me, too, seeing as that Apple products don’t scream overt conservatism, but clearly their product practices do. reply Fidelix 4 hours agorootparentI don't think that word \"conservatism\" mean what you think reply latexr 4 hours agoparentprevIt’s not just comment sections. Pundits with large following can be very much the same. John Gruber, of Daring Fireball, is viciously anti-EU to the point he’s gone full looney. A handful of days after Threads launched he called it “the most fun app of the year” or some nonsense, and made fun of people in the EU (this as DMA-related). A few weeks ago I saw him compare the EU to Trump, only because some EU document had bolded words in a way he felt was haphazard. Every time I’m faced with one his posts, the replies are now full of the “old man yells at cloud” image. reply 2OEH8eoCRo0 4 hours agoparentprevI tend to assume they either work for Apple, are in a business making obscene money with similar lock-in, or have learned the toxic behavior from those who are. It does seem unnatural. reply thefounder 19 hours agoprevNice nice nice! Finally some freedom for the consumer. reply mensetmanusman 18 hours agoprevIs the purpose of this to help the EU build a tech giant? Protect consumers? reply nw05678 4 hours agoparentEU is seen as anti-competitive, but the reality is that it's Pro-Consumer... ...maybe too pro-consumer. Also the lack of a Google or Facebook etc is more of a result of it being harder to gain a critical mass of users. A social media company started in Poland would struggle to deal with the cultural and language differences with Holland. A more homogenous society such as the US doesn't have that issue. reply p5v 5 hours agoprevRight, because every browser on iOS isn't obviously a Safari skin. reply flohofwoe 5 hours agoparentThat's no longer a requirement since iOS 17.4 (also thanks to the EU, but also only for users in the EU): https://developer.apple.com/support/alternative-browser-engi... reply shaky-carrousel 4 hours agoprevWow, the comments section in that website is so full of rednecks I can smell it. reply voytec 5 hours agoprev [–] What about Health.app? It collects data, and likely sends it to Apple, without user's permission. The permission to allow Apple / the app to collect data actually only allows _the_user_ to see the data collected earlier. Get an iPhone, only after few months enable Health permissions and one will see all the data collected before one allowed data collection. Oh, and Apple absolutely knows which country the device is used in - they base sound level warning levels on specific country's laws. reply nabla9 5 hours agoparent [–] No. Users can control what it collects and shares. Data stored in iCloud is not available to Apple. https://www.apple.com/legal/privacy/data/en/health-app/ reply voytec 5 hours agorootparent [–] So Apple sucking the data from user's device to their cloud without permission is not data collection because Apple says it can't access iCloud data? Come on. It's a US-based corporation owning the keys to systems on both ends. They are obligated to release the data when requested. And they may be obligated to lie about it, also by law. reply jkaplowitz 4 hours agorootparentTo the best of my knowledge, none of the US laws around things like the PRISM program, the Foreign Intelligence Surveillance Act, National Security Letters, etc have ever required companies to state affirmatively false things, and I suspect that any such law would be unconstitutional. All of those laws have only required companies to refrain from saying or disclosing things, which is very different. Exactly which law in the US might allow the government to require Apple to falsely state that they don't have access to certain data? reply voytec 4 hours agorootparentProhibition of Certain Disclosure under 18 U.S.C. § 2709(c) AKA \"gag order\". reply EasyMark 3 hours agorootparentprevI trust apple, because I trust greed. They get a lot of loyalty because people they aren’t data mining their iPhone for health and ad information. I mean they could be, but I haven’t seen it, and it would be a bombshell. I still believe that apple is a hardware company first and everything else second. I would leave them and go back to android if they just became Android 2.0. I never really had a problem with android other than the massive data mining and wide open permissions apps had to rifle through your data (much improved however in recent versions, I understand) reply nabla9 3 hours agorootparentprev [–] It's not without permission. Its not moved out of device without permission. > They are obligated to release the data when requested They don't own the keys on both ends. They are not obligated to have backdoors either. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "iOS 18.2 introduces a feature allowing EU users to completely delete core apps such as the App Store, Safari, Messages, Camera, and Photos, aligning with the EU's Digital Markets Act.",
      "The Phone and Settings apps remain non-deletable, but deleted apps can be reinstalled through the \"App Installation\" section in Settings.",
      "In contrast, users in the U.S. and other countries can only hide these core apps, not remove them entirely."
    ],
    "commentSummary": [
      "iOS 18.2 introduces a feature allowing EU users to delete default apps such as the App Store, Safari, and Messages, in compliance with EU regulations.",
      "The update sparks debate on why similar regulations are not applied to game consoles like Xbox and PlayStation, emphasizing the role of digital access and the influence of major tech companies.",
      "Opinions are divided, with some viewing the EU's actions as a boost for economic opportunity and consumer choice, while others worry about the potential negative effects on user experience and market dynamics."
    ],
    "points": 144,
    "commentCount": 192,
    "retryCount": 0,
    "time": 1729722404
  },
  {
    "id": 41929822,
    "title": "Satoshi9000 analog BTC key generator (mechanical)",
    "originLink": "https://news.ycombinator.com/item?id=41929822",
    "originBody": "I built this machine so I could generate Bitcoin keys that I could trust. Air-gapped and simple to use and understand (mechanical).The Satoshi 9000 demo: https:&#x2F;&#x2F;youtu.be&#x2F;bJiOia5PoGEThe key value proposition of the machine is that it generates analog randomness in the physical world and converts it into digital (1’s and 0’s) randomness. Seamlessly.But it occurs to me that it may have other uses beyond crypto keys for your own use, such as: * Randomized clinical trials. Clinical trials need a high degree of transparency for ethical reasons; also, for legal reasons should it come to light after the trial has ended that patient selection and treatment selection was not random or in some way biased (say, by the researchers themselves). The machine described herein can provide that transparency to young and old patients, technical and non- technical. * Non-technical management. Many network engineers in need of security keys have bosses that are non-technical. Such managers might prefer security keys (and their generation) which are easier for them to understand. * Estate planning. Suppose members of a family were to inherit digital assets (such as Bitcoin, for example). Not all members of the family are technical and understand Bitcoin. However, each will still need to generate a secure Bitcoin key to receive their share of the inheritance. The machine described herein might help in that task because its source of randomness is more easily understood by laypeople and each can generate their own private key in private (in isolation with the machine). * Anywhere where the users have to have an intuitive understanding of how the randomness is being created; whether they are 5 years old, or 95 years old, and all ages in between.I&#x27;m curious to know if any of the folks over at HN can think of other use cases?",
    "commentLink": "https://news.ycombinator.com/item?id=41929822",
    "commentBody": "Satoshi9000 analog BTC key generator (mechanical)144 points by AJTSheppard 9 hours agohidepastfavorite52 comments I built this machine so I could generate Bitcoin keys that I could trust. Air-gapped and simple to use and understand (mechanical). The Satoshi 9000 demo: https://youtu.be/bJiOia5PoGE The key value proposition of the machine is that it generates analog randomness in the physical world and converts it into digital (1’s and 0’s) randomness. Seamlessly. But it occurs to me that it may have other uses beyond crypto keys for your own use, such as: * Randomized clinical trials. Clinical trials need a high degree of transparency for ethical reasons; also, for legal reasons should it come to light after the trial has ended that patient selection and treatment selection was not random or in some way biased (say, by the researchers themselves). The machine described herein can provide that transparency to young and old patients, technical and non- technical. * Non-technical management. Many network engineers in need of security keys have bosses that are non-technical. Such managers might prefer security keys (and their generation) which are easier for them to understand. * Estate planning. Suppose members of a family were to inherit digital assets (such as Bitcoin, for example). Not all members of the family are technical and understand Bitcoin. However, each will still need to generate a secure Bitcoin key to receive their share of the inheritance. The machine described herein might help in that task because its source of randomness is more easily understood by laypeople and each can generate their own private key in private (in isolation with the machine). * Anywhere where the users have to have an intuitive understanding of how the randomness is being created; whether they are 5 years old, or 95 years old, and all ages in between. I'm curious to know if any of the folks over at HN can think of other use cases? rbanffy 1 hour agoNot sure I’d call it analog. Mechanical it is, but all the computation control is digital. A mechanical one would probably have a camshaft for storing the program and use gears to make measurements and computations. Would probably need a large engine to power it as well, with careful control because the resisting force would vary along the machine cycles (this could be used as a side channel attack vector to figure out internal state from resisting force). reply mattbee 6 hours agoprevThis is pleasingly insane, congratulations! Is there a program to test the fairness of a given dice or coin? Is that a program that's even feasible to write? reply vikingerik 2 hours agoparentYou've always got the standard way to get fair random numbers from a fairness-unknown coin. Flip it twice. Restart if you get both heads or both tails. If you get H then T or T then H, those are equally probable, so take the first one of those as the final outcome. This generalizes to a die of N sides. Roll it N times. If you don't get all N distinct results, restart. If you do, then take the first result as your final outcome. (That may take a lot of trials for large N. It can be broken down by prime factorization, like roll 2-sided and 3-sided objects separately, and combine them for a d6 result.) reply eddd-ddde 2 hours agorootparentHmm my intuition isn't agreeing with this. Does this have a name so I can read more about it? reply shmageggy 2 hours agorootparentVon Neumann randomness extractor https://en.m.wikipedia.org/wiki/Randomness_extractor#Von_Neu... reply jvanderbot 1 hour agorootparentprevIt may be more likely that H or T happens (an unfair coin), but in a pair of H and T, both HT and TH are equally likely. Therefore which is \"first\" is equally likely H or T. Only holds if no spooky effects change results based on last result. (like a magic die that counts upwards or a magic coin that flips T after H no matter what) P(TH) = p(T)*p(H) = P(HT) reply vikingerik 1 hour agorootparentYour second paragraph is correct and may be where the previous poster's intuition was disagreeing, that the method doesn't necessarily hold for repeated iterations in a physical system where one trial starts from where the last one ended. It's not even really \"spooky\" - all you need is a flipping apparatus that's biased towards an odd number of rotations, and so then THTH is more common than THHT and you get a bias towards repeating your last result. reply eddd-ddde 59 minutes agorootparentExactly right, I was thinking an unfair coin could have \"memory\" but then the method doesn't hold. reply t0mek 5 hours agoparentprevI love the slow pace of the video, including a few minutes presentation of all available programs. And indeed, there are programs to test dice and coin bias: * https://youtu.be/bJiOia5PoGE?si=IEhbNJk0C0-7_2Nj&t=229 * https://youtu.be/bJiOia5PoGE?si=3Se3lYFVAAkElx0w&t=245 reply jdmoreira 6 hours agoparentprevYou can measure the Shannon entropy of a sequence reply chungus 5 hours agoprevLove this. Is the private key printed on a separate piece of paper? I saw only #####'s. How long does it take to generate a full key using dice? reply theideaofcoffee 4 hours agoprevLove it. I wonder what the distribution of rolls/tosses for this looks like. This also reminds me of an automated dice roller thingy that someone built with a hopper of dice, a conveyor to bring the dice to the top of a ramp and ocr to record all of the rolls, a \"Dice-o-matic\" [0]. And a vidja of it in action [1]. [0] http://gamesbyemail.com/news/diceomatic [1] https://www.youtube.com/watch?v=7n8LNxGbZbs reply ape4 5 hours agoprevIt would be nice to access it from /dev/random on a normal machine (at a very slow bitrate) reply dools 7 hours agoprevBest use case I can think of is replacing the die roller in the board game trouble. “You can pop a lot of trouble in the pop o matic bubble” reply abotsis 2 hours agoprevThis concept reminds me of the cloudflare lava lamps! Awesome! reply keeganpoppen 44 minutes agoprevi love everything about this, including the absurd impracticality. which i, personally, would call \"art\". reply whs 7 hours agoprevHow does it read the value from the coins or dices? reply imglorp 6 hours agoparentAt 5:44, the vid shows a webcam facing up to photograph the bottom of the coin/die through the shaker window. I guess there's some CV to read the item. reply robinduckett 2 hours agoprevCymru am byth! reply renewiltord 3 hours agoprevI found the video very entertaining. Very old-school. And boy, you’ve paid a lot of attention to the device. It looks very pro. reply KaiserPro 8 hours agoprevThis is cute, I like it reply red_admiral 6 hours agoprevDuring the cold war, the Washington-Moscow \"nuclear\" hotline was set up with teleprinters and one-time pad keys for both directions. I imagine they had an analogue randomness key generator on both ends to generate the key material. Presumably they're using ~Dual-EC DRBG~ some kind of quantum randomness generators these days. reply pvg 5 hours agoparentThere was, interestingly, a much fancier system used quite a bit earlier https://en.wikipedia.org/wiki/SIGSALY https://news.ycombinator.com/item?id=20138230 reply red_admiral 5 hours agorootparent> The noise values used for the encryption key were originally produced by large mercury-vapor rectifying vacuum tubes and stored on a phonograph record. That's sure a hardcore way to run an analogue randomness generator. reply pvg 5 hours agorootparentThe beta decay enthusiasts were busy elsewhere. reply stavros 8 hours agoprevThis looks interesting, but there are much better (higher bitrate) sources of pure randomness, and I'm not sure what advantage this has over those. If I don't trust the machine that's generating the randomness, that doesn't only apply to the randomness component, I similarly mistrust this machine's code, the hardware, etc. I'm not sure what this would add over, for example, entropy derived from a hash of the image of a camera's thermal noise profile. reply pvg 8 hours agoparentI'm not sure what advantage this has over those. Those usually don't look and sound like they were made by Doc Brown. reply beng-nl 4 hours agorootparentWell said. I find the creator did a delightful job in his presentation. So much pride in the craftsmanship visible in his presentation as well as the finished product. I subscribed and hope for more videos.. reply tylervigen 2 hours agoparentprevI think the advantage of this one is that it's funny. :) reply stavros 2 hours agorootparentI didn't watch the video because I didn't have sound, if it's meant to be funny, then I applaud it. reply jjk7 51 minutes agorootparentIt's a very serious video, which adds to the comedy of it. reply qqqult 6 hours agoparentprevit's simple reply raverbashing 4 hours agoprevSo, to generate a random bitcoin key, that's how many coin tosses or die tosses? reply darkstar999 4 hours agoparentThe video says 128 cycles. Each cycle is 30 seconds, so it would take 64 minutes. reply ducknorris 7 hours agoprevBeautifulNewtons laws are fully predictable after all... Not fully actually: https://plato.stanford.edu/entries/determinism-causal/#ClaMe... reply freeplay 4 hours agoprevSide note: excellent unintentional ASMR once Andrew starts explaining how the machine works. reply ajay-d 6 hours agoprev [–] Are these like public randomness beacons? NIST[0] and Cloudflare[1] have them. I guess use cases are lotteries that are publicly verifiable, election auditing... [0] https://csrc.nist.gov/projects/interoperable-randomness-beac... [1] https://drand.love/ [2] https://blog.cloudflare.com/league-of-entropy/ reply RIMR 5 hours agoparent [–] No. reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "A machine has been developed to generate trustworthy Bitcoin keys using analog randomness, which is then converted to digital, ensuring high security and reliability.",
      "The machine is air-gapped, meaning it is isolated from networks to prevent unauthorized access, and is designed to be simple and mechanical for ease of use.",
      "Potential applications include randomized clinical trials, non-technical management, estate planning, and any scenario requiring an intuitive understanding of randomness."
    ],
    "commentSummary": [
      "The Satoshi9000 is a mechanical Bitcoin key generator designed to produce secure keys using analog randomness, ensuring trustworthiness.",
      "It is air-gapped, meaning it operates without a direct connection to the internet, enhancing security by preventing remote access.",
      "The device's simplicity and intuitive design make it accessible for various applications beyond cryptocurrency, such as randomized clinical trials and estate planning, appealing to users of all ages."
    ],
    "points": 144,
    "commentCount": 52,
    "retryCount": 0,
    "time": 1729722388
  },
  {
    "id": 41935166,
    "title": "Which Animal Shares Your Body Fat Percentage?",
    "originLink": "https://animalbodyfatmatch.netlify.app/",
    "originBody": "I recently came across a youtube video about animals and their average body fat percentages.I thought it would be fun to compare my body fat to different animals and see which one I most resemble. This idea spiraled into a two-hour project, where I turned the data from the video into a JSON file, asked chatgpt to help create a UI, and deployed the whole thing on netlify. Pretty cool how fast we can quickly build random projects like this 10x faster with llms!Now that I’m typing this, I still have no clue why I made this... but here it is. Enjoy!",
    "commentLink": "https://news.ycombinator.com/item?id=41935166",
    "commentBody": "Which Animal Shares Your Body Fat Percentage? (animalbodyfatmatch.netlify.app)129 points by Atallapr 5 hours agohidepastfavorite89 comments I recently came across a youtube video about animals and their average body fat percentages.I thought it would be fun to compare my body fat to different animals and see which one I most resemble. This idea spiraled into a two-hour project, where I turned the data from the video into a JSON file, asked chatgpt to help create a UI, and deployed the whole thing on netlify. Pretty cool how fast we can quickly build random projects like this 10x faster with llms! Now that I’m typing this, I still have no clue why I made this... but here it is. Enjoy! jaysonelliot 4 hours agoIt's very fun! The only change I'd make would be to use real photos of the animals instead of the AI images. It's hard to relate to them the way actual pictures would be. Pexels is an excellent source of free, creative commons images and they have all the animals you need. Here's some geckos https://www.pexels.com/search/gecko/ :) reply ramchip 4 hours agoparentI had the same thought. AI art looks cheap, but more importantly it doesn't show if the real animal looks fat or not! Pexels looks super useful. reply davio 2 hours agoparentprevCan also prompt AI to create photorealistic images. Midjourney will probably let you specify famous photographer styles. reply lostlogin 1 hour agorootparent> Can also prompt AI to create photorealistic images It can, but the ‘baby peacock’ thing has damped my enthusiasm. https://news.ycombinator.com/item?id=41767648 reply n4r9 4 hours agoprevWhat was the source video for the data BTW? I'm a little unsure about some of these, like cows having 5% body fat! According to this[0] webpage a \"moderate\" condition cow has 19% body fat, but it has a \"Body Composition Score\" of 5. [0] https://www.grass-fed-solutions.com/body-condition-scoring.h... reply ericmcer 2 hours agoparentcows = 5%, wasps = 15%, kangaroos = 2% I am not an animal expert but just based on intuition this seems off... reply tacticalturtle 3 hours agoparentprevAdditionally seals have 40% body fat, but walruses have 20%? That seems suspicious. reply eddd-ddde 3 hours agorootparentI didn't know my body fat so I just guestimated 20 to immediately be flashbanged by the image of a walrus. I consider myself on the skinny side so it was a surprise to be sure. reply nradov 1 hour agorootparentprevThe body fat content for many animal species varies a lot throughout the year based on migration, food availability, and (sometimes) hibernation. So it depends on when you measure. reply cmiller1 4 hours agoprevNote that body fat percentage is notoriously difficult to accurately measure. The linked calculator uses the navy circumference method which gives readings ±3-4 points for most people and even further off for some. It gives me 3.5% which would be insanely low (I'm probably somewhere around 8-10 right now) because I have an unusually wide neck. To get more accurate readings you'd have to pay for a DEXA scan or a bodpod but even those can be off by a couple points. reply s_dev 4 hours agoparentMy favourite comment on this is the following joke exchange: Doctor: Your BMI is high I'd like you make some dietary adjustments. Patient: BMI doesn't measure fat accurately for example professional Rugby players are marked as obese but aren't. Doctor: Are you a Rugby player? Patrient: No. It's a good guideline. Don't let edge cases control your perception and let professionals do their thing with the tools they have -- they're aware of limitations that's why their professionals. reply arcticbull 2 hours agorootparentWhile that joke is accurate (although some football players are also obese [1] depending on their position -- Aaron Gibson was 400lbs), BMI was never meant to be applied to individuals. It was designed to be applied to populations. It does a good job of that. Also note that guidelines have historically been created against a very limited selection of race and have not appropriately adjusted for height (although BMI 2.0 corrects the height issues). If we're just relying on the professional's opinion then they don't really need the BMI, right. They can just look at you and go \"huh, you're looking a little thicc today.\" BMI is a good tool for population health, a bad tool for individual health, and if it just so happens to correlate to your thiccness then you probably already know that. I agree with parent that body composition analysis via DEXA or air displacement plethysmography is a far better metric. I have no doubt that a carpenter can bang a nail in with a screwdriver 90% of the time, that's why they're professionals after all, but when I see it, I can't help but think \"there's gotta be a better way mate.\" [1] https://www.nytimes.com/2019/01/17/sports/football/the-nfls-... reply HeatrayEnjoyer 2 hours agorootparentWhy would race matter? Melanin doesn't effect fat comp... does it? reply lostlogin 1 hour agorootparentBody composition varies by race. https://pmc.ncbi.nlm.nih.gov/articles/PMC4968570/ https://www.sciencedirect.com/science/article/pii/S000291652... reply fjdjshsh 1 hour agorootparentprevThey don't need to be causally connected, just be correlated. reply meiraleal 1 hour agorootparentprev> Why would race matter? Because social matter reply arcticbull 1 hour agorootparentIt's really not, and it's always weird when people jump to that conclusion. Different genetics lead to different health outcomes for the same body fat percentages - or the same BMI on a population level. Just as it's not a \"social matter\" that the prevalence of sickle cell is much higher in African Americans. It doesn't make sense to use health outcomes standardized against a BMI range for one population racial mix against individuals of a race not represented -- in at least two separate ways. Hong Kong for instance sets the obesity cutoff at a BMI of 25. China and Singapore use 27.5 I believe. The WHO and various other organizations generally endorse lower cut-offs for people of Asian descent. [1] [1] https://pmc.ncbi.nlm.nih.gov/articles/PMC10108164 reply relaxing 52 minutes agorootparentSickle cell isn’t affected by social matters, unlike body fat. reply arcticbull 51 minutes agorootparentI'm not sure if you're following what I am saying. The same body fat percentage leads to different health outcomes for members of different races in aggregate because of different genetic predispositions. Someone of one race with BMI X is likely to have a different risk profile than someone of a different race with BMI X no matter what X is, high or low. This is not a social matter. We're just talking about heath statistics, not aesthetics. That's not to say there aren't social aspects to obesity as well (obviously) but that's not what we're talking about right now, and parent dragging that in is just a distraction. From [1] in the comment you replied: > Access to medications and surgery should be improved, in part by updating US indications for therapies to reflect race‐specific obesity thresholds and through inclusion of Asian American people of all subtypes with lower BMI values in clinical trials. reply skrtskrt 1 hour agorootparentprevIt is bad all around, the inaccuracies start waaaay before you get to something you could call an \"edge case\". I'm 5'11, 180 lb male, that counts as overweight. I'm 18% bodyfat. You wouldn't even note me as being particularly athletic looking if you walked by, I'm right in the middle of the bell curve for \"guy who works out sometimes\". There's no way it should be flagging someone like me as overweight. reply WaitWaitWha 3 hours agorootparentprev> It's a good guideline. 100% accurate. Caveat Emptor - the world does not understand even the smallest nuance that needs to take into consideration - in this case \"guideline\". For example, the US DoD used BMI (DoDI 1308.03) to disqualify a friend of mine from joining. his actual body fat by DEXA? 7%, he was just short and very fit. reply kelipso 3 hours agorootparentprevThere are plenty of people who do weightlifting or have high muscle density. Probably more than 10% of people and certainly not edge cases. Doctors are basically taught like undergrads are taught, not much critical thinking involved, they just recite whatever is in the relevant document they are supposed to recite from. reply impute 2 hours agorootparentI really doubt more than 10% of people do weightlifting and have high muscle density. It's likely closer to 0.1% which is why BMI is a good guideline over a group. reply skrtskrt 1 hour agorootparentbeing within an \"ideal\" or \"average\" bodyfat range will easily put you as overweight on BMI. it's a useless statistic. reply fkyoureadthedoc 3 hours agorootparentprevDoctors are much more likely to let obesity slide than they are to nag you about BMI when you're clearly in shape in my experience. reply cjbgkagh 3 hours agorootparentThe problem is not so much what the doctor will tell people in person but that these same people will end up in stats and should be separated into their own category. Having a high BMI and that excludes strength trainers would make high BMI stats worse than it is already. reply TheCoelacanth 2 hours agorootparentThose people do skew the stats by a bit, but they are outnumbered by the people who are \"skinny fat\", i.e. people who are very sedentary and who have high body fat but still have normal BMIs due to having very low lean body mass. reply Retr0id 2 hours agorootparentprevGP is not questioning the usefulness of body fat percentage as a statistic (that's its own question), but the crude method of measurement. It says mine is 1.6%, which I'd say is at least 5% out. reply eagerpace 3 hours agorootparentprevI've done a couple DEXA scans recently and they have in fact confirmed that the BMI calculation for me is spot on. reply impute 2 hours agorootparentI also just did a DEXA scan last week and the calculator is within ~2% so pretty good considering it's free and takes 1 minute. reply wrs 2 hours agoparentprevAlso, when using the Navy method, be sure you read the instructions for how to measure. The “waist” measurement is unfortunately not the number on your trouser size. :) reply anon84873628 4 hours agoparentprevYeah, 3.5% would make you leaner than many Mr. Olympia competitors! And nearly at the point of negative health effects. It's a shame when people use those electronic home scales and believe the results. Someone was so happy to tell me they were at 10% body fat, I could only smile and nod... Most healthy people would have difficulty dropping below 10-12% without very deliberate effort. And beyond that would probably be kinda freaked out when they start to see all the veins and striations appearing. reply foerster 2 hours agorootparentI got down to about 6% for a bodybuilding show. It was incredible to look at, but also literally painful to bump into any hard surface, to sit on any hard surface, etc. The amount of bony protrusions you have when the body fat is gone is eye opening. I walk around at 10-13% typically, then lean down for summer and shows. Most people at 30+ lbs further away from 'having abs' than they think. I see it time and time again. reply cmiller1 2 hours agorootparentWhen I dip below around 8%ish my appetite goes through the roof, all self control goes out the window to the all consuming signaling in my brain to eat eat eat reply loeg 1 hour agorootparentprevNearly? 3.5% bf is unhealthy for men and probably dead for women. reply Mountain_Skies 3 hours agorootparentprevI had a DEXA scan done and for me, it showed higher body fat about five percentage points higher than my scale at home did. But I used that as a calibration point for my home scale. I've found as long as I use the home scale under similar conditions each time, mostly in the morning after voiding my bladder but before showering, that there's not much fluctuation from day to day. If I ever hit my goal on the scale, I plan to go back and get a second DEXA scan. Two interesting things that also came from getting the scan done was that it showed that I have poor bone density so that's an issue that needed addressing (and hopefully the second scan will show improvement) and the scan was part of a package where they also did a 3d scan of my body exterior, which I was able to download and 3d print. I plan on making a half-and-half model of my body's change upon hitting my goal body fat percentage. reply guerrilla 3 hours agoparentprev> DEXA Fat calipers would be less accurate than DEXA but much more accurate than Navy circumference method, yet a lot cheaper than DEXA. reply loeg 1 hour agorootparentYeah, there are a couple inexpensive midground options here. Calipers is one method, bioelectrical impedance is another. reply Atallapr 46 minutes agoprevI am seeing a lot of cool feature ideas on this thread which is amazing! I just made the repo public if anyone wants to look at the json or put in a PR with some edits :) https://github.com/amittallapragada/animal-bodyfat-calculato... reply christiangenco 2 hours agoprevThis is neat! I have a few thoughts: - my intuitive sense of animals that are thin or fat is totally off. I think of cows as being fat (ex: \"fat cow\") but their body fat percentage is only 6%! I think of Gorillas being super fit and muscular but they're at 31%! - I hate that I can't hit enter after changing the body fat percentage value and have it change - on that note I'd prefer if there wasn't a \"find my match\" button at all—after changing the body fat percentage value the match should immediately update - better than that would be a sliding scale of every animal and the one that matches gets highlighted and centered - real-world pictures would be better and even better than that would be an image of the animal and a cross section/MRI of the animal where you can see the fat distribution reply kelipso 1 hour agoparentCow is not 6% body fat unless it's been starving or decided to join a body building contest. The source data is bad, probably got the data from ChatGPT. reply jayGlow 20 minutes agorootparentchat gpt gave me 15-25% which seems about right when comparing with other sources. reply ProjectArcturis 4 hours agoprevSource data is very wrong. A walrus is not 20% body fat. reply fkyoureadthedoc 3 hours agoparentAll of it? How fat is a walrus, where's _your_ source? It probably varies by subspecies, age, season, etc. Maybe they are ripped af under all that blubber? OP's source is a YouTube video that doesn't list their source. Given that video is post ChatGPT... reply zamadatix 2 hours agoprevI think it'd be cool if the input was to calculate the % (if you didn't already know) and the area below was just a timeline-like output with the different animals marked along the way. It seems most people here are more interested in exploring the output space than finding their specific animal match. reply carlgreene 5 hours agoprevI am not 10% BF, but was very surprised to see the African Elephant come up for that! reply anon84873628 4 hours agoparentI'm skeptical of the source data. reply abraxas 2 hours agoprev\"Your closest match is a lion\".... alright, I'll continue drinking coffee and staring at the screen all day then. reply rayxi271828 4 hours agoprevMen and women will have very different body fat percentage level for similar look. In general it's something like women's = men's +8-9%? reply willcipriano 4 hours agoparentA man is considered lean around 15%, a woman is lean around 20%. Men: https://images.app.goo.gl/Gn5pBBN2FB22YGsz7 Women: https://images.app.goo.gl/wAP5VDfCzKiWWYwG9 reply bogtog 4 hours agoprevI clicked through all the ones from 1% (crab) to 25% (sheep). I honestly can't see any pattern here reply erikerikson 3 hours agoprevThis reminds me of the information stealing spam we'd see on Facebook. At least, unlike many of the questions in those, I haven't seen BMI used as a security question. reply grumpwagon 5 hours agoprevBetween this today and one square minesweeper yesterday, we're batting 1.000 on funny dumb projects that make me laugh. I don't know why you made this either, but I'm glad you did, thanks! reply fakedang 4 hours agoparentHere's another that I discovered today: not a hobby project but a personal webpage that got me rotfl. https://cookie.engineer/ reply topherjaynes 4 hours agoprevWhoa, I was shocked that an elephant was sub 10% body fat...now to call some one an elephant and explain it's a compliment! reply BigFnTelly 5 hours agoprevWhat's the source on the images? are they AI-generated? reply Aphataeros 4 hours agoparentI was wondering the same thing, and checking the images they are hosted on https://craiyon.com/ Craiyon - Create AI Art with our free AI image generator. reply amelius 4 hours agoparentprevThere's a crayon in the bottom right corner of each of the images. Perhaps someone recognizes it? reply ceroxylon 4 hours agorootparentThe crayon is indeed a big hint: https://www.craiyon.com/ reply Atallapr 4 hours agorootparentprevYea they're all AI generated! I used this site https://www.craiyon.com/ They have a free tool for image generation reply Gasp0de 5 hours agoparentprevThey look AI generated to me. reply 6510 1 hour agoprevIt needs to push state the bmi to the url so that I can send it to people. It could also be fun if one could fill out the age, weight, height and gender to calculate the bmi. Now that I think about it it would be hilarious to use sliders and have a cartoon person populated with the data generated in real time. reply nonameiguess 3 hours agoprevI can understand the excitement in principle that you made an app with little effort, but there is no reason this can't be a static page with a table of animals and their average body fat percentages. Users don't need to enter any information and you don't even need a backend. They can simply go the page and find the animal from the table that most closely matches their own bodyfat percentage. The data is also dubious. I'm not going to enter every possible number to see what comes back, but the number reported here for cows is definitely wrong. Insects have cells that can store nutrients, but not adipose tissue in the familiar mammal sense that we have. There is no way to know how much fat they're actually storing at any given moment versus other nutrients. reply timeon 1 hour agoparentUsers could still enter the information. But instead of input form it would be browsers 'find in page' search bar. reply spuz 4 hours agoprevI consider myself slim but so I was pretty amused to see my spirit animal is the pig. Great idea. reply parpfish 4 hours agoprevid rather see a table than have to enter a form. that way you don't just get \"your\" score, but you get to see the whole list of animals and learn about which ones have high/low body fat reply Gasp0de 5 hours agoprevI was completely confused to see that a Walrus has only 2% points more body fat than a Gecko. reply wormlord 4 hours agoparentGeckos store fat in their tails https://th.bing.com/th/id/OIP.UYKInXyy0_Vhs1qqTziRGwAAAA?rs=... reply shaky-carrousel 4 hours agorootparentThat's one big fat tail, if I've ever seen one. reply IncreasePosts 3 hours agoprevHow long did it take you to make? reply Atallapr 21 minutes agoparent2 hours! reply sebmellen 4 hours agoprevThe cutworm moth is 72% body fat. Crazy!!!! reply p4bl0 4 hours agoprevHéhéhé. That is fun! reply jamil7 4 hours agoprevErr hornet. reply BlindEyeHalo 4 hours agoprevHaving insects in there feels a bit odd to me. Not exactly relatable. reply moralestapia 4 hours agoprevCat master race reporting in. Great site, thanks for sharing! reply onlyrealcuzzo 5 hours agoprevThis is fun! Take my internet points! Good job. reply lapcat 4 hours agoprev [–] I always suspect that viral online forms like this are simply fronts for collecting personal information to sell. reply umanwizard 4 hours agoparentWho would want to buy the results of a highly unscientific poll about body fat percentages? reply lapcat 4 hours agorootparentThe highly unscientific poll aspect is irrelevant. The question should be, who would want to know the body fat percentages of potential consumers (as identified by IP addresses, cookies, and other methods of online tracking used by the forms)? This would obviously be useful for targeted advertising, for example. And this information can be correlated and gathered in giant databases with profiles of consumers. reply ajot 4 hours agorootparentWell, maybe it's just me, but I can see their data being posioned by checking different numbers to see all animals :) reply feoren 4 hours agorootparentData brokers do not seem to care if their data is poisoned. That's their customers' problem! Their customers don't have any way of validating it, so there's no incentive to care. Haven't you ever received spam that was based on some extremely spurious connections? reply kelipso 3 hours agorootparentprevI did that too but the first number I inputted was my percentage. I'd say most people would do the same thing. reply ecshafer 4 hours agorootparentprevPeople trying to sell people ozempic and other glp-1 compounds. reply Atallapr 4 hours agorootparentIf it helps, I’m not storing any user data. There’s no backend or database, the app just looks up values in a static json. Just copied the ui code from chatgpt and put it into a react app. The only thing I’m tracking is page views! reply timeon 1 hour agorootparentNothing against using what you want, but isn't React bit overkill here? (For one input and one image). reply Atallapr 22 minutes agorootparentit definitely is, but I use it at work and find it to be pretty readable. Since I was asking gpt to write most of it I wanted it to be in a framework I could easily understand and work in as well. reply jy14898 4 hours agoparentprevNow they know I'm 100% body fat reply im3w1l 2 hours agoparentprev [–] The design encourages trying multiple values, and most people visiting the site probably don't even know their bf% reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "The author created a project comparing their body fat percentage to various animals, using data transformed into a JSON file.- They utilized ChatGPT to develop a user interface (UI) and deployed the project on Netlify, showcasing the ease of building projects with large language models (LLMs).- The project highlights the rapid development capabilities enabled by modern AI tools, even for spontaneous and personal projects."
    ],
    "commentSummary": [
      "A user developed a project comparing human body fat percentages to animals, using AI-generated images and hosting it on Netlify, inspired by a YouTube video.- The project initiated discussions on the accuracy of body fat data and measurement techniques, with some users suggesting the use of real animal photos for improved relatability.- The creator made the project's GitHub repository available for further contributions, encouraging community involvement."
    ],
    "points": 129,
    "commentCount": 89,
    "retryCount": 0,
    "time": 1729775533
  },
  {
    "id": 41936745,
    "title": "Skyvern (YC S23) – open-source AI agent for browser automations",
    "originLink": "https://github.com/Skyvern-AI/Skyvern",
    "originBody": "Hey HN, we’re Suchintan and Shu from Skyvern (https:&#x2F;&#x2F;www.skyvern.com). We’re building an open source tool to help companies automate browser-based workflows using LLMs.Our open source repo is at https:&#x2F;&#x2F;github.com&#x2F;Skyvern-AI&#x2F;Skyvern, and we&#x27;re excited to share our cloud version with you (https:&#x2F;&#x2F;app.skyvern.com) :)Skyvern allows you to define a single (or a series of) goal-based prompts to instruct an agent to complete complex tasks on websites. Here’s a quick demo of Skyvern: https:&#x2F;&#x2F;www.loom.com&#x2F;share&#x2F;76b231309df74a528061fcf102e1967fWe built this to solve a specific problem: building browser automations often requires companies to either hire people and scale out operations teams to do tedious manual work, or hire developers to use products like UI-Path or Selenium to build automations.Code-based solutions always run into the same problem: they’re brittle (wow this website added a new pop-up dialog and my script broke), and fail to achieve the same objective across multiple websites (how can I fill out a contact-us form on hundreds of different websites?)We did a Show HN a few months ago (https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=39706004), and since then, we’ve onboarded customers for a wide variety of use cases: generating insurance quotes on websites like Geico.com; applying to jobs on websites like lever.co; automating filing permits in local government portals; registering new corporations for employment identification; fetching invoices from hundreds of different portals such as hydroone.com; automating purchasing on a handful of e-commerce websites like zooplus.com; and filling out contact us forms on a bunch of random smb websites (such as HVAC websites).To be able to service all of these, we’ve built and open-sourced quite a few interesting features:(1) a fully-featured React application allowing you to see every action Skyvern is taking in real-time;(2) livestreaming browser instances to allow our users to see what Skyvern is doing when running inside of a docker container;(3) authenticated sessions, integrating with Bitwarden and allowing users to specify Email + Phone + QR-code based 2FAs;(4) “workflows” allowing users to chain multiple goal-based prompts together, which can handle tasks like invoice downloading, or automating purchasing pipelines;(5) processing HTML Elements (ex. identifying + summarizing SVGs) and performing website interactions (ex. Iterating over dynamic autocompletes to fill in address information correctly)(6) “cached workflows”, allowing Skyvern to memorize previous interactions (ie text inputs) and re-use them in future runs.We’ve also been blessed with a few model advancements to solve some of the cost concerns the community brought up. Skyvern’s token costs went down 80% from $15 &#x2F; 1M tokens (GPT-4V) to $2.50 &#x2F; 1M tokens (GPT-4O)Despite the model costs going down 80%, Skyvern is still quite expensive to run, so we give every new user $5 of credits to try it out and see if it can be useful for you.We would be honored if you could give it a try at https:&#x2F;&#x2F;app.skyvern.com and share some feedback with us, and we look forward to any and all of your comments!",
    "commentLink": "https://news.ycombinator.com/item?id=41936745",
    "commentBody": "Skyvern (YC S23) – open-source AI agent for browser automations (github.com/skyvern-ai)128 points by suchintan 3 hours agohidepastfavorite29 comments Hey HN, we’re Suchintan and Shu from Skyvern (https://www.skyvern.com). We’re building an open source tool to help companies automate browser-based workflows using LLMs. Our open source repo is at https://github.com/Skyvern-AI/Skyvern, and we're excited to share our cloud version with you (https://app.skyvern.com) :) Skyvern allows you to define a single (or a series of) goal-based prompts to instruct an agent to complete complex tasks on websites. Here’s a quick demo of Skyvern: https://www.loom.com/share/76b231309df74a528061fcf102e1967f We built this to solve a specific problem: building browser automations often requires companies to either hire people and scale out operations teams to do tedious manual work, or hire developers to use products like UI-Path or Selenium to build automations. Code-based solutions always run into the same problem: they’re brittle (wow this website added a new pop-up dialog and my script broke), and fail to achieve the same objective across multiple websites (how can I fill out a contact-us form on hundreds of different websites?) We did a Show HN a few months ago (https://news.ycombinator.com/item?id=39706004), and since then, we’ve onboarded customers for a wide variety of use cases: generating insurance quotes on websites like Geico.com; applying to jobs on websites like lever.co; automating filing permits in local government portals; registering new corporations for employment identification; fetching invoices from hundreds of different portals such as hydroone.com; automating purchasing on a handful of e-commerce websites like zooplus.com; and filling out contact us forms on a bunch of random smb websites (such as HVAC websites). To be able to service all of these, we’ve built and open-sourced quite a few interesting features: (1) a fully-featured React application allowing you to see every action Skyvern is taking in real-time; (2) livestreaming browser instances to allow our users to see what Skyvern is doing when running inside of a docker container; (3) authenticated sessions, integrating with Bitwarden and allowing users to specify Email + Phone + QR-code based 2FAs; (4) “workflows” allowing users to chain multiple goal-based prompts together, which can handle tasks like invoice downloading, or automating purchasing pipelines; (5) processing HTML Elements (ex. identifying + summarizing SVGs) and performing website interactions (ex. Iterating over dynamic autocompletes to fill in address information correctly) (6) “cached workflows”, allowing Skyvern to memorize previous interactions (ie text inputs) and re-use them in future runs. We’ve also been blessed with a few model advancements to solve some of the cost concerns the community brought up. Skyvern’s token costs went down 80% from $15 / 1M tokens (GPT-4V) to $2.50 / 1M tokens (GPT-4O) Despite the model costs going down 80%, Skyvern is still quite expensive to run, so we give every new user $5 of credits to try it out and see if it can be useful for you. We would be honored if you could give it a try at https://app.skyvern.com and share some feedback with us, and we look forward to any and all of your comments! dboreham 33 minutes agoIn case anyone else is confused as to what \"browser automations\" is : this is about making a program that drives a target web site (owned by someone else typically), in the manner of selenium or the like --- inserting key press events and mouse move/click events, to make that target web site do something. Once you know that the rest of the description makes sense. reply glorpsicle 1 hour agoprevCongrats on the launch! I've been keeping up with you folks since you last posted (a few months ago, I believe). How does Anthropic's recent announcement of Claude's \"computer use\" abilities grab you? What key differentiators does Skyvern have, at this point in time (\"computer use\" with Claude being relatively new)? reply philipbjorge 20 minutes agoparentI work in this space and Claude's ability to count pixels and interact with a screen using precise coordinates seems like a genuinely useful innovation that I expect will improve upon existing approaches. Existing approaches tend to involve drawing marked bounding boxes around interactive elements and then asking the LLM to provide a tool call like `click('A12')` where A12 remaps to the underlying HTML element and we perform some sort of Selenium/JS action. Using heuristics to draw those bounding boxes is tricky. Even performing the correct action can be tricky as it might be that click handlers are attached to a different DOM element. Avoiding this remapping between a visual to an HTML element and instead working with high level operations like `click(x, y)` or `type(\"foo\")` directly on the screen will probably be more effective at automating usecases. That being said, providing HTML to the LLM as context does tend to improve performance on top of just visual inference right now. So I dunno... I'm more optimistic about Claude's approach and am very excited about it... especially if visual inference continues to improve. reply suchintan 53 minutes agoparentprevGreat question -- I was waiting for someone to ask this! Their product and launch is super cool. It's incredible how much it's able to do by just relying on tool use + micro agents + screen shots + coordinates to interact with websites. There are a couple of thoughts here: (1) Will their competitors wait around and not build something similar? Will xAI / Gemini / OpenAI / Mistral / MetaAI teams wait around? Probably not. This is likely a huge part of the future, and one company will not \"take it all\" (2) How is value actually derived from these systems? Is a demo + cool usable product enough? Likely not. Most people actually want their workflow automated. For personal use-cases, this might be enough.. but enterprises likely want something more complex (3) Will this be optimized for Claude only? What if you want to run this with your own open source LLMs? Or you want to point this at the best model on the market all the time? Will you get that flexibility through a solution provided by a big player? Likely not -- Anthropic has incentive to get you to use Claude under the hood The last point is the one that gives me hope. Our open source users are able to pick their favourite model to run on. You're not locked into Cluade. You can run it on Gemini / GPT-4O or open source ones such as Llama 3.2. reply sergeyk 16 minutes agoprevCongrats! Do you have numbers on WebArena (https://webarena.dev) or VisualWebArena (https://jykoh.com/vwa)? reply suchintan 14 minutes agoparentNot yet! We haven't shared them publicly yet because our internal dataset is super biased. Keep your eyes peeled though! They'll be coming out in the next few weeks :) reply mmaunder 2 hours agoprevCongrats!!! And super cool that you've open sourced it under the AGPL. Sorry if this is answered in the docs but I did a brief search on the source and noticed you're not using LangChain but do plan to integrate it so it can be offered to that community. I'm curious if you wouldn't mind talking about what you did use to create the chain of thought/actions logic in Skyvern and if you had to start work today if you'd consider going the LangChain/Graph route? Thanks. reply suchintan 1 hour agoparentWe actually started off using the AutoGPT framework. There are a ton of remnants of that (tasks, steps) but we found the framework extremely limiting as we wanted to expand and do more complex things For example, we're currently using a multi agent architecture where we have micro agents run to analyze SVGs, fill out dynamic autocompletes. This would have been really hard. Frameworks like langchain are good for early prototyping, but it's too restricting when you want to push the limits reply drewsonian 1 hour agoprevThis is great, and I can think of several business uses and some personal. Like this: Could I use this to pull screenshots or PDFs of my grocery receipts from a major grocery chain? reply suchintan 51 minutes agoparentYes! We're helping a few companies with this right now. This use-case actually surprised me. I never realized how important it is to track invoices in Europe (where VAT needs to be closely tracked), and a large % of vendors require you to log into their portal to fetch them reply DennisSFO 2 hours agoprevCongrats on the launch. I'm curious if you had any experience running skyvern on airline websites (for example to extract award availability for miles tickets from point A to B)? It seems like airlines always change things around and have robust anti scraping measures. reply suchintan 1 hour agoparentGreat question. We haven't helped anyone with that exact use case yet, but we're in the middle of integrating with a company to help them automate purchasing flights with Alaska and Southwest (on the behalf of real people) It's going to be our way of beta testing CC transaction and testing them for reliabilty reply modo_ 2 hours agoprevCongrats on the launch! This is really cool - one of the applications of LLM I find most compelling. I've seen so many back office processes that have hundreds of steps, are incredibly error prone, and traditionally couldn't be automated due to API limitations. Solutions like Skyvern are going to supercharge businesses that have had historically low margins due to the number of humans required. (Not as a replacement for a human, but as a force multiplier) reply suchintan 1 hour agoparentThe most fascinating part is how tough that work really is. Everyone we've talked to loathes the manual stuff, but until a better solution comes out, you have to allocate X% of your time to it reply msp26 1 hour agoprevAwesome, I've been working on a similar thing at a smaller scale and I think this area is very promising. I've limited my problem scope to single page interactions / scraping which has been very reliable and useful for my company. But agentic automation does sound fun. reply suchintan 1 hour agoparentYeah! We've seen this especially useful if you want to work in highly dynamic situations Ex: filling out contact forms on hundreds of websites? It's really tough for normal code to be able to handle that cardinality. No problem for an AI agent reply msp26 1 hour agorootparentJust out of curiosity, what sort of challenges did you run into when scaling this up? I don't see a need for my current solution to go past a handful of browser instances but I'd imagine it might get crazy. reply suchintan 1 hour agorootparentI made a LinkedIn post about it yesterday, but the funniest has been our customer DoSing our service by accident (sending 10K tasks per hour for 24h straight) Toughest was Skyvern accidentally talking to a support agent when the website said \"your request failed, please contact support\" https://www.linkedin.com/posts/suchintansingh_we-received-20... reply infocollector 1 hour agoprevQuick question: What does DataDog's ddtrace do in the opensource version? reply suchintan 52 minutes agoparentNothing -- we use DataDog for our cloud telemetry and haven't built a great way to separate dependencies between cloud and open source reply BrandiATMuhkuh 2 hours agoprevCongratulations on the launch. This is really cool. I was recently tinkering with the same idea. But based on a browser extension. There are many back office tasks where people copy data from page 1 into a form of page 2. reply suchintan 2 hours agoparentYeah we've been surprised by how many interesting things companies do in the background to keep them running The craziest one we heard about was this government portal in India that was hard to automate because halfway through the portal you had to refresh the page a bunch of times to get a button to show up reply selimthegrim 2 hours agorootparentThe railway ticket site? reply suchintan 1 hour agorootparentIt was a state level permit website I think. Very interesting! reply delusional 1 hour agoprevThe plaintext version of your signup email replaces the ampersand in the url with an & XML entity. You probably don't want that. reply suchintan 1 hour agoparentInteresting. We will fix it reply Cheesman123 2 hours agoprevCongrats on the launch - love the tool reply ganeshkrishnan 1 hour agoprev [–] awesome work. I had the github starred from the day I saw on Show HN but never got around to using it. I want to use this to automate approving/declining group members for our facebook group which is approaching half million members and fb admin tools are pretty lacking reply suchintan 1 hour agoparent [–] Thank you for the star! We had someone talk about us the other day on r/localllama (https://www.reddit.com/r/LocalLLaMA/comments/1g9zhbd/if_your...) and I still couldn't believe that we ever got past 50 stars reply GuidelinesFAQListsAPISecurityLegalApply to YCContact Search:",
    "originSummary": [
      "Skyvern is an open-source tool designed to automate browser-based workflows using Large Language Models (LLMs), offering an alternative to traditional solutions like UI-Path or Selenium.",
      "The tool has been enhanced with features such as real-time action viewing, livestreaming browser instances, authenticated sessions, and cached workflows, and has seen an 80% reduction in token costs.",
      "Skyvern has successfully onboarded customers for diverse applications, including generating insurance quotes, job applications, and automating e-commerce purchases, and offers $5 credits for new users to explore its capabilities."
    ],
    "commentSummary": [
      "Skyvern, a Y Combinator Summer 2023 startup, offers an open-source AI tool that automates browser workflows using Large Language Models (LLMs), aiding in tasks like generating quotes and fetching invoices.",
      "Key features include real-time action tracking, browser instance livestreaming, and workflow chaining, with the flexibility to choose preferred models due to its open-source nature.",
      "Despite reduced token costs, Skyvern remains costly, but new users receive $5 credits to explore its capabilities, and further information is accessible on GitHub and their website."
    ],
    "points": 128,
    "commentCount": 29,
    "retryCount": 0,
    "time": 1729785081
  }
]
